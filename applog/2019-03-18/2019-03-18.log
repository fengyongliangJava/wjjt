2019-03-18 08:46:27 -Starting BootdoApplication on ZJZL-20180906VX with PID 15252 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 08:46:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 08:46:27 -The following profiles are active: dev
2019-03-18 08:46:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f27ea3: startup date [Mon Mar 18 08:46:28 CST 2019]; root of context hierarchy
2019-03-18 08:46:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 08:46:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92fe8949] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8557b7f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 08:46:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 08:46:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 08:46:47 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 08:46:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 08:46:47 -Starting service [Tomcat]
2019-03-18 08:46:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 08:46:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 08:46:47 -Initializing Spring embedded WebApplicationContext
2019-03-18 08:46:47 -Root WebApplicationContext: initialization completed in 19724 ms
2019-03-18 08:46:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 08:46:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 08:46:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 08:46:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 08:46:48 -Filter xssFilter was not registered (disabled)
2019-03-18 08:46:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 08:46:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 08:46:48 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 08:46:48 -Servlet dispatcherServlet mapped to [/]
2019-03-18 08:46:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f27ea3: startup date [Mon Mar 18 08:46:28 CST 2019]; root of context hierarchy
2019-03-18 08:46:53 -Using default implementation for ThreadExecutor
2019-03-18 08:46:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 08:46:53 -Quartz Scheduler v.2.2.1 created.
2019-03-18 08:46:53 -RAMJobStore initialized.
2019-03-18 08:46:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 08:46:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 08:46:53 -Quartz scheduler version: 2.2.1
2019-03-18 08:46:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2b6ee447
2019-03-18 08:46:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 08:46:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 08:46:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 08:46:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 08:46:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 08:46:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 08:46:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 08:46:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 08:46:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 08:46:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 08:46:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 08:46:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 08:46:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 08:46:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 08:46:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 08:46:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 08:46:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 08:46:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 08:46:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 08:46:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 08:46:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 08:46:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 08:46:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 08:46:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 08:46:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 08:46:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 08:46:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 08:46:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 08:46:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 08:46:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 08:46:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 08:46:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 08:46:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 08:46:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 08:46:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 08:46:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 08:46:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 08:46:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 08:46:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 08:46:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 08:46:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 08:46:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 08:46:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 08:46:59 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 08:46:59 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 08:46:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 08:46:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 08:46:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 08:46:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 08:46:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 08:46:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 08:46:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 08:46:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 08:46:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 08:46:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 08:46:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 08:46:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 08:46:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 08:46:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 08:46:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 08:46:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 08:46:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 08:46:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 08:46:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 08:46:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 08:46:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 08:46:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 08:46:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 08:46:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 08:46:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 08:46:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 08:46:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 08:46:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 08:46:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 08:46:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 08:46:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 08:46:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 08:46:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 08:46:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 08:46:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 08:46:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 08:46:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 08:46:59 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 08:46:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 08:46:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 08:46:59 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 08:46:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 08:46:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 08:46:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 08:46:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 08:46:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 08:47:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 08:47:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 08:47:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 08:47:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 08:47:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f27ea3: startup date [Mon Mar 18 08:46:28 CST 2019]; root of context hierarchy
2019-03-18 08:47:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 08:47:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 08:47:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 08:47:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 08:47:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 08:47:08 -Registering beans for JMX exposure on startup
2019-03-18 08:47:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 08:47:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 08:47:08 -Starting beans in phase 2147483647
2019-03-18 08:47:08 -Context refreshed
2019-03-18 08:47:08 -Found 1 custom documentation plugin(s)
2019-03-18 08:47:08 -Scanning for api listing references
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_1
2019-03-18 08:47:09 -Generating unique operation named: addUsingGET_1
2019-03-18 08:47:09 -Generating unique operation named: editUsingGET_1
2019-03-18 08:47:09 -Generating unique operation named: listUsingGET_1
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_2
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_3
2019-03-18 08:47:09 -Generating unique operation named: saveUsingPOST_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingGET_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPOST_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPUT_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 08:47:09 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 08:47:09 -Generating unique operation named: addUsingGET_2
2019-03-18 08:47:09 -Generating unique operation named: editUsingGET_2
2019-03-18 08:47:09 -Generating unique operation named: listUsingGET_2
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_4
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_5
2019-03-18 08:47:09 -Generating unique operation named: saveUsingPOST_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingGET_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPOST_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPUT_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 08:47:09 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 08:47:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 08:47:09 -Generating unique operation named: addUsingGET_3
2019-03-18 08:47:09 -Generating unique operation named: editUsingGET_3
2019-03-18 08:47:09 -Generating unique operation named: listUsingGET_3
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_6
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_7
2019-03-18 08:47:09 -Generating unique operation named: saveUsingPOST_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingGET_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPOST_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPUT_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 08:47:09 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 08:47:09 -Generating unique operation named: addUsingGET_4
2019-03-18 08:47:09 -Generating unique operation named: editUsingGET_4
2019-03-18 08:47:09 -Generating unique operation named: listUsingGET_4
2019-03-18 08:47:09 -Generating unique operation named: removeUsingPOST_8
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_9
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingGET_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPUT_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 08:47:10 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 08:47:10 -Generating unique operation named: ElecUsingGET_1
2019-03-18 08:47:10 -Generating unique operation named: addUsingGET_5
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_5
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_5
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_10
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_11
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingGET_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPUT_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 08:47:10 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_6
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_6
2019-03-18 08:47:10 -Generating unique operation named: addUsingGET_6
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_7
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_7
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_12
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_13
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingGET_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPUT_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 08:47:10 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 08:47:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 08:47:10 -Generating unique operation named: addUsingGET_7
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_8
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_8
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_14
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_15
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingGET_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPUT_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 08:47:10 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 08:47:10 -Generating unique operation named: addUsingGET_8
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_9
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_9
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_16
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_17
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingGET_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_9
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPUT_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 08:47:10 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 08:47:10 -Generating unique operation named: addUsingGET_9
2019-03-18 08:47:10 -Generating unique operation named: editUsingGET_10
2019-03-18 08:47:10 -Generating unique operation named: infoUsingGET_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingPOST_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingPUT_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 08:47:10 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_10
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_18
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_19
2019-03-18 08:47:10 -Generating unique operation named: saveUsingPOST_9
2019-03-18 08:47:10 -Generating unique operation named: updateUsingPOST_10
2019-03-18 08:47:10 -Generating unique operation named: listUsingGET_11
2019-03-18 08:47:10 -Generating unique operation named: removeUsingPOST_20
2019-03-18 08:47:10 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_10
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_11
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_12
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_21
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_10
2019-03-18 08:47:11 -Generating unique operation named: treeUsingGET_1
2019-03-18 08:47:11 -Generating unique operation named: treeUsingGET_2
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_11
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_11
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_12
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_13
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_22
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_23
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_11
2019-03-18 08:47:11 -Generating unique operation named: updateUsingGET_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_12
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPUT_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 08:47:11 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_12
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_13
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_14
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_24
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_25
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_12
2019-03-18 08:47:11 -Generating unique operation named: updateUsingGET_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_13
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPUT_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 08:47:11 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_13
2019-03-18 08:47:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_14
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_15
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_13
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_14
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_14
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_16
2019-03-18 08:47:11 -Generating unique operation named: listUsingHEAD_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingPOST_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingPUT_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingPATCH_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingDELETE_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 08:47:11 -Generating unique operation named: listUsingTRACE_1
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_14
2019-03-18 08:47:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_15
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_17
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_26
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_15
2019-03-18 08:47:11 -Generating unique operation named: treeUsingGET_3
2019-03-18 08:47:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_15
2019-03-18 08:47:11 -Generating unique operation named: addUsingGET_15
2019-03-18 08:47:11 -Generating unique operation named: editUsingGET_16
2019-03-18 08:47:11 -Generating unique operation named: listUsingGET_18
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_27
2019-03-18 08:47:11 -Generating unique operation named: removeUsingPOST_28
2019-03-18 08:47:11 -Generating unique operation named: saveUsingPOST_16
2019-03-18 08:47:11 -Generating unique operation named: updateUsingGET_11
2019-03-18 08:47:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPOST_16
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPUT_11
2019-03-18 08:47:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 08:47:12 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 08:47:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 08:47:12 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 08:47:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 08:47:12 -Generating unique operation named: addUsingGET_16
2019-03-18 08:47:12 -Generating unique operation named: editUsingGET_17
2019-03-18 08:47:12 -Generating unique operation named: listUsingGET_19
2019-03-18 08:47:12 -Generating unique operation named: removeUsingPOST_29
2019-03-18 08:47:12 -Generating unique operation named: removeUsingPOST_30
2019-03-18 08:47:12 -Generating unique operation named: saveUsingPOST_17
2019-03-18 08:47:12 -Generating unique operation named: updateUsingGET_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPOST_17
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPUT_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 08:47:12 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 08:47:12 -Generating unique operation named: addUsingGET_17
2019-03-18 08:47:12 -Generating unique operation named: editUsingGET_18
2019-03-18 08:47:12 -Generating unique operation named: listUsingGET_20
2019-03-18 08:47:12 -Generating unique operation named: removeUsingPOST_31
2019-03-18 08:47:12 -Generating unique operation named: removeUsingPOST_32
2019-03-18 08:47:12 -Generating unique operation named: saveUsingPOST_18
2019-03-18 08:47:12 -Generating unique operation named: updateUsingGET_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPOST_18
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPUT_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 08:47:12 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 08:47:12 -Starting Quartz Scheduler now
2019-03-18 08:47:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 08:47:12 -Starting...
2019-03-18 08:47:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 08:47:12 -Started.
2019-03-18 08:47:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 08:47:12 -Using a shared selector for servlet write/read
2019-03-18 08:47:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 08:47:12 -Started BootdoApplication in 47.534 seconds (JVM running for 49.52)
2019-03-18 08:47:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 08:47:13 -==> Parameters: 
2019-03-18 08:47:13 -<==      Total: 1
2019-03-18 08:47:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 08:47:55 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 08:47:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-03-18 08:47:56 -Enabling session validation scheduler...
2019-03-18 08:47:56 -请求地址 : http://localhost:8081/login;JSESSIONID=a50a07c9-1822-47e0-a1b8-bbd405947d9d
2019-03-18 08:47:56 -HTTP METHOD : GET
2019-03-18 08:47:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 08:47:56 -参数 : [{}]
2019-03-18 08:47:56 -耗时 : 4
2019-03-18 08:47:56 -返回值 : login
2019-03-18 08:48:00 -请求地址 : http://localhost:8081/getVerify
2019-03-18 08:48:00 -HTTP METHOD : GET
2019-03-18 08:48:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 08:48:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@137fba45, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c1ce52c]
2019-03-18 08:48:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 08:48:04 -8684
2019-03-18 08:48:04 -耗时 : 4354
2019-03-18 08:48:04 -返回值 : null
2019-03-18 08:48:16 -请求地址 : http://localhost:8081/login
2019-03-18 08:48:16 -HTTP METHOD : POST
2019-03-18 08:48:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 08:48:16 -参数 : [admin, 111111, 8684, org.apache.shiro.web.servlet.ShiroHttpServletRequest@740d5016]
2019-03-18 08:48:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 08:48:17 -==> Parameters: admin(String)
2019-03-18 08:48:17 -<==      Total: 1
2019-03-18 08:48:17 -耗时 : 303
2019-03-18 08:48:17 -返回值 : {msg=操作成功, code=0}
2019-03-18 08:48:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 08:48:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 08:48:17 -==> Parameters: 1(Long), admin(String), 登录(String), 303(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 08:48:17.513(Timestamp)
2019-03-18 08:48:17 -<==    Updates: 1
2019-03-18 08:48:17 -请求地址 : http://localhost:8081/index
2019-03-18 08:48:17 -HTTP METHOD : GET
2019-03-18 08:48:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 08:48:17 -参数 : [{}]
2019-03-18 08:48:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 08:48:18 -==> Parameters: 1(Long)
2019-03-18 08:48:18 -<==      Total: 45
2019-03-18 08:48:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 08:48:18 -==> Parameters: 138(Long)
2019-03-18 08:48:18 -<==      Total: 1
2019-03-18 08:48:18 -耗时 : 381
2019-03-18 08:48:18 -返回值 : index_v1
2019-03-18 08:48:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 08:48:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 382(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 08:48:18.46(Timestamp)
2019-03-18 08:48:18 -<==    Updates: 1
2019-03-18 08:48:19 -请求地址 : http://localhost:8081/main
2019-03-18 08:48:19 -HTTP METHOD : GET
2019-03-18 08:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 08:48:19 -参数 : []
2019-03-18 08:48:19 -耗时 : 1
2019-03-18 08:48:19 -返回值 : main
2019-03-18 08:48:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 08:48:21 -HTTP METHOD : GET
2019-03-18 08:48:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 08:48:21 -参数 : []
2019-03-18 08:48:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 08:48:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 08:48:21 -<==      Total: 0
2019-03-18 08:48:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 08:48:21 -==> Parameters: 1(Long), 0(String)
2019-03-18 08:48:21 -<==      Total: 1
2019-03-18 08:48:21 -耗时 : 71
2019-03-18 08:48:21 -返回值 : com.bootdo.common.utils.PageUtils@7a21532e
2019-03-18 08:48:21 -请求地址 : http://localhost:8081/main
2019-03-18 08:48:21 -HTTP METHOD : GET
2019-03-18 08:48:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 08:48:21 -参数 : []
2019-03-18 08:48:21 -耗时 : 0
2019-03-18 08:48:21 -返回值 : main
2019-03-18 08:48:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 08:48:34 -==> Parameters: 1(Long)
2019-03-18 08:48:34 -<==      Total: 86
2019-03-18 08:48:34 -请求地址 : http://localhost:8081/charts/countDD
2019-03-18 08:48:34 -HTTP METHOD : GET
2019-03-18 08:48:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-18 08:48:34 -参数 : []
2019-03-18 08:48:34 -耗时 : 1
2019-03-18 08:48:34 -返回值 : charts/countDD
2019-03-18 08:48:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 08:48:36 -HTTP METHOD : GET
2019-03-18 08:48:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 08:48:36 -参数 : [userType]
2019-03-18 08:48:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 08:48:37 -==> Parameters: userType(String)
2019-03-18 08:48:37 -<==      Total: 2
2019-03-18 08:48:37 -耗时 : 56
2019-03-18 08:48:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 08:49:03 -请求地址 : http://localhost:8081/charts/countMM
2019-03-18 08:49:03 -HTTP METHOD : GET
2019-03-18 08:49:03 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-18 08:49:03 -参数 : []
2019-03-18 08:49:03 -耗时 : 1
2019-03-18 08:49:03 -返回值 : charts/countMM
2019-03-18 08:49:04 -请求地址 : http://localhost:8081/charts/countYY
2019-03-18 08:49:04 -HTTP METHOD : GET
2019-03-18 08:49:04 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-18 08:49:04 -参数 : []
2019-03-18 08:49:04 -耗时 : 1
2019-03-18 08:49:04 -返回值 : charts/countYY
2019-03-18 08:49:09 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-18 08:49:09 -HTTP METHOD : GET
2019-03-18 08:49:09 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-18 08:49:09 -参数 : []
2019-03-18 08:49:09 -耗时 : 1
2019-03-18 08:49:09 -返回值 : charts/countOwe
2019-03-18 08:49:15 -请求地址 : http://localhost:8081/charts/countRun
2019-03-18 08:49:15 -HTTP METHOD : GET
2019-03-18 08:49:15 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-18 08:49:15 -参数 : []
2019-03-18 08:49:15 -耗时 : 1
2019-03-18 08:49:15 -返回值 : charts/countRun
2019-03-18 08:56:48 -请求地址 : http://localhost:8081/index
2019-03-18 08:56:48 -HTTP METHOD : GET
2019-03-18 08:56:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 08:56:48 -参数 : [{}]
2019-03-18 08:56:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 08:56:48 -==> Parameters: 1(Long)
2019-03-18 08:56:48 -<==      Total: 45
2019-03-18 08:56:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 08:56:48 -==> Parameters: 138(Long)
2019-03-18 08:56:48 -<==      Total: 1
2019-03-18 08:56:48 -耗时 : 35
2019-03-18 08:56:48 -返回值 : index_v1
2019-03-18 08:56:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 08:56:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 08:56:48.681(Timestamp)
2019-03-18 08:56:48 -<==    Updates: 1
2019-03-18 08:56:49 -请求地址 : http://localhost:8081/main
2019-03-18 08:56:49 -HTTP METHOD : GET
2019-03-18 08:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 08:56:49 -参数 : []
2019-03-18 08:56:49 -耗时 : 0
2019-03-18 08:56:49 -返回值 : main
2019-03-18 08:56:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 08:56:49 -HTTP METHOD : GET
2019-03-18 08:56:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 08:56:49 -参数 : []
2019-03-18 08:56:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 08:56:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 08:56:49 -<==      Total: 0
2019-03-18 08:56:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 08:56:49 -==> Parameters: 1(Long), 0(String)
2019-03-18 08:56:49 -<==      Total: 1
2019-03-18 08:56:49 -耗时 : 10
2019-03-18 08:56:49 -返回值 : com.bootdo.common.utils.PageUtils@2c18755a
2019-03-18 08:56:49 -请求地址 : http://localhost:8081/main
2019-03-18 08:56:49 -HTTP METHOD : GET
2019-03-18 08:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 08:56:49 -参数 : []
2019-03-18 08:56:49 -耗时 : 0
2019-03-18 08:56:49 -返回值 : main
2019-03-18 08:56:51 -请求地址 : http://localhost:8081/charts/countDD
2019-03-18 08:56:51 -HTTP METHOD : GET
2019-03-18 08:56:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-18 08:56:51 -参数 : []
2019-03-18 08:56:51 -耗时 : 1
2019-03-18 08:56:51 -返回值 : charts/countDD
2019-03-18 08:56:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 08:56:52 -HTTP METHOD : GET
2019-03-18 08:56:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 08:56:52 -参数 : [userType]
2019-03-18 08:56:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 08:56:52 -==> Parameters: userType(String)
2019-03-18 08:56:52 -<==      Total: 2
2019-03-18 08:56:52 -耗时 : 8
2019-03-18 08:56:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 08:57:36 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 09:18:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 428]
2019-03-18 09:47:56 -Validating all active sessions...
2019-03-18 09:47:56 -Finished session validation.  [1] sessions were stopped.
2019-03-18 09:48:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 861]
2019-03-18 10:18:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1294]
2019-03-18 10:47:56 -Validating all active sessions...
2019-03-18 10:47:56 -Finished session validation.  No sessions were stopped.
2019-03-18 10:48:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1727]
2019-03-18 11:18:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2160]
2019-03-18 11:22:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 9148 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 11:22:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 11:22:14 -The following profiles are active: dev
2019-03-18 11:22:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Mon Mar 18 11:22:14 CST 2019]; root of context hierarchy
2019-03-18 11:22:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 11:22:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f58d5e5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7e68d02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:25 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 11:22:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 11:22:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:22:27 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 11:22:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 11:22:28 -Starting service [Tomcat]
2019-03-18 11:22:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 11:22:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 11:22:28 -Initializing Spring embedded WebApplicationContext
2019-03-18 11:22:28 -Root WebApplicationContext: initialization completed in 13863 ms
2019-03-18 11:22:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 11:22:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 11:22:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 11:22:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 11:22:30 -Filter xssFilter was not registered (disabled)
2019-03-18 11:22:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 11:22:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 11:22:30 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 11:22:30 -Servlet dispatcherServlet mapped to [/]
2019-03-18 11:22:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Mon Mar 18 11:22:14 CST 2019]; root of context hierarchy
2019-03-18 11:22:37 -Using default implementation for ThreadExecutor
2019-03-18 11:22:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 11:22:37 -Quartz Scheduler v.2.2.1 created.
2019-03-18 11:22:37 -RAMJobStore initialized.
2019-03-18 11:22:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 11:22:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 11:22:37 -Quartz scheduler version: 2.2.1
2019-03-18 11:22:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7944c323
2019-03-18 11:22:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 11:22:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 11:22:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 11:22:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 11:22:43 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 11:22:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 11:22:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 11:22:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 11:22:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 11:22:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 11:22:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 11:22:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 11:22:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 11:22:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 11:22:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 11:22:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:22:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:22:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 11:22:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 11:22:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 11:22:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 11:22:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 11:22:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 11:22:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 11:22:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 11:22:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 11:22:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 11:22:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 11:22:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 11:22:43 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 11:22:43 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:22:43 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 11:22:43 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 11:22:43 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 11:22:43 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:22:43 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:22:43 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 11:22:43 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 11:22:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 11:22:43 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 11:22:43 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:22:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 11:22:43 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 11:22:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 11:22:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:22:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:22:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 11:22:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 11:22:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 11:22:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 11:22:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 11:22:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 11:22:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 11:22:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 11:22:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 11:22:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 11:22:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 11:22:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 11:22:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 11:22:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 11:22:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 11:22:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 11:22:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 11:22:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 11:22:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 11:22:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 11:22:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 11:22:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 11:22:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 11:22:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 11:22:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:22:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:22:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 11:22:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:22:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 11:22:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 11:22:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 11:22:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 11:22:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 11:22:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:22:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:22:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 11:22:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 11:22:43 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:22:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:22:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 11:22:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 11:22:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 11:22:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 11:22:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 11:22:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 11:22:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:22:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Mon Mar 18 11:22:14 CST 2019]; root of context hierarchy
2019-03-18 11:22:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:22:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:22:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:22:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 11:22:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 11:22:50 -Registering beans for JMX exposure on startup
2019-03-18 11:22:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:22:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 11:22:50 -Starting beans in phase 2147483647
2019-03-18 11:22:50 -Context refreshed
2019-03-18 11:22:51 -Found 1 custom documentation plugin(s)
2019-03-18 11:22:51 -Scanning for api listing references
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_1
2019-03-18 11:22:52 -Generating unique operation named: addUsingGET_1
2019-03-18 11:22:52 -Generating unique operation named: editUsingGET_1
2019-03-18 11:22:52 -Generating unique operation named: listUsingGET_1
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_2
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_3
2019-03-18 11:22:52 -Generating unique operation named: saveUsingPOST_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingGET_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPOST_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPUT_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 11:22:52 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 11:22:52 -Generating unique operation named: addUsingGET_2
2019-03-18 11:22:52 -Generating unique operation named: editUsingGET_2
2019-03-18 11:22:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 11:22:52 -Generating unique operation named: listUsingGET_2
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_4
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_5
2019-03-18 11:22:52 -Generating unique operation named: saveUsingPOST_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingGET_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPOST_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPUT_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 11:22:52 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 11:22:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 11:22:52 -Generating unique operation named: addUsingGET_3
2019-03-18 11:22:52 -Generating unique operation named: editUsingGET_3
2019-03-18 11:22:52 -Generating unique operation named: listUsingGET_3
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_6
2019-03-18 11:22:52 -Generating unique operation named: removeUsingPOST_7
2019-03-18 11:22:52 -Generating unique operation named: saveUsingPOST_3
2019-03-18 11:22:52 -Generating unique operation named: updateUsingGET_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 11:22:53 -Generating unique operation named: addUsingGET_4
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_4
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_4
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_8
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_9
2019-03-18 11:22:53 -Generating unique operation named: saveUsingPOST_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingGET_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 11:22:53 -Generating unique operation named: ElecUsingGET_1
2019-03-18 11:22:53 -Generating unique operation named: addUsingGET_5
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_5
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_5
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_10
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_11
2019-03-18 11:22:53 -Generating unique operation named: saveUsingPOST_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingGET_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_6
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_6
2019-03-18 11:22:53 -Generating unique operation named: addUsingGET_6
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_7
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_7
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_12
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_13
2019-03-18 11:22:53 -Generating unique operation named: saveUsingPOST_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingGET_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 11:22:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 11:22:53 -Generating unique operation named: addUsingGET_7
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_8
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_8
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_14
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_15
2019-03-18 11:22:53 -Generating unique operation named: saveUsingPOST_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingGET_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 11:22:53 -Generating unique operation named: addUsingGET_8
2019-03-18 11:22:53 -Generating unique operation named: editUsingGET_9
2019-03-18 11:22:53 -Generating unique operation named: listUsingGET_9
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_16
2019-03-18 11:22:53 -Generating unique operation named: removeUsingPOST_17
2019-03-18 11:22:53 -Generating unique operation named: saveUsingPOST_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingGET_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPOST_9
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPUT_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 11:22:53 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 11:22:54 -Generating unique operation named: addUsingGET_9
2019-03-18 11:22:54 -Generating unique operation named: editUsingGET_10
2019-03-18 11:22:54 -Generating unique operation named: infoUsingGET_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingPOST_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingPUT_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 11:22:54 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 11:22:54 -Generating unique operation named: listUsingGET_10
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_18
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_19
2019-03-18 11:22:54 -Generating unique operation named: saveUsingPOST_9
2019-03-18 11:22:54 -Generating unique operation named: updateUsingPOST_10
2019-03-18 11:22:54 -Generating unique operation named: listUsingGET_11
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_20
2019-03-18 11:22:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 11:22:54 -Generating unique operation named: addUsingGET_10
2019-03-18 11:22:54 -Generating unique operation named: editUsingGET_11
2019-03-18 11:22:54 -Generating unique operation named: listUsingGET_12
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_21
2019-03-18 11:22:54 -Generating unique operation named: saveUsingPOST_10
2019-03-18 11:22:54 -Generating unique operation named: treeUsingGET_1
2019-03-18 11:22:54 -Generating unique operation named: treeUsingGET_2
2019-03-18 11:22:54 -Generating unique operation named: updateUsingPOST_11
2019-03-18 11:22:54 -Generating unique operation named: addUsingGET_11
2019-03-18 11:22:54 -Generating unique operation named: editUsingGET_12
2019-03-18 11:22:54 -Generating unique operation named: listUsingGET_13
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_22
2019-03-18 11:22:54 -Generating unique operation named: removeUsingPOST_23
2019-03-18 11:22:55 -Generating unique operation named: saveUsingPOST_11
2019-03-18 11:22:55 -Generating unique operation named: updateUsingGET_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPOST_12
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPUT_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 11:22:55 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 11:22:55 -Generating unique operation named: addUsingGET_12
2019-03-18 11:22:55 -Generating unique operation named: editUsingGET_13
2019-03-18 11:22:55 -Generating unique operation named: listUsingGET_14
2019-03-18 11:22:55 -Generating unique operation named: removeUsingPOST_24
2019-03-18 11:22:55 -Generating unique operation named: removeUsingPOST_25
2019-03-18 11:22:55 -Generating unique operation named: saveUsingPOST_12
2019-03-18 11:22:55 -Generating unique operation named: updateUsingGET_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPOST_13
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPUT_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 11:22:55 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 11:22:55 -Generating unique operation named: addUsingGET_13
2019-03-18 11:22:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 11:22:55 -Generating unique operation named: editUsingGET_14
2019-03-18 11:22:55 -Generating unique operation named: listUsingGET_15
2019-03-18 11:22:55 -Generating unique operation named: saveUsingPOST_13
2019-03-18 11:22:55 -Generating unique operation named: saveUsingPOST_14
2019-03-18 11:22:55 -Generating unique operation named: updateUsingPOST_14
2019-03-18 11:22:55 -Generating unique operation named: listUsingGET_16
2019-03-18 11:22:55 -Generating unique operation named: listUsingHEAD_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingPOST_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingPUT_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingPATCH_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingDELETE_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 11:22:55 -Generating unique operation named: listUsingTRACE_1
2019-03-18 11:22:55 -Generating unique operation named: addUsingGET_14
2019-03-18 11:22:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 11:22:55 -Generating unique operation named: editUsingGET_15
2019-03-18 11:22:55 -Generating unique operation named: listUsingGET_17
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_26
2019-03-18 11:22:56 -Generating unique operation named: saveUsingPOST_15
2019-03-18 11:22:56 -Generating unique operation named: treeUsingGET_3
2019-03-18 11:22:56 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPOST_15
2019-03-18 11:22:56 -Generating unique operation named: addUsingGET_15
2019-03-18 11:22:56 -Generating unique operation named: editUsingGET_16
2019-03-18 11:22:56 -Generating unique operation named: listUsingGET_18
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_27
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_28
2019-03-18 11:22:56 -Generating unique operation named: saveUsingPOST_16
2019-03-18 11:22:56 -Generating unique operation named: updateUsingGET_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPOST_16
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPUT_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 11:22:56 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 11:22:56 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 11:22:56 -Generating unique operation named: addUsingGET_16
2019-03-18 11:22:56 -Generating unique operation named: editUsingGET_17
2019-03-18 11:22:56 -Generating unique operation named: listUsingGET_19
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_29
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_30
2019-03-18 11:22:56 -Generating unique operation named: saveUsingPOST_17
2019-03-18 11:22:56 -Generating unique operation named: updateUsingGET_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPOST_17
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPUT_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 11:22:56 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 11:22:56 -Generating unique operation named: addUsingGET_17
2019-03-18 11:22:56 -Generating unique operation named: editUsingGET_18
2019-03-18 11:22:56 -Generating unique operation named: listUsingGET_20
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_31
2019-03-18 11:22:56 -Generating unique operation named: removeUsingPOST_32
2019-03-18 11:22:56 -Generating unique operation named: saveUsingPOST_18
2019-03-18 11:22:56 -Generating unique operation named: updateUsingGET_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPOST_18
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPUT_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 11:22:56 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 11:22:56 -Starting Quartz Scheduler now
2019-03-18 11:22:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 11:22:56 -Starting...
2019-03-18 11:22:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 11:22:56 -Started.
2019-03-18 11:22:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 11:22:56 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-18 11:22:56 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-18 11:22:56 -Stopping service [Tomcat]
2019-03-18 11:22:56 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-18 11:22:56 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-18 11:22:56 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-18 11:22:56 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 11:22:56 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-18 11:22:56 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Mon Mar 18 11:22:14 CST 2019]; root of context hierarchy
2019-03-18 11:22:56 -Stopping beans in phase 2147483647
2019-03-18 11:22:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-18 11:22:56 -Stopping...
2019-03-18 11:22:56 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 11:22:56 -Stopped.
2019-03-18 11:22:57 -Unregistering JMX-exposed beans on shutdown
2019-03-18 11:22:57 -Unregistering JMX-exposed beans
2019-03-18 11:22:57 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-18 11:22:57 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-18 11:22:57 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-18 11:22:57 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-18 11:22:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-18 11:22:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-18 11:22:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-18 11:22:57 -Shutting down Quartz Scheduler
2019-03-18 11:23:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 11560 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 11:23:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 11:23:33 -The following profiles are active: dev
2019-03-18 11:23:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18230356: startup date [Mon Mar 18 11:23:33 CST 2019]; root of context hierarchy
2019-03-18 11:23:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 11:23:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5442dad7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$469c097e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 11:23:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 11:23:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:23:46 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 11:23:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 11:23:46 -Starting service [Tomcat]
2019-03-18 11:23:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 11:23:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 11:23:46 -Initializing Spring embedded WebApplicationContext
2019-03-18 11:23:46 -Root WebApplicationContext: initialization completed in 13270 ms
2019-03-18 11:23:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 11:23:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 11:23:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 11:23:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 11:23:47 -Filter xssFilter was not registered (disabled)
2019-03-18 11:23:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 11:23:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 11:23:47 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 11:23:47 -Servlet dispatcherServlet mapped to [/]
2019-03-18 11:23:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18230356: startup date [Mon Mar 18 11:23:33 CST 2019]; root of context hierarchy
2019-03-18 11:23:52 -Using default implementation for ThreadExecutor
2019-03-18 11:23:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 11:23:52 -Quartz Scheduler v.2.2.1 created.
2019-03-18 11:23:52 -RAMJobStore initialized.
2019-03-18 11:23:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 11:23:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 11:23:52 -Quartz scheduler version: 2.2.1
2019-03-18 11:23:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7a34505a
2019-03-18 11:23:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 11:23:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 11:23:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 11:23:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 11:23:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 11:23:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 11:23:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 11:23:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 11:23:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 11:23:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 11:23:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 11:23:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 11:23:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 11:23:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 11:23:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 11:23:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 11:23:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:23:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 11:23:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:23:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 11:23:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 11:23:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 11:23:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 11:23:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 11:23:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 11:23:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 11:23:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 11:23:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:23:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 11:23:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:23:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 11:23:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 11:23:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 11:23:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 11:23:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:23:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 11:23:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 11:23:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 11:23:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:23:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:23:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 11:23:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 11:23:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 11:23:57 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 11:23:57 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:23:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 11:23:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 11:23:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 11:23:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:23:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:23:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 11:23:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 11:23:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 11:23:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 11:23:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 11:23:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 11:23:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 11:23:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 11:23:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 11:23:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 11:23:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 11:23:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:23:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 11:23:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 11:23:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 11:23:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 11:23:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 11:23:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 11:23:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 11:23:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 11:23:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 11:23:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 11:23:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 11:23:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 11:23:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 11:23:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 11:23:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 11:23:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:23:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:23:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:23:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 11:23:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 11:23:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 11:23:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 11:23:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 11:23:58 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:23:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:23:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 11:23:58 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:23:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 11:23:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:23:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 11:23:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 11:23:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 11:23:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 11:23:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 11:23:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 11:24:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:24:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18230356: startup date [Mon Mar 18 11:23:33 CST 2019]; root of context hierarchy
2019-03-18 11:24:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:24:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:24:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:24:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 11:24:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 11:24:04 -Registering beans for JMX exposure on startup
2019-03-18 11:24:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:24:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 11:24:04 -Starting beans in phase 2147483647
2019-03-18 11:24:04 -Context refreshed
2019-03-18 11:24:05 -Found 1 custom documentation plugin(s)
2019-03-18 11:24:05 -Scanning for api listing references
2019-03-18 11:24:05 -Generating unique operation named: removeUsingPOST_1
2019-03-18 11:24:05 -Generating unique operation named: addUsingGET_1
2019-03-18 11:24:05 -Generating unique operation named: editUsingGET_1
2019-03-18 11:24:05 -Generating unique operation named: listUsingGET_1
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_2
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_3
2019-03-18 11:24:06 -Generating unique operation named: saveUsingPOST_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingGET_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPOST_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPUT_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 11:24:06 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 11:24:06 -Generating unique operation named: addUsingGET_2
2019-03-18 11:24:06 -Generating unique operation named: editUsingGET_2
2019-03-18 11:24:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 11:24:06 -Generating unique operation named: listUsingGET_2
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_4
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_5
2019-03-18 11:24:06 -Generating unique operation named: saveUsingPOST_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingGET_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPOST_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPUT_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 11:24:06 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 11:24:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 11:24:06 -Generating unique operation named: addUsingGET_3
2019-03-18 11:24:06 -Generating unique operation named: editUsingGET_3
2019-03-18 11:24:06 -Generating unique operation named: listUsingGET_3
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_6
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_7
2019-03-18 11:24:06 -Generating unique operation named: saveUsingPOST_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingGET_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPOST_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPUT_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 11:24:06 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 11:24:06 -Generating unique operation named: addUsingGET_4
2019-03-18 11:24:06 -Generating unique operation named: editUsingGET_4
2019-03-18 11:24:06 -Generating unique operation named: listUsingGET_4
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_8
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_9
2019-03-18 11:24:06 -Generating unique operation named: saveUsingPOST_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingGET_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPOST_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPUT_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 11:24:06 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 11:24:06 -Generating unique operation named: ElecUsingGET_1
2019-03-18 11:24:06 -Generating unique operation named: addUsingGET_5
2019-03-18 11:24:06 -Generating unique operation named: editUsingGET_5
2019-03-18 11:24:06 -Generating unique operation named: listUsingGET_5
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_10
2019-03-18 11:24:06 -Generating unique operation named: removeUsingPOST_11
2019-03-18 11:24:06 -Generating unique operation named: saveUsingPOST_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingGET_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPOST_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPUT_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 11:24:06 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 11:24:07 -Generating unique operation named: editUsingGET_6
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPOST_6
2019-03-18 11:24:07 -Generating unique operation named: addUsingGET_6
2019-03-18 11:24:07 -Generating unique operation named: editUsingGET_7
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_7
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_12
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_13
2019-03-18 11:24:07 -Generating unique operation named: saveUsingPOST_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingGET_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPOST_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPUT_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 11:24:07 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 11:24:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 11:24:07 -Generating unique operation named: addUsingGET_7
2019-03-18 11:24:07 -Generating unique operation named: editUsingGET_8
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_8
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_14
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_15
2019-03-18 11:24:07 -Generating unique operation named: saveUsingPOST_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingGET_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPOST_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPUT_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 11:24:07 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 11:24:07 -Generating unique operation named: addUsingGET_8
2019-03-18 11:24:07 -Generating unique operation named: editUsingGET_9
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_9
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_16
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_17
2019-03-18 11:24:07 -Generating unique operation named: saveUsingPOST_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingGET_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPOST_9
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPUT_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 11:24:07 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 11:24:07 -Generating unique operation named: addUsingGET_9
2019-03-18 11:24:07 -Generating unique operation named: editUsingGET_10
2019-03-18 11:24:07 -Generating unique operation named: infoUsingGET_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingPOST_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingPUT_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 11:24:07 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_10
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_18
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_19
2019-03-18 11:24:07 -Generating unique operation named: saveUsingPOST_9
2019-03-18 11:24:07 -Generating unique operation named: updateUsingPOST_10
2019-03-18 11:24:07 -Generating unique operation named: listUsingGET_11
2019-03-18 11:24:07 -Generating unique operation named: removeUsingPOST_20
2019-03-18 11:24:07 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 11:24:08 -Generating unique operation named: addUsingGET_10
2019-03-18 11:24:08 -Generating unique operation named: editUsingGET_11
2019-03-18 11:24:08 -Generating unique operation named: listUsingGET_12
2019-03-18 11:24:08 -Generating unique operation named: removeUsingPOST_21
2019-03-18 11:24:08 -Generating unique operation named: saveUsingPOST_10
2019-03-18 11:24:08 -Generating unique operation named: treeUsingGET_1
2019-03-18 11:24:08 -Generating unique operation named: treeUsingGET_2
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPOST_11
2019-03-18 11:24:08 -Generating unique operation named: addUsingGET_11
2019-03-18 11:24:08 -Generating unique operation named: editUsingGET_12
2019-03-18 11:24:08 -Generating unique operation named: listUsingGET_13
2019-03-18 11:24:08 -Generating unique operation named: removeUsingPOST_22
2019-03-18 11:24:08 -Generating unique operation named: removeUsingPOST_23
2019-03-18 11:24:08 -Generating unique operation named: saveUsingPOST_11
2019-03-18 11:24:08 -Generating unique operation named: updateUsingGET_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPOST_12
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPUT_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 11:24:08 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 11:24:08 -Generating unique operation named: addUsingGET_12
2019-03-18 11:24:08 -Generating unique operation named: editUsingGET_13
2019-03-18 11:24:08 -Generating unique operation named: listUsingGET_14
2019-03-18 11:24:08 -Generating unique operation named: removeUsingPOST_24
2019-03-18 11:24:08 -Generating unique operation named: removeUsingPOST_25
2019-03-18 11:24:08 -Generating unique operation named: saveUsingPOST_12
2019-03-18 11:24:08 -Generating unique operation named: updateUsingGET_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPOST_13
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPUT_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 11:24:08 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 11:24:08 -Generating unique operation named: addUsingGET_13
2019-03-18 11:24:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 11:24:08 -Generating unique operation named: editUsingGET_14
2019-03-18 11:24:08 -Generating unique operation named: listUsingGET_15
2019-03-18 11:24:08 -Generating unique operation named: saveUsingPOST_13
2019-03-18 11:24:08 -Generating unique operation named: saveUsingPOST_14
2019-03-18 11:24:08 -Generating unique operation named: updateUsingPOST_14
2019-03-18 11:24:08 -Generating unique operation named: listUsingGET_16
2019-03-18 11:24:08 -Generating unique operation named: listUsingHEAD_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingPOST_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingPUT_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingPATCH_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingDELETE_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 11:24:08 -Generating unique operation named: listUsingTRACE_1
2019-03-18 11:24:08 -Generating unique operation named: addUsingGET_14
2019-03-18 11:24:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 11:24:09 -Generating unique operation named: editUsingGET_15
2019-03-18 11:24:09 -Generating unique operation named: listUsingGET_17
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_26
2019-03-18 11:24:09 -Generating unique operation named: saveUsingPOST_15
2019-03-18 11:24:09 -Generating unique operation named: treeUsingGET_3
2019-03-18 11:24:09 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPOST_15
2019-03-18 11:24:09 -Generating unique operation named: addUsingGET_15
2019-03-18 11:24:09 -Generating unique operation named: editUsingGET_16
2019-03-18 11:24:09 -Generating unique operation named: listUsingGET_18
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_27
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_28
2019-03-18 11:24:09 -Generating unique operation named: saveUsingPOST_16
2019-03-18 11:24:09 -Generating unique operation named: updateUsingGET_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPOST_16
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPUT_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 11:24:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 11:24:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 11:24:09 -Generating unique operation named: addUsingGET_16
2019-03-18 11:24:09 -Generating unique operation named: editUsingGET_17
2019-03-18 11:24:09 -Generating unique operation named: listUsingGET_19
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_29
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_30
2019-03-18 11:24:09 -Generating unique operation named: saveUsingPOST_17
2019-03-18 11:24:09 -Generating unique operation named: updateUsingGET_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPOST_17
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPUT_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 11:24:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 11:24:09 -Generating unique operation named: addUsingGET_17
2019-03-18 11:24:09 -Generating unique operation named: editUsingGET_18
2019-03-18 11:24:09 -Generating unique operation named: listUsingGET_20
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_31
2019-03-18 11:24:09 -Generating unique operation named: removeUsingPOST_32
2019-03-18 11:24:09 -Generating unique operation named: saveUsingPOST_18
2019-03-18 11:24:09 -Generating unique operation named: updateUsingGET_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPOST_18
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPUT_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 11:24:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 11:24:09 -Starting Quartz Scheduler now
2019-03-18 11:24:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 11:24:09 -Starting...
2019-03-18 11:24:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 11:24:09 -Started.
2019-03-18 11:24:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 11:24:09 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-18 11:24:09 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-18 11:24:09 -Stopping service [Tomcat]
2019-03-18 11:24:10 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-18 11:24:10 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-18 11:24:10 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-18 11:24:10 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 11:24:10 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-18 11:24:10 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18230356: startup date [Mon Mar 18 11:23:33 CST 2019]; root of context hierarchy
2019-03-18 11:24:10 -Stopping beans in phase 2147483647
2019-03-18 11:24:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-18 11:24:10 -Stopping...
2019-03-18 11:24:10 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 11:24:10 -Stopped.
2019-03-18 11:24:10 -Unregistering JMX-exposed beans on shutdown
2019-03-18 11:24:10 -Unregistering JMX-exposed beans
2019-03-18 11:24:10 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-18 11:24:10 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-18 11:24:10 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-18 11:24:10 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-18 11:24:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-18 11:24:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-18 11:24:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-18 11:24:10 -Shutting down Quartz Scheduler
2019-03-18 11:28:12 -Starting BootdoApplication on ZJZL-20180906VX with PID 5456 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 11:28:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 11:28:12 -The following profiles are active: dev
2019-03-18 11:28:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 18 11:28:12 CST 2019]; root of context hierarchy
2019-03-18 11:28:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 11:28:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9a6ebc3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8cc7eae5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 11:28:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 11:28:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 11:28:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 11:28:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 11:28:21 -Starting service [Tomcat]
2019-03-18 11:28:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 11:28:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 11:28:22 -Initializing Spring embedded WebApplicationContext
2019-03-18 11:28:22 -Root WebApplicationContext: initialization completed in 10021 ms
2019-03-18 11:28:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 11:28:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 11:28:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 11:28:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 11:28:23 -Filter xssFilter was not registered (disabled)
2019-03-18 11:28:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 11:28:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 11:28:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 11:28:23 -Servlet dispatcherServlet mapped to [/]
2019-03-18 11:28:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 18 11:28:12 CST 2019]; root of context hierarchy
2019-03-18 11:28:26 -Using default implementation for ThreadExecutor
2019-03-18 11:28:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 11:28:26 -Quartz Scheduler v.2.2.1 created.
2019-03-18 11:28:26 -RAMJobStore initialized.
2019-03-18 11:28:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 11:28:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 11:28:26 -Quartz scheduler version: 2.2.1
2019-03-18 11:28:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60ee7a51
2019-03-18 11:28:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 11:28:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 11:28:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 11:28:31 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 11:28:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 11:28:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 11:28:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 11:28:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 11:28:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 11:28:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 11:28:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 11:28:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 11:28:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 11:28:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 11:28:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 11:28:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 11:28:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:28:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 11:28:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 11:28:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 11:28:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 11:28:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 11:28:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 11:28:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 11:28:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 11:28:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 11:28:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 11:28:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 11:28:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 11:28:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 11:28:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 11:28:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:28:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 11:28:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 11:28:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 11:28:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:28:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 11:28:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 11:28:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 11:28:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 11:28:31 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 11:28:31 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 11:28:31 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 11:28:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 11:28:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 11:28:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:28:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 11:28:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 11:28:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 11:28:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 11:28:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 11:28:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 11:28:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 11:28:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 11:28:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 11:28:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 11:28:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 11:28:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 11:28:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:28:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 11:28:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 11:28:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 11:28:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 11:28:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 11:28:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 11:28:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 11:28:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 11:28:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 11:28:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 11:28:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 11:28:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 11:28:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 11:28:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 11:28:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:28:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:28:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 11:28:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 11:28:31 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 11:28:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 11:28:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 11:28:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 11:28:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 11:28:31 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 11:28:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 11:28:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 11:28:31 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 11:28:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 11:28:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 11:28:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 11:28:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 11:28:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 11:28:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 11:28:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 11:28:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 11:28:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:28:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 18 11:28:12 CST 2019]; root of context hierarchy
2019-03-18 11:28:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:28:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:28:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 11:28:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 11:28:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 11:28:36 -Registering beans for JMX exposure on startup
2019-03-18 11:28:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 11:28:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 11:28:36 -Starting beans in phase 2147483647
2019-03-18 11:28:36 -Context refreshed
2019-03-18 11:28:36 -Found 1 custom documentation plugin(s)
2019-03-18 11:28:36 -Scanning for api listing references
2019-03-18 11:28:37 -Generating unique operation named: removeUsingPOST_1
2019-03-18 11:28:37 -Generating unique operation named: addUsingGET_1
2019-03-18 11:28:37 -Generating unique operation named: editUsingGET_1
2019-03-18 11:28:37 -Generating unique operation named: listUsingGET_1
2019-03-18 11:28:37 -Generating unique operation named: removeUsingPOST_2
2019-03-18 11:28:37 -Generating unique operation named: removeUsingPOST_3
2019-03-18 11:28:37 -Generating unique operation named: saveUsingPOST_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingGET_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingPOST_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingPUT_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 11:28:37 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 11:28:37 -Generating unique operation named: addUsingGET_2
2019-03-18 11:28:37 -Generating unique operation named: editUsingGET_2
2019-03-18 11:28:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_2
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_4
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_5
2019-03-18 11:28:38 -Generating unique operation named: saveUsingPOST_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingGET_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPUT_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 11:28:38 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 11:28:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 11:28:38 -Generating unique operation named: addUsingGET_3
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_3
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_3
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_6
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_7
2019-03-18 11:28:38 -Generating unique operation named: saveUsingPOST_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingGET_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPUT_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 11:28:38 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 11:28:38 -Generating unique operation named: addUsingGET_4
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_4
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_4
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_8
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_9
2019-03-18 11:28:38 -Generating unique operation named: saveUsingPOST_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingGET_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPUT_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 11:28:38 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 11:28:38 -Generating unique operation named: ElecUsingGET_1
2019-03-18 11:28:38 -Generating unique operation named: addUsingGET_5
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_5
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_5
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_10
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_11
2019-03-18 11:28:38 -Generating unique operation named: saveUsingPOST_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingGET_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPUT_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 11:28:38 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_6
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_6
2019-03-18 11:28:38 -Generating unique operation named: addUsingGET_6
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_7
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_7
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_12
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_13
2019-03-18 11:28:38 -Generating unique operation named: saveUsingPOST_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingGET_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPOST_7
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPUT_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 11:28:38 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 11:28:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 11:28:38 -Generating unique operation named: addUsingGET_7
2019-03-18 11:28:38 -Generating unique operation named: editUsingGET_8
2019-03-18 11:28:38 -Generating unique operation named: listUsingGET_8
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_14
2019-03-18 11:28:38 -Generating unique operation named: removeUsingPOST_15
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingGET_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPUT_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 11:28:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_8
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_9
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_9
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_16
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_17
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingGET_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPUT_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 11:28:39 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_9
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_10
2019-03-18 11:28:39 -Generating unique operation named: infoUsingGET_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingPOST_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingPUT_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 11:28:39 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_10
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_18
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_19
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_10
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_11
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_20
2019-03-18 11:28:39 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_10
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_11
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_12
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_21
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_10
2019-03-18 11:28:39 -Generating unique operation named: treeUsingGET_1
2019-03-18 11:28:39 -Generating unique operation named: treeUsingGET_2
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_11
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_11
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_12
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_13
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_22
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_23
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_11
2019-03-18 11:28:39 -Generating unique operation named: updateUsingGET_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_12
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPUT_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 11:28:39 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_12
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_13
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_14
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_24
2019-03-18 11:28:39 -Generating unique operation named: removeUsingPOST_25
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_12
2019-03-18 11:28:39 -Generating unique operation named: updateUsingGET_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_13
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPUT_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 11:28:39 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 11:28:39 -Generating unique operation named: addUsingGET_13
2019-03-18 11:28:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 11:28:39 -Generating unique operation named: editUsingGET_14
2019-03-18 11:28:39 -Generating unique operation named: listUsingGET_15
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_13
2019-03-18 11:28:39 -Generating unique operation named: saveUsingPOST_14
2019-03-18 11:28:39 -Generating unique operation named: updateUsingPOST_14
2019-03-18 11:28:40 -Generating unique operation named: listUsingGET_16
2019-03-18 11:28:40 -Generating unique operation named: listUsingHEAD_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingPOST_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingPUT_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingPATCH_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingDELETE_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 11:28:40 -Generating unique operation named: listUsingTRACE_1
2019-03-18 11:28:40 -Generating unique operation named: addUsingGET_14
2019-03-18 11:28:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 11:28:40 -Generating unique operation named: editUsingGET_15
2019-03-18 11:28:40 -Generating unique operation named: listUsingGET_17
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_26
2019-03-18 11:28:40 -Generating unique operation named: saveUsingPOST_15
2019-03-18 11:28:40 -Generating unique operation named: treeUsingGET_3
2019-03-18 11:28:40 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPOST_15
2019-03-18 11:28:40 -Generating unique operation named: addUsingGET_15
2019-03-18 11:28:40 -Generating unique operation named: editUsingGET_16
2019-03-18 11:28:40 -Generating unique operation named: listUsingGET_18
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_27
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_28
2019-03-18 11:28:40 -Generating unique operation named: saveUsingPOST_16
2019-03-18 11:28:40 -Generating unique operation named: updateUsingGET_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPOST_16
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPUT_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 11:28:40 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 11:28:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 11:28:40 -Generating unique operation named: addUsingGET_16
2019-03-18 11:28:40 -Generating unique operation named: editUsingGET_17
2019-03-18 11:28:40 -Generating unique operation named: listUsingGET_19
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_29
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_30
2019-03-18 11:28:40 -Generating unique operation named: saveUsingPOST_17
2019-03-18 11:28:40 -Generating unique operation named: updateUsingGET_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPOST_17
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPUT_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 11:28:40 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 11:28:40 -Generating unique operation named: addUsingGET_17
2019-03-18 11:28:40 -Generating unique operation named: editUsingGET_18
2019-03-18 11:28:40 -Generating unique operation named: listUsingGET_20
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_31
2019-03-18 11:28:40 -Generating unique operation named: removeUsingPOST_32
2019-03-18 11:28:40 -Generating unique operation named: saveUsingPOST_18
2019-03-18 11:28:40 -Generating unique operation named: updateUsingGET_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPOST_18
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPUT_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 11:28:40 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 11:28:40 -Starting Quartz Scheduler now
2019-03-18 11:28:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 11:28:40 -Starting...
2019-03-18 11:28:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 11:28:40 -Started.
2019-03-18 11:28:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 11:28:40 -Using a shared selector for servlet write/read
2019-03-18 11:28:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 11:28:40 -Started BootdoApplication in 30.821 seconds (JVM running for 32.816)
2019-03-18 11:29:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 11:59:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-03-18 12:30:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 12:30:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 12:30:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 150 ms
2019-03-18 12:30:08 -Enabling session validation scheduler...
2019-03-18 12:30:09 -请求地址 : http://localhost:8081/login;JSESSIONID=792be771-0100-4afc-b074-c7d5bff922ff
2019-03-18 12:30:09 -HTTP METHOD : GET
2019-03-18 12:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 12:30:09 -参数 : [{}]
2019-03-18 12:30:09 -耗时 : 4
2019-03-18 12:30:09 -返回值 : login
2019-03-18 12:30:09 -请求地址 : http://localhost:8081/login
2019-03-18 12:30:09 -HTTP METHOD : GET
2019-03-18 12:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 12:30:09 -参数 : [{}]
2019-03-18 12:30:09 -耗时 : 1
2019-03-18 12:30:09 -返回值 : login
2019-03-18 12:30:11 -请求地址 : http://localhost:8081/getVerify
2019-03-18 12:30:11 -HTTP METHOD : GET
2019-03-18 12:30:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 12:30:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ca03b85, org.apache.shiro.web.servlet.ShiroHttpServletResponse@49a2b475]
2019-03-18 12:30:11 -请求地址 : http://localhost:8081/login;JSESSIONID=792be771-0100-4afc-b074-c7d5bff922ff
2019-03-18 12:30:11 -HTTP METHOD : GET
2019-03-18 12:30:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 12:30:11 -参数 : [{}]
2019-03-18 12:30:11 -耗时 : 3
2019-03-18 12:30:11 -返回值 : login
2019-03-18 12:30:11 -请求地址 : http://localhost:8081/getVerify
2019-03-18 12:30:11 -HTTP METHOD : GET
2019-03-18 12:30:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 12:30:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@310823e0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c7153d2]
2019-03-18 12:30:12 -请求地址 : http://localhost:8081/getVerify
2019-03-18 12:30:12 -HTTP METHOD : GET
2019-03-18 12:30:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 12:30:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73de5ba2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@150a1d1b]
2019-03-18 12:30:17 -4669
2019-03-18 12:30:17 -9616
2019-03-18 12:30:17 -5613
2019-03-18 12:30:18 -耗时 : 5575
2019-03-18 12:30:18 -耗时 : 6889
2019-03-18 12:30:18 -耗时 : 6666
2019-03-18 12:30:18 -返回值 : null
2019-03-18 12:30:18 -返回值 : null
2019-03-18 12:30:18 -返回值 : null
2019-03-18 12:39:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-03-18 12:59:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-03-18 13:34:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 15264 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 13:34:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 13:34:48 -The following profiles are active: dev
2019-03-18 13:34:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Mon Mar 18 13:34:48 CST 2019]; root of context hierarchy
2019-03-18 13:34:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 13:34:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6959cd18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5bb2fbbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 13:34:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 13:34:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 13:34:58 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 13:34:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 13:34:58 -Starting service [Tomcat]
2019-03-18 13:34:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 13:34:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 13:34:59 -Initializing Spring embedded WebApplicationContext
2019-03-18 13:34:59 -Root WebApplicationContext: initialization completed in 10835 ms
2019-03-18 13:34:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 13:34:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 13:34:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 13:34:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 13:34:59 -Filter xssFilter was not registered (disabled)
2019-03-18 13:34:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 13:34:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 13:34:59 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 13:34:59 -Servlet dispatcherServlet mapped to [/]
2019-03-18 13:35:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Mon Mar 18 13:34:48 CST 2019]; root of context hierarchy
2019-03-18 13:35:03 -Using default implementation for ThreadExecutor
2019-03-18 13:35:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 13:35:03 -Quartz Scheduler v.2.2.1 created.
2019-03-18 13:35:03 -RAMJobStore initialized.
2019-03-18 13:35:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 13:35:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 13:35:03 -Quartz scheduler version: 2.2.1
2019-03-18 13:35:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4f356b98
2019-03-18 13:35:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 13:35:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 13:35:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 13:35:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 13:35:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 13:35:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 13:35:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 13:35:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 13:35:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 13:35:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 13:35:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 13:35:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 13:35:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 13:35:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 13:35:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 13:35:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 13:35:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 13:35:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 13:35:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 13:35:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 13:35:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 13:35:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 13:35:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 13:35:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 13:35:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 13:35:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 13:35:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 13:35:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 13:35:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 13:35:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 13:35:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 13:35:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 13:35:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 13:35:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 13:35:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 13:35:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 13:35:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 13:35:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 13:35:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 13:35:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 13:35:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 13:35:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 13:35:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 13:35:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 13:35:08 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 13:35:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 13:35:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 13:35:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 13:35:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 13:35:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 13:35:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 13:35:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 13:35:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 13:35:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 13:35:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 13:35:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 13:35:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 13:35:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 13:35:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 13:35:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 13:35:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 13:35:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 13:35:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 13:35:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 13:35:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 13:35:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 13:35:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 13:35:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 13:35:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 13:35:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 13:35:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 13:35:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 13:35:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 13:35:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 13:35:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 13:35:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 13:35:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 13:35:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 13:35:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 13:35:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 13:35:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 13:35:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 13:35:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 13:35:08 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 13:35:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 13:35:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 13:35:08 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 13:35:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 13:35:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 13:35:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 13:35:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 13:35:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 13:35:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 13:35:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 13:35:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 13:35:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 13:35:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Mon Mar 18 13:34:48 CST 2019]; root of context hierarchy
2019-03-18 13:35:11 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 13:35:11 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 13:35:11 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 13:35:11 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 13:35:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 13:35:13 -Registering beans for JMX exposure on startup
2019-03-18 13:35:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 13:35:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 13:35:13 -Starting beans in phase 2147483647
2019-03-18 13:35:13 -Context refreshed
2019-03-18 13:35:13 -Found 1 custom documentation plugin(s)
2019-03-18 13:35:13 -Scanning for api listing references
2019-03-18 13:35:14 -Generating unique operation named: removeUsingPOST_1
2019-03-18 13:35:14 -Generating unique operation named: addUsingGET_1
2019-03-18 13:35:14 -Generating unique operation named: editUsingGET_1
2019-03-18 13:35:14 -Generating unique operation named: listUsingGET_1
2019-03-18 13:35:14 -Generating unique operation named: removeUsingPOST_2
2019-03-18 13:35:14 -Generating unique operation named: removeUsingPOST_3
2019-03-18 13:35:14 -Generating unique operation named: saveUsingPOST_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingGET_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPOST_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPUT_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 13:35:14 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 13:35:14 -Generating unique operation named: addUsingGET_2
2019-03-18 13:35:14 -Generating unique operation named: editUsingGET_2
2019-03-18 13:35:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 13:35:14 -Generating unique operation named: listUsingGET_2
2019-03-18 13:35:14 -Generating unique operation named: removeUsingPOST_4
2019-03-18 13:35:14 -Generating unique operation named: removeUsingPOST_5
2019-03-18 13:35:14 -Generating unique operation named: saveUsingPOST_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingGET_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPOST_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPUT_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 13:35:14 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 13:35:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 13:35:14 -Generating unique operation named: addUsingGET_3
2019-03-18 13:35:14 -Generating unique operation named: editUsingGET_3
2019-03-18 13:35:14 -Generating unique operation named: listUsingGET_3
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_6
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_7
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_4
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_4
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_4
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_8
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_9
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 13:35:15 -Generating unique operation named: ElecUsingGET_1
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_5
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_5
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_5
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_10
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_11
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_6
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_6
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_6
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_7
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_7
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_12
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_13
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 13:35:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_7
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_8
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_8
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_14
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_15
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_8
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_9
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_9
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_16
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_17
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingGET_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_9
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPUT_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 13:35:15 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_9
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_10
2019-03-18 13:35:15 -Generating unique operation named: infoUsingGET_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingPOST_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingPUT_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 13:35:15 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_10
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_18
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_19
2019-03-18 13:35:15 -Generating unique operation named: saveUsingPOST_9
2019-03-18 13:35:15 -Generating unique operation named: updateUsingPOST_10
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_11
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_20
2019-03-18 13:35:15 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 13:35:15 -Generating unique operation named: addUsingGET_10
2019-03-18 13:35:15 -Generating unique operation named: editUsingGET_11
2019-03-18 13:35:15 -Generating unique operation named: listUsingGET_12
2019-03-18 13:35:15 -Generating unique operation named: removeUsingPOST_21
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_10
2019-03-18 13:35:16 -Generating unique operation named: treeUsingGET_1
2019-03-18 13:35:16 -Generating unique operation named: treeUsingGET_2
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_11
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_11
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_12
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_13
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_22
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_23
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingGET_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPUT_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 13:35:16 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_12
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_13
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_14
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_24
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_25
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingGET_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPUT_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 13:35:16 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_13
2019-03-18 13:35:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_14
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_15
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_13
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_14
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_14
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_16
2019-03-18 13:35:16 -Generating unique operation named: listUsingHEAD_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingPOST_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingPUT_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingPATCH_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingDELETE_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 13:35:16 -Generating unique operation named: listUsingTRACE_1
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_14
2019-03-18 13:35:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_15
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_17
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_26
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_15
2019-03-18 13:35:16 -Generating unique operation named: treeUsingGET_3
2019-03-18 13:35:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_15
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_15
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_16
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_18
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_27
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_28
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_16
2019-03-18 13:35:16 -Generating unique operation named: updateUsingGET_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_16
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPUT_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 13:35:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 13:35:16 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_16
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_17
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_19
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_29
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_30
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_17
2019-03-18 13:35:16 -Generating unique operation named: updateUsingGET_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_17
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPUT_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 13:35:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 13:35:16 -Generating unique operation named: addUsingGET_17
2019-03-18 13:35:16 -Generating unique operation named: editUsingGET_18
2019-03-18 13:35:16 -Generating unique operation named: listUsingGET_20
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_31
2019-03-18 13:35:16 -Generating unique operation named: removeUsingPOST_32
2019-03-18 13:35:16 -Generating unique operation named: saveUsingPOST_18
2019-03-18 13:35:16 -Generating unique operation named: updateUsingGET_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPOST_18
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPUT_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 13:35:16 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 13:35:16 -Starting Quartz Scheduler now
2019-03-18 13:35:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 13:35:16 -Starting...
2019-03-18 13:35:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 13:35:16 -Started.
2019-03-18 13:35:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 13:35:17 -Using a shared selector for servlet write/read
2019-03-18 13:35:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 13:35:17 -Started BootdoApplication in 31.194 seconds (JVM running for 32.834)
2019-03-18 13:35:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 13:35:17 -==> Parameters: 
2019-03-18 13:35:18 -<==      Total: 1
2019-03-18 13:35:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 13:35:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 13:35:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2019-03-18 13:35:44 -Enabling session validation scheduler...
2019-03-18 13:35:44 -请求地址 : http://localhost:8081/login;JSESSIONID=792be771-0100-4afc-b074-c7d5bff922ff
2019-03-18 13:35:44 -HTTP METHOD : GET
2019-03-18 13:35:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:35:44 -参数 : [{}]
2019-03-18 13:35:44 -耗时 : 3
2019-03-18 13:35:44 -返回值 : login
2019-03-18 13:35:45 -请求地址 : http://localhost:8081/getVerify
2019-03-18 13:35:45 -HTTP METHOD : GET
2019-03-18 13:35:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 13:35:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2245c3ef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@267a537f]
2019-03-18 13:35:48 -6757
2019-03-18 13:35:48 -耗时 : 3179
2019-03-18 13:35:48 -返回值 : null
2019-03-18 13:35:48 -请求地址 : http://localhost:8081/login
2019-03-18 13:35:48 -HTTP METHOD : GET
2019-03-18 13:35:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:35:48 -参数 : [{}]
2019-03-18 13:35:48 -耗时 : 1
2019-03-18 13:35:48 -返回值 : login
2019-03-18 13:36:03 -请求地址 : http://localhost:8081/login
2019-03-18 13:36:03 -HTTP METHOD : POST
2019-03-18 13:36:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 13:36:03 -参数 : [admin, 111111, 6757, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3de2511e]
2019-03-18 13:36:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 13:36:03 -==> Parameters: admin(String)
2019-03-18 13:36:03 -<==      Total: 1
2019-03-18 13:36:03 -耗时 : 307
2019-03-18 13:36:03 -返回值 : {msg=操作成功, code=0}
2019-03-18 13:36:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 13:36:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:36:03 -==> Parameters: 1(Long), admin(String), 登录(String), 307(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 13:36:03.506(Timestamp)
2019-03-18 13:36:03 -请求地址 : http://localhost:8081/index
2019-03-18 13:36:03 -HTTP METHOD : GET
2019-03-18 13:36:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 13:36:03 -参数 : [{}]
2019-03-18 13:36:04 -<==    Updates: 1
2019-03-18 13:36:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 13:36:04 -==> Parameters: 1(Long)
2019-03-18 13:36:04 -<==      Total: 45
2019-03-18 13:36:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 13:36:04 -==> Parameters: 138(Long)
2019-03-18 13:36:04 -<==      Total: 1
2019-03-18 13:36:04 -耗时 : 557
2019-03-18 13:36:04 -返回值 : index_v1
2019-03-18 13:36:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:36:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 557(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 13:36:04.556(Timestamp)
2019-03-18 13:36:04 -<==    Updates: 1
2019-03-18 13:36:04 -请求地址 : http://localhost:8081/main
2019-03-18 13:36:04 -HTTP METHOD : GET
2019-03-18 13:36:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:36:04 -参数 : []
2019-03-18 13:36:04 -耗时 : 1
2019-03-18 13:36:04 -返回值 : main
2019-03-18 13:36:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 13:36:05 -HTTP METHOD : GET
2019-03-18 13:36:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 13:36:05 -参数 : []
2019-03-18 13:36:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 13:36:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 13:36:05 -请求地址 : http://localhost:8081/main
2019-03-18 13:36:05 -HTTP METHOD : GET
2019-03-18 13:36:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:36:05 -参数 : []
2019-03-18 13:36:05 -耗时 : 1
2019-03-18 13:36:05 -返回值 : main
2019-03-18 13:36:05 -<==      Total: 0
2019-03-18 13:36:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 13:36:05 -==> Parameters: 1(Long), 0(String)
2019-03-18 13:36:05 -<==      Total: 1
2019-03-18 13:36:05 -耗时 : 486
2019-03-18 13:36:05 -返回值 : com.bootdo.common.utils.PageUtils@1e25a4b9
2019-03-18 13:36:09 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-03-18 13:36:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 13:36:15 -==> Parameters: 1(Long)
2019-03-18 13:36:15 -<==      Total: 86
2019-03-18 13:36:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 13:36:15 -HTTP METHOD : GET
2019-03-18 13:36:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 13:36:15 -参数 : []
2019-03-18 13:36:15 -耗时 : 1
2019-03-18 13:36:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 13:36:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:36:17 -HTTP METHOD : GET
2019-03-18 13:36:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:36:17 -参数 : [userType]
2019-03-18 13:36:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:36:17 -==> Parameters: userType(String)
2019-03-18 13:36:17 -<==      Total: 2
2019-03-18 13:36:17 -耗时 : 53
2019-03-18 13:36:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:36:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:17 -HTTP METHOD : GET
2019-03-18 13:36:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:36:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 13:36:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:36:17 -<==      Total: 3
2019-03-18 13:36:17 -==>  Preparing: select count(*) from elec_log 
2019-03-18 13:36:17 -==> Parameters: 
2019-03-18 13:36:17 -<==      Total: 1
2019-03-18 13:36:17 -耗时 : 248
2019-03-18 13:36:17 -返回值 : com.bootdo.common.utils.PageUtils@3a410dff
2019-03-18 13:36:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:34 -HTTP METHOD : GET
2019-03-18 13:36:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:34 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=2019-03-09, type=B}]
2019-03-18 13:36:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:34 -==> Parameters: B(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:34 -<==      Total: 0
2019-03-18 13:36:34 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:34 -==> Parameters: B(String), 2019-03-09(String)
2019-03-18 13:36:34 -<==      Total: 1
2019-03-18 13:36:34 -耗时 : 151
2019-03-18 13:36:34 -返回值 : com.bootdo.common.utils.PageUtils@47aa2a5f
2019-03-18 13:36:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 13:36:35 -HTTP METHOD : GET
2019-03-18 13:36:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 13:36:35 -参数 : []
2019-03-18 13:36:35 -耗时 : 1
2019-03-18 13:36:35 -返回值 : system/dept/deptTree
2019-03-18 13:36:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 13:36:35 -HTTP METHOD : GET
2019-03-18 13:36:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 13:36:35 -参数 : []
2019-03-18 13:36:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 13:36:35 -==> Parameters: 
2019-03-18 13:36:35 -<==      Total: 3
2019-03-18 13:36:35 -耗时 : 25
2019-03-18 13:36:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 13:36:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:38 -HTTP METHOD : GET
2019-03-18 13:36:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:38 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-09, type=A}]
2019-03-18 13:36:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:38 -==> Parameters: A(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:38 -<==      Total: 0
2019-03-18 13:36:38 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:38 -==> Parameters: A(String), 2019-03-09(String)
2019-03-18 13:36:38 -<==      Total: 1
2019-03-18 13:36:38 -耗时 : 18
2019-03-18 13:36:38 -返回值 : com.bootdo.common.utils.PageUtils@32edd0e9
2019-03-18 13:36:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:40 -HTTP METHOD : GET
2019-03-18 13:36:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:40 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 13:36:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:40 -==> Parameters: A(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:40 -<==      Total: 0
2019-03-18 13:36:40 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:40 -==> Parameters: A(String), 2019-03-09(String)
2019-03-18 13:36:40 -<==      Total: 1
2019-03-18 13:36:40 -耗时 : 13
2019-03-18 13:36:40 -返回值 : com.bootdo.common.utils.PageUtils@1b86500a
2019-03-18 13:36:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:40 -HTTP METHOD : GET
2019-03-18 13:36:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:40 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 13:36:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:40 -==> Parameters: A(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:40 -<==      Total: 0
2019-03-18 13:36:40 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:40 -==> Parameters: A(String), 2019-03-09(String)
2019-03-18 13:36:40 -<==      Total: 1
2019-03-18 13:36:40 -耗时 : 7
2019-03-18 13:36:40 -返回值 : com.bootdo.common.utils.PageUtils@359ce87d
2019-03-18 13:36:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:41 -HTTP METHOD : GET
2019-03-18 13:36:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:41 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 13:36:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:41 -==> Parameters: A(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:41 -<==      Total: 0
2019-03-18 13:36:41 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:41 -==> Parameters: A(String), 2019-03-09(String)
2019-03-18 13:36:41 -<==      Total: 1
2019-03-18 13:36:41 -耗时 : 8
2019-03-18 13:36:41 -返回值 : com.bootdo.common.utils.PageUtils@331a8141
2019-03-18 13:36:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:36:41 -HTTP METHOD : GET
2019-03-18 13:36:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:36:41 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 13:36:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:36:41 -==> Parameters: A(String), 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 13:36:41 -<==      Total: 0
2019-03-18 13:36:41 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 13:36:41 -==> Parameters: A(String), 2019-03-09(String)
2019-03-18 13:36:41 -<==      Total: 1
2019-03-18 13:36:41 -耗时 : 8
2019-03-18 13:36:41 -返回值 : com.bootdo.common.utils.PageUtils@78a1386b
2019-03-18 13:39:19 -请求地址 : http://localhost:8081/login;JSESSIONID=0e0c148f-7d8c-4d78-b782-6cf831b75201
2019-03-18 13:39:19 -HTTP METHOD : GET
2019-03-18 13:39:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:39:19 -参数 : [{}]
2019-03-18 13:39:19 -耗时 : 0
2019-03-18 13:39:19 -返回值 : login
2019-03-18 13:39:20 -请求地址 : http://localhost:8081/login;JSESSIONID=0e0c148f-7d8c-4d78-b782-6cf831b75201
2019-03-18 13:39:20 -HTTP METHOD : GET
2019-03-18 13:39:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:39:20 -参数 : [{}]
2019-03-18 13:39:20 -耗时 : 0
2019-03-18 13:39:20 -返回值 : login
2019-03-18 13:39:20 -请求地址 : http://localhost:8081/getVerify
2019-03-18 13:39:20 -HTTP METHOD : GET
2019-03-18 13:39:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 13:39:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f538617, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6a0756e1]
2019-03-18 13:39:20 -5873
2019-03-18 13:39:20 -耗时 : 11
2019-03-18 13:39:20 -返回值 : null
2019-03-18 13:39:20 -请求地址 : http://localhost:8081/getVerify
2019-03-18 13:39:20 -HTTP METHOD : GET
2019-03-18 13:39:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 13:39:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30682903, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1833bac2]
2019-03-18 13:39:20 -5578
2019-03-18 13:39:20 -耗时 : 30
2019-03-18 13:39:20 -返回值 : null
2019-03-18 13:39:20 -请求地址 : http://localhost:8081/login
2019-03-18 13:39:20 -HTTP METHOD : GET
2019-03-18 13:39:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:39:20 -参数 : [{}]
2019-03-18 13:39:20 -耗时 : 0
2019-03-18 13:39:20 -返回值 : login
2019-03-18 13:39:54 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 13:40:06 -请求地址 : http://localhost:8081/
2019-03-18 13:40:06 -HTTP METHOD : GET
2019-03-18 13:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 13:40:06 -参数 : [{}]
2019-03-18 13:40:06 -耗时 : 0
2019-03-18 13:40:06 -返回值 : redirect:/index
2019-03-18 13:40:06 -请求地址 : http://localhost:8081/login;JSESSIONID=3c971571-d303-4c9f-bf11-35e5981c24b7
2019-03-18 13:40:06 -HTTP METHOD : GET
2019-03-18 13:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:40:06 -参数 : [{}]
2019-03-18 13:40:06 -耗时 : 1
2019-03-18 13:40:06 -返回值 : login
2019-03-18 13:40:07 -请求地址 : http://localhost:8081/getVerify
2019-03-18 13:40:07 -HTTP METHOD : GET
2019-03-18 13:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 13:40:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ae706f3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3daeb82]
2019-03-18 13:40:07 -9490
2019-03-18 13:40:07 -耗时 : 14
2019-03-18 13:40:07 -返回值 : null
2019-03-18 13:40:07 -请求地址 : http://localhost:8081/login
2019-03-18 13:40:07 -HTTP METHOD : GET
2019-03-18 13:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 13:40:07 -参数 : [{}]
2019-03-18 13:40:07 -耗时 : 1
2019-03-18 13:40:07 -返回值 : login
2019-03-18 13:40:15 -请求地址 : http://localhost:8081/login
2019-03-18 13:40:15 -HTTP METHOD : POST
2019-03-18 13:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 13:40:15 -参数 : [admin, 111111, 9490, org.apache.shiro.web.servlet.ShiroHttpServletRequest@90a492a]
2019-03-18 13:40:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 13:40:15 -==> Parameters: admin(String)
2019-03-18 13:40:15 -<==      Total: 1
2019-03-18 13:40:15 -耗时 : 14
2019-03-18 13:40:15 -返回值 : {msg=操作成功, code=0}
2019-03-18 13:40:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:15 -==> Parameters: 1(Long), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 13:40:15.734(Timestamp)
2019-03-18 13:40:15 -请求地址 : http://localhost:8081/index
2019-03-18 13:40:15 -HTTP METHOD : GET
2019-03-18 13:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 13:40:15 -参数 : [{}]
2019-03-18 13:40:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 13:40:15 -==> Parameters: 1(Long)
2019-03-18 13:40:15 -<==    Updates: 1
2019-03-18 13:40:16 -<==      Total: 45
2019-03-18 13:40:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 13:40:16 -==> Parameters: 138(Long)
2019-03-18 13:40:16 -<==      Total: 1
2019-03-18 13:40:16 -耗时 : 388
2019-03-18 13:40:16 -返回值 : index_v1
2019-03-18 13:40:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 389(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 13:40:16.159(Timestamp)
2019-03-18 13:40:16 -请求地址 : http://localhost:8081/main
2019-03-18 13:40:16 -HTTP METHOD : GET
2019-03-18 13:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:40:16 -参数 : []
2019-03-18 13:40:16 -耗时 : 0
2019-03-18 13:40:16 -返回值 : main
2019-03-18 13:40:16 -<==    Updates: 1
2019-03-18 13:40:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 13:40:16 -HTTP METHOD : GET
2019-03-18 13:40:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 13:40:16 -参数 : []
2019-03-18 13:40:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 13:40:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 13:40:16 -请求地址 : http://localhost:8081/main
2019-03-18 13:40:16 -HTTP METHOD : GET
2019-03-18 13:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:40:16 -参数 : []
2019-03-18 13:40:16 -耗时 : 1
2019-03-18 13:40:16 -返回值 : main
2019-03-18 13:40:17 -<==      Total: 0
2019-03-18 13:40:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 13:40:17 -==> Parameters: 1(Long), 0(String)
2019-03-18 13:40:17 -<==      Total: 1
2019-03-18 13:40:17 -耗时 : 757
2019-03-18 13:40:17 -返回值 : com.bootdo.common.utils.PageUtils@cfed3e6
2019-03-18 13:40:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 13:40:29 -==> Parameters: 1(Long)
2019-03-18 13:40:29 -<==      Total: 86
2019-03-18 13:40:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 13:40:29 -HTTP METHOD : GET
2019-03-18 13:40:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 13:40:29 -参数 : []
2019-03-18 13:40:29 -耗时 : 0
2019-03-18 13:40:29 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 13:40:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:30 -HTTP METHOD : GET
2019-03-18 13:40:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:30 -参数 : [userType]
2019-03-18 13:40:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:30 -==> Parameters: userType(String)
2019-03-18 13:40:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:40:30 -HTTP METHOD : GET
2019-03-18 13:40:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:40:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 13:40:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:40:30 -<==      Total: 3
2019-03-18 13:40:30 -==>  Preparing: select count(*) from elec_log 
2019-03-18 13:40:30 -==> Parameters: 
2019-03-18 13:40:30 -<==      Total: 1
2019-03-18 13:40:30 -耗时 : 10
2019-03-18 13:40:30 -返回值 : com.bootdo.common.utils.PageUtils@7c42672e
2019-03-18 13:40:30 -<==      Total: 2
2019-03-18 13:40:30 -耗时 : 83
2019-03-18 13:40:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 13:40:31 -HTTP METHOD : GET
2019-03-18 13:40:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 13:40:31 -参数 : []
2019-03-18 13:40:31 -耗时 : 0
2019-03-18 13:40:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 13:40:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:31 -HTTP METHOD : GET
2019-03-18 13:40:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:31 -参数 : [userType]
2019-03-18 13:40:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:31 -==> Parameters: userType(String)
2019-03-18 13:40:31 -<==      Total: 2
2019-03-18 13:40:31 -耗时 : 6
2019-03-18 13:40:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 13:40:31 -HTTP METHOD : GET
2019-03-18 13:40:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 13:40:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 13:40:31 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-18 13:40:31 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-18 13:40:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 13:40:31.889(Timestamp)
2019-03-18 13:40:31 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cb37c621.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 13:40:31 -<==    Updates: 1
2019-03-18 13:40:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-18 13:40:32 -HTTP METHOD : GET
2019-03-18 13:40:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-18 13:40:32 -参数 : []
2019-03-18 13:40:32 -耗时 : 1
2019-03-18 13:40:32 -返回值 : /moneyLog/waterLog/waterLog
2019-03-18 13:40:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:33 -HTTP METHOD : GET
2019-03-18 13:40:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:33 -参数 : [userType]
2019-03-18 13:40:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:33 -==> Parameters: userType(String)
2019-03-18 13:40:33 -<==      Total: 2
2019-03-18 13:40:33 -耗时 : 3
2019-03-18 13:40:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-18 13:40:33 -HTTP METHOD : GET
2019-03-18 13:40:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-18 13:40:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-18 13:40:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:40:33 -<==      Total: 3
2019-03-18 13:40:33 -==>  Preparing: select count(*) from water_log 
2019-03-18 13:40:33 -==> Parameters: 
2019-03-18 13:40:33 -<==      Total: 1
2019-03-18 13:40:33 -耗时 : 211
2019-03-18 13:40:33 -返回值 : com.bootdo.common.utils.PageUtils@5135d6f5
2019-03-18 13:40:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 13:40:36 -HTTP METHOD : GET
2019-03-18 13:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 13:40:36 -参数 : []
2019-03-18 13:40:36 -耗时 : 0
2019-03-18 13:40:36 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 13:40:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:36 -HTTP METHOD : GET
2019-03-18 13:40:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:36 -参数 : [userType]
2019-03-18 13:40:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:36 -==> Parameters: userType(String)
2019-03-18 13:40:36 -<==      Total: 2
2019-03-18 13:40:36 -耗时 : 6
2019-03-18 13:40:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 13:40:36 -HTTP METHOD : GET
2019-03-18 13:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 13:40:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 13:40:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:37 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cb37c621.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 13:40:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 13:40:36.998(Timestamp)
2019-03-18 13:40:37 -<==    Updates: 1
2019-03-18 13:40:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 13:40:38 -HTTP METHOD : GET
2019-03-18 13:40:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 13:40:38 -参数 : []
2019-03-18 13:40:38 -耗时 : 0
2019-03-18 13:40:38 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 13:40:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:38 -HTTP METHOD : GET
2019-03-18 13:40:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:38 -参数 : [userType]
2019-03-18 13:40:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:38 -==> Parameters: userType(String)
2019-03-18 13:40:38 -<==      Total: 2
2019-03-18 13:40:38 -耗时 : 4
2019-03-18 13:40:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:40:38 -HTTP METHOD : GET
2019-03-18 13:40:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:40:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 13:40:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:40:38 -<==      Total: 3
2019-03-18 13:40:38 -==>  Preparing: select count(*) from elec_log 
2019-03-18 13:40:38 -==> Parameters: 
2019-03-18 13:40:38 -<==      Total: 1
2019-03-18 13:40:38 -耗时 : 56
2019-03-18 13:40:38 -返回值 : com.bootdo.common.utils.PageUtils@16e6090c
2019-03-18 13:40:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 13:40:52 -HTTP METHOD : GET
2019-03-18 13:40:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 13:40:52 -参数 : []
2019-03-18 13:40:52 -耗时 : 0
2019-03-18 13:40:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 13:40:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:52 -HTTP METHOD : GET
2019-03-18 13:40:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:52 -参数 : [userType]
2019-03-18 13:40:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:52 -==> Parameters: userType(String)
2019-03-18 13:40:52 -<==      Total: 2
2019-03-18 13:40:52 -耗时 : 5
2019-03-18 13:40:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 13:40:52 -HTTP METHOD : GET
2019-03-18 13:40:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 13:40:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 13:40:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 13:40:52.925(Timestamp)
2019-03-18 13:40:52 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cb37c621.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 13:40:52 -<==    Updates: 1
2019-03-18 13:40:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-18 13:40:53 -HTTP METHOD : GET
2019-03-18 13:40:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-18 13:40:53 -参数 : []
2019-03-18 13:40:53 -耗时 : 0
2019-03-18 13:40:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-18 13:40:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:54 -HTTP METHOD : GET
2019-03-18 13:40:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:54 -参数 : [userType]
2019-03-18 13:40:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-18 13:40:54 -HTTP METHOD : GET
2019-03-18 13:40:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-18 13:40:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:54 -==> Parameters: userType(String)
2019-03-18 13:40:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-18 13:40:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:40:54 -<==      Total: 2
2019-03-18 13:40:54 -耗时 : 17
2019-03-18 13:40:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:54 -<==      Total: 3
2019-03-18 13:40:54 -==>  Preparing: select count(*) from water_log 
2019-03-18 13:40:54 -==> Parameters: 
2019-03-18 13:40:54 -<==      Total: 1
2019-03-18 13:40:54 -耗时 : 86
2019-03-18 13:40:54 -返回值 : com.bootdo.common.utils.PageUtils@348759e8
2019-03-18 13:40:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 13:40:54 -HTTP METHOD : GET
2019-03-18 13:40:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 13:40:54 -参数 : []
2019-03-18 13:40:54 -耗时 : 1
2019-03-18 13:40:54 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 13:40:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:55 -HTTP METHOD : GET
2019-03-18 13:40:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:55 -参数 : [userType]
2019-03-18 13:40:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:55 -==> Parameters: userType(String)
2019-03-18 13:40:55 -<==      Total: 2
2019-03-18 13:40:55 -耗时 : 4
2019-03-18 13:40:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 13:40:55 -HTTP METHOD : GET
2019-03-18 13:40:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 13:40:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 13:40:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 13:40:55 -<==      Total: 3
2019-03-18 13:40:55 -==>  Preparing: select count(*) from elec_log 
2019-03-18 13:40:55 -==> Parameters: 
2019-03-18 13:40:55 -<==      Total: 1
2019-03-18 13:40:55 -耗时 : 10
2019-03-18 13:40:55 -返回值 : com.bootdo.common.utils.PageUtils@588772d
2019-03-18 13:40:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 13:40:56 -HTTP METHOD : GET
2019-03-18 13:40:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 13:40:56 -参数 : []
2019-03-18 13:40:56 -耗时 : 0
2019-03-18 13:40:56 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 13:40:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:40:56 -HTTP METHOD : GET
2019-03-18 13:40:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:40:56 -参数 : [userType]
2019-03-18 13:40:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:40:56 -==> Parameters: userType(String)
2019-03-18 13:40:56 -<==      Total: 2
2019-03-18 13:40:56 -耗时 : 5
2019-03-18 13:40:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:40:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 13:40:56 -HTTP METHOD : GET
2019-03-18 13:40:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 13:40:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 13:40:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 13:40:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:40:56 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cb37c621.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 13:40:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 13:40:56.229(Timestamp)
2019-03-18 13:40:56 -<==    Updates: 1
2019-03-18 13:41:26 -请求地址 : http://localhost:8081/charts/countDD
2019-03-18 13:41:26 -HTTP METHOD : GET
2019-03-18 13:41:26 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-18 13:41:26 -参数 : []
2019-03-18 13:41:26 -耗时 : 1
2019-03-18 13:41:26 -返回值 : charts/countDD
2019-03-18 13:55:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 13:55:38 -==> Parameters: 1(Long)
2019-03-18 13:55:38 -<==      Total: 86
2019-03-18 13:55:38 -请求地址 : http://localhost:8081/charts/countMM
2019-03-18 13:55:38 -HTTP METHOD : GET
2019-03-18 13:55:38 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-18 13:55:38 -参数 : []
2019-03-18 13:55:38 -耗时 : 0
2019-03-18 13:55:38 -返回值 : charts/countMM
2019-03-18 13:55:39 -请求地址 : http://localhost:8081/charts/countYY
2019-03-18 13:55:39 -HTTP METHOD : GET
2019-03-18 13:55:39 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-18 13:55:39 -参数 : []
2019-03-18 13:55:39 -耗时 : 0
2019-03-18 13:55:39 -返回值 : charts/countYY
2019-03-18 13:55:43 -请求地址 : http://localhost:8081/charts/countRun
2019-03-18 13:55:43 -HTTP METHOD : GET
2019-03-18 13:55:43 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-18 13:55:43 -参数 : []
2019-03-18 13:55:43 -耗时 : 1
2019-03-18 13:55:43 -返回值 : charts/countRun
2019-03-18 13:55:58 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 13:55:58 -HTTP METHOD : GET
2019-03-18 13:55:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 13:55:58 -参数 : []
2019-03-18 13:55:58 -耗时 : 1
2019-03-18 13:55:58 -返回值 : elec/elec/elec
2019-03-18 13:55:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:55:58 -HTTP METHOD : GET
2019-03-18 13:55:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:55:58 -参数 : [userType]
2019-03-18 13:55:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:55:58 -==> Parameters: userType(String)
2019-03-18 13:55:58 -<==      Total: 2
2019-03-18 13:55:58 -耗时 : 5
2019-03-18 13:55:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:55:58 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 13:55:58 -HTTP METHOD : GET
2019-03-18 13:55:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 13:55:58 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@47fa1494]
2019-03-18 13:55:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 13:55:58 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 13:55:58 -<==      Total: 3
2019-03-18 13:55:58 -==>  Preparing: select count(*) from elec 
2019-03-18 13:55:58 -==> Parameters: 
2019-03-18 13:55:58 -<==      Total: 1
2019-03-18 13:55:58 -耗时 : 135
2019-03-18 13:55:58 -返回值 : com.bootdo.common.utils.PageUtils@4ecf6e48
2019-03-18 13:56:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 13:56:11 -HTTP METHOD : GET
2019-03-18 13:56:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 13:56:11 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-02}, com.bootdo.elec.domain.ElecDO@5c648737]
2019-03-18 13:56:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 13:56:11 -==> Parameters: 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 13:56:11 -<==      Total: 3
2019-03-18 13:56:11 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 13:56:11 -==> Parameters: 2019-02(String)
2019-03-18 13:56:11 -<==      Total: 1
2019-03-18 13:56:11 -耗时 : 150
2019-03-18 13:56:11 -返回值 : com.bootdo.common.utils.PageUtils@2b9ef008
2019-03-18 13:56:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 13:56:32 -HTTP METHOD : GET
2019-03-18 13:56:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 13:56:32 -参数 : []
2019-03-18 13:56:32 -耗时 : 0
2019-03-18 13:56:32 -返回值 : system/dept/deptTree
2019-03-18 13:56:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 13:56:33 -HTTP METHOD : GET
2019-03-18 13:56:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 13:56:33 -参数 : []
2019-03-18 13:56:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 13:56:33 -==> Parameters: 
2019-03-18 13:56:33 -<==      Total: 3
2019-03-18 13:56:33 -耗时 : 5
2019-03-18 13:56:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 13:59:22 -请求地址 : http://localhost:8081/index
2019-03-18 13:59:22 -HTTP METHOD : GET
2019-03-18 13:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 13:59:22 -参数 : [{}]
2019-03-18 13:59:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 13:59:22 -==> Parameters: 1(Long)
2019-03-18 13:59:22 -<==      Total: 45
2019-03-18 13:59:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 13:59:22 -==> Parameters: 138(Long)
2019-03-18 13:59:22 -<==      Total: 1
2019-03-18 13:59:22 -耗时 : 30
2019-03-18 13:59:22 -返回值 : index_v1
2019-03-18 13:59:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:59:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 13:59:22.892(Timestamp)
2019-03-18 13:59:23 -请求地址 : http://localhost:8081/main
2019-03-18 13:59:23 -HTTP METHOD : GET
2019-03-18 13:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:59:23 -参数 : []
2019-03-18 13:59:23 -耗时 : 0
2019-03-18 13:59:23 -返回值 : main
2019-03-18 13:59:23 -<==    Updates: 1
2019-03-18 13:59:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 13:59:23 -HTTP METHOD : GET
2019-03-18 13:59:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 13:59:23 -参数 : []
2019-03-18 13:59:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 13:59:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 13:59:23 -<==      Total: 0
2019-03-18 13:59:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 13:59:23 -==> Parameters: 1(Long), 0(String)
2019-03-18 13:59:23 -<==      Total: 1
2019-03-18 13:59:23 -耗时 : 8
2019-03-18 13:59:23 -返回值 : com.bootdo.common.utils.PageUtils@43050e1
2019-03-18 13:59:23 -请求地址 : http://localhost:8081/main
2019-03-18 13:59:23 -HTTP METHOD : GET
2019-03-18 13:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:59:23 -参数 : []
2019-03-18 13:59:23 -耗时 : 1
2019-03-18 13:59:23 -返回值 : main
2019-03-18 13:59:25 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 13:59:25 -HTTP METHOD : GET
2019-03-18 13:59:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 13:59:25 -参数 : []
2019-03-18 13:59:25 -耗时 : 124
2019-03-18 13:59:25 -返回值 : elec/elec/elec
2019-03-18 13:59:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:59:26 -HTTP METHOD : GET
2019-03-18 13:59:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:59:26 -参数 : [userType]
2019-03-18 13:59:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:59:26 -==> Parameters: userType(String)
2019-03-18 13:59:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 13:59:26 -HTTP METHOD : GET
2019-03-18 13:59:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 13:59:26 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@5bc25dfd]
2019-03-18 13:59:26 -<==      Total: 2
2019-03-18 13:59:26 -耗时 : 6
2019-03-18 13:59:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 13:59:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:59:26 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 13:59:26 -<==      Total: 3
2019-03-18 13:59:26 -==>  Preparing: select count(*) from elec 
2019-03-18 13:59:26 -==> Parameters: 
2019-03-18 13:59:26 -<==      Total: 1
2019-03-18 13:59:26 -耗时 : 14
2019-03-18 13:59:26 -返回值 : com.bootdo.common.utils.PageUtils@725a88f0
2019-03-18 13:59:53 -请求地址 : http://localhost:8081/index
2019-03-18 13:59:53 -HTTP METHOD : GET
2019-03-18 13:59:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 13:59:53 -参数 : [{}]
2019-03-18 13:59:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 13:59:53 -==> Parameters: 1(Long)
2019-03-18 13:59:53 -<==      Total: 45
2019-03-18 13:59:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 13:59:53 -==> Parameters: 138(Long)
2019-03-18 13:59:53 -<==      Total: 1
2019-03-18 13:59:53 -耗时 : 29
2019-03-18 13:59:53 -返回值 : index_v1
2019-03-18 13:59:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 13:59:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 13:59:53.914(Timestamp)
2019-03-18 13:59:54 -请求地址 : http://localhost:8081/main
2019-03-18 13:59:54 -HTTP METHOD : GET
2019-03-18 13:59:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:59:54 -参数 : []
2019-03-18 13:59:54 -<==    Updates: 1
2019-03-18 13:59:54 -耗时 : 98
2019-03-18 13:59:54 -返回值 : main
2019-03-18 13:59:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 13:59:54 -HTTP METHOD : GET
2019-03-18 13:59:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 13:59:54 -参数 : []
2019-03-18 13:59:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 13:59:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 13:59:54 -<==      Total: 0
2019-03-18 13:59:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 13:59:54 -==> Parameters: 1(Long), 0(String)
2019-03-18 13:59:54 -<==      Total: 1
2019-03-18 13:59:54 -耗时 : 8
2019-03-18 13:59:54 -返回值 : com.bootdo.common.utils.PageUtils@440ca0bd
2019-03-18 13:59:54 -请求地址 : http://localhost:8081/main
2019-03-18 13:59:54 -HTTP METHOD : GET
2019-03-18 13:59:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 13:59:54 -参数 : []
2019-03-18 13:59:54 -耗时 : 2
2019-03-18 13:59:54 -返回值 : main
2019-03-18 13:59:57 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 13:59:57 -HTTP METHOD : GET
2019-03-18 13:59:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 13:59:57 -参数 : []
2019-03-18 13:59:57 -耗时 : 0
2019-03-18 13:59:57 -返回值 : elec/elec/elec
2019-03-18 13:59:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 13:59:57 -HTTP METHOD : GET
2019-03-18 13:59:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 13:59:57 -参数 : [userType]
2019-03-18 13:59:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 13:59:57 -==> Parameters: userType(String)
2019-03-18 13:59:57 -<==      Total: 2
2019-03-18 13:59:57 -耗时 : 3
2019-03-18 13:59:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 13:59:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 13:59:57 -HTTP METHOD : GET
2019-03-18 13:59:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 13:59:57 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@598d1942]
2019-03-18 13:59:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 13:59:57 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 13:59:57 -<==      Total: 3
2019-03-18 13:59:57 -==>  Preparing: select count(*) from elec 
2019-03-18 13:59:57 -==> Parameters: 
2019-03-18 13:59:57 -<==      Total: 1
2019-03-18 13:59:57 -耗时 : 7
2019-03-18 13:59:57 -返回值 : com.bootdo.common.utils.PageUtils@da29d7f
2019-03-18 14:00:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:00:17 -HTTP METHOD : GET
2019-03-18 14:00:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:00:17 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@46b365a7]
2019-03-18 14:00:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:00:17 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:00:17 -<==      Total: 3
2019-03-18 14:00:17 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:00:17 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:00:17 -<==      Total: 1
2019-03-18 14:00:17 -耗时 : 36
2019-03-18 14:00:17 -返回值 : com.bootdo.common.utils.PageUtils@1a79afa0
2019-03-18 14:00:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:00:18 -HTTP METHOD : GET
2019-03-18 14:00:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:00:18 -参数 : []
2019-03-18 14:00:18 -耗时 : 0
2019-03-18 14:00:18 -返回值 : system/dept/deptTree
2019-03-18 14:00:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:00:18 -HTTP METHOD : GET
2019-03-18 14:00:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:00:18 -参数 : []
2019-03-18 14:00:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:00:18 -==> Parameters: 
2019-03-18 14:00:18 -<==      Total: 3
2019-03-18 14:00:18 -耗时 : 4
2019-03-18 14:00:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:00:21 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:00:21 -HTTP METHOD : GET
2019-03-18 14:00:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:00:21 -参数 : [com.bootdo.elec.vo.ElecVo@35ae601e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d582642]
2019-03-18 14:00:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:00:21 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:00:21 -<==      Total: 6
2019-03-18 14:00:23 -耗时 : 1184
2019-03-18 14:00:23 -返回值 : null
2019-03-18 14:04:23 -请求地址 : http://localhost:8081/index
2019-03-18 14:04:23 -HTTP METHOD : GET
2019-03-18 14:04:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:04:23 -参数 : [{}]
2019-03-18 14:04:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:04:23 -==> Parameters: 1(Long)
2019-03-18 14:04:23 -<==      Total: 45
2019-03-18 14:04:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:04:23 -==> Parameters: 138(Long)
2019-03-18 14:04:23 -<==      Total: 1
2019-03-18 14:04:23 -耗时 : 196
2019-03-18 14:04:23 -返回值 : index_v1
2019-03-18 14:04:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:04:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 196(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:04:23.538(Timestamp)
2019-03-18 14:04:23 -<==    Updates: 1
2019-03-18 14:04:23 -请求地址 : http://localhost:8081/main
2019-03-18 14:04:23 -HTTP METHOD : GET
2019-03-18 14:04:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:04:23 -参数 : []
2019-03-18 14:04:23 -耗时 : 73
2019-03-18 14:04:23 -返回值 : main
2019-03-18 14:04:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:04:24 -HTTP METHOD : GET
2019-03-18 14:04:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:04:24 -参数 : []
2019-03-18 14:04:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:04:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:04:24 -<==      Total: 0
2019-03-18 14:04:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:04:24 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:04:24 -<==      Total: 1
2019-03-18 14:04:24 -耗时 : 34
2019-03-18 14:04:24 -返回值 : com.bootdo.common.utils.PageUtils@144187a0
2019-03-18 14:04:24 -请求地址 : http://localhost:8081/main
2019-03-18 14:04:24 -HTTP METHOD : GET
2019-03-18 14:04:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:04:24 -参数 : []
2019-03-18 14:04:24 -耗时 : 1
2019-03-18 14:04:24 -返回值 : main
2019-03-18 14:04:25 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:04:25 -HTTP METHOD : GET
2019-03-18 14:04:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:04:25 -参数 : []
2019-03-18 14:04:25 -耗时 : 1
2019-03-18 14:04:25 -返回值 : elec/elec/elec
2019-03-18 14:04:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:04:26 -HTTP METHOD : GET
2019-03-18 14:04:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:04:26 -参数 : [userType]
2019-03-18 14:04:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:04:26 -==> Parameters: userType(String)
2019-03-18 14:04:26 -<==      Total: 2
2019-03-18 14:04:26 -耗时 : 4
2019-03-18 14:04:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:04:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:04:26 -HTTP METHOD : GET
2019-03-18 14:04:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:04:26 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@25b0106a]
2019-03-18 14:04:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:04:26 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:04:26 -<==      Total: 3
2019-03-18 14:04:26 -==>  Preparing: select count(*) from elec 
2019-03-18 14:04:26 -==> Parameters: 
2019-03-18 14:04:26 -<==      Total: 1
2019-03-18 14:04:26 -耗时 : 8
2019-03-18 14:04:26 -返回值 : com.bootdo.common.utils.PageUtils@11978274
2019-03-18 14:06:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-03-18 14:07:20 -请求地址 : http://localhost:8081/index
2019-03-18 14:07:20 -HTTP METHOD : GET
2019-03-18 14:07:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:07:20 -参数 : [{}]
2019-03-18 14:07:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:07:20 -==> Parameters: 1(Long)
2019-03-18 14:07:20 -<==      Total: 45
2019-03-18 14:07:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:07:20 -==> Parameters: 138(Long)
2019-03-18 14:07:20 -<==      Total: 1
2019-03-18 14:07:20 -耗时 : 19
2019-03-18 14:07:20 -返回值 : index_v1
2019-03-18 14:07:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:07:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:07:20.912(Timestamp)
2019-03-18 14:07:21 -<==    Updates: 1
2019-03-18 14:07:21 -请求地址 : http://localhost:8081/main
2019-03-18 14:07:21 -HTTP METHOD : GET
2019-03-18 14:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:07:21 -参数 : []
2019-03-18 14:07:21 -耗时 : 0
2019-03-18 14:07:21 -返回值 : main
2019-03-18 14:07:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:07:21 -HTTP METHOD : GET
2019-03-18 14:07:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:07:21 -参数 : []
2019-03-18 14:07:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:07:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:07:21 -<==      Total: 0
2019-03-18 14:07:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:07:21 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:07:21 -<==      Total: 1
2019-03-18 14:07:21 -耗时 : 8
2019-03-18 14:07:21 -返回值 : com.bootdo.common.utils.PageUtils@3975574f
2019-03-18 14:07:21 -请求地址 : http://localhost:8081/main
2019-03-18 14:07:21 -HTTP METHOD : GET
2019-03-18 14:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:07:21 -参数 : []
2019-03-18 14:07:21 -耗时 : 2
2019-03-18 14:07:21 -返回值 : main
2019-03-18 14:07:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 14:07:22 -==> Parameters: 1(Long)
2019-03-18 14:07:22 -<==      Total: 86
2019-03-18 14:07:22 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:07:22 -HTTP METHOD : GET
2019-03-18 14:07:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:07:22 -参数 : []
2019-03-18 14:07:22 -耗时 : 0
2019-03-18 14:07:22 -返回值 : elec/elec/elec
2019-03-18 14:07:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:07:23 -HTTP METHOD : GET
2019-03-18 14:07:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:07:23 -参数 : [userType]
2019-03-18 14:07:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:07:23 -==> Parameters: userType(String)
2019-03-18 14:07:23 -<==      Total: 2
2019-03-18 14:07:23 -耗时 : 5
2019-03-18 14:07:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:07:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:07:23 -HTTP METHOD : GET
2019-03-18 14:07:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:07:23 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@50de9b47]
2019-03-18 14:07:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:07:23 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:07:23 -<==      Total: 3
2019-03-18 14:07:23 -==>  Preparing: select count(*) from elec 
2019-03-18 14:07:23 -==> Parameters: 
2019-03-18 14:07:23 -<==      Total: 1
2019-03-18 14:07:23 -耗时 : 16
2019-03-18 14:07:23 -返回值 : com.bootdo.common.utils.PageUtils@54bb947b
2019-03-18 14:11:22 -请求地址 : http://localhost:8081/index
2019-03-18 14:11:22 -HTTP METHOD : GET
2019-03-18 14:11:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:11:22 -参数 : [{}]
2019-03-18 14:11:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:11:22 -==> Parameters: 1(Long)
2019-03-18 14:11:22 -<==      Total: 45
2019-03-18 14:11:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:11:22 -==> Parameters: 138(Long)
2019-03-18 14:11:22 -<==      Total: 1
2019-03-18 14:11:22 -耗时 : 27
2019-03-18 14:11:22 -返回值 : index_v1
2019-03-18 14:11:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:11:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:11:22.451(Timestamp)
2019-03-18 14:11:22 -<==    Updates: 1
2019-03-18 14:11:22 -请求地址 : http://localhost:8081/main
2019-03-18 14:11:22 -HTTP METHOD : GET
2019-03-18 14:11:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:11:22 -参数 : []
2019-03-18 14:11:22 -耗时 : 0
2019-03-18 14:11:22 -返回值 : main
2019-03-18 14:11:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:11:22 -HTTP METHOD : GET
2019-03-18 14:11:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:11:22 -参数 : []
2019-03-18 14:11:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:11:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:11:22 -<==      Total: 0
2019-03-18 14:11:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:11:22 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:11:22 -<==      Total: 1
2019-03-18 14:11:22 -耗时 : 10
2019-03-18 14:11:22 -返回值 : com.bootdo.common.utils.PageUtils@69b78a67
2019-03-18 14:11:23 -请求地址 : http://localhost:8081/main
2019-03-18 14:11:23 -HTTP METHOD : GET
2019-03-18 14:11:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:11:23 -参数 : []
2019-03-18 14:11:23 -耗时 : 0
2019-03-18 14:11:23 -返回值 : main
2019-03-18 14:11:28 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:11:28 -HTTP METHOD : GET
2019-03-18 14:11:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:11:28 -参数 : []
2019-03-18 14:11:28 -耗时 : 2
2019-03-18 14:11:28 -返回值 : elec/elec/elec
2019-03-18 14:11:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:11:29 -HTTP METHOD : GET
2019-03-18 14:11:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:11:29 -参数 : [userType]
2019-03-18 14:11:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:11:29 -==> Parameters: userType(String)
2019-03-18 14:11:29 -<==      Total: 2
2019-03-18 14:11:29 -耗时 : 10
2019-03-18 14:11:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:11:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:11:29 -HTTP METHOD : GET
2019-03-18 14:11:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:11:29 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@4e13a69a]
2019-03-18 14:11:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:11:29 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:11:29 -<==      Total: 3
2019-03-18 14:11:29 -==>  Preparing: select count(*) from elec 
2019-03-18 14:11:29 -==> Parameters: 
2019-03-18 14:11:29 -<==      Total: 1
2019-03-18 14:11:29 -耗时 : 16
2019-03-18 14:11:29 -返回值 : com.bootdo.common.utils.PageUtils@7fbec9ab
2019-03-18 14:11:37 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:11:37 -HTTP METHOD : GET
2019-03-18 14:11:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:11:37 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@77665e0e]
2019-03-18 14:11:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:11:37 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:11:37 -<==      Total: 3
2019-03-18 14:11:37 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:11:37 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:11:37 -<==      Total: 1
2019-03-18 14:11:37 -耗时 : 9
2019-03-18 14:11:37 -返回值 : com.bootdo.common.utils.PageUtils@312f979e
2019-03-18 14:11:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:11:38 -HTTP METHOD : GET
2019-03-18 14:11:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:11:38 -参数 : []
2019-03-18 14:11:38 -耗时 : 0
2019-03-18 14:11:38 -返回值 : system/dept/deptTree
2019-03-18 14:11:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:11:38 -HTTP METHOD : GET
2019-03-18 14:11:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:11:38 -参数 : []
2019-03-18 14:11:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:11:38 -==> Parameters: 
2019-03-18 14:11:38 -<==      Total: 3
2019-03-18 14:11:38 -耗时 : 3
2019-03-18 14:11:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:11:42 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:11:42 -HTTP METHOD : GET
2019-03-18 14:11:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:11:42 -参数 : [com.bootdo.elec.vo.ElecVo@2cca87b0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75c4d1a5]
2019-03-18 14:11:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:11:42 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:11:42 -<==      Total: 6
2019-03-18 14:11:42 -耗时 : 97
2019-03-18 14:11:42 -返回值 : null
2019-03-18 14:18:43 -请求地址 : http://localhost:8081/index
2019-03-18 14:18:43 -HTTP METHOD : GET
2019-03-18 14:18:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:18:43 -参数 : [{}]
2019-03-18 14:18:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:18:43 -==> Parameters: 1(Long)
2019-03-18 14:18:43 -<==      Total: 45
2019-03-18 14:18:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:18:43 -==> Parameters: 138(Long)
2019-03-18 14:18:43 -<==      Total: 1
2019-03-18 14:18:43 -耗时 : 169
2019-03-18 14:18:43 -返回值 : index_v1
2019-03-18 14:18:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:18:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 169(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:18:43.95(Timestamp)
2019-03-18 14:18:44 -<==    Updates: 1
2019-03-18 14:18:44 -请求地址 : http://localhost:8081/main
2019-03-18 14:18:44 -HTTP METHOD : GET
2019-03-18 14:18:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:18:44 -参数 : []
2019-03-18 14:18:44 -耗时 : 1
2019-03-18 14:18:44 -返回值 : main
2019-03-18 14:18:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:18:44 -HTTP METHOD : GET
2019-03-18 14:18:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:18:44 -参数 : []
2019-03-18 14:18:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:18:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:18:44 -<==      Total: 0
2019-03-18 14:18:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:18:44 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:18:44 -<==      Total: 1
2019-03-18 14:18:44 -耗时 : 9
2019-03-18 14:18:44 -返回值 : com.bootdo.common.utils.PageUtils@49f2c872
2019-03-18 14:18:44 -请求地址 : http://localhost:8081/main
2019-03-18 14:18:44 -HTTP METHOD : GET
2019-03-18 14:18:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:18:44 -参数 : []
2019-03-18 14:18:44 -耗时 : 0
2019-03-18 14:18:44 -返回值 : main
2019-03-18 14:18:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 14:18:46 -==> Parameters: 1(Long)
2019-03-18 14:18:46 -<==      Total: 86
2019-03-18 14:18:46 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:18:46 -HTTP METHOD : GET
2019-03-18 14:18:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:18:46 -参数 : []
2019-03-18 14:18:46 -耗时 : 0
2019-03-18 14:18:46 -返回值 : elec/elec/elec
2019-03-18 14:18:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:18:47 -HTTP METHOD : GET
2019-03-18 14:18:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:18:47 -参数 : [userType]
2019-03-18 14:18:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:18:47 -==> Parameters: userType(String)
2019-03-18 14:18:47 -<==      Total: 2
2019-03-18 14:18:47 -耗时 : 4
2019-03-18 14:18:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:18:47 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:18:47 -HTTP METHOD : GET
2019-03-18 14:18:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:18:47 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@1f3db4ca]
2019-03-18 14:18:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:18:47 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:18:47 -<==      Total: 3
2019-03-18 14:18:47 -==>  Preparing: select count(*) from elec 
2019-03-18 14:18:47 -==> Parameters: 
2019-03-18 14:18:47 -<==      Total: 1
2019-03-18 14:18:47 -耗时 : 8
2019-03-18 14:18:47 -返回值 : com.bootdo.common.utils.PageUtils@1b5e4e98
2019-03-18 14:18:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:18:53 -HTTP METHOD : GET
2019-03-18 14:18:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:18:53 -参数 : []
2019-03-18 14:18:53 -耗时 : 2
2019-03-18 14:18:53 -返回值 : system/dept/deptTree
2019-03-18 14:18:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:18:53 -HTTP METHOD : GET
2019-03-18 14:18:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:18:53 -参数 : []
2019-03-18 14:18:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:18:53 -==> Parameters: 
2019-03-18 14:18:53 -<==      Total: 3
2019-03-18 14:18:53 -耗时 : 5
2019-03-18 14:18:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:18:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:18:57 -HTTP METHOD : GET
2019-03-18 14:18:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:18:57 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=, type=A}, com.bootdo.elec.domain.ElecDO@3f32c94a]
2019-03-18 14:18:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-18 14:18:57 -==> Parameters: A(String), 2(String), 0(Integer), 3(Integer)
2019-03-18 14:18:57 -<==      Total: 3
2019-03-18 14:18:57 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? 
2019-03-18 14:18:57 -==> Parameters: A(String), 2(String)
2019-03-18 14:18:57 -<==      Total: 1
2019-03-18 14:18:57 -耗时 : 20
2019-03-18 14:18:57 -返回值 : com.bootdo.common.utils.PageUtils@49cf6da9
2019-03-18 14:19:02 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:19:02 -HTTP METHOD : GET
2019-03-18 14:19:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:19:02 -参数 : [com.bootdo.elec.vo.ElecVo@37bc5150, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ff5c376]
2019-03-18 14:19:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:19:02 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:19:02 -<==      Total: 6
2019-03-18 14:19:02 -耗时 : 31
2019-03-18 14:19:02 -返回值 : null
2019-03-18 14:23:14 -请求地址 : http://localhost:8081/index
2019-03-18 14:23:14 -HTTP METHOD : GET
2019-03-18 14:23:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:23:14 -参数 : [{}]
2019-03-18 14:23:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:23:14 -==> Parameters: 1(Long)
2019-03-18 14:23:14 -<==      Total: 45
2019-03-18 14:23:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:23:14 -==> Parameters: 138(Long)
2019-03-18 14:23:14 -<==      Total: 1
2019-03-18 14:23:14 -耗时 : 41
2019-03-18 14:23:14 -返回值 : index_v1
2019-03-18 14:23:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:23:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:23:14.396(Timestamp)
2019-03-18 14:23:14 -<==    Updates: 1
2019-03-18 14:23:14 -请求地址 : http://localhost:8081/main
2019-03-18 14:23:14 -HTTP METHOD : GET
2019-03-18 14:23:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:23:14 -参数 : []
2019-03-18 14:23:14 -耗时 : 1
2019-03-18 14:23:14 -返回值 : main
2019-03-18 14:23:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:23:15 -HTTP METHOD : GET
2019-03-18 14:23:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:23:15 -参数 : []
2019-03-18 14:23:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:23:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:23:15 -<==      Total: 0
2019-03-18 14:23:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:23:15 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:23:15 -<==      Total: 1
2019-03-18 14:23:15 -耗时 : 24
2019-03-18 14:23:15 -返回值 : com.bootdo.common.utils.PageUtils@14dea952
2019-03-18 14:23:15 -请求地址 : http://localhost:8081/main
2019-03-18 14:23:15 -HTTP METHOD : GET
2019-03-18 14:23:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:23:15 -参数 : []
2019-03-18 14:23:15 -耗时 : 1
2019-03-18 14:23:15 -返回值 : main
2019-03-18 14:23:19 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:23:19 -HTTP METHOD : GET
2019-03-18 14:23:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:23:19 -参数 : []
2019-03-18 14:23:19 -耗时 : 54
2019-03-18 14:23:19 -返回值 : elec/elec/elec
2019-03-18 14:23:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:23:20 -HTTP METHOD : GET
2019-03-18 14:23:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:23:20 -参数 : [userType]
2019-03-18 14:23:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:23:20 -==> Parameters: userType(String)
2019-03-18 14:23:20 -<==      Total: 2
2019-03-18 14:23:20 -耗时 : 5
2019-03-18 14:23:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:23:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:23:20 -HTTP METHOD : GET
2019-03-18 14:23:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:23:20 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@5ef03060]
2019-03-18 14:23:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:23:20 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:23:20 -<==      Total: 3
2019-03-18 14:23:20 -==>  Preparing: select count(*) from elec 
2019-03-18 14:23:20 -==> Parameters: 
2019-03-18 14:23:20 -<==      Total: 1
2019-03-18 14:23:20 -耗时 : 6
2019-03-18 14:23:20 -返回值 : com.bootdo.common.utils.PageUtils@6717485c
2019-03-18 14:23:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:23:26 -HTTP METHOD : GET
2019-03-18 14:23:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:23:26 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@2dcc6425]
2019-03-18 14:23:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:23:26 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:23:26 -<==      Total: 3
2019-03-18 14:23:26 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:23:26 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:23:26 -<==      Total: 1
2019-03-18 14:23:26 -耗时 : 39
2019-03-18 14:23:26 -返回值 : com.bootdo.common.utils.PageUtils@135229e1
2019-03-18 14:23:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:23:26 -HTTP METHOD : GET
2019-03-18 14:23:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:23:26 -参数 : []
2019-03-18 14:23:26 -耗时 : 1
2019-03-18 14:23:26 -返回值 : system/dept/deptTree
2019-03-18 14:23:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:23:27 -HTTP METHOD : GET
2019-03-18 14:23:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:23:27 -参数 : []
2019-03-18 14:23:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:23:27 -==> Parameters: 
2019-03-18 14:23:27 -<==      Total: 3
2019-03-18 14:23:27 -耗时 : 43
2019-03-18 14:23:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:23:29 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:23:29 -HTTP METHOD : GET
2019-03-18 14:23:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:23:29 -参数 : [com.bootdo.elec.vo.ElecVo@339d65d6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ff9e9d6]
2019-03-18 14:23:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:23:29 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:23:29 -<==      Total: 6
2019-03-18 14:23:29 -耗时 : 89
2019-03-18 14:23:29 -返回值 : null
2019-03-18 14:25:43 -请求地址 : http://localhost:8081/index
2019-03-18 14:25:43 -HTTP METHOD : GET
2019-03-18 14:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:25:43 -参数 : [{}]
2019-03-18 14:25:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:25:43 -==> Parameters: 1(Long)
2019-03-18 14:25:43 -<==      Total: 45
2019-03-18 14:25:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:25:43 -==> Parameters: 138(Long)
2019-03-18 14:25:43 -<==      Total: 1
2019-03-18 14:25:43 -耗时 : 67
2019-03-18 14:25:43 -返回值 : index_v1
2019-03-18 14:25:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:25:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 68(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:25:43.727(Timestamp)
2019-03-18 14:25:43 -请求地址 : http://localhost:8081/main
2019-03-18 14:25:43 -HTTP METHOD : GET
2019-03-18 14:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:25:43 -参数 : []
2019-03-18 14:25:43 -耗时 : 2
2019-03-18 14:25:43 -返回值 : main
2019-03-18 14:25:44 -<==    Updates: 1
2019-03-18 14:25:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:25:47 -HTTP METHOD : GET
2019-03-18 14:25:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:25:47 -参数 : []
2019-03-18 14:25:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:25:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:25:47 -<==      Total: 0
2019-03-18 14:25:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:25:47 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:25:47 -<==      Total: 1
2019-03-18 14:25:47 -耗时 : 8
2019-03-18 14:25:47 -返回值 : com.bootdo.common.utils.PageUtils@41efb553
2019-03-18 14:25:47 -请求地址 : http://localhost:8081/main
2019-03-18 14:25:47 -HTTP METHOD : GET
2019-03-18 14:25:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:25:47 -参数 : []
2019-03-18 14:25:47 -耗时 : 0
2019-03-18 14:25:47 -返回值 : main
2019-03-18 14:25:48 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:25:48 -HTTP METHOD : GET
2019-03-18 14:25:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:25:48 -参数 : []
2019-03-18 14:25:48 -耗时 : 15
2019-03-18 14:25:48 -返回值 : elec/elec/elec
2019-03-18 14:25:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:25:48 -HTTP METHOD : GET
2019-03-18 14:25:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:25:48 -参数 : [userType]
2019-03-18 14:25:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:25:48 -==> Parameters: userType(String)
2019-03-18 14:25:48 -<==      Total: 2
2019-03-18 14:25:48 -耗时 : 5
2019-03-18 14:25:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:25:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:25:49 -HTTP METHOD : GET
2019-03-18 14:25:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:25:49 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@58335c06]
2019-03-18 14:25:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:25:49 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:25:49 -<==      Total: 3
2019-03-18 14:25:49 -==>  Preparing: select count(*) from elec 
2019-03-18 14:25:49 -==> Parameters: 
2019-03-18 14:25:49 -<==      Total: 1
2019-03-18 14:25:49 -耗时 : 7
2019-03-18 14:25:49 -返回值 : com.bootdo.common.utils.PageUtils@17a321ba
2019-03-18 14:25:56 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:25:56 -HTTP METHOD : GET
2019-03-18 14:25:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:25:56 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@a867b6c]
2019-03-18 14:25:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:25:56 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:25:56 -<==      Total: 3
2019-03-18 14:25:56 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:25:56 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:25:56 -<==      Total: 1
2019-03-18 14:25:56 -耗时 : 20
2019-03-18 14:25:56 -返回值 : com.bootdo.common.utils.PageUtils@5924a235
2019-03-18 14:25:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:25:56 -HTTP METHOD : GET
2019-03-18 14:25:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:25:56 -参数 : []
2019-03-18 14:25:56 -耗时 : 1
2019-03-18 14:25:56 -返回值 : system/dept/deptTree
2019-03-18 14:25:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:25:57 -HTTP METHOD : GET
2019-03-18 14:25:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:25:57 -参数 : []
2019-03-18 14:25:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:25:57 -==> Parameters: 
2019-03-18 14:25:57 -<==      Total: 3
2019-03-18 14:25:57 -耗时 : 3
2019-03-18 14:25:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:26:01 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:26:01 -HTTP METHOD : GET
2019-03-18 14:26:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:26:01 -参数 : [com.bootdo.elec.vo.ElecVo@77de0dc2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@26a9bf51]
2019-03-18 14:27:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:27:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/exprotElec(String), org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	userOrgName cannot be resolved to a variable(String), null, 2019-03-18 14:27:56.715(Timestamp)
2019-03-18 14:27:56 -Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	userOrgName cannot be resolved to a variable

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	userOrgName cannot be resolved to a variable

	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1006)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.Error: Unresolved compilation problem: 
	userOrgName cannot be resolved to a variable

	at com.bootdo.elec.controller.ElecController.exprotExcel(ElecController.java:141)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$c54337ff.exprotExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	... 60 common frames omitted
2019-03-18 14:27:56 -<==    Updates: 1
2019-03-18 14:28:56 -请求地址 : http://localhost:8081/index
2019-03-18 14:28:56 -HTTP METHOD : GET
2019-03-18 14:28:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:28:56 -参数 : [{}]
2019-03-18 14:28:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:28:56 -==> Parameters: 1(Long)
2019-03-18 14:28:56 -<==      Total: 45
2019-03-18 14:28:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:28:56 -==> Parameters: 138(Long)
2019-03-18 14:28:56 -<==      Total: 1
2019-03-18 14:28:56 -耗时 : 51
2019-03-18 14:28:56 -返回值 : index_v1
2019-03-18 14:28:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:28:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 51(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:28:56.983(Timestamp)
2019-03-18 14:28:57 -<==    Updates: 1
2019-03-18 14:28:57 -请求地址 : http://localhost:8081/main
2019-03-18 14:28:57 -HTTP METHOD : GET
2019-03-18 14:28:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:28:57 -参数 : []
2019-03-18 14:28:57 -耗时 : 44
2019-03-18 14:28:57 -返回值 : main
2019-03-18 14:28:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:28:58 -HTTP METHOD : GET
2019-03-18 14:28:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:28:58 -参数 : []
2019-03-18 14:28:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:28:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:28:58 -<==      Total: 0
2019-03-18 14:28:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:28:58 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:28:58 -<==      Total: 1
2019-03-18 14:28:58 -耗时 : 27
2019-03-18 14:28:58 -返回值 : com.bootdo.common.utils.PageUtils@27cda767
2019-03-18 14:28:58 -请求地址 : http://localhost:8081/main
2019-03-18 14:28:58 -HTTP METHOD : GET
2019-03-18 14:28:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:28:58 -参数 : []
2019-03-18 14:28:58 -耗时 : 1
2019-03-18 14:28:58 -返回值 : main
2019-03-18 14:29:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 14:29:02 -==> Parameters: 1(Long)
2019-03-18 14:29:02 -<==      Total: 86
2019-03-18 14:29:02 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:29:02 -HTTP METHOD : GET
2019-03-18 14:29:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:29:02 -参数 : []
2019-03-18 14:29:02 -耗时 : 0
2019-03-18 14:29:02 -返回值 : elec/elec/elec
2019-03-18 14:29:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:29:02 -HTTP METHOD : GET
2019-03-18 14:29:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:29:02 -参数 : [userType]
2019-03-18 14:29:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:29:02 -==> Parameters: userType(String)
2019-03-18 14:29:02 -<==      Total: 2
2019-03-18 14:29:02 -耗时 : 26
2019-03-18 14:29:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:29:02 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:29:02 -HTTP METHOD : GET
2019-03-18 14:29:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:29:02 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@3457a4a9]
2019-03-18 14:29:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:29:02 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:29:02 -<==      Total: 3
2019-03-18 14:29:02 -==>  Preparing: select count(*) from elec 
2019-03-18 14:29:02 -==> Parameters: 
2019-03-18 14:29:02 -<==      Total: 1
2019-03-18 14:29:02 -耗时 : 7
2019-03-18 14:29:02 -返回值 : com.bootdo.common.utils.PageUtils@63e834ed
2019-03-18 14:29:12 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:29:12 -HTTP METHOD : GET
2019-03-18 14:29:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:29:12 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@57b15c17]
2019-03-18 14:29:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:29:12 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:29:12 -<==      Total: 3
2019-03-18 14:29:12 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:29:12 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:29:12 -<==      Total: 1
2019-03-18 14:29:12 -耗时 : 6
2019-03-18 14:29:12 -返回值 : com.bootdo.common.utils.PageUtils@7124d370
2019-03-18 14:29:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:29:12 -HTTP METHOD : GET
2019-03-18 14:29:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:29:12 -参数 : []
2019-03-18 14:29:12 -耗时 : 2
2019-03-18 14:29:12 -返回值 : system/dept/deptTree
2019-03-18 14:29:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:29:12 -HTTP METHOD : GET
2019-03-18 14:29:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:29:12 -参数 : []
2019-03-18 14:29:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:29:12 -==> Parameters: 
2019-03-18 14:29:12 -<==      Total: 3
2019-03-18 14:29:12 -耗时 : 3
2019-03-18 14:29:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:29:14 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:29:14 -HTTP METHOD : GET
2019-03-18 14:29:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:29:14 -参数 : [com.bootdo.elec.vo.ElecVo@3ba45e65, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c05bb9a]
2019-03-18 14:29:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:29:14 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:29:14 -<==      Total: 6
2019-03-18 14:29:14 -耗时 : 55
2019-03-18 14:29:14 -返回值 : null
2019-03-18 14:35:44 -Validating all active sessions...
2019-03-18 14:35:44 -Finished session validation.  [2] sessions were stopped.
2019-03-18 14:36:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 860]
2019-03-18 14:36:16 -请求地址 : http://localhost:8081/index
2019-03-18 14:36:16 -HTTP METHOD : GET
2019-03-18 14:36:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:36:16 -参数 : [{}]
2019-03-18 14:36:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:36:16 -==> Parameters: 1(Long)
2019-03-18 14:36:16 -<==      Total: 45
2019-03-18 14:36:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:36:17 -==> Parameters: 138(Long)
2019-03-18 14:36:17 -<==      Total: 1
2019-03-18 14:36:17 -耗时 : 124
2019-03-18 14:36:17 -返回值 : index_v1
2019-03-18 14:36:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:36:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 124(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:36:17.038(Timestamp)
2019-03-18 14:36:17 -<==    Updates: 1
2019-03-18 14:36:17 -请求地址 : http://localhost:8081/main
2019-03-18 14:36:17 -HTTP METHOD : GET
2019-03-18 14:36:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:36:17 -参数 : []
2019-03-18 14:36:17 -耗时 : 1
2019-03-18 14:36:17 -返回值 : main
2019-03-18 14:36:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:36:19 -HTTP METHOD : GET
2019-03-18 14:36:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:36:19 -参数 : []
2019-03-18 14:36:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:36:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:36:19 -<==      Total: 0
2019-03-18 14:36:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:36:19 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:36:19 -<==      Total: 1
2019-03-18 14:36:19 -耗时 : 16
2019-03-18 14:36:19 -返回值 : com.bootdo.common.utils.PageUtils@608970ed
2019-03-18 14:36:19 -请求地址 : http://localhost:8081/main
2019-03-18 14:36:19 -HTTP METHOD : GET
2019-03-18 14:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:36:19 -参数 : []
2019-03-18 14:36:19 -耗时 : 0
2019-03-18 14:36:19 -返回值 : main
2019-03-18 14:36:25 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:36:25 -HTTP METHOD : GET
2019-03-18 14:36:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:36:25 -参数 : []
2019-03-18 14:36:25 -耗时 : 1
2019-03-18 14:36:25 -返回值 : elec/elec/elec
2019-03-18 14:36:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:36:26 -HTTP METHOD : GET
2019-03-18 14:36:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:36:26 -参数 : [userType]
2019-03-18 14:36:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:36:26 -==> Parameters: userType(String)
2019-03-18 14:36:26 -<==      Total: 2
2019-03-18 14:36:26 -耗时 : 4
2019-03-18 14:36:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:36:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:36:26 -HTTP METHOD : GET
2019-03-18 14:36:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:36:26 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@35230dfe]
2019-03-18 14:36:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:36:26 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:36:26 -<==      Total: 3
2019-03-18 14:36:26 -==>  Preparing: select count(*) from elec 
2019-03-18 14:36:26 -==> Parameters: 
2019-03-18 14:36:26 -<==      Total: 1
2019-03-18 14:36:26 -耗时 : 13
2019-03-18 14:36:26 -返回值 : com.bootdo.common.utils.PageUtils@26309e5
2019-03-18 14:36:32 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:36:32 -HTTP METHOD : GET
2019-03-18 14:36:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:36:32 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@3899fbe0]
2019-03-18 14:36:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:36:33 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:36:33 -<==      Total: 3
2019-03-18 14:36:33 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:36:33 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:36:33 -<==      Total: 1
2019-03-18 14:36:33 -耗时 : 102
2019-03-18 14:36:33 -返回值 : com.bootdo.common.utils.PageUtils@c850583
2019-03-18 14:36:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:36:33 -HTTP METHOD : GET
2019-03-18 14:36:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:36:33 -参数 : []
2019-03-18 14:36:33 -耗时 : 1
2019-03-18 14:36:33 -返回值 : system/dept/deptTree
2019-03-18 14:36:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:36:33 -HTTP METHOD : GET
2019-03-18 14:36:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:36:33 -参数 : []
2019-03-18 14:36:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:36:33 -==> Parameters: 
2019-03-18 14:36:33 -<==      Total: 3
2019-03-18 14:36:33 -耗时 : 4
2019-03-18 14:36:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:36:36 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:36:36 -HTTP METHOD : GET
2019-03-18 14:36:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:36:36 -参数 : [com.bootdo.elec.vo.ElecVo@28f681a0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f1e689d]
2019-03-18 14:36:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:36:36 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:36:36 -<==      Total: 6
2019-03-18 14:36:36 -耗时 : 18
2019-03-18 14:36:36 -返回值 : null
2019-03-18 14:37:37 -请求地址 : http://localhost:8081/index
2019-03-18 14:37:37 -HTTP METHOD : GET
2019-03-18 14:37:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:37:37 -参数 : [{}]
2019-03-18 14:37:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:37:37 -==> Parameters: 1(Long)
2019-03-18 14:37:37 -<==      Total: 45
2019-03-18 14:37:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:37:37 -==> Parameters: 138(Long)
2019-03-18 14:37:37 -<==      Total: 1
2019-03-18 14:37:37 -耗时 : 141
2019-03-18 14:37:37 -返回值 : index_v1
2019-03-18 14:37:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:37:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 142(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:37:37.761(Timestamp)
2019-03-18 14:37:37 -<==    Updates: 1
2019-03-18 14:37:38 -请求地址 : http://localhost:8081/main
2019-03-18 14:37:38 -HTTP METHOD : GET
2019-03-18 14:37:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:37:38 -参数 : []
2019-03-18 14:37:38 -耗时 : 0
2019-03-18 14:37:38 -返回值 : main
2019-03-18 14:37:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:37:38 -HTTP METHOD : GET
2019-03-18 14:37:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:37:38 -请求地址 : http://localhost:8081/main
2019-03-18 14:37:38 -HTTP METHOD : GET
2019-03-18 14:37:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:37:38 -参数 : []
2019-03-18 14:37:38 -耗时 : 0
2019-03-18 14:37:38 -返回值 : main
2019-03-18 14:37:38 -参数 : []
2019-03-18 14:37:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:37:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:37:38 -<==      Total: 0
2019-03-18 14:37:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:37:38 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:37:38 -<==      Total: 1
2019-03-18 14:37:38 -耗时 : 172
2019-03-18 14:37:38 -返回值 : com.bootdo.common.utils.PageUtils@7050aa9e
2019-03-18 14:37:40 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:37:40 -HTTP METHOD : GET
2019-03-18 14:37:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:37:40 -参数 : []
2019-03-18 14:37:40 -耗时 : 0
2019-03-18 14:37:40 -返回值 : elec/elec/elec
2019-03-18 14:37:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:37:40 -HTTP METHOD : GET
2019-03-18 14:37:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:37:40 -参数 : [userType]
2019-03-18 14:37:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:37:40 -==> Parameters: userType(String)
2019-03-18 14:37:40 -<==      Total: 2
2019-03-18 14:37:40 -耗时 : 5
2019-03-18 14:37:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:37:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:37:40 -HTTP METHOD : GET
2019-03-18 14:37:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:37:40 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@69708cd2]
2019-03-18 14:37:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:37:40 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:37:40 -<==      Total: 3
2019-03-18 14:37:40 -==>  Preparing: select count(*) from elec 
2019-03-18 14:37:40 -==> Parameters: 
2019-03-18 14:37:40 -<==      Total: 1
2019-03-18 14:37:40 -耗时 : 30
2019-03-18 14:37:40 -返回值 : com.bootdo.common.utils.PageUtils@5201bfdb
2019-03-18 14:37:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:37:51 -HTTP METHOD : GET
2019-03-18 14:37:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:37:51 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@3d674f0e]
2019-03-18 14:37:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:37:51 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:37:51 -<==      Total: 3
2019-03-18 14:37:51 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:37:51 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:37:51 -<==      Total: 1
2019-03-18 14:37:51 -耗时 : 84
2019-03-18 14:37:51 -返回值 : com.bootdo.common.utils.PageUtils@363ff48c
2019-03-18 14:37:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:37:52 -HTTP METHOD : GET
2019-03-18 14:37:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:37:52 -参数 : []
2019-03-18 14:37:52 -耗时 : 1
2019-03-18 14:37:52 -返回值 : system/dept/deptTree
2019-03-18 14:37:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:37:52 -HTTP METHOD : GET
2019-03-18 14:37:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:37:52 -参数 : []
2019-03-18 14:37:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:37:52 -==> Parameters: 
2019-03-18 14:37:52 -<==      Total: 3
2019-03-18 14:37:52 -耗时 : 2
2019-03-18 14:37:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:37:55 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:37:55 -HTTP METHOD : GET
2019-03-18 14:37:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:37:55 -参数 : [com.bootdo.elec.vo.ElecVo@6fb8d435, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5f4ad5a2]
2019-03-18 14:37:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:37:55 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:37:55 -<==      Total: 6
2019-03-18 14:37:55 -耗时 : 37
2019-03-18 14:37:55 -返回值 : null
2019-03-18 14:41:48 -请求地址 : http://localhost:8081/index
2019-03-18 14:41:48 -HTTP METHOD : GET
2019-03-18 14:41:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:41:48 -参数 : [{}]
2019-03-18 14:41:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:41:48 -==> Parameters: 1(Long)
2019-03-18 14:41:48 -<==      Total: 45
2019-03-18 14:41:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:41:48 -==> Parameters: 138(Long)
2019-03-18 14:41:48 -<==      Total: 1
2019-03-18 14:41:48 -耗时 : 35
2019-03-18 14:41:48 -返回值 : index_v1
2019-03-18 14:41:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:41:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:41:48.138(Timestamp)
2019-03-18 14:41:48 -<==    Updates: 1
2019-03-18 14:41:48 -请求地址 : http://localhost:8081/main
2019-03-18 14:41:48 -HTTP METHOD : GET
2019-03-18 14:41:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:41:48 -参数 : []
2019-03-18 14:41:48 -耗时 : 1
2019-03-18 14:41:48 -返回值 : main
2019-03-18 14:41:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:41:49 -HTTP METHOD : GET
2019-03-18 14:41:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:41:49 -参数 : []
2019-03-18 14:41:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:41:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:41:49 -<==      Total: 0
2019-03-18 14:41:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:41:49 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:41:49 -<==      Total: 1
2019-03-18 14:41:49 -耗时 : 7
2019-03-18 14:41:49 -返回值 : com.bootdo.common.utils.PageUtils@39c13f6b
2019-03-18 14:41:49 -请求地址 : http://localhost:8081/main
2019-03-18 14:41:49 -HTTP METHOD : GET
2019-03-18 14:41:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:41:49 -参数 : []
2019-03-18 14:41:49 -耗时 : 1
2019-03-18 14:41:49 -返回值 : main
2019-03-18 14:41:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 14:41:51 -==> Parameters: 1(Long)
2019-03-18 14:41:51 -<==      Total: 86
2019-03-18 14:41:51 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:41:51 -HTTP METHOD : GET
2019-03-18 14:41:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:41:51 -参数 : []
2019-03-18 14:41:51 -耗时 : 0
2019-03-18 14:41:51 -返回值 : elec/elec/elec
2019-03-18 14:41:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:41:51 -HTTP METHOD : GET
2019-03-18 14:41:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:41:51 -参数 : [userType]
2019-03-18 14:41:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:41:51 -==> Parameters: userType(String)
2019-03-18 14:41:51 -<==      Total: 2
2019-03-18 14:41:51 -耗时 : 4
2019-03-18 14:41:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:41:52 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:41:52 -HTTP METHOD : GET
2019-03-18 14:41:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:41:52 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@4c534ded]
2019-03-18 14:41:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:41:52 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:41:52 -<==      Total: 3
2019-03-18 14:41:52 -==>  Preparing: select count(*) from elec 
2019-03-18 14:41:52 -==> Parameters: 
2019-03-18 14:41:52 -<==      Total: 1
2019-03-18 14:41:52 -耗时 : 9
2019-03-18 14:41:52 -返回值 : com.bootdo.common.utils.PageUtils@709c59e6
2019-03-18 14:42:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:42:00 -HTTP METHOD : GET
2019-03-18 14:42:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:42:00 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@2214ffcb]
2019-03-18 14:42:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:42:00 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:42:00 -<==      Total: 3
2019-03-18 14:42:00 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:42:00 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:42:00 -<==      Total: 1
2019-03-18 14:42:00 -耗时 : 12
2019-03-18 14:42:00 -返回值 : com.bootdo.common.utils.PageUtils@386f1a3d
2019-03-18 14:42:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:42:01 -HTTP METHOD : GET
2019-03-18 14:42:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:42:01 -参数 : []
2019-03-18 14:42:01 -耗时 : 0
2019-03-18 14:42:01 -返回值 : system/dept/deptTree
2019-03-18 14:42:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:42:01 -HTTP METHOD : GET
2019-03-18 14:42:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:42:01 -参数 : []
2019-03-18 14:42:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:42:01 -==> Parameters: 
2019-03-18 14:42:01 -<==      Total: 3
2019-03-18 14:42:01 -耗时 : 3
2019-03-18 14:42:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:42:04 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:42:04 -HTTP METHOD : GET
2019-03-18 14:42:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:42:04 -参数 : [com.bootdo.elec.vo.ElecVo@37cd1983, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3848be31]
2019-03-18 14:42:41 -请求地址 : http://localhost:8081/index
2019-03-18 14:42:41 -HTTP METHOD : GET
2019-03-18 14:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:42:41 -参数 : [{}]
2019-03-18 14:42:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:42:41 -==> Parameters: 1(Long)
2019-03-18 14:42:41 -<==      Total: 45
2019-03-18 14:42:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:42:41 -==> Parameters: 138(Long)
2019-03-18 14:42:41 -<==      Total: 1
2019-03-18 14:42:41 -耗时 : 45
2019-03-18 14:42:41 -返回值 : index_v1
2019-03-18 14:42:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:42:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:42:41.69(Timestamp)
2019-03-18 14:42:41 -<==    Updates: 1
2019-03-18 14:42:41 -请求地址 : http://localhost:8081/main
2019-03-18 14:42:41 -HTTP METHOD : GET
2019-03-18 14:42:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:42:41 -参数 : []
2019-03-18 14:42:41 -耗时 : 0
2019-03-18 14:42:41 -返回值 : main
2019-03-18 14:42:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:42:42 -HTTP METHOD : GET
2019-03-18 14:42:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:42:42 -参数 : []
2019-03-18 14:42:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:42:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:42:42 -<==      Total: 0
2019-03-18 14:42:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:42:42 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:42:42 -<==      Total: 1
2019-03-18 14:42:42 -耗时 : 43
2019-03-18 14:42:42 -返回值 : com.bootdo.common.utils.PageUtils@3d8efbbc
2019-03-18 14:42:42 -请求地址 : http://localhost:8081/main
2019-03-18 14:42:42 -HTTP METHOD : GET
2019-03-18 14:42:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:42:42 -参数 : []
2019-03-18 14:42:42 -耗时 : 2
2019-03-18 14:42:42 -返回值 : main
2019-03-18 14:42:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:42:44 -HTTP METHOD : GET
2019-03-18 14:42:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:42:44 -参数 : []
2019-03-18 14:42:44 -耗时 : 0
2019-03-18 14:42:44 -返回值 : elec/elec/elec
2019-03-18 14:42:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:42:44 -HTTP METHOD : GET
2019-03-18 14:42:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:42:44 -参数 : [userType]
2019-03-18 14:42:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:42:44 -==> Parameters: userType(String)
2019-03-18 14:42:44 -<==      Total: 2
2019-03-18 14:42:44 -耗时 : 4
2019-03-18 14:42:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:42:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:42:44 -HTTP METHOD : GET
2019-03-18 14:42:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:42:44 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@366f94af]
2019-03-18 14:42:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:42:44 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:42:44 -<==      Total: 3
2019-03-18 14:42:44 -==>  Preparing: select count(*) from elec 
2019-03-18 14:42:44 -==> Parameters: 
2019-03-18 14:42:44 -<==      Total: 1
2019-03-18 14:42:44 -耗时 : 15
2019-03-18 14:42:44 -返回值 : com.bootdo.common.utils.PageUtils@2774a8ac
2019-03-18 14:42:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:42:49 -HTTP METHOD : GET
2019-03-18 14:42:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:42:49 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@34b92b3]
2019-03-18 14:42:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:42:49 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:42:49 -<==      Total: 3
2019-03-18 14:42:49 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:42:49 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:42:49 -<==      Total: 1
2019-03-18 14:42:49 -耗时 : 5
2019-03-18 14:42:49 -返回值 : com.bootdo.common.utils.PageUtils@42a6ccd9
2019-03-18 14:42:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:42:49 -HTTP METHOD : GET
2019-03-18 14:42:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:42:49 -参数 : []
2019-03-18 14:42:49 -耗时 : 1
2019-03-18 14:42:49 -返回值 : system/dept/deptTree
2019-03-18 14:42:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:42:49 -HTTP METHOD : GET
2019-03-18 14:42:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:42:49 -参数 : []
2019-03-18 14:42:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:42:49 -==> Parameters: 
2019-03-18 14:42:49 -<==      Total: 3
2019-03-18 14:42:49 -耗时 : 4
2019-03-18 14:42:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:42:51 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:42:51 -HTTP METHOD : GET
2019-03-18 14:42:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:42:51 -参数 : [com.bootdo.elec.vo.ElecVo@67a95266, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64e825ba]
2019-03-18 14:42:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:42:51 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:42:51 -<==      Total: 6
2019-03-18 14:42:51 -耗时 : 8
2019-03-18 14:42:51 -返回值 : null
2019-03-18 14:44:38 -请求地址 : http://localhost:8081/index
2019-03-18 14:44:38 -HTTP METHOD : GET
2019-03-18 14:44:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:44:38 -参数 : [{}]
2019-03-18 14:44:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:44:38 -==> Parameters: 1(Long)
2019-03-18 14:44:38 -<==      Total: 45
2019-03-18 14:44:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:44:38 -==> Parameters: 138(Long)
2019-03-18 14:44:39 -<==      Total: 1
2019-03-18 14:44:39 -耗时 : 153
2019-03-18 14:44:39 -返回值 : index_v1
2019-03-18 14:44:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:44:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 153(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:44:39.049(Timestamp)
2019-03-18 14:44:39 -请求地址 : http://localhost:8081/main
2019-03-18 14:44:39 -HTTP METHOD : GET
2019-03-18 14:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:44:39 -参数 : []
2019-03-18 14:44:39 -耗时 : 0
2019-03-18 14:44:39 -返回值 : main
2019-03-18 14:44:39 -<==    Updates: 1
2019-03-18 14:44:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:44:39 -HTTP METHOD : GET
2019-03-18 14:44:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:44:39 -参数 : []
2019-03-18 14:44:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:44:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:44:39 -<==      Total: 0
2019-03-18 14:44:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:44:39 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:44:39 -<==      Total: 1
2019-03-18 14:44:39 -耗时 : 7
2019-03-18 14:44:39 -返回值 : com.bootdo.common.utils.PageUtils@58f90dd4
2019-03-18 14:44:39 -请求地址 : http://localhost:8081/main
2019-03-18 14:44:39 -HTTP METHOD : GET
2019-03-18 14:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:44:39 -参数 : []
2019-03-18 14:44:39 -耗时 : 1
2019-03-18 14:44:39 -返回值 : main
2019-03-18 14:44:45 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:44:45 -HTTP METHOD : GET
2019-03-18 14:44:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:44:45 -参数 : []
2019-03-18 14:44:45 -耗时 : 0
2019-03-18 14:44:45 -返回值 : elec/elec/elec
2019-03-18 14:44:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:44:45 -HTTP METHOD : GET
2019-03-18 14:44:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:44:45 -参数 : [userType]
2019-03-18 14:44:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:44:45 -==> Parameters: userType(String)
2019-03-18 14:44:45 -<==      Total: 2
2019-03-18 14:44:45 -耗时 : 4
2019-03-18 14:44:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:44:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:44:46 -HTTP METHOD : GET
2019-03-18 14:44:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:44:46 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@182c1fe4]
2019-03-18 14:44:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:44:46 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:44:46 -<==      Total: 3
2019-03-18 14:44:46 -==>  Preparing: select count(*) from elec 
2019-03-18 14:44:46 -==> Parameters: 
2019-03-18 14:44:46 -<==      Total: 1
2019-03-18 14:44:46 -耗时 : 5
2019-03-18 14:44:46 -返回值 : com.bootdo.common.utils.PageUtils@11864432
2019-03-18 14:44:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:44:51 -HTTP METHOD : GET
2019-03-18 14:44:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:44:51 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@2fd60b38]
2019-03-18 14:44:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:44:51 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:44:51 -<==      Total: 3
2019-03-18 14:44:51 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:44:51 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:44:51 -<==      Total: 1
2019-03-18 14:44:51 -耗时 : 21
2019-03-18 14:44:51 -返回值 : com.bootdo.common.utils.PageUtils@7c82fa20
2019-03-18 14:44:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:44:51 -HTTP METHOD : GET
2019-03-18 14:44:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:44:51 -参数 : []
2019-03-18 14:44:51 -耗时 : 3
2019-03-18 14:44:51 -返回值 : system/dept/deptTree
2019-03-18 14:44:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:44:52 -HTTP METHOD : GET
2019-03-18 14:44:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:44:52 -参数 : []
2019-03-18 14:44:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:44:52 -==> Parameters: 
2019-03-18 14:44:52 -<==      Total: 3
2019-03-18 14:44:52 -耗时 : 3
2019-03-18 14:44:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:44:53 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:44:53 -HTTP METHOD : GET
2019-03-18 14:44:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:44:53 -参数 : [com.bootdo.elec.vo.ElecVo@3f4acfc7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c19d403]
2019-03-18 14:44:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:44:53 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:44:53 -<==      Total: 6
2019-03-18 14:44:53 -耗时 : 75
2019-03-18 14:44:53 -返回值 : null
2019-03-18 14:46:04 -请求地址 : http://localhost:8081/index
2019-03-18 14:46:04 -HTTP METHOD : GET
2019-03-18 14:46:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:46:04 -参数 : [{}]
2019-03-18 14:46:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:46:04 -==> Parameters: 1(Long)
2019-03-18 14:46:04 -<==      Total: 45
2019-03-18 14:46:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:46:04 -==> Parameters: 138(Long)
2019-03-18 14:46:04 -<==      Total: 1
2019-03-18 14:46:04 -耗时 : 44
2019-03-18 14:46:04 -返回值 : index_v1
2019-03-18 14:46:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:46:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 44(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:46:04.237(Timestamp)
2019-03-18 14:46:04 -<==    Updates: 1
2019-03-18 14:46:04 -请求地址 : http://localhost:8081/main
2019-03-18 14:46:04 -HTTP METHOD : GET
2019-03-18 14:46:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:46:04 -参数 : []
2019-03-18 14:46:04 -耗时 : 0
2019-03-18 14:46:04 -返回值 : main
2019-03-18 14:46:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:46:05 -HTTP METHOD : GET
2019-03-18 14:46:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:46:05 -参数 : []
2019-03-18 14:46:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:46:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:46:05 -<==      Total: 0
2019-03-18 14:46:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:46:05 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:46:05 -<==      Total: 1
2019-03-18 14:46:05 -耗时 : 11
2019-03-18 14:46:05 -返回值 : com.bootdo.common.utils.PageUtils@3cc56333
2019-03-18 14:46:05 -请求地址 : http://localhost:8081/main
2019-03-18 14:46:05 -HTTP METHOD : GET
2019-03-18 14:46:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:46:05 -参数 : []
2019-03-18 14:46:05 -耗时 : 0
2019-03-18 14:46:05 -返回值 : main
2019-03-18 14:46:06 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:46:06 -HTTP METHOD : GET
2019-03-18 14:46:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:46:06 -参数 : []
2019-03-18 14:46:06 -耗时 : 1
2019-03-18 14:46:06 -返回值 : elec/elec/elec
2019-03-18 14:46:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:46:07 -HTTP METHOD : GET
2019-03-18 14:46:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:46:07 -参数 : [userType]
2019-03-18 14:46:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:46:07 -==> Parameters: userType(String)
2019-03-18 14:46:07 -<==      Total: 2
2019-03-18 14:46:07 -耗时 : 4
2019-03-18 14:46:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:46:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:46:07 -HTTP METHOD : GET
2019-03-18 14:46:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:46:07 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@76d17711]
2019-03-18 14:46:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:46:07 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:46:07 -<==      Total: 3
2019-03-18 14:46:07 -==>  Preparing: select count(*) from elec 
2019-03-18 14:46:07 -==> Parameters: 
2019-03-18 14:46:07 -<==      Total: 1
2019-03-18 14:46:07 -耗时 : 7
2019-03-18 14:46:07 -返回值 : com.bootdo.common.utils.PageUtils@2c37c967
2019-03-18 14:46:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:46:13 -HTTP METHOD : GET
2019-03-18 14:46:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:46:13 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@10ac8f49]
2019-03-18 14:46:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:46:13 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:46:13 -<==      Total: 3
2019-03-18 14:46:13 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:46:13 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:46:13 -<==      Total: 1
2019-03-18 14:46:13 -耗时 : 13
2019-03-18 14:46:13 -返回值 : com.bootdo.common.utils.PageUtils@661593f0
2019-03-18 14:46:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:46:14 -HTTP METHOD : GET
2019-03-18 14:46:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:46:14 -参数 : []
2019-03-18 14:46:14 -耗时 : 0
2019-03-18 14:46:14 -返回值 : system/dept/deptTree
2019-03-18 14:46:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:46:14 -HTTP METHOD : GET
2019-03-18 14:46:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:46:14 -参数 : []
2019-03-18 14:46:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:46:14 -==> Parameters: 
2019-03-18 14:46:14 -<==      Total: 3
2019-03-18 14:46:14 -耗时 : 3
2019-03-18 14:46:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:46:17 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:46:17 -HTTP METHOD : GET
2019-03-18 14:46:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:46:17 -参数 : [com.bootdo.elec.vo.ElecVo@6a5832b0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ea0293a]
2019-03-18 14:46:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:46:17 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:46:17 -<==      Total: 6
2019-03-18 14:46:17 -耗时 : 75
2019-03-18 14:46:17 -返回值 : null
2019-03-18 14:49:15 -请求地址 : http://localhost:8081/index
2019-03-18 14:49:15 -HTTP METHOD : GET
2019-03-18 14:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:49:15 -参数 : [{}]
2019-03-18 14:49:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:49:15 -==> Parameters: 1(Long)
2019-03-18 14:49:15 -<==      Total: 45
2019-03-18 14:49:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:49:15 -==> Parameters: 138(Long)
2019-03-18 14:49:15 -<==      Total: 1
2019-03-18 14:49:15 -耗时 : 18
2019-03-18 14:49:15 -返回值 : index_v1
2019-03-18 14:49:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:49:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:49:15.947(Timestamp)
2019-03-18 14:49:16 -<==    Updates: 1
2019-03-18 14:49:16 -请求地址 : http://localhost:8081/main
2019-03-18 14:49:16 -HTTP METHOD : GET
2019-03-18 14:49:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:49:16 -参数 : []
2019-03-18 14:49:16 -耗时 : 0
2019-03-18 14:49:16 -返回值 : main
2019-03-18 14:49:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:49:16 -HTTP METHOD : GET
2019-03-18 14:49:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:49:16 -参数 : []
2019-03-18 14:49:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:49:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:49:16 -<==      Total: 0
2019-03-18 14:49:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:49:16 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:49:16 -<==      Total: 1
2019-03-18 14:49:16 -耗时 : 33
2019-03-18 14:49:16 -返回值 : com.bootdo.common.utils.PageUtils@63711795
2019-03-18 14:49:16 -请求地址 : http://localhost:8081/main
2019-03-18 14:49:16 -HTTP METHOD : GET
2019-03-18 14:49:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:49:16 -参数 : []
2019-03-18 14:49:16 -耗时 : 1
2019-03-18 14:49:16 -返回值 : main
2019-03-18 14:49:21 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:49:21 -HTTP METHOD : GET
2019-03-18 14:49:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:49:21 -参数 : []
2019-03-18 14:49:21 -耗时 : 0
2019-03-18 14:49:21 -返回值 : elec/elec/elec
2019-03-18 14:49:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:49:21 -HTTP METHOD : GET
2019-03-18 14:49:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:49:21 -参数 : [userType]
2019-03-18 14:49:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:49:21 -==> Parameters: userType(String)
2019-03-18 14:49:21 -<==      Total: 2
2019-03-18 14:49:21 -耗时 : 24
2019-03-18 14:49:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:49:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:49:21 -HTTP METHOD : GET
2019-03-18 14:49:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:49:21 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@79581d03]
2019-03-18 14:49:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:49:21 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:49:21 -<==      Total: 3
2019-03-18 14:49:21 -==>  Preparing: select count(*) from elec 
2019-03-18 14:49:21 -==> Parameters: 
2019-03-18 14:49:21 -<==      Total: 1
2019-03-18 14:49:21 -耗时 : 7
2019-03-18 14:49:21 -返回值 : com.bootdo.common.utils.PageUtils@64f18305
2019-03-18 14:49:25 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:49:25 -HTTP METHOD : GET
2019-03-18 14:49:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:49:25 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@7fccd541]
2019-03-18 14:49:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:49:25 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:49:25 -<==      Total: 3
2019-03-18 14:49:25 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:49:25 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:49:25 -<==      Total: 1
2019-03-18 14:49:25 -耗时 : 14
2019-03-18 14:49:25 -返回值 : com.bootdo.common.utils.PageUtils@2d6c8122
2019-03-18 14:49:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:49:26 -HTTP METHOD : GET
2019-03-18 14:49:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:49:26 -参数 : []
2019-03-18 14:49:26 -耗时 : 1
2019-03-18 14:49:26 -返回值 : system/dept/deptTree
2019-03-18 14:49:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:49:26 -HTTP METHOD : GET
2019-03-18 14:49:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:49:26 -参数 : []
2019-03-18 14:49:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:49:26 -==> Parameters: 
2019-03-18 14:49:26 -<==      Total: 3
2019-03-18 14:49:26 -耗时 : 15
2019-03-18 14:49:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:49:28 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:49:28 -HTTP METHOD : GET
2019-03-18 14:49:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:49:28 -参数 : [com.bootdo.elec.vo.ElecVo@6ca0a5c0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3276763b]
2019-03-18 14:49:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:49:28 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:49:28 -<==      Total: 6
2019-03-18 14:49:28 -耗时 : 19
2019-03-18 14:49:28 -返回值 : null
2019-03-18 14:50:17 -请求地址 : http://localhost:8081/index
2019-03-18 14:50:17 -HTTP METHOD : GET
2019-03-18 14:50:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:50:17 -参数 : [{}]
2019-03-18 14:50:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:50:17 -==> Parameters: 1(Long)
2019-03-18 14:50:17 -<==      Total: 45
2019-03-18 14:50:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:50:17 -==> Parameters: 138(Long)
2019-03-18 14:50:17 -<==      Total: 1
2019-03-18 14:50:17 -耗时 : 47
2019-03-18 14:50:17 -返回值 : index_v1
2019-03-18 14:50:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:50:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:50:17.681(Timestamp)
2019-03-18 14:50:17 -<==    Updates: 1
2019-03-18 14:50:17 -请求地址 : http://localhost:8081/main
2019-03-18 14:50:17 -HTTP METHOD : GET
2019-03-18 14:50:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:50:17 -参数 : []
2019-03-18 14:50:17 -耗时 : 1
2019-03-18 14:50:17 -返回值 : main
2019-03-18 14:50:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:50:18 -HTTP METHOD : GET
2019-03-18 14:50:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:50:18 -参数 : []
2019-03-18 14:50:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:50:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:50:18 -<==      Total: 0
2019-03-18 14:50:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:50:18 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:50:18 -<==      Total: 1
2019-03-18 14:50:18 -耗时 : 8
2019-03-18 14:50:18 -返回值 : com.bootdo.common.utils.PageUtils@e44cd1d
2019-03-18 14:50:18 -请求地址 : http://localhost:8081/main
2019-03-18 14:50:18 -HTTP METHOD : GET
2019-03-18 14:50:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:50:18 -参数 : []
2019-03-18 14:50:18 -耗时 : 1
2019-03-18 14:50:18 -返回值 : main
2019-03-18 14:50:19 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:50:19 -HTTP METHOD : GET
2019-03-18 14:50:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:50:19 -参数 : []
2019-03-18 14:50:19 -耗时 : 1
2019-03-18 14:50:19 -返回值 : elec/elec/elec
2019-03-18 14:50:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:50:20 -HTTP METHOD : GET
2019-03-18 14:50:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:50:20 -参数 : [userType]
2019-03-18 14:50:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:50:20 -==> Parameters: userType(String)
2019-03-18 14:50:20 -<==      Total: 2
2019-03-18 14:50:20 -耗时 : 4
2019-03-18 14:50:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:50:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:50:20 -HTTP METHOD : GET
2019-03-18 14:50:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:50:20 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@3f5689d5]
2019-03-18 14:50:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:50:20 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:50:20 -<==      Total: 3
2019-03-18 14:50:20 -==>  Preparing: select count(*) from elec 
2019-03-18 14:50:20 -==> Parameters: 
2019-03-18 14:50:20 -<==      Total: 1
2019-03-18 14:50:20 -耗时 : 27
2019-03-18 14:50:20 -返回值 : com.bootdo.common.utils.PageUtils@b8cc7e2
2019-03-18 14:50:25 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:50:25 -HTTP METHOD : GET
2019-03-18 14:50:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:50:25 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@7308c98d]
2019-03-18 14:50:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:50:25 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:50:25 -<==      Total: 3
2019-03-18 14:50:25 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:50:25 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:50:25 -<==      Total: 1
2019-03-18 14:50:25 -耗时 : 15
2019-03-18 14:50:25 -返回值 : com.bootdo.common.utils.PageUtils@570f3b5d
2019-03-18 14:50:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:50:26 -HTTP METHOD : GET
2019-03-18 14:50:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:50:26 -参数 : []
2019-03-18 14:50:26 -耗时 : 1
2019-03-18 14:50:26 -返回值 : system/dept/deptTree
2019-03-18 14:50:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:50:26 -HTTP METHOD : GET
2019-03-18 14:50:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:50:26 -参数 : []
2019-03-18 14:50:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:50:26 -==> Parameters: 
2019-03-18 14:50:26 -<==      Total: 3
2019-03-18 14:50:26 -耗时 : 3
2019-03-18 14:50:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:50:29 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:50:29 -HTTP METHOD : GET
2019-03-18 14:50:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:50:29 -参数 : [com.bootdo.elec.vo.ElecVo@37146fae, org.apache.shiro.web.servlet.ShiroHttpServletResponse@54da82cc]
2019-03-18 14:50:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:50:29 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:50:29 -<==      Total: 6
2019-03-18 14:50:29 -耗时 : 56
2019-03-18 14:50:29 -返回值 : null
2019-03-18 14:51:14 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:51:14 -HTTP METHOD : GET
2019-03-18 14:51:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:51:14 -参数 : [com.bootdo.elec.vo.ElecVo@55255783, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5dc53a7c]
2019-03-18 14:51:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 14:51:14 -==> Parameters: A(String), 2(Long), 2019-03(String)
2019-03-18 14:51:14 -<==      Total: 6
2019-03-18 14:51:14 -耗时 : 27
2019-03-18 14:51:14 -返回值 : null
2019-03-18 14:56:07 -请求地址 : http://localhost:8081/index
2019-03-18 14:56:07 -HTTP METHOD : GET
2019-03-18 14:56:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 14:56:07 -参数 : [{}]
2019-03-18 14:56:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 14:56:07 -==> Parameters: 1(Long)
2019-03-18 14:56:07 -<==      Total: 45
2019-03-18 14:56:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 14:56:07 -==> Parameters: 138(Long)
2019-03-18 14:56:07 -<==      Total: 1
2019-03-18 14:56:07 -耗时 : 28
2019-03-18 14:56:07 -返回值 : index_v1
2019-03-18 14:56:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:56:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 14:56:07.512(Timestamp)
2019-03-18 14:56:07 -<==    Updates: 1
2019-03-18 14:56:07 -请求地址 : http://localhost:8081/main
2019-03-18 14:56:07 -HTTP METHOD : GET
2019-03-18 14:56:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:56:07 -参数 : []
2019-03-18 14:56:07 -耗时 : 1
2019-03-18 14:56:07 -返回值 : main
2019-03-18 14:56:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 14:56:08 -HTTP METHOD : GET
2019-03-18 14:56:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 14:56:08 -参数 : []
2019-03-18 14:56:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 14:56:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 14:56:08 -<==      Total: 0
2019-03-18 14:56:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 14:56:08 -==> Parameters: 1(Long), 0(String)
2019-03-18 14:56:08 -<==      Total: 1
2019-03-18 14:56:08 -耗时 : 8
2019-03-18 14:56:08 -返回值 : com.bootdo.common.utils.PageUtils@767d82e5
2019-03-18 14:56:08 -请求地址 : http://localhost:8081/main
2019-03-18 14:56:08 -HTTP METHOD : GET
2019-03-18 14:56:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 14:56:08 -参数 : []
2019-03-18 14:56:08 -耗时 : 2
2019-03-18 14:56:08 -返回值 : main
2019-03-18 14:56:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 14:56:13 -==> Parameters: 1(Long)
2019-03-18 14:56:13 -<==      Total: 86
2019-03-18 14:56:13 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 14:56:13 -HTTP METHOD : GET
2019-03-18 14:56:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 14:56:13 -参数 : []
2019-03-18 14:56:13 -耗时 : 1
2019-03-18 14:56:13 -返回值 : elec/elec/elec
2019-03-18 14:56:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 14:56:13 -HTTP METHOD : GET
2019-03-18 14:56:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 14:56:13 -参数 : [userType]
2019-03-18 14:56:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 14:56:13 -==> Parameters: userType(String)
2019-03-18 14:56:13 -<==      Total: 2
2019-03-18 14:56:13 -耗时 : 5
2019-03-18 14:56:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 14:56:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:56:13 -HTTP METHOD : GET
2019-03-18 14:56:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:56:13 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@22efd2e]
2019-03-18 14:56:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 14:56:13 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 14:56:13 -<==      Total: 3
2019-03-18 14:56:13 -==>  Preparing: select count(*) from elec 
2019-03-18 14:56:13 -==> Parameters: 
2019-03-18 14:56:13 -<==      Total: 1
2019-03-18 14:56:13 -耗时 : 29
2019-03-18 14:56:13 -返回值 : com.bootdo.common.utils.PageUtils@6e25ca90
2019-03-18 14:56:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 14:56:18 -HTTP METHOD : GET
2019-03-18 14:56:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 14:56:18 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@1b979df7]
2019-03-18 14:56:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 14:56:18 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 14:56:18 -<==      Total: 3
2019-03-18 14:56:18 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 14:56:18 -==> Parameters: A(String), 2019-03(String)
2019-03-18 14:56:18 -<==      Total: 1
2019-03-18 14:56:18 -耗时 : 16
2019-03-18 14:56:18 -返回值 : com.bootdo.common.utils.PageUtils@4d34a408
2019-03-18 14:56:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 14:56:19 -HTTP METHOD : GET
2019-03-18 14:56:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 14:56:19 -参数 : []
2019-03-18 14:56:19 -耗时 : 1
2019-03-18 14:56:19 -返回值 : system/dept/deptTree
2019-03-18 14:56:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 14:56:20 -HTTP METHOD : GET
2019-03-18 14:56:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 14:56:20 -参数 : []
2019-03-18 14:56:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 14:56:20 -==> Parameters: 
2019-03-18 14:56:20 -<==      Total: 3
2019-03-18 14:56:20 -耗时 : 33
2019-03-18 14:56:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 14:56:22 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 14:56:22 -HTTP METHOD : GET
2019-03-18 14:56:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 14:56:22 -参数 : [com.bootdo.elec.vo.ElecVo@11f0a22e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@741133c1]
2019-03-18 14:56:22 -Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.elec.vo.ElecVo.getUserOrg()Ljava/lang/String;
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.elec.vo.ElecVo.getUserOrg()Ljava/lang/String;
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1006)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NoSuchMethodError: com.bootdo.elec.vo.ElecVo.getUserOrg()Ljava/lang/String;
	at com.bootdo.elec.controller.ElecController.exprotExcel(ElecController.java:74)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$c54337ff.exprotExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	... 60 common frames omitted
2019-03-18 14:56:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 14:56:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/exprotElec(String), org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: com.bootdo.elec.vo.ElecVo.getUserOrg()Ljava/lang/String;(String), null, 2019-03-18 14:56:22.625(Timestamp)
2019-03-18 14:56:22 -<==    Updates: 1
2019-03-18 15:01:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 4992 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 15:01:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 15:01:54 -The following profiles are active: dev
2019-03-18 15:01:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 18 15:01:54 CST 2019]; root of context hierarchy
2019-03-18 15:01:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 15:02:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a444ac5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$969ddb01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 15:02:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 15:02:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 15:02:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 15:02:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 15:02:09 -Starting service [Tomcat]
2019-03-18 15:02:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 15:02:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 15:02:10 -Initializing Spring embedded WebApplicationContext
2019-03-18 15:02:10 -Root WebApplicationContext: initialization completed in 15714 ms
2019-03-18 15:02:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 15:02:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 15:02:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 15:02:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 15:02:11 -Filter xssFilter was not registered (disabled)
2019-03-18 15:02:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 15:02:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 15:02:11 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 15:02:11 -Servlet dispatcherServlet mapped to [/]
2019-03-18 15:02:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 18 15:01:54 CST 2019]; root of context hierarchy
2019-03-18 15:02:17 -Using default implementation for ThreadExecutor
2019-03-18 15:02:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 15:02:17 -Quartz Scheduler v.2.2.1 created.
2019-03-18 15:02:17 -RAMJobStore initialized.
2019-03-18 15:02:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 15:02:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 15:02:17 -Quartz scheduler version: 2.2.1
2019-03-18 15:02:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60ee7a51
2019-03-18 15:02:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 15:02:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 15:02:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 15:02:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 15:02:22 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 15:02:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 15:02:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 15:02:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 15:02:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 15:02:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 15:02:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 15:02:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 15:02:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 15:02:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 15:02:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 15:02:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 15:02:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 15:02:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 15:02:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 15:02:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 15:02:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 15:02:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 15:02:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 15:02:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 15:02:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 15:02:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 15:02:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 15:02:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 15:02:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 15:02:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 15:02:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 15:02:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 15:02:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-18 15:02:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 15:02:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 15:02:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 15:02:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 15:02:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 15:02:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 15:02:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 15:02:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 15:02:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 15:02:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 15:02:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 15:02:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 15:02:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 15:02:22 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 15:02:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 15:02:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 15:02:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 15:02:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 15:02:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 15:02:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 15:02:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 15:02:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 15:02:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 15:02:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 15:02:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 15:02:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 15:02:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 15:02:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 15:02:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 15:02:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 15:02:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 15:02:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 15:02:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 15:02:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 15:02:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 15:02:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 15:02:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 15:02:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 15:02:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 15:02:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 15:02:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 15:02:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 15:02:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 15:02:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 15:02:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 15:02:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 15:02:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 15:02:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 15:02:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 15:02:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 15:02:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 15:02:22 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 15:02:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 15:02:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 15:02:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 15:02:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 15:02:22 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 15:02:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 15:02:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 15:02:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 15:02:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 15:02:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 15:02:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 15:02:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 15:02:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 15:02:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 18 15:01:54 CST 2019]; root of context hierarchy
2019-03-18 15:02:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 15:02:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 15:02:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 15:02:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 15:02:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 15:02:32 -Registering beans for JMX exposure on startup
2019-03-18 15:02:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 15:02:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 15:02:33 -Starting beans in phase 2147483647
2019-03-18 15:02:33 -Context refreshed
2019-03-18 15:02:35 -Found 1 custom documentation plugin(s)
2019-03-18 15:02:36 -Scanning for api listing references
2019-03-18 15:02:36 -Generating unique operation named: removeUsingPOST_1
2019-03-18 15:02:37 -Generating unique operation named: addUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: editUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: listUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_2
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_3
2019-03-18 15:02:37 -Generating unique operation named: saveUsingPOST_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPOST_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPUT_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 15:02:37 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 15:02:37 -Generating unique operation named: addUsingGET_2
2019-03-18 15:02:37 -Generating unique operation named: editUsingGET_2
2019-03-18 15:02:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: listUsingGET_2
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_4
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_5
2019-03-18 15:02:37 -Generating unique operation named: saveUsingPOST_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingGET_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPOST_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPUT_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 15:02:37 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 15:02:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 15:02:37 -Generating unique operation named: addUsingGET_3
2019-03-18 15:02:37 -Generating unique operation named: editUsingGET_3
2019-03-18 15:02:37 -Generating unique operation named: listUsingGET_3
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_6
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_7
2019-03-18 15:02:37 -Generating unique operation named: saveUsingPOST_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingGET_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPOST_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPUT_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 15:02:37 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 15:02:37 -Generating unique operation named: addUsingGET_4
2019-03-18 15:02:37 -Generating unique operation named: editUsingGET_4
2019-03-18 15:02:37 -Generating unique operation named: listUsingGET_4
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_8
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_9
2019-03-18 15:02:37 -Generating unique operation named: saveUsingPOST_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingGET_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPOST_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPUT_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 15:02:37 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 15:02:37 -Generating unique operation named: ElecUsingGET_1
2019-03-18 15:02:37 -Generating unique operation named: addUsingGET_5
2019-03-18 15:02:37 -Generating unique operation named: editUsingGET_5
2019-03-18 15:02:37 -Generating unique operation named: listUsingGET_5
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_10
2019-03-18 15:02:37 -Generating unique operation named: removeUsingPOST_11
2019-03-18 15:02:37 -Generating unique operation named: saveUsingPOST_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingGET_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPOST_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPUT_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 15:02:37 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_6
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_6
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_6
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_7
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_7
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_12
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_13
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingGET_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPUT_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 15:02:38 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 15:02:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_7
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_8
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_8
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_14
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_15
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingGET_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPUT_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 15:02:38 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_8
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_9
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_9
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_16
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_17
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingGET_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPUT_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 15:02:38 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_9
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_10
2019-03-18 15:02:38 -Generating unique operation named: infoUsingGET_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingPOST_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingPUT_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 15:02:38 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_10
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_18
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_19
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_10
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_11
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_20
2019-03-18 15:02:38 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_10
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_11
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_12
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_21
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_10
2019-03-18 15:02:38 -Generating unique operation named: treeUsingGET_1
2019-03-18 15:02:38 -Generating unique operation named: treeUsingGET_2
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_11
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_11
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_12
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_13
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_22
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_23
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_11
2019-03-18 15:02:38 -Generating unique operation named: updateUsingGET_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_12
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPUT_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 15:02:38 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_12
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_13
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_14
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_24
2019-03-18 15:02:38 -Generating unique operation named: removeUsingPOST_25
2019-03-18 15:02:38 -Generating unique operation named: saveUsingPOST_12
2019-03-18 15:02:38 -Generating unique operation named: updateUsingGET_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPOST_13
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPUT_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 15:02:38 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 15:02:38 -Generating unique operation named: addUsingGET_13
2019-03-18 15:02:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 15:02:38 -Generating unique operation named: editUsingGET_14
2019-03-18 15:02:38 -Generating unique operation named: listUsingGET_15
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_13
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_14
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPOST_14
2019-03-18 15:02:39 -Generating unique operation named: listUsingGET_16
2019-03-18 15:02:39 -Generating unique operation named: listUsingHEAD_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingPOST_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingPUT_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingPATCH_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingDELETE_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 15:02:39 -Generating unique operation named: listUsingTRACE_1
2019-03-18 15:02:39 -Generating unique operation named: addUsingGET_14
2019-03-18 15:02:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 15:02:39 -Generating unique operation named: editUsingGET_15
2019-03-18 15:02:39 -Generating unique operation named: listUsingGET_17
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_26
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_15
2019-03-18 15:02:39 -Generating unique operation named: treeUsingGET_3
2019-03-18 15:02:39 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPOST_15
2019-03-18 15:02:39 -Generating unique operation named: addUsingGET_15
2019-03-18 15:02:39 -Generating unique operation named: editUsingGET_16
2019-03-18 15:02:39 -Generating unique operation named: listUsingGET_18
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_27
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_28
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_16
2019-03-18 15:02:39 -Generating unique operation named: updateUsingGET_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPOST_16
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPUT_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 15:02:39 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 15:02:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 15:02:39 -Generating unique operation named: addUsingGET_16
2019-03-18 15:02:39 -Generating unique operation named: editUsingGET_17
2019-03-18 15:02:39 -Generating unique operation named: listUsingGET_19
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_29
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_30
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_17
2019-03-18 15:02:39 -Generating unique operation named: updateUsingGET_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPOST_17
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPUT_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 15:02:39 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 15:02:39 -Generating unique operation named: addUsingGET_17
2019-03-18 15:02:39 -Generating unique operation named: editUsingGET_18
2019-03-18 15:02:39 -Generating unique operation named: listUsingGET_20
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_31
2019-03-18 15:02:39 -Generating unique operation named: removeUsingPOST_32
2019-03-18 15:02:39 -Generating unique operation named: saveUsingPOST_18
2019-03-18 15:02:39 -Generating unique operation named: updateUsingGET_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPOST_18
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPUT_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 15:02:39 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 15:02:39 -Starting Quartz Scheduler now
2019-03-18 15:02:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 15:02:39 -Starting...
2019-03-18 15:02:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 15:02:39 -Started.
2019-03-18 15:02:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 15:02:39 -Using a shared selector for servlet write/read
2019-03-18 15:02:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 15:02:40 -Started BootdoApplication in 47.883 seconds (JVM running for 49.723)
2019-03-18 15:02:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 15:02:40 -==> Parameters: 
2019-03-18 15:02:40 -<==      Total: 1
2019-03-18 15:03:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 15:03:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 15:03:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 131 ms
2019-03-18 15:03:02 -Enabling session validation scheduler...
2019-03-18 15:03:03 -请求地址 : http://localhost:8081/
2019-03-18 15:03:03 -HTTP METHOD : GET
2019-03-18 15:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 15:03:03 -参数 : [{}]
2019-03-18 15:03:03 -耗时 : 3
2019-03-18 15:03:03 -返回值 : redirect:/index
2019-03-18 15:03:03 -请求地址 : http://localhost:8081/login;JSESSIONID=3292f3ed-e772-4a79-85f4-acf295475b1f
2019-03-18 15:03:03 -HTTP METHOD : GET
2019-03-18 15:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 15:03:03 -参数 : [{}]
2019-03-18 15:03:03 -耗时 : 0
2019-03-18 15:03:03 -返回值 : login
2019-03-18 15:03:07 -请求地址 : http://localhost:8081/getVerify
2019-03-18 15:03:07 -HTTP METHOD : GET
2019-03-18 15:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 15:03:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4dbd933d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30d40d14]
2019-03-18 15:03:11 -9757
2019-03-18 15:03:11 -耗时 : 4431
2019-03-18 15:03:11 -返回值 : null
2019-03-18 15:03:12 -请求地址 : http://localhost:8081/login
2019-03-18 15:03:12 -HTTP METHOD : GET
2019-03-18 15:03:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 15:03:12 -参数 : [{}]
2019-03-18 15:03:12 -耗时 : 0
2019-03-18 15:03:12 -返回值 : login
2019-03-18 15:03:16 -请求地址 : http://localhost:8081/login
2019-03-18 15:03:16 -HTTP METHOD : POST
2019-03-18 15:03:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 15:03:16 -参数 : [admin, 111111, 9757, org.apache.shiro.web.servlet.ShiroHttpServletRequest@d16446b]
2019-03-18 15:03:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 15:03:17 -==> Parameters: admin(String)
2019-03-18 15:03:17 -<==      Total: 1
2019-03-18 15:03:17 -耗时 : 316
2019-03-18 15:03:17 -返回值 : {msg=操作成功, code=0}
2019-03-18 15:03:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 15:03:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 15:03:17 -==> Parameters: 1(Long), admin(String), 登录(String), 317(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 15:03:17.597(Timestamp)
2019-03-18 15:03:17 -<==    Updates: 1
2019-03-18 15:03:17 -请求地址 : http://localhost:8081/index
2019-03-18 15:03:17 -HTTP METHOD : GET
2019-03-18 15:03:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 15:03:17 -参数 : [{}]
2019-03-18 15:03:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 15:03:18 -==> Parameters: 1(Long)
2019-03-18 15:03:18 -<==      Total: 45
2019-03-18 15:03:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 15:03:18 -==> Parameters: 138(Long)
2019-03-18 15:03:18 -<==      Total: 1
2019-03-18 15:03:18 -耗时 : 566
2019-03-18 15:03:18 -返回值 : index_v1
2019-03-18 15:03:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 15:03:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 566(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 15:03:18.738(Timestamp)
2019-03-18 15:03:19 -<==    Updates: 1
2019-03-18 15:03:19 -请求地址 : http://localhost:8081/main
2019-03-18 15:03:19 -HTTP METHOD : GET
2019-03-18 15:03:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:03:19 -参数 : []
2019-03-18 15:03:19 -耗时 : 0
2019-03-18 15:03:19 -返回值 : main
2019-03-18 15:03:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 15:03:22 -HTTP METHOD : GET
2019-03-18 15:03:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 15:03:22 -参数 : []
2019-03-18 15:03:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 15:03:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 15:03:22 -<==      Total: 0
2019-03-18 15:03:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 15:03:22 -==> Parameters: 1(Long), 0(String)
2019-03-18 15:03:22 -<==      Total: 1
2019-03-18 15:03:22 -耗时 : 41
2019-03-18 15:03:22 -返回值 : com.bootdo.common.utils.PageUtils@1ce9ce1f
2019-03-18 15:03:22 -请求地址 : http://localhost:8081/main
2019-03-18 15:03:22 -HTTP METHOD : GET
2019-03-18 15:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:03:22 -参数 : []
2019-03-18 15:03:22 -耗时 : 0
2019-03-18 15:03:22 -返回值 : main
2019-03-18 15:03:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 15:03:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 15:03:29 -==> Parameters: 1(Long)
2019-03-18 15:03:29 -<==      Total: 86
2019-03-18 15:03:29 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 15:03:29 -HTTP METHOD : GET
2019-03-18 15:03:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 15:03:29 -参数 : []
2019-03-18 15:03:29 -耗时 : 2
2019-03-18 15:03:29 -返回值 : elec/elec/elec
2019-03-18 15:03:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 15:03:31 -HTTP METHOD : GET
2019-03-18 15:03:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 15:03:31 -参数 : [userType]
2019-03-18 15:03:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 15:03:31 -==> Parameters: userType(String)
2019-03-18 15:03:31 -<==      Total: 2
2019-03-18 15:03:31 -耗时 : 54
2019-03-18 15:03:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 15:03:31 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:03:31 -HTTP METHOD : GET
2019-03-18 15:03:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:03:31 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@7b07c94c]
2019-03-18 15:03:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 15:03:31 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 15:03:31 -<==      Total: 3
2019-03-18 15:03:31 -==>  Preparing: select count(*) from elec 
2019-03-18 15:03:31 -==> Parameters: 
2019-03-18 15:03:31 -<==      Total: 1
2019-03-18 15:03:31 -耗时 : 41
2019-03-18 15:03:31 -返回值 : com.bootdo.common.utils.PageUtils@41760b79
2019-03-18 15:03:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:03:36 -HTTP METHOD : GET
2019-03-18 15:03:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:03:36 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@6d47f077]
2019-03-18 15:03:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 15:03:36 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 15:03:36 -<==      Total: 3
2019-03-18 15:03:36 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 15:03:36 -==> Parameters: A(String), 2019-03(String)
2019-03-18 15:03:36 -<==      Total: 1
2019-03-18 15:03:36 -耗时 : 30
2019-03-18 15:03:36 -返回值 : com.bootdo.common.utils.PageUtils@31360a69
2019-03-18 15:03:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 15:03:36 -HTTP METHOD : GET
2019-03-18 15:03:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 15:03:36 -参数 : []
2019-03-18 15:03:36 -耗时 : 0
2019-03-18 15:03:36 -返回值 : system/dept/deptTree
2019-03-18 15:03:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 15:03:37 -HTTP METHOD : GET
2019-03-18 15:03:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 15:03:37 -参数 : []
2019-03-18 15:03:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 15:03:37 -==> Parameters: 
2019-03-18 15:03:37 -<==      Total: 3
2019-03-18 15:03:37 -耗时 : 23
2019-03-18 15:03:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 15:03:39 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 15:03:39 -HTTP METHOD : GET
2019-03-18 15:03:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 15:03:39 -参数 : [com.bootdo.elec.vo.ElecVo@6923b5a0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@60eb5428]
2019-03-18 15:03:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 15:03:39 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 15:03:39 -<==      Total: 6
2019-03-18 15:03:40 -耗时 : 1459
2019-03-18 15:03:40 -返回值 : null
2019-03-18 15:27:50 -请求地址 : http://localhost:8081/index
2019-03-18 15:27:50 -HTTP METHOD : GET
2019-03-18 15:27:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 15:27:50 -参数 : [{}]
2019-03-18 15:27:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 15:27:50 -==> Parameters: 1(Long)
2019-03-18 15:27:50 -<==      Total: 45
2019-03-18 15:27:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 15:27:50 -==> Parameters: 138(Long)
2019-03-18 15:27:50 -<==      Total: 1
2019-03-18 15:27:50 -耗时 : 43
2019-03-18 15:27:50 -返回值 : index_v1
2019-03-18 15:27:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 15:27:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 15:27:50.299(Timestamp)
2019-03-18 15:27:50 -<==    Updates: 1
2019-03-18 15:27:50 -请求地址 : http://localhost:8081/main
2019-03-18 15:27:50 -HTTP METHOD : GET
2019-03-18 15:27:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:27:50 -参数 : []
2019-03-18 15:27:50 -耗时 : 1
2019-03-18 15:27:50 -返回值 : main
2019-03-18 15:27:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 15:27:51 -HTTP METHOD : GET
2019-03-18 15:27:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 15:27:51 -参数 : []
2019-03-18 15:27:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 15:27:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 15:27:51 -<==      Total: 0
2019-03-18 15:27:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 15:27:51 -==> Parameters: 1(Long), 0(String)
2019-03-18 15:27:51 -<==      Total: 1
2019-03-18 15:27:51 -耗时 : 10
2019-03-18 15:27:51 -返回值 : com.bootdo.common.utils.PageUtils@7de22774
2019-03-18 15:27:51 -请求地址 : http://localhost:8081/main
2019-03-18 15:27:51 -HTTP METHOD : GET
2019-03-18 15:27:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:27:51 -参数 : []
2019-03-18 15:27:51 -耗时 : 1
2019-03-18 15:27:51 -返回值 : main
2019-03-18 15:28:29 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 15:29:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 15:29:12 -==> Parameters: 1(Long)
2019-03-18 15:29:12 -<==      Total: 86
2019-03-18 15:29:12 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 15:29:12 -HTTP METHOD : GET
2019-03-18 15:29:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 15:29:12 -参数 : []
2019-03-18 15:29:12 -耗时 : 1
2019-03-18 15:29:12 -返回值 : elec/elec/elec
2019-03-18 15:29:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 15:29:13 -HTTP METHOD : GET
2019-03-18 15:29:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 15:29:13 -参数 : [userType]
2019-03-18 15:29:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 15:29:13 -==> Parameters: userType(String)
2019-03-18 15:29:13 -<==      Total: 2
2019-03-18 15:29:13 -耗时 : 7
2019-03-18 15:29:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 15:29:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:29:13 -HTTP METHOD : GET
2019-03-18 15:29:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:29:13 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@715f210]
2019-03-18 15:29:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 15:29:13 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 15:29:13 -<==      Total: 3
2019-03-18 15:29:13 -==>  Preparing: select count(*) from elec 
2019-03-18 15:29:13 -==> Parameters: 
2019-03-18 15:29:13 -<==      Total: 1
2019-03-18 15:29:13 -耗时 : 11
2019-03-18 15:29:13 -返回值 : com.bootdo.common.utils.PageUtils@be56fe5
2019-03-18 15:33:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-03-18 15:36:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:36:41 -HTTP METHOD : GET
2019-03-18 15:36:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:36:41 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@7523694c]
2019-03-18 15:36:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 15:36:41 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 15:36:41 -<==      Total: 3
2019-03-18 15:36:41 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 15:36:41 -==> Parameters: A(String), 2019-03(String)
2019-03-18 15:36:41 -<==      Total: 1
2019-03-18 15:36:41 -耗时 : 37
2019-03-18 15:36:41 -返回值 : com.bootdo.common.utils.PageUtils@2c9643c7
2019-03-18 15:36:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 15:36:41 -HTTP METHOD : GET
2019-03-18 15:36:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 15:36:41 -参数 : []
2019-03-18 15:36:41 -耗时 : 1
2019-03-18 15:36:41 -返回值 : system/dept/deptTree
2019-03-18 15:36:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 15:36:41 -HTTP METHOD : GET
2019-03-18 15:36:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 15:36:41 -参数 : []
2019-03-18 15:36:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 15:36:41 -==> Parameters: 
2019-03-18 15:36:41 -<==      Total: 3
2019-03-18 15:36:41 -耗时 : 14
2019-03-18 15:36:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 15:36:45 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 15:36:45 -HTTP METHOD : GET
2019-03-18 15:36:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 15:36:45 -参数 : [com.bootdo.elec.vo.ElecVo@7db275a1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d19ddee]
2019-03-18 15:36:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 15:36:45 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 15:36:45 -<==      Total: 6
2019-03-18 15:36:45 -耗时 : 24
2019-03-18 15:36:45 -返回值 : null
2019-03-18 15:38:18 -请求地址 : http://localhost:8081/index
2019-03-18 15:38:18 -HTTP METHOD : GET
2019-03-18 15:38:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 15:38:18 -参数 : [{}]
2019-03-18 15:38:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 15:38:18 -==> Parameters: 1(Long)
2019-03-18 15:38:18 -<==      Total: 45
2019-03-18 15:38:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 15:38:18 -==> Parameters: 138(Long)
2019-03-18 15:38:18 -<==      Total: 1
2019-03-18 15:38:18 -耗时 : 31
2019-03-18 15:38:18 -返回值 : index_v1
2019-03-18 15:38:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 15:38:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 15:38:18.845(Timestamp)
2019-03-18 15:38:19 -<==    Updates: 1
2019-03-18 15:38:19 -请求地址 : http://localhost:8081/main
2019-03-18 15:38:19 -HTTP METHOD : GET
2019-03-18 15:38:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:38:19 -参数 : []
2019-03-18 15:38:19 -耗时 : 1
2019-03-18 15:38:19 -返回值 : main
2019-03-18 15:38:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 15:38:19 -HTTP METHOD : GET
2019-03-18 15:38:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 15:38:19 -参数 : []
2019-03-18 15:38:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 15:38:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 15:38:19 -<==      Total: 0
2019-03-18 15:38:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 15:38:19 -==> Parameters: 1(Long), 0(String)
2019-03-18 15:38:19 -<==      Total: 1
2019-03-18 15:38:19 -耗时 : 10
2019-03-18 15:38:19 -返回值 : com.bootdo.common.utils.PageUtils@1cde6359
2019-03-18 15:38:19 -请求地址 : http://localhost:8081/main
2019-03-18 15:38:19 -HTTP METHOD : GET
2019-03-18 15:38:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:38:19 -参数 : []
2019-03-18 15:38:19 -耗时 : 1
2019-03-18 15:38:19 -返回值 : main
2019-03-18 15:38:24 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 15:38:24 -HTTP METHOD : GET
2019-03-18 15:38:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 15:38:24 -参数 : []
2019-03-18 15:38:24 -耗时 : 1
2019-03-18 15:38:24 -返回值 : elec/elec/elec
2019-03-18 15:38:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 15:38:25 -HTTP METHOD : GET
2019-03-18 15:38:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 15:38:25 -参数 : [userType]
2019-03-18 15:38:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 15:38:25 -==> Parameters: userType(String)
2019-03-18 15:38:25 -<==      Total: 2
2019-03-18 15:38:25 -耗时 : 6
2019-03-18 15:38:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 15:38:25 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:38:25 -HTTP METHOD : GET
2019-03-18 15:38:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:38:25 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@4016f9a0]
2019-03-18 15:38:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 15:38:25 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 15:38:25 -<==      Total: 3
2019-03-18 15:38:25 -==>  Preparing: select count(*) from elec 
2019-03-18 15:38:25 -==> Parameters: 
2019-03-18 15:38:25 -<==      Total: 1
2019-03-18 15:38:25 -耗时 : 10
2019-03-18 15:38:25 -返回值 : com.bootdo.common.utils.PageUtils@28ba6d4b
2019-03-18 15:38:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:38:29 -HTTP METHOD : GET
2019-03-18 15:38:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:38:29 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@7081cd5d]
2019-03-18 15:38:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 15:38:29 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 15:38:29 -<==      Total: 3
2019-03-18 15:38:29 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 15:38:29 -==> Parameters: A(String), 2019-03(String)
2019-03-18 15:38:29 -<==      Total: 1
2019-03-18 15:38:29 -耗时 : 24
2019-03-18 15:38:29 -返回值 : com.bootdo.common.utils.PageUtils@7c35ad5d
2019-03-18 15:38:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 15:38:30 -HTTP METHOD : GET
2019-03-18 15:38:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 15:38:30 -参数 : []
2019-03-18 15:38:30 -耗时 : 1
2019-03-18 15:38:30 -返回值 : system/dept/deptTree
2019-03-18 15:38:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 15:38:30 -HTTP METHOD : GET
2019-03-18 15:38:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 15:38:30 -参数 : []
2019-03-18 15:38:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 15:38:30 -==> Parameters: 
2019-03-18 15:38:30 -<==      Total: 3
2019-03-18 15:38:30 -耗时 : 5
2019-03-18 15:38:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 15:38:32 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 15:38:32 -HTTP METHOD : GET
2019-03-18 15:38:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 15:38:32 -参数 : [com.bootdo.elec.vo.ElecVo@20c5c687, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48245442]
2019-03-18 15:38:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 15:38:32 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 15:38:32 -<==      Total: 6
2019-03-18 15:38:32 -耗时 : 20
2019-03-18 15:38:32 -返回值 : null
2019-03-18 15:58:20 -请求地址 : http://localhost:8081/index
2019-03-18 15:58:20 -HTTP METHOD : GET
2019-03-18 15:58:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 15:58:20 -参数 : [{}]
2019-03-18 15:58:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 15:58:20 -==> Parameters: 1(Long)
2019-03-18 15:58:20 -<==      Total: 45
2019-03-18 15:58:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 15:58:20 -==> Parameters: 138(Long)
2019-03-18 15:58:20 -<==      Total: 1
2019-03-18 15:58:20 -耗时 : 28
2019-03-18 15:58:20 -返回值 : index_v1
2019-03-18 15:58:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 15:58:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 15:58:20.143(Timestamp)
2019-03-18 15:58:20 -请求地址 : http://localhost:8081/main
2019-03-18 15:58:20 -HTTP METHOD : GET
2019-03-18 15:58:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:58:20 -参数 : []
2019-03-18 15:58:20 -耗时 : 0
2019-03-18 15:58:20 -返回值 : main
2019-03-18 15:58:20 -<==    Updates: 1
2019-03-18 15:58:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 15:58:20 -HTTP METHOD : GET
2019-03-18 15:58:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 15:58:20 -参数 : []
2019-03-18 15:58:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 15:58:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 15:58:20 -<==      Total: 0
2019-03-18 15:58:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 15:58:20 -==> Parameters: 1(Long), 0(String)
2019-03-18 15:58:20 -<==      Total: 1
2019-03-18 15:58:20 -耗时 : 6
2019-03-18 15:58:20 -返回值 : com.bootdo.common.utils.PageUtils@60fc2e50
2019-03-18 15:58:20 -请求地址 : http://localhost:8081/main
2019-03-18 15:58:20 -HTTP METHOD : GET
2019-03-18 15:58:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 15:58:20 -参数 : []
2019-03-18 15:58:20 -耗时 : 1
2019-03-18 15:58:20 -返回值 : main
2019-03-18 15:58:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 15:58:21 -==> Parameters: 1(Long)
2019-03-18 15:58:21 -<==      Total: 86
2019-03-18 15:58:21 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 15:58:21 -HTTP METHOD : GET
2019-03-18 15:58:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 15:58:21 -参数 : []
2019-03-18 15:58:21 -耗时 : 0
2019-03-18 15:58:21 -返回值 : elec/elec/elec
2019-03-18 15:58:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 15:58:23 -HTTP METHOD : GET
2019-03-18 15:58:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 15:58:23 -参数 : [userType]
2019-03-18 15:58:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 15:58:23 -==> Parameters: userType(String)
2019-03-18 15:58:23 -<==      Total: 2
2019-03-18 15:58:23 -耗时 : 6
2019-03-18 15:58:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 15:58:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:58:23 -HTTP METHOD : GET
2019-03-18 15:58:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:58:23 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@7ec8ad2a]
2019-03-18 15:58:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 15:58:23 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 15:58:23 -<==      Total: 3
2019-03-18 15:58:23 -==>  Preparing: select count(*) from elec 
2019-03-18 15:58:23 -==> Parameters: 
2019-03-18 15:58:23 -<==      Total: 1
2019-03-18 15:58:23 -耗时 : 9
2019-03-18 15:58:23 -返回值 : com.bootdo.common.utils.PageUtils@54631937
2019-03-18 15:58:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:58:41 -HTTP METHOD : GET
2019-03-18 15:58:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:58:41 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-02, type=A}, com.bootdo.elec.domain.ElecDO@58b9488c]
2019-03-18 15:58:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 15:58:41 -==> Parameters: A(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 15:58:41 -<==      Total: 3
2019-03-18 15:58:41 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 15:58:41 -==> Parameters: A(String), 2019-02(String)
2019-03-18 15:58:41 -<==      Total: 1
2019-03-18 15:58:41 -耗时 : 13
2019-03-18 15:58:41 -返回值 : com.bootdo.common.utils.PageUtils@5b05cd10
2019-03-18 15:58:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 15:58:41 -HTTP METHOD : GET
2019-03-18 15:58:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 15:58:41 -参数 : []
2019-03-18 15:58:41 -耗时 : 1
2019-03-18 15:58:41 -返回值 : system/dept/deptTree
2019-03-18 15:58:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 15:58:42 -HTTP METHOD : GET
2019-03-18 15:58:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 15:58:42 -参数 : []
2019-03-18 15:58:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 15:58:42 -==> Parameters: 
2019-03-18 15:58:42 -<==      Total: 3
2019-03-18 15:58:42 -耗时 : 4
2019-03-18 15:58:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 15:58:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 15:58:44 -HTTP METHOD : GET
2019-03-18 15:58:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 15:58:44 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02}, com.bootdo.elec.domain.ElecDO@29b3e3bc]
2019-03-18 15:58:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 15:58:45 -==> Parameters: A(String), 2(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 15:58:45 -<==      Total: 2
2019-03-18 15:58:45 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 15:58:45 -==> Parameters: A(String), 2(String), 2019-02(String)
2019-03-18 15:58:45 -<==      Total: 1
2019-03-18 15:58:45 -耗时 : 105
2019-03-18 15:58:45 -返回值 : com.bootdo.common.utils.PageUtils@2697334e
2019-03-18 16:02:48 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 16:02:48 -HTTP METHOD : GET
2019-03-18 16:02:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 16:02:48 -参数 : [com.bootdo.elec.vo.ElecVo@3cf4bcdb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@32969b22]
2019-03-18 16:02:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 16:02:48 -==> Parameters: A(String), 2(String), 2019-02(String)
2019-03-18 16:02:48 -<==      Total: 2
2019-03-18 16:02:48 -耗时 : 90
2019-03-18 16:02:48 -返回值 : null
2019-03-18 16:03:02 -Validating all active sessions...
2019-03-18 16:03:02 -Finished session validation.  No sessions were stopped.
2019-03-18 16:03:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 866]
2019-03-18 16:04:53 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-18 16:04:53 -HTTP METHOD : GET
2019-03-18 16:04:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-18 16:04:53 -参数 : []
2019-03-18 16:04:53 -耗时 : 0
2019-03-18 16:04:53 -返回值 : elec/elecInto/elecInto
2019-03-18 16:06:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 16:06:42 -HTTP METHOD : GET
2019-03-18 16:06:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 16:06:42 -参数 : []
2019-03-18 16:06:42 -耗时 : 1
2019-03-18 16:06:42 -返回值 : system/dept/deptTree
2019-03-18 16:06:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 16:06:42 -HTTP METHOD : GET
2019-03-18 16:06:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 16:06:42 -参数 : []
2019-03-18 16:06:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 16:06:42 -==> Parameters: 
2019-03-18 16:06:42 -<==      Total: 3
2019-03-18 16:06:42 -耗时 : 7
2019-03-18 16:06:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 16:06:46 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 16:06:46 -HTTP METHOD : POST
2019-03-18 16:06:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 16:06:46 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@65a17149, com.bootdo.elec.domain.ElecDO@5383e421]
2019-03-18 16:06:46 -耗时 : 144
2019-03-18 16:06:46 -返回值 : {result=success}
2019-03-18 16:06:50 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 16:06:50 -HTTP METHOD : POST
2019-03-18 16:06:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 16:06:50 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2d5d9a27, com.bootdo.elec.domain.ElecDO@3dfb602d]
2019-03-18 16:06:50 -耗时 : 5
2019-03-18 16:06:50 -返回值 : {result=success}
2019-03-18 16:06:52 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 16:06:52 -HTTP METHOD : POST
2019-03-18 16:06:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 16:06:52 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d9a837b, com.bootdo.elec.domain.ElecDO@55b66830]
2019-03-18 16:06:52 -耗时 : 4
2019-03-18 16:06:52 -返回值 : {result=success}
2019-03-18 16:06:56 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 16:06:56 -HTTP METHOD : POST
2019-03-18 16:06:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 16:06:56 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@79ecd9eb, com.bootdo.elec.domain.ElecDO@8db0457]
2019-03-18 16:06:56 -耗时 : 3
2019-03-18 16:06:56 -返回值 : {result=success}
2019-03-18 16:21:27 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 16:21:27 -HTTP METHOD : POST
2019-03-18 16:21:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 16:21:27 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@58ee9733, com.bootdo.elec.domain.ElecDO@77f9381b]
2019-03-18 16:21:27 -耗时 : 8
2019-03-18 16:21:27 -返回值 : {result=success}
2019-03-18 16:33:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 51], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1277]
2019-03-18 16:37:21 -请求地址 : http://localhost:8081/
2019-03-18 16:37:21 -HTTP METHOD : GET
2019-03-18 16:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 16:37:21 -参数 : [{}]
2019-03-18 16:37:21 -耗时 : 1
2019-03-18 16:37:21 -返回值 : redirect:/index
2019-03-18 16:37:21 -请求地址 : http://localhost:8081/login;JSESSIONID=0d54b229-65e2-4f6b-a559-8c4f8f6cf9cf
2019-03-18 16:37:21 -HTTP METHOD : GET
2019-03-18 16:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 16:37:21 -参数 : [{}]
2019-03-18 16:37:21 -耗时 : 1
2019-03-18 16:37:21 -返回值 : login
2019-03-18 16:37:25 -请求地址 : http://localhost:8081/getVerify
2019-03-18 16:37:25 -HTTP METHOD : GET
2019-03-18 16:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 16:37:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@23d731d5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@458f697c]
2019-03-18 16:37:25 -8476
2019-03-18 16:37:25 -耗时 : 252
2019-03-18 16:37:25 -返回值 : null
2019-03-18 16:37:25 -请求地址 : http://localhost:8081/login
2019-03-18 16:37:25 -HTTP METHOD : GET
2019-03-18 16:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 16:37:25 -参数 : [{}]
2019-03-18 16:37:25 -耗时 : 0
2019-03-18 16:37:25 -返回值 : login
2019-03-18 16:37:41 -请求地址 : http://localhost:8081/login
2019-03-18 16:37:41 -HTTP METHOD : POST
2019-03-18 16:37:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 16:37:41 -参数 : [admin, 111111, 8476, org.apache.shiro.web.servlet.ShiroHttpServletRequest@877c8c4]
2019-03-18 16:37:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 16:37:41 -==> Parameters: admin(String)
2019-03-18 16:37:41 -<==      Total: 1
2019-03-18 16:37:41 -耗时 : 63
2019-03-18 16:37:41 -返回值 : {msg=操作成功, code=0}
2019-03-18 16:37:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 16:37:41 -==> Parameters: 1(Long), admin(String), 登录(String), 64(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 16:37:41.835(Timestamp)
2019-03-18 16:37:41 -请求地址 : http://localhost:8081/index
2019-03-18 16:37:41 -HTTP METHOD : GET
2019-03-18 16:37:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 16:37:41 -参数 : [{}]
2019-03-18 16:37:41 -<==    Updates: 1
2019-03-18 16:37:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 16:37:41 -==> Parameters: 1(Long)
2019-03-18 16:37:42 -<==      Total: 45
2019-03-18 16:37:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 16:37:42 -==> Parameters: 138(Long)
2019-03-18 16:37:42 -<==      Total: 1
2019-03-18 16:37:42 -耗时 : 251
2019-03-18 16:37:42 -返回值 : index_v1
2019-03-18 16:37:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 16:37:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 251(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 16:37:42.112(Timestamp)
2019-03-18 16:37:42 -<==    Updates: 1
2019-03-18 16:37:42 -请求地址 : http://localhost:8081/main
2019-03-18 16:37:42 -HTTP METHOD : GET
2019-03-18 16:37:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 16:37:42 -参数 : []
2019-03-18 16:37:42 -耗时 : 2
2019-03-18 16:37:42 -返回值 : main
2019-03-18 16:37:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 16:37:43 -HTTP METHOD : GET
2019-03-18 16:37:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 16:37:43 -参数 : []
2019-03-18 16:37:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 16:37:43 -请求地址 : http://localhost:8081/main
2019-03-18 16:37:43 -HTTP METHOD : GET
2019-03-18 16:37:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 16:37:43 -参数 : []
2019-03-18 16:37:43 -耗时 : 25
2019-03-18 16:37:43 -返回值 : main
2019-03-18 16:37:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 16:37:43 -<==      Total: 0
2019-03-18 16:37:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 16:37:43 -==> Parameters: 1(Long), 0(String)
2019-03-18 16:37:43 -<==      Total: 1
2019-03-18 16:37:43 -耗时 : 506
2019-03-18 16:37:43 -返回值 : com.bootdo.common.utils.PageUtils@5957821d
2019-03-18 16:39:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 16:39:09 -==> Parameters: 1(Long)
2019-03-18 16:39:09 -<==      Total: 86
2019-03-18 16:39:09 -请求地址 : http://localhost:8081/sys/menu/
2019-03-18 16:39:09 -HTTP METHOD : GET
2019-03-18 16:39:09 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-18 16:39:09 -参数 : [{}]
2019-03-18 16:39:09 -耗时 : 2
2019-03-18 16:39:09 -返回值 : system/menu/menu
2019-03-18 16:39:11 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 16:39:11 -HTTP METHOD : GET
2019-03-18 16:39:11 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 16:39:11 -参数 : [{sort=order_num}]
2019-03-18 16:39:11 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 16:39:11 -==> Parameters: 
2019-03-18 16:39:11 -<==      Total: 105
2019-03-18 16:39:11 -耗时 : 218
2019-03-18 16:39:11 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 16:39:23 -请求地址 : http://localhost:8081/sys/menu/add/77
2019-03-18 16:39:23 -HTTP METHOD : GET
2019-03-18 16:39:23 -CLASS_METHOD : com.bootdo.system.controller.MenuController.add
2019-03-18 16:39:23 -参数 : [{}, 77]
2019-03-18 16:39:23 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 16:39:23 -==> Parameters: 77(Long)
2019-03-18 16:39:23 -<==      Total: 1
2019-03-18 16:39:23 -耗时 : 8
2019-03-18 16:39:23 -返回值 : system/menu/add
2019-03-18 16:39:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 16:39:23 -==> Parameters: 1(Long), admin(String), 添加菜单(String), 8(Integer), com.bootdo.system.controller.MenuController.add()(String), null, 127.0.0.1(String), 2019-03-18 16:39:23.579(Timestamp)
2019-03-18 16:39:23 -<==    Updates: 1
2019-03-18 16:41:04 -请求地址 : http://localhost:8081/sys/menu/save
2019-03-18 16:41:04 -HTTP METHOD : POST
2019-03-18 16:41:04 -CLASS_METHOD : com.bootdo.system.controller.MenuController.save
2019-03-18 16:41:04 -参数 : [MenuDO{menuId=null, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-03-18 16:41:04 -==>  Preparing: insert into sys_menu ( `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`, `gmt_create`, `gmt_modified` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 16:41:04 -==> Parameters: 77(Long), 3D龙卷风(String), common/long(String), (String), 1(Integer), fa fa-space-shuttle(String), 3(Integer), null, null
2019-03-18 16:41:04 -<==    Updates: 1
2019-03-18 16:41:04 -耗时 : 60
2019-03-18 16:41:04 -返回值 : {msg=操作成功, code=0}
2019-03-18 16:41:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 16:41:05 -==> Parameters: 1(Long), admin(String), 保存菜单(String), 60(Integer), com.bootdo.system.controller.MenuController.save()(String), null, 127.0.0.1(String), 2019-03-18 16:41:05.051(Timestamp)
2019-03-18 16:41:05 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 16:41:05 -HTTP METHOD : GET
2019-03-18 16:41:05 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 16:41:05 -参数 : [{sort=order_num}]
2019-03-18 16:41:05 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 16:41:05 -==> Parameters: 
2019-03-18 16:41:05 -<==    Updates: 1
2019-03-18 16:41:05 -<==      Total: 106
2019-03-18 16:41:05 -耗时 : 94
2019-03-18 16:41:05 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 17:26:12 -Starting BootdoApplication on ZJZL-20180906VX with PID 4996 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 17:26:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 17:26:12 -The following profiles are active: dev
2019-03-18 17:26:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Mon Mar 18 17:26:12 CST 2019]; root of context hierarchy
2019-03-18 17:26:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 17:26:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3bc2b78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d6155a1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 17:26:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 17:26:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 17:26:25 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 17:26:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 17:26:25 -Starting service [Tomcat]
2019-03-18 17:26:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 17:26:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 17:26:26 -Initializing Spring embedded WebApplicationContext
2019-03-18 17:26:26 -Root WebApplicationContext: initialization completed in 13685 ms
2019-03-18 17:26:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 17:26:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 17:26:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 17:26:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 17:26:27 -Filter xssFilter was not registered (disabled)
2019-03-18 17:26:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 17:26:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 17:26:27 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 17:26:27 -Servlet dispatcherServlet mapped to [/]
2019-03-18 17:26:33 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Mon Mar 18 17:26:12 CST 2019]; root of context hierarchy
2019-03-18 17:26:34 -Using default implementation for ThreadExecutor
2019-03-18 17:26:34 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 17:26:34 -Quartz Scheduler v.2.2.1 created.
2019-03-18 17:26:34 -RAMJobStore initialized.
2019-03-18 17:26:34 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 17:26:34 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 17:26:34 -Quartz scheduler version: 2.2.1
2019-03-18 17:26:34 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4c418496
2019-03-18 17:26:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 17:26:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 17:26:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 17:26:39 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 17:26:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 17:26:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 17:26:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 17:26:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 17:26:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 17:26:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 17:26:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 17:26:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 17:26:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 17:26:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 17:26:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 17:26:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 17:26:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 17:26:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 17:26:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 17:26:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 17:26:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 17:26:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 17:26:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 17:26:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 17:26:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 17:26:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Time()
2019-03-18 17:26:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 17:26:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 17:26:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 17:26:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 17:26:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 17:26:39 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 17:26:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 17:26:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 17:26:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 17:26:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 17:26:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 17:26:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 17:26:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 17:26:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 17:26:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 17:26:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 17:26:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 17:26:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 17:26:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 17:26:39 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 17:26:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 17:26:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 17:26:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 17:26:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 17:26:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 17:26:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 17:26:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 17:26:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 17:26:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 17:26:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 17:26:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 17:26:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 17:26:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 17:26:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 17:26:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 17:26:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 17:26:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 17:26:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 17:26:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 17:26:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 17:26:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 17:26:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 17:26:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 17:26:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 17:26:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 17:26:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 17:26:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 17:26:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 17:26:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 17:26:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 17:26:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 17:26:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 17:26:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 17:26:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 17:26:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 17:26:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 17:26:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 17:26:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 17:26:39 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 17:26:39 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 17:26:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 17:26:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 17:26:39 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 17:26:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 17:26:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 17:26:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 17:26:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 17:26:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 17:26:40 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 17:26:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 17:26:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 17:26:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 17:26:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53812a9b: startup date [Mon Mar 18 17:26:12 CST 2019]; root of context hierarchy
2019-03-18 17:26:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 17:26:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 17:26:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 17:26:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 17:26:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 17:26:49 -Registering beans for JMX exposure on startup
2019-03-18 17:26:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 17:26:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 17:26:49 -Starting beans in phase 2147483647
2019-03-18 17:26:49 -Context refreshed
2019-03-18 17:26:49 -Found 1 custom documentation plugin(s)
2019-03-18 17:26:49 -Scanning for api listing references
2019-03-18 17:26:50 -Generating unique operation named: removeUsingPOST_1
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_2
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_3
2019-03-18 17:26:51 -Generating unique operation named: saveUsingPOST_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPUT_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 17:26:51 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_2
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_2
2019-03-18 17:26:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_2
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_4
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_5
2019-03-18 17:26:51 -Generating unique operation named: saveUsingPOST_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingGET_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPUT_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 17:26:51 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 17:26:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_3
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_3
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_3
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_6
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_7
2019-03-18 17:26:51 -Generating unique operation named: saveUsingPOST_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingGET_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPUT_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 17:26:51 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_4
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_4
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_4
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_8
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_9
2019-03-18 17:26:51 -Generating unique operation named: saveUsingPOST_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingGET_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPUT_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 17:26:51 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 17:26:51 -Generating unique operation named: ElecUsingGET_1
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_5
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_5
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_5
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_10
2019-03-18 17:26:51 -Generating unique operation named: removeUsingPOST_11
2019-03-18 17:26:51 -Generating unique operation named: saveUsingPOST_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingGET_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPUT_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 17:26:51 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 17:26:51 -Generating unique operation named: editUsingGET_6
2019-03-18 17:26:51 -Generating unique operation named: listUsingGET_6
2019-03-18 17:26:51 -Generating unique operation named: updateUsingPOST_6
2019-03-18 17:26:51 -Generating unique operation named: addUsingGET_6
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_7
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_7
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_12
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_13
2019-03-18 17:26:52 -Generating unique operation named: saveUsingPOST_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingGET_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPOST_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPUT_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 17:26:52 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 17:26:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 17:26:52 -Generating unique operation named: addUsingGET_7
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_8
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_8
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_14
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_15
2019-03-18 17:26:52 -Generating unique operation named: saveUsingPOST_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingGET_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPOST_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPUT_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 17:26:52 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 17:26:52 -Generating unique operation named: addUsingGET_8
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_9
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_9
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_16
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_17
2019-03-18 17:26:52 -Generating unique operation named: saveUsingPOST_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingGET_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPOST_9
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPUT_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 17:26:52 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 17:26:52 -Generating unique operation named: addUsingGET_9
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_10
2019-03-18 17:26:52 -Generating unique operation named: infoUsingGET_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingPOST_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingPUT_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 17:26:52 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_10
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_18
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_19
2019-03-18 17:26:52 -Generating unique operation named: saveUsingPOST_9
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPOST_10
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_11
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_20
2019-03-18 17:26:52 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 17:26:52 -Generating unique operation named: addUsingGET_10
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_11
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_12
2019-03-18 17:26:52 -Generating unique operation named: removeUsingPOST_21
2019-03-18 17:26:52 -Generating unique operation named: saveUsingPOST_10
2019-03-18 17:26:52 -Generating unique operation named: treeUsingGET_1
2019-03-18 17:26:52 -Generating unique operation named: treeUsingGET_2
2019-03-18 17:26:52 -Generating unique operation named: updateUsingPOST_11
2019-03-18 17:26:52 -Generating unique operation named: addUsingGET_11
2019-03-18 17:26:52 -Generating unique operation named: editUsingGET_12
2019-03-18 17:26:52 -Generating unique operation named: listUsingGET_13
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_22
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_23
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingGET_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPUT_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 17:26:53 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_12
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_13
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_14
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_24
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_25
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingGET_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPUT_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 17:26:53 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_13
2019-03-18 17:26:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_14
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_15
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_13
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_14
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_14
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_16
2019-03-18 17:26:53 -Generating unique operation named: listUsingHEAD_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingPOST_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingPUT_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingPATCH_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingDELETE_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 17:26:53 -Generating unique operation named: listUsingTRACE_1
2019-03-18 17:26:53 -Generating unique operation named: TimeUsingGET_1
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_14
2019-03-18 17:26:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_15
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_17
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_26
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_15
2019-03-18 17:26:53 -Generating unique operation named: treeUsingGET_3
2019-03-18 17:26:53 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_15
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_15
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_16
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_18
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_27
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_28
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_16
2019-03-18 17:26:53 -Generating unique operation named: updateUsingGET_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_16
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPUT_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 17:26:53 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 17:26:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_16
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_17
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_19
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_29
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_30
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_17
2019-03-18 17:26:53 -Generating unique operation named: updateUsingGET_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_17
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPUT_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 17:26:53 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 17:26:53 -Generating unique operation named: addUsingGET_17
2019-03-18 17:26:53 -Generating unique operation named: editUsingGET_18
2019-03-18 17:26:53 -Generating unique operation named: listUsingGET_20
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_31
2019-03-18 17:26:53 -Generating unique operation named: removeUsingPOST_32
2019-03-18 17:26:53 -Generating unique operation named: saveUsingPOST_18
2019-03-18 17:26:53 -Generating unique operation named: updateUsingGET_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPOST_18
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPUT_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 17:26:53 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 17:26:54 -Starting Quartz Scheduler now
2019-03-18 17:26:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 17:26:54 -Starting...
2019-03-18 17:26:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 17:26:54 -Started.
2019-03-18 17:26:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 17:26:54 -Using a shared selector for servlet write/read
2019-03-18 17:26:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 17:26:54 -Started BootdoApplication in 43.769 seconds (JVM running for 45.586)
2019-03-18 17:26:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 17:26:54 -==> Parameters: 
2019-03-18 17:26:54 -<==      Total: 1
2019-03-18 17:27:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 17:27:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 17:27:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-03-18 17:27:06 -Enabling session validation scheduler...
2019-03-18 17:27:07 -请求地址 : http://localhost:8081/login;JSESSIONID=b6e3a55d-0245-4cae-9a74-0dabcf5cdc4b
2019-03-18 17:27:07 -HTTP METHOD : GET
2019-03-18 17:27:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 17:27:07 -参数 : [{}]
2019-03-18 17:27:07 -耗时 : 4
2019-03-18 17:27:07 -返回值 : login
2019-03-18 17:27:09 -请求地址 : http://localhost:8081/getVerify
2019-03-18 17:27:09 -HTTP METHOD : GET
2019-03-18 17:27:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 17:27:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@190b597b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e25a549]
2019-03-18 17:27:14 -3167
2019-03-18 17:27:15 -耗时 : 5439
2019-03-18 17:27:15 -返回值 : null
2019-03-18 17:27:15 -请求地址 : http://localhost:8081/login
2019-03-18 17:27:15 -HTTP METHOD : GET
2019-03-18 17:27:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 17:27:15 -参数 : [{}]
2019-03-18 17:27:15 -耗时 : 1
2019-03-18 17:27:15 -返回值 : login
2019-03-18 17:27:26 -请求地址 : http://localhost:8081/login
2019-03-18 17:27:26 -HTTP METHOD : POST
2019-03-18 17:27:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 17:27:26 -参数 : [admin, 111111, 3167, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d4c5e4c]
2019-03-18 17:27:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 17:27:26 -==> Parameters: admin(String)
2019-03-18 17:27:26 -<==      Total: 1
2019-03-18 17:27:26 -耗时 : 154
2019-03-18 17:27:26 -返回值 : {msg=操作成功, code=0}
2019-03-18 17:27:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 17:27:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:27:27 -==> Parameters: 1(Long), admin(String), 登录(String), 154(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 17:27:27.049(Timestamp)
2019-03-18 17:27:27 -<==    Updates: 1
2019-03-18 17:27:27 -请求地址 : http://localhost:8081/index
2019-03-18 17:27:27 -HTTP METHOD : GET
2019-03-18 17:27:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 17:27:27 -参数 : [{}]
2019-03-18 17:27:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 17:27:27 -==> Parameters: 1(Long)
2019-03-18 17:27:27 -<==      Total: 45
2019-03-18 17:27:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 17:27:27 -==> Parameters: 138(Long)
2019-03-18 17:27:27 -<==      Total: 1
2019-03-18 17:27:27 -耗时 : 396
2019-03-18 17:27:27 -返回值 : index_v1
2019-03-18 17:27:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:27:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 397(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 17:27:28.0(Timestamp)
2019-03-18 17:27:28 -<==    Updates: 1
2019-03-18 17:27:28 -请求地址 : http://localhost:8081/main
2019-03-18 17:27:28 -HTTP METHOD : GET
2019-03-18 17:27:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 17:27:28 -参数 : []
2019-03-18 17:27:28 -耗时 : 1
2019-03-18 17:27:28 -返回值 : main
2019-03-18 17:27:30 -请求地址 : http://localhost:8081/main
2019-03-18 17:27:30 -HTTP METHOD : GET
2019-03-18 17:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 17:27:30 -参数 : []
2019-03-18 17:27:30 -耗时 : 1
2019-03-18 17:27:30 -返回值 : main
2019-03-18 17:27:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 17:27:30 -HTTP METHOD : GET
2019-03-18 17:27:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 17:27:30 -参数 : []
2019-03-18 17:27:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 17:27:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 17:27:30 -<==      Total: 0
2019-03-18 17:27:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 17:27:30 -==> Parameters: 1(Long), 0(String)
2019-03-18 17:27:30 -<==      Total: 1
2019-03-18 17:27:30 -耗时 : 69
2019-03-18 17:27:30 -返回值 : com.bootdo.common.utils.PageUtils@360a4256
2019-03-18 17:27:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-18 17:27:42 -请求地址 : http://localhost:8081/common/time
2019-03-18 17:27:42 -HTTP METHOD : GET
2019-03-18 17:27:42 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-18 17:27:42 -参数 : []
2019-03-18 17:27:42 -耗时 : 1
2019-03-18 17:27:42 -返回值 : common/job/time
2019-03-18 17:27:45 -请求地址 : http://localhost:8081/common/job
2019-03-18 17:27:45 -HTTP METHOD : GET
2019-03-18 17:27:45 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-18 17:27:45 -参数 : []
2019-03-18 17:27:45 -耗时 : 1
2019-03-18 17:27:45 -返回值 : common/job/job
2019-03-18 17:30:26 -请求地址 : http://localhost:8081/login;JSESSIONID=bdaa9905-0368-42b5-a14b-3e841581fd2e
2019-03-18 17:30:26 -HTTP METHOD : GET
2019-03-18 17:30:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 17:30:26 -参数 : [{}]
2019-03-18 17:30:26 -耗时 : 0
2019-03-18 17:30:26 -返回值 : login
2019-03-18 17:30:27 -请求地址 : http://localhost:8081/login;JSESSIONID=bdaa9905-0368-42b5-a14b-3e841581fd2e
2019-03-18 17:30:27 -HTTP METHOD : GET
2019-03-18 17:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 17:30:27 -参数 : [{}]
2019-03-18 17:30:27 -耗时 : 0
2019-03-18 17:30:27 -返回值 : login
2019-03-18 17:30:27 -请求地址 : http://localhost:8081/getVerify
2019-03-18 17:30:27 -HTTP METHOD : GET
2019-03-18 17:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 17:30:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c18e250, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e4446c9]
2019-03-18 17:30:27 -8767
2019-03-18 17:30:27 -耗时 : 12
2019-03-18 17:30:27 -返回值 : null
2019-03-18 17:30:27 -请求地址 : http://localhost:8081/getVerify
2019-03-18 17:30:27 -HTTP METHOD : GET
2019-03-18 17:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 17:30:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cef4f95, org.apache.shiro.web.servlet.ShiroHttpServletResponse@19953c9d]
2019-03-18 17:30:27 -8090
2019-03-18 17:30:27 -耗时 : 14
2019-03-18 17:30:27 -返回值 : null
2019-03-18 17:30:27 -请求地址 : http://localhost:8081/login
2019-03-18 17:30:27 -HTTP METHOD : GET
2019-03-18 17:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 17:30:27 -参数 : [{}]
2019-03-18 17:30:27 -耗时 : 1
2019-03-18 17:30:27 -返回值 : login
2019-03-18 17:30:32 -请求地址 : http://localhost:8081/login
2019-03-18 17:30:32 -HTTP METHOD : POST
2019-03-18 17:30:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 17:30:32 -参数 : [admin, 111111, 8090, org.apache.shiro.web.servlet.ShiroHttpServletRequest@14775fbc]
2019-03-18 17:30:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 17:30:32 -==> Parameters: admin(String)
2019-03-18 17:30:32 -<==      Total: 1
2019-03-18 17:30:32 -耗时 : 13
2019-03-18 17:30:32 -返回值 : {msg=操作成功, code=0}
2019-03-18 17:30:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:30:32 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 17:30:32.2(Timestamp)
2019-03-18 17:30:32 -请求地址 : http://localhost:8081/index
2019-03-18 17:30:32 -HTTP METHOD : GET
2019-03-18 17:30:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 17:30:32 -参数 : [{}]
2019-03-18 17:30:32 -<==    Updates: 1
2019-03-18 17:30:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 17:30:32 -==> Parameters: 1(Long)
2019-03-18 17:30:32 -<==      Total: 45
2019-03-18 17:30:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 17:30:32 -==> Parameters: 138(Long)
2019-03-18 17:30:32 -<==      Total: 1
2019-03-18 17:30:32 -耗时 : 103
2019-03-18 17:30:32 -返回值 : index_v1
2019-03-18 17:30:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:30:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 17:30:32.372(Timestamp)
2019-03-18 17:30:32 -请求地址 : http://localhost:8081/main
2019-03-18 17:30:32 -HTTP METHOD : GET
2019-03-18 17:30:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 17:30:32 -参数 : []
2019-03-18 17:30:32 -耗时 : 1
2019-03-18 17:30:32 -返回值 : main
2019-03-18 17:30:32 -<==    Updates: 1
2019-03-18 17:30:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 17:30:32 -HTTP METHOD : GET
2019-03-18 17:30:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 17:30:32 -参数 : []
2019-03-18 17:30:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 17:30:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 17:30:32 -<==      Total: 0
2019-03-18 17:30:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 17:30:32 -==> Parameters: 1(Long), 0(String)
2019-03-18 17:30:32 -<==      Total: 1
2019-03-18 17:30:32 -耗时 : 11
2019-03-18 17:30:32 -返回值 : com.bootdo.common.utils.PageUtils@1f665ec
2019-03-18 17:30:32 -请求地址 : http://localhost:8081/main
2019-03-18 17:30:32 -HTTP METHOD : GET
2019-03-18 17:30:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 17:30:32 -参数 : []
2019-03-18 17:30:32 -耗时 : 2
2019-03-18 17:30:32 -返回值 : main
2019-03-18 17:30:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 17:30:42 -==> Parameters: 1(Long)
2019-03-18 17:30:42 -<==      Total: 86
2019-03-18 17:30:42 -请求地址 : http://localhost:8081/sys/menu/
2019-03-18 17:30:42 -HTTP METHOD : GET
2019-03-18 17:30:42 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-18 17:30:42 -参数 : [{}]
2019-03-18 17:30:42 -耗时 : 1
2019-03-18 17:30:42 -返回值 : system/menu/menu
2019-03-18 17:30:44 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 17:30:44 -HTTP METHOD : GET
2019-03-18 17:30:44 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 17:30:44 -参数 : [{sort=order_num}]
2019-03-18 17:30:44 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 17:30:44 -==> Parameters: 
2019-03-18 17:30:44 -<==      Total: 106
2019-03-18 17:30:44 -耗时 : 58
2019-03-18 17:30:44 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 17:30:59 -请求地址 : http://localhost:8081/sys/menu/edit/72
2019-03-18 17:30:59 -HTTP METHOD : GET
2019-03-18 17:30:59 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:30:59 -参数 : [{}, 72]
2019-03-18 17:30:59 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:30:59 -==> Parameters: 72(Long)
2019-03-18 17:30:59 -<==      Total: 1
2019-03-18 17:30:59 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:30:59 -==> Parameters: 77(Long)
2019-03-18 17:30:59 -<==      Total: 1
2019-03-18 17:30:59 -耗时 : 13
2019-03-18 17:30:59 -返回值 : system/menu/edit
2019-03-18 17:30:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:30:59 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 14(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:30:59.72(Timestamp)
2019-03-18 17:30:59 -<==    Updates: 1
2019-03-18 17:31:06 -请求地址 : http://localhost:8081/sys/menu/edit/154
2019-03-18 17:31:06 -HTTP METHOD : GET
2019-03-18 17:31:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:31:06 -参数 : [{}, 154]
2019-03-18 17:31:06 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:31:06 -==> Parameters: 154(Long)
2019-03-18 17:31:06 -<==      Total: 1
2019-03-18 17:31:06 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:31:06 -==> Parameters: 77(Long)
2019-03-18 17:31:06 -<==      Total: 1
2019-03-18 17:31:06 -耗时 : 24
2019-03-18 17:31:06 -返回值 : system/menu/edit
2019-03-18 17:31:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:31:06 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 25(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:31:06.056(Timestamp)
2019-03-18 17:31:06 -<==    Updates: 1
2019-03-18 17:31:18 -请求地址 : http://localhost:8081/sys/menu/edit/160
2019-03-18 17:31:18 -HTTP METHOD : GET
2019-03-18 17:31:18 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:31:18 -参数 : [{}, 160]
2019-03-18 17:31:18 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:31:18 -==> Parameters: 160(Long)
2019-03-18 17:31:18 -<==      Total: 1
2019-03-18 17:31:18 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:31:18 -==> Parameters: 77(Long)
2019-03-18 17:31:18 -<==      Total: 1
2019-03-18 17:31:18 -耗时 : 22
2019-03-18 17:31:18 -返回值 : system/menu/edit
2019-03-18 17:31:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:31:18 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 22(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:31:18.267(Timestamp)
2019-03-18 17:31:18 -<==    Updates: 1
2019-03-18 17:31:31 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-18 17:31:31 -HTTP METHOD : POST
2019-03-18 17:31:31 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-18 17:31:31 -参数 : [MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-03-18 17:31:31 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-03-18 17:31:31 -==> Parameters: 77(Long), 3D龙卷风(String), common/long(String), (String), 1(Integer), fa fa-space-shuttle(String), 3(Integer), 160(Long)
2019-03-18 17:31:31 -<==    Updates: 1
2019-03-18 17:31:31 -耗时 : 395
2019-03-18 17:31:31 -返回值 : {msg=操作成功, code=0}
2019-03-18 17:31:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:31:31 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 395(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-18 17:31:31.846(Timestamp)
2019-03-18 17:31:31 -<==    Updates: 1
2019-03-18 17:31:31 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 17:31:31 -HTTP METHOD : GET
2019-03-18 17:31:31 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 17:31:31 -参数 : [{sort=order_num}]
2019-03-18 17:31:31 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 17:31:31 -==> Parameters: 
2019-03-18 17:31:31 -<==      Total: 106
2019-03-18 17:31:31 -耗时 : 25
2019-03-18 17:31:31 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 17:31:38 -请求地址 : http://localhost:8081/common/job
2019-03-18 17:31:38 -HTTP METHOD : GET
2019-03-18 17:31:38 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-18 17:31:38 -参数 : []
2019-03-18 17:31:38 -耗时 : 1
2019-03-18 17:31:38 -返回值 : common/job/job
2019-03-18 17:32:48 -请求地址 : http://localhost:8081/common/time
2019-03-18 17:32:48 -HTTP METHOD : GET
2019-03-18 17:32:48 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-18 17:32:48 -参数 : []
2019-03-18 17:32:48 -耗时 : 1
2019-03-18 17:32:48 -返回值 : common/job/time
2019-03-18 17:33:09 -请求地址 : http://localhost:8081/sys/menu/edit/160
2019-03-18 17:33:09 -HTTP METHOD : GET
2019-03-18 17:33:09 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:33:09 -参数 : [{}, 160]
2019-03-18 17:33:09 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:09 -==> Parameters: 160(Long)
2019-03-18 17:33:09 -<==      Total: 1
2019-03-18 17:33:09 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:09 -==> Parameters: 77(Long)
2019-03-18 17:33:09 -<==      Total: 1
2019-03-18 17:33:09 -耗时 : 16
2019-03-18 17:33:09 -返回值 : system/menu/edit
2019-03-18 17:33:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:09 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 17(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:33:09.162(Timestamp)
2019-03-18 17:33:09 -<==    Updates: 1
2019-03-18 17:33:12 -请求地址 : http://localhost:8081/sys/menu/edit/108
2019-03-18 17:33:12 -HTTP METHOD : GET
2019-03-18 17:33:12 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:33:12 -参数 : [{}, 108]
2019-03-18 17:33:12 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:12 -==> Parameters: 108(Long)
2019-03-18 17:33:12 -<==      Total: 1
2019-03-18 17:33:12 -耗时 : 6
2019-03-18 17:33:12 -返回值 : system/menu/edit
2019-03-18 17:33:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:12 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 7(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:33:12.674(Timestamp)
2019-03-18 17:33:12 -<==    Updates: 1
2019-03-18 17:33:22 -请求地址 : http://localhost:8081/sys/menu/edit/72
2019-03-18 17:33:22 -HTTP METHOD : GET
2019-03-18 17:33:22 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:33:22 -参数 : [{}, 72]
2019-03-18 17:33:22 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:22 -==> Parameters: 72(Long)
2019-03-18 17:33:22 -<==      Total: 1
2019-03-18 17:33:22 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:22 -==> Parameters: 77(Long)
2019-03-18 17:33:22 -<==      Total: 1
2019-03-18 17:33:22 -耗时 : 15
2019-03-18 17:33:22 -返回值 : system/menu/edit
2019-03-18 17:33:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:22 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 15(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:33:22.186(Timestamp)
2019-03-18 17:33:22 -<==    Updates: 1
2019-03-18 17:33:31 -请求地址 : http://localhost:8081/sys/menu/edit/154
2019-03-18 17:33:31 -HTTP METHOD : GET
2019-03-18 17:33:31 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:33:31 -参数 : [{}, 154]
2019-03-18 17:33:31 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:31 -==> Parameters: 154(Long)
2019-03-18 17:33:31 -<==      Total: 1
2019-03-18 17:33:31 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:31 -==> Parameters: 77(Long)
2019-03-18 17:33:31 -<==      Total: 1
2019-03-18 17:33:31 -耗时 : 14
2019-03-18 17:33:31 -返回值 : system/menu/edit
2019-03-18 17:33:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:31 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 15(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:33:31.094(Timestamp)
2019-03-18 17:33:31 -<==    Updates: 1
2019-03-18 17:33:35 -请求地址 : http://localhost:8081/sys/menu/edit/160
2019-03-18 17:33:35 -HTTP METHOD : GET
2019-03-18 17:33:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 17:33:35 -参数 : [{}, 160]
2019-03-18 17:33:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:35 -==> Parameters: 160(Long)
2019-03-18 17:33:35 -<==      Total: 1
2019-03-18 17:33:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 17:33:35 -==> Parameters: 77(Long)
2019-03-18 17:33:35 -<==      Total: 1
2019-03-18 17:33:35 -耗时 : 27
2019-03-18 17:33:35 -返回值 : system/menu/edit
2019-03-18 17:33:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:36 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 27(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 17:33:35.981(Timestamp)
2019-03-18 17:33:36 -<==    Updates: 1
2019-03-18 17:33:46 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-18 17:33:46 -HTTP METHOD : POST
2019-03-18 17:33:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-18 17:33:46 -参数 : [MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-03-18 17:33:46 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-03-18 17:33:46 -==> Parameters: 77(Long), 3D龙卷风(String), common/long(String), (String), 1(Integer), fa fa-space-shuttle(String), 3(Integer), 160(Long)
2019-03-18 17:33:46 -<==    Updates: 1
2019-03-18 17:33:46 -耗时 : 59
2019-03-18 17:33:46 -返回值 : {msg=操作成功, code=0}
2019-03-18 17:33:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 17:33:46 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 59(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-18 17:33:46.328(Timestamp)
2019-03-18 17:33:46 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 17:33:46 -HTTP METHOD : GET
2019-03-18 17:33:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 17:33:46 -参数 : [{sort=order_num}]
2019-03-18 17:33:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 17:33:46 -==> Parameters: 
2019-03-18 17:33:46 -<==    Updates: 1
2019-03-18 17:33:46 -<==      Total: 106
2019-03-18 17:33:46 -耗时 : 77
2019-03-18 17:33:46 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 17:35:21 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 17:35:21 -HTTP METHOD : GET
2019-03-18 17:35:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 17:35:21 -参数 : []
2019-03-18 17:35:21 -耗时 : 1
2019-03-18 17:35:21 -返回值 : elec/elec/elec
2019-03-18 17:35:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 17:35:22 -HTTP METHOD : GET
2019-03-18 17:35:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:35:22 -参数 : [userType]
2019-03-18 17:35:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:35:22 -==> Parameters: userType(String)
2019-03-18 17:35:22 -<==      Total: 2
2019-03-18 17:35:22 -耗时 : 62
2019-03-18 17:35:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:35:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 17:35:22 -HTTP METHOD : GET
2019-03-18 17:35:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 17:35:22 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@6ebdbe2f]
2019-03-18 17:35:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 17:35:22 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 17:35:22 -<==      Total: 3
2019-03-18 17:35:22 -==>  Preparing: select count(*) from elec 
2019-03-18 17:35:22 -==> Parameters: 
2019-03-18 17:35:22 -<==      Total: 1
2019-03-18 17:35:22 -耗时 : 217
2019-03-18 17:35:22 -返回值 : com.bootdo.common.utils.PageUtils@40ed3a79
2019-03-18 17:35:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 17:35:38 -HTTP METHOD : GET
2019-03-18 17:35:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 17:35:38 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@498b1904]
2019-03-18 17:35:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 17:35:38 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 17:35:38 -<==      Total: 3
2019-03-18 17:35:38 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 17:35:38 -==> Parameters: A(String), 2019-03(String)
2019-03-18 17:35:38 -<==      Total: 1
2019-03-18 17:35:38 -耗时 : 15
2019-03-18 17:35:38 -返回值 : com.bootdo.common.utils.PageUtils@d8d3bbe
2019-03-18 17:35:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 17:35:39 -HTTP METHOD : GET
2019-03-18 17:35:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 17:35:39 -参数 : []
2019-03-18 17:35:39 -耗时 : 1
2019-03-18 17:35:39 -返回值 : system/dept/deptTree
2019-03-18 17:35:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 17:35:39 -HTTP METHOD : GET
2019-03-18 17:35:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 17:35:39 -参数 : []
2019-03-18 17:35:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 17:35:39 -==> Parameters: 
2019-03-18 17:35:39 -<==      Total: 3
2019-03-18 17:35:39 -耗时 : 18
2019-03-18 17:35:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 17:35:57 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 17:35:57 -HTTP METHOD : GET
2019-03-18 17:35:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 17:35:57 -参数 : [com.bootdo.elec.vo.ElecVo@d004e41, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14f4bda3]
2019-03-18 17:35:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 17:35:57 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 17:35:57 -<==      Total: 6
2019-03-18 17:35:58 -耗时 : 1111
2019-03-18 17:35:58 -返回值 : null
2019-03-18 17:40:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 17:40:03 -HTTP METHOD : GET
2019-03-18 17:40:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 17:40:03 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, type=B}, com.bootdo.elec.domain.ElecDO@457f5971]
2019-03-18 17:40:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 17:40:03 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 17:40:03 -<==      Total: 0
2019-03-18 17:40:03 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 17:40:03 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-18 17:40:03 -<==      Total: 1
2019-03-18 17:40:03 -耗时 : 16
2019-03-18 17:40:03 -返回值 : com.bootdo.common.utils.PageUtils@4370cfb7
2019-03-18 17:40:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 17:40:03 -HTTP METHOD : GET
2019-03-18 17:40:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 17:40:03 -参数 : []
2019-03-18 17:40:03 -耗时 : 0
2019-03-18 17:40:03 -返回值 : system/dept/deptTree
2019-03-18 17:40:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 17:40:04 -HTTP METHOD : GET
2019-03-18 17:40:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 17:40:04 -参数 : []
2019-03-18 17:40:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 17:40:04 -==> Parameters: 
2019-03-18 17:40:04 -<==      Total: 3
2019-03-18 17:40:04 -耗时 : 5
2019-03-18 17:40:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 17:40:06 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 17:40:06 -HTTP METHOD : GET
2019-03-18 17:40:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 17:40:06 -参数 : [com.bootdo.elec.vo.ElecVo@7cfba279, org.apache.shiro.web.servlet.ShiroHttpServletResponse@203e5261]
2019-03-18 17:40:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 17:40:06 -==> Parameters: B(String), 3(String), 2019-02(String)
2019-03-18 17:40:06 -<==      Total: 2
2019-03-18 17:40:06 -耗时 : 20
2019-03-18 17:40:06 -返回值 : null
2019-03-18 17:40:10 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 17:40:10 -HTTP METHOD : GET
2019-03-18 17:40:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 17:40:10 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-02}, com.bootdo.elec.domain.ElecDO@5be9e8f4]
2019-03-18 17:40:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 17:40:10 -==> Parameters: B(String), 3(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 17:40:10 -<==      Total: 2
2019-03-18 17:40:10 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 17:40:10 -==> Parameters: B(String), 3(String), 2019-02(String)
2019-03-18 17:40:10 -<==      Total: 1
2019-03-18 17:40:10 -耗时 : 18
2019-03-18 17:40:10 -返回值 : com.bootdo.common.utils.PageUtils@68b8f011
2019-03-18 17:41:58 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-18 17:41:58 -HTTP METHOD : GET
2019-03-18 17:41:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-18 17:41:58 -参数 : [com.bootdo.elec.vo.ElecVo@52371b87, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30ebd97f]
2019-03-18 17:41:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 17:41:58 -==> Parameters: B(String), 3(String), 2019-02(String)
2019-03-18 17:41:58 -<==      Total: 2
2019-03-18 17:41:58 -耗时 : 17
2019-03-18 17:41:58 -返回值 : null
2019-03-18 17:43:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 17:43:42 -==> Parameters: 1(Long)
2019-03-18 17:43:42 -<==      Total: 86
2019-03-18 17:43:42 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-18 17:43:42 -HTTP METHOD : GET
2019-03-18 17:43:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-18 17:43:42 -参数 : []
2019-03-18 17:43:42 -耗时 : 0
2019-03-18 17:43:42 -返回值 : elec/elec/add
2019-03-18 17:43:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 17:43:43 -HTTP METHOD : GET
2019-03-18 17:43:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:43:43 -参数 : [userType]
2019-03-18 17:43:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:43:43 -==> Parameters: userType(String)
2019-03-18 17:43:43 -<==      Total: 2
2019-03-18 17:43:43 -耗时 : 4
2019-03-18 17:43:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:43:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-18 17:43:43 -HTTP METHOD : GET
2019-03-18 17:43:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:43:43 -参数 : [elecType]
2019-03-18 17:43:43 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 17:43:43 -HTTP METHOD : GET
2019-03-18 17:43:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:43:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:43:43 -参数 : [userState]
2019-03-18 17:43:43 -==> Parameters: elecType(String)
2019-03-18 17:43:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:43:43 -==> Parameters: userState(String)
2019-03-18 17:43:43 -<==      Total: 2
2019-03-18 17:43:43 -耗时 : 7
2019-03-18 17:43:43 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:43:43 -<==      Total: 2
2019-03-18 17:43:43 -耗时 : 124
2019-03-18 17:43:43 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:44:02 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-18 17:44:02 -HTTP METHOD : GET
2019-03-18 17:44:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-18 17:44:02 -参数 : [1, {}]
2019-03-18 17:44:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-18 17:44:02 -==> Parameters: 1(Long)
2019-03-18 17:44:02 -<==      Total: 1
2019-03-18 17:44:02 -耗时 : 13
2019-03-18 17:44:02 -返回值 : elec/elec/edit
2019-03-18 17:44:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 17:44:02 -HTTP METHOD : GET
2019-03-18 17:44:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:44:02 -参数 : [userType]
2019-03-18 17:44:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:44:02 -==> Parameters: userType(String)
2019-03-18 17:44:02 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 17:44:02 -HTTP METHOD : GET
2019-03-18 17:44:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:44:02 -参数 : [userState]
2019-03-18 17:44:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:44:02 -==> Parameters: userState(String)
2019-03-18 17:44:02 -<==      Total: 2
2019-03-18 17:44:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-18 17:44:02 -HTTP METHOD : GET
2019-03-18 17:44:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 17:44:02 -耗时 : 6
2019-03-18 17:44:02 -参数 : [elecType]
2019-03-18 17:44:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:44:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 17:44:02 -==> Parameters: elecType(String)
2019-03-18 17:44:02 -<==      Total: 2
2019-03-18 17:44:02 -耗时 : 5
2019-03-18 17:44:02 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:44:02 -<==      Total: 2
2019-03-18 17:44:02 -耗时 : 5
2019-03-18 17:44:02 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 17:45:57 -请求地址 : http://localhost:8081/water/water
2019-03-18 17:45:57 -HTTP METHOD : GET
2019-03-18 17:45:57 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-18 17:45:57 -参数 : []
2019-03-18 17:45:57 -耗时 : 1
2019-03-18 17:45:57 -返回值 : water/water/water
2019-03-18 17:57:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-03-18 18:04:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 2220 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 18:04:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 18:04:11 -The following profiles are active: dev
2019-03-18 18:04:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4275c20c: startup date [Mon Mar 18 18:04:11 CST 2019]; root of context hierarchy
2019-03-18 18:04:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 18:04:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b0c00cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d652f72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 18:04:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 18:04:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:04:35 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 18:04:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 18:04:35 -Starting service [Tomcat]
2019-03-18 18:04:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 18:04:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 18:04:36 -Initializing Spring embedded WebApplicationContext
2019-03-18 18:04:36 -Root WebApplicationContext: initialization completed in 24715 ms
2019-03-18 18:04:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 18:04:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 18:04:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 18:04:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 18:04:37 -Filter xssFilter was not registered (disabled)
2019-03-18 18:04:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 18:04:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 18:04:37 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 18:04:37 -Servlet dispatcherServlet mapped to [/]
2019-03-18 18:04:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4275c20c: startup date [Mon Mar 18 18:04:11 CST 2019]; root of context hierarchy
2019-03-18 18:04:43 -Using default implementation for ThreadExecutor
2019-03-18 18:04:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 18:04:43 -Quartz Scheduler v.2.2.1 created.
2019-03-18 18:04:43 -RAMJobStore initialized.
2019-03-18 18:04:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 18:04:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 18:04:43 -Quartz scheduler version: 2.2.1
2019-03-18 18:04:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b9d1a4
2019-03-18 18:04:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 18:04:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 18:04:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 18:04:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 18:04:47 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 18:04:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 18:04:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 18:04:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 18:04:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 18:04:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 18:04:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 18:04:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 18:04:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 18:04:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 18:04:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 18:04:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 18:04:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 18:04:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 18:04:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 18:04:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 18:04:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 18:04:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 18:04:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 18:04:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 18:04:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 18:04:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 18:04:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 18:04:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 18:04:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 18:04:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 18:04:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 18:04:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 18:04:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 18:04:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 18:04:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 18:04:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 18:04:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 18:04:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 18:04:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 18:04:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 18:04:47 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 18:04:47 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 18:04:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 18:04:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 18:04:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 18:04:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 18:04:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 18:04:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 18:04:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 18:04:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 18:04:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 18:04:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 18:04:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 18:04:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 18:04:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 18:04:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 18:04:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 18:04:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:04:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 18:04:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 18:04:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 18:04:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 18:04:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 18:04:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 18:04:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 18:04:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 18:04:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 18:04:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 18:04:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 18:04:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 18:04:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 18:04:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 18:04:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:04:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 18:04:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 18:04:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 18:04:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 18:04:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 18:04:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 18:04:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 18:04:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 18:04:47 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:04:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:04:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 18:04:47 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:04:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 18:04:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:04:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 18:04:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 18:04:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 18:04:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 18:04:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 18:04:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 18:04:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:04:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4275c20c: startup date [Mon Mar 18 18:04:11 CST 2019]; root of context hierarchy
2019-03-18 18:04:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:04:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:04:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:04:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 18:04:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 18:04:53 -Registering beans for JMX exposure on startup
2019-03-18 18:04:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 18:04:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 18:04:53 -Starting beans in phase 2147483647
2019-03-18 18:04:53 -Context refreshed
2019-03-18 18:04:53 -Found 1 custom documentation plugin(s)
2019-03-18 18:04:53 -Scanning for api listing references
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_1
2019-03-18 18:04:54 -Generating unique operation named: addUsingGET_1
2019-03-18 18:04:54 -Generating unique operation named: editUsingGET_1
2019-03-18 18:04:54 -Generating unique operation named: listUsingGET_1
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_2
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_3
2019-03-18 18:04:54 -Generating unique operation named: saveUsingPOST_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingGET_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPOST_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPUT_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 18:04:54 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 18:04:54 -Generating unique operation named: addUsingGET_2
2019-03-18 18:04:54 -Generating unique operation named: editUsingGET_2
2019-03-18 18:04:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 18:04:54 -Generating unique operation named: listUsingGET_2
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_4
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_5
2019-03-18 18:04:54 -Generating unique operation named: saveUsingPOST_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingGET_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPOST_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPUT_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 18:04:54 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 18:04:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 18:04:54 -Generating unique operation named: addUsingGET_3
2019-03-18 18:04:54 -Generating unique operation named: editUsingGET_3
2019-03-18 18:04:54 -Generating unique operation named: listUsingGET_3
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_6
2019-03-18 18:04:54 -Generating unique operation named: removeUsingPOST_7
2019-03-18 18:04:54 -Generating unique operation named: saveUsingPOST_3
2019-03-18 18:04:54 -Generating unique operation named: updateUsingGET_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPUT_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 18:04:55 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 18:04:55 -Generating unique operation named: addUsingGET_4
2019-03-18 18:04:55 -Generating unique operation named: editUsingGET_4
2019-03-18 18:04:55 -Generating unique operation named: listUsingGET_4
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_8
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_9
2019-03-18 18:04:55 -Generating unique operation named: saveUsingPOST_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingGET_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPUT_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 18:04:55 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 18:04:55 -Generating unique operation named: ElecUsingGET_1
2019-03-18 18:04:55 -Generating unique operation named: addUsingGET_5
2019-03-18 18:04:55 -Generating unique operation named: editUsingGET_5
2019-03-18 18:04:55 -Generating unique operation named: listUsingGET_5
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_10
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_11
2019-03-18 18:04:55 -Generating unique operation named: saveUsingPOST_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingGET_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPUT_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 18:04:55 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 18:04:55 -Generating unique operation named: editUsingGET_6
2019-03-18 18:04:55 -Generating unique operation named: listUsingGET_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_6
2019-03-18 18:04:55 -Generating unique operation named: addUsingGET_6
2019-03-18 18:04:55 -Generating unique operation named: editUsingGET_7
2019-03-18 18:04:55 -Generating unique operation named: listUsingGET_7
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_12
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_13
2019-03-18 18:04:55 -Generating unique operation named: saveUsingPOST_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingGET_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPUT_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 18:04:55 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 18:04:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 18:04:55 -Generating unique operation named: addUsingGET_7
2019-03-18 18:04:55 -Generating unique operation named: editUsingGET_8
2019-03-18 18:04:55 -Generating unique operation named: listUsingGET_8
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_14
2019-03-18 18:04:55 -Generating unique operation named: removeUsingPOST_15
2019-03-18 18:04:55 -Generating unique operation named: saveUsingPOST_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingGET_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPOST_8
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPUT_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 18:04:55 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_8
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_9
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_9
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_16
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_17
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingGET_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPUT_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 18:04:56 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_9
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_10
2019-03-18 18:04:56 -Generating unique operation named: infoUsingGET_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingPOST_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingPUT_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 18:04:56 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_10
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_18
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_19
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_10
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_11
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_20
2019-03-18 18:04:56 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_10
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_11
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_12
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_21
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_10
2019-03-18 18:04:56 -Generating unique operation named: treeUsingGET_1
2019-03-18 18:04:56 -Generating unique operation named: treeUsingGET_2
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_11
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_11
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_12
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_13
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_22
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_23
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_11
2019-03-18 18:04:56 -Generating unique operation named: updateUsingGET_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_12
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPUT_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 18:04:56 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_12
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_13
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_14
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_24
2019-03-18 18:04:56 -Generating unique operation named: removeUsingPOST_25
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_12
2019-03-18 18:04:56 -Generating unique operation named: updateUsingGET_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_13
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPUT_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 18:04:56 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 18:04:56 -Generating unique operation named: addUsingGET_13
2019-03-18 18:04:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 18:04:56 -Generating unique operation named: editUsingGET_14
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_15
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_13
2019-03-18 18:04:56 -Generating unique operation named: saveUsingPOST_14
2019-03-18 18:04:56 -Generating unique operation named: updateUsingPOST_14
2019-03-18 18:04:56 -Generating unique operation named: listUsingGET_16
2019-03-18 18:04:56 -Generating unique operation named: listUsingHEAD_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingPOST_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingPUT_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingPATCH_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingDELETE_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 18:04:56 -Generating unique operation named: listUsingTRACE_1
2019-03-18 18:04:57 -Generating unique operation named: addUsingGET_14
2019-03-18 18:04:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 18:04:57 -Generating unique operation named: editUsingGET_15
2019-03-18 18:04:57 -Generating unique operation named: listUsingGET_17
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_26
2019-03-18 18:04:57 -Generating unique operation named: saveUsingPOST_15
2019-03-18 18:04:57 -Generating unique operation named: treeUsingGET_3
2019-03-18 18:04:57 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPOST_15
2019-03-18 18:04:57 -Generating unique operation named: addUsingGET_15
2019-03-18 18:04:57 -Generating unique operation named: editUsingGET_16
2019-03-18 18:04:57 -Generating unique operation named: listUsingGET_18
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_27
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_28
2019-03-18 18:04:57 -Generating unique operation named: saveUsingPOST_16
2019-03-18 18:04:57 -Generating unique operation named: updateUsingGET_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPOST_16
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPUT_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 18:04:57 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 18:04:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 18:04:57 -Generating unique operation named: addUsingGET_16
2019-03-18 18:04:57 -Generating unique operation named: editUsingGET_17
2019-03-18 18:04:57 -Generating unique operation named: listUsingGET_19
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_29
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_30
2019-03-18 18:04:57 -Generating unique operation named: saveUsingPOST_17
2019-03-18 18:04:57 -Generating unique operation named: updateUsingGET_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPOST_17
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPUT_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 18:04:57 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 18:04:57 -Generating unique operation named: addUsingGET_17
2019-03-18 18:04:57 -Generating unique operation named: editUsingGET_18
2019-03-18 18:04:57 -Generating unique operation named: listUsingGET_20
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_31
2019-03-18 18:04:57 -Generating unique operation named: removeUsingPOST_32
2019-03-18 18:04:57 -Generating unique operation named: saveUsingPOST_18
2019-03-18 18:04:57 -Generating unique operation named: updateUsingGET_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPOST_18
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPUT_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 18:04:57 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 18:04:57 -Starting Quartz Scheduler now
2019-03-18 18:04:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 18:04:57 -Starting...
2019-03-18 18:04:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 18:04:57 -Started.
2019-03-18 18:04:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 18:04:57 -Using a shared selector for servlet write/read
2019-03-18 18:04:58 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 18:04:58 -Started BootdoApplication in 48.915 seconds (JVM running for 50.695)
2019-03-18 18:04:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 18:04:58 -==> Parameters: 
2019-03-18 18:04:59 -<==      Total: 1
2019-03-18 18:05:48 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 18:07:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 18:07:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 18:07:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-03-18 18:07:21 -Enabling session validation scheduler...
2019-03-18 18:07:21 -请求地址 : http://localhost:8081/
2019-03-18 18:07:21 -HTTP METHOD : GET
2019-03-18 18:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 18:07:21 -参数 : [{}]
2019-03-18 18:07:21 -耗时 : 7
2019-03-18 18:07:21 -返回值 : redirect:/index
2019-03-18 18:07:21 -请求地址 : http://localhost:8081/login;JSESSIONID=a9882842-4499-457d-961e-60cedfaf3ab4
2019-03-18 18:07:21 -HTTP METHOD : GET
2019-03-18 18:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 18:07:21 -参数 : [{}]
2019-03-18 18:07:21 -耗时 : 0
2019-03-18 18:07:21 -返回值 : login
2019-03-18 18:07:24 -请求地址 : http://localhost:8081/getVerify
2019-03-18 18:07:24 -HTTP METHOD : GET
2019-03-18 18:07:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 18:07:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c4cf958, org.apache.shiro.web.servlet.ShiroHttpServletResponse@216bd5ab]
2019-03-18 18:07:30 -0315
2019-03-18 18:07:30 -耗时 : 5981
2019-03-18 18:07:30 -返回值 : null
2019-03-18 18:07:31 -请求地址 : http://localhost:8081/login
2019-03-18 18:07:31 -HTTP METHOD : GET
2019-03-18 18:07:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 18:07:31 -参数 : [{}]
2019-03-18 18:07:31 -耗时 : 1
2019-03-18 18:07:31 -返回值 : login
2019-03-18 18:08:02 -请求地址 : http://localhost:8081/login
2019-03-18 18:08:02 -HTTP METHOD : POST
2019-03-18 18:08:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 18:08:02 -参数 : [admin, 111111, 0315, org.apache.shiro.web.servlet.ShiroHttpServletRequest@428904ed]
2019-03-18 18:08:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 18:08:02 -==> Parameters: admin(String)
2019-03-18 18:08:02 -<==      Total: 1
2019-03-18 18:08:02 -耗时 : 531
2019-03-18 18:08:02 -返回值 : {msg=操作成功, code=0}
2019-03-18 18:08:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 18:08:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 18:08:03 -==> Parameters: 1(Long), admin(String), 登录(String), 531(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 18:08:03.205(Timestamp)
2019-03-18 18:08:03 -<==    Updates: 1
2019-03-18 18:08:03 -请求地址 : http://localhost:8081/index
2019-03-18 18:08:03 -HTTP METHOD : GET
2019-03-18 18:08:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 18:08:03 -参数 : [{}]
2019-03-18 18:08:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 18:08:04 -==> Parameters: 1(Long)
2019-03-18 18:08:04 -<==      Total: 45
2019-03-18 18:08:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 18:08:04 -==> Parameters: 138(Long)
2019-03-18 18:08:04 -<==      Total: 1
2019-03-18 18:08:04 -耗时 : 1119
2019-03-18 18:08:04 -返回值 : index_v1
2019-03-18 18:08:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 18:08:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 18:08:05.149(Timestamp)
2019-03-18 18:08:05 -<==    Updates: 1
2019-03-18 18:08:05 -请求地址 : http://localhost:8081/main
2019-03-18 18:08:05 -HTTP METHOD : GET
2019-03-18 18:08:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:08:05 -参数 : []
2019-03-18 18:08:05 -耗时 : 1
2019-03-18 18:08:05 -返回值 : main
2019-03-18 18:08:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 18:08:08 -HTTP METHOD : GET
2019-03-18 18:08:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 18:08:08 -参数 : []
2019-03-18 18:08:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 18:08:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 18:08:08 -<==      Total: 0
2019-03-18 18:08:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 18:08:08 -==> Parameters: 1(Long), 0(String)
2019-03-18 18:08:08 -<==      Total: 1
2019-03-18 18:08:08 -耗时 : 213
2019-03-18 18:08:08 -返回值 : com.bootdo.common.utils.PageUtils@7e680189
2019-03-18 18:08:09 -请求地址 : http://localhost:8081/main
2019-03-18 18:08:09 -HTTP METHOD : GET
2019-03-18 18:08:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:08:09 -参数 : []
2019-03-18 18:08:09 -耗时 : 1
2019-03-18 18:08:09 -返回值 : main
2019-03-18 18:08:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 18:08:20 -==> Parameters: 1(Long)
2019-03-18 18:08:20 -<==      Total: 86
2019-03-18 18:08:20 -请求地址 : http://localhost:8081/water/water
2019-03-18 18:08:20 -HTTP METHOD : GET
2019-03-18 18:08:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-18 18:08:20 -参数 : []
2019-03-18 18:08:20 -耗时 : 0
2019-03-18 18:08:20 -返回值 : water/water/water
2019-03-18 18:08:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:08:22 -HTTP METHOD : GET
2019-03-18 18:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:22 -参数 : [userType]
2019-03-18 18:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:22 -==> Parameters: userType(String)
2019-03-18 18:08:22 -<==      Total: 2
2019-03-18 18:08:22 -耗时 : 34
2019-03-18 18:08:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:22 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:08:22 -HTTP METHOD : GET
2019-03-18 18:08:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:08:22 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 18:08:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-18 18:08:22 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 18:08:23 -<==      Total: 2
2019-03-18 18:08:23 -==>  Preparing: select count(*) from water 
2019-03-18 18:08:23 -==> Parameters: 
2019-03-18 18:08:23 -<==      Total: 1
2019-03-18 18:08:23 -耗时 : 172
2019-03-18 18:08:23 -返回值 : com.bootdo.common.utils.PageUtils@711b766b
2019-03-18 18:08:33 -请求地址 : http://localhost:8081/water/water/edit/2
2019-03-18 18:08:33 -HTTP METHOD : GET
2019-03-18 18:08:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-18 18:08:33 -参数 : [2, {}]
2019-03-18 18:08:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-18 18:08:33 -==> Parameters: 2(Long)
2019-03-18 18:08:33 -<==      Total: 1
2019-03-18 18:08:33 -耗时 : 11
2019-03-18 18:08:33 -返回值 : water/water/edit
2019-03-18 18:08:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:08:34 -HTTP METHOD : GET
2019-03-18 18:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:34 -参数 : [userType]
2019-03-18 18:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:34 -==> Parameters: userType(String)
2019-03-18 18:08:34 -<==      Total: 2
2019-03-18 18:08:34 -耗时 : 5
2019-03-18 18:08:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:34 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:08:34 -HTTP METHOD : GET
2019-03-18 18:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:34 -参数 : [userState]
2019-03-18 18:08:34 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:08:34 -HTTP METHOD : GET
2019-03-18 18:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:34 -参数 : [waterType]
2019-03-18 18:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:34 -==> Parameters: waterType(String)
2019-03-18 18:08:34 -<==      Total: 6
2019-03-18 18:08:34 -耗时 : 9
2019-03-18 18:08:34 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:34 -==> Parameters: userState(String)
2019-03-18 18:08:34 -<==      Total: 2
2019-03-18 18:08:34 -耗时 : 27
2019-03-18 18:08:34 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:39 -请求地址 : http://localhost:8081/water/water/add
2019-03-18 18:08:39 -HTTP METHOD : GET
2019-03-18 18:08:39 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-03-18 18:08:39 -参数 : []
2019-03-18 18:08:39 -耗时 : 1
2019-03-18 18:08:39 -返回值 : water/water/add
2019-03-18 18:08:39 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:08:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:08:39 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:08:39 -HTTP METHOD : GET
2019-03-18 18:08:39 -HTTP METHOD : GET
2019-03-18 18:08:39 -HTTP METHOD : GET
2019-03-18 18:08:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:08:39 -参数 : [userState]
2019-03-18 18:08:39 -参数 : [userType]
2019-03-18 18:08:39 -参数 : [waterType]
2019-03-18 18:08:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:39 -==> Parameters: userType(String)
2019-03-18 18:08:39 -==> Parameters: waterType(String)
2019-03-18 18:08:39 -<==      Total: 6
2019-03-18 18:08:39 -耗时 : 13
2019-03-18 18:08:39 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:08:39 -==> Parameters: userState(String)
2019-03-18 18:08:39 -<==      Total: 2
2019-03-18 18:08:39 -耗时 : 38
2019-03-18 18:08:39 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:40 -<==      Total: 2
2019-03-18 18:08:40 -耗时 : 199
2019-03-18 18:08:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:08:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:08:41 -HTTP METHOD : GET
2019-03-18 18:08:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:08:41 -参数 : []
2019-03-18 18:08:41 -耗时 : 1
2019-03-18 18:08:41 -返回值 : system/dept/deptTree
2019-03-18 18:08:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:08:41 -HTTP METHOD : GET
2019-03-18 18:08:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:08:41 -参数 : []
2019-03-18 18:08:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:08:41 -==> Parameters: 
2019-03-18 18:08:42 -<==      Total: 3
2019-03-18 18:08:42 -耗时 : 98
2019-03-18 18:08:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:10:02 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:02 -HTTP METHOD : GET
2019-03-18 18:10:02 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:02 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03}]
2019-03-18 18:10:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:02 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:03 -<==      Total: 1
2019-03-18 18:10:03 -==>  Preparing: select count(*) from water WHERE user_type = ? and create_time = ? 
2019-03-18 18:10:03 -==> Parameters: B(String), 2019-03(String)
2019-03-18 18:10:03 -<==      Total: 1
2019-03-18 18:10:03 -耗时 : 231
2019-03-18 18:10:03 -返回值 : com.bootdo.common.utils.PageUtils@1c3b7d0e
2019-03-18 18:10:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:10:03 -HTTP METHOD : GET
2019-03-18 18:10:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:10:03 -参数 : []
2019-03-18 18:10:03 -耗时 : 0
2019-03-18 18:10:03 -返回值 : system/dept/deptTree
2019-03-18 18:10:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:10:03 -HTTP METHOD : GET
2019-03-18 18:10:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:10:03 -参数 : []
2019-03-18 18:10:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:10:03 -==> Parameters: 
2019-03-18 18:10:03 -<==      Total: 3
2019-03-18 18:10:03 -耗时 : 4
2019-03-18 18:10:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:10:06 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:06 -HTTP METHOD : GET
2019-03-18 18:10:06 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:06 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:10:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:06 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:06 -<==      Total: 1
2019-03-18 18:10:06 -==>  Preparing: select count(*) from water WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 18:10:06 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-18 18:10:06 -<==      Total: 1
2019-03-18 18:10:06 -耗时 : 14
2019-03-18 18:10:06 -返回值 : com.bootdo.common.utils.PageUtils@e555670
2019-03-18 18:10:06 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:06 -HTTP METHOD : GET
2019-03-18 18:10:06 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:06 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:10:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:06 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:06 -<==      Total: 1
2019-03-18 18:10:06 -==>  Preparing: select count(*) from water WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 18:10:06 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-18 18:10:06 -<==      Total: 1
2019-03-18 18:10:06 -耗时 : 9
2019-03-18 18:10:06 -返回值 : com.bootdo.common.utils.PageUtils@344f1ccb
2019-03-18 18:10:07 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:07 -HTTP METHOD : GET
2019-03-18 18:10:07 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:07 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:10:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:07 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:07 -<==      Total: 1
2019-03-18 18:10:07 -==>  Preparing: select count(*) from water WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 18:10:07 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-18 18:10:07 -<==      Total: 1
2019-03-18 18:10:07 -耗时 : 8
2019-03-18 18:10:07 -返回值 : com.bootdo.common.utils.PageUtils@31f36674
2019-03-18 18:10:11 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:11 -HTTP METHOD : GET
2019-03-18 18:10:11 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:11 -参数 : [{limit=3, offset=0, userType=, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:10:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:11 -==> Parameters: 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:11 -<==      Total: 1
2019-03-18 18:10:11 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:11 -==> Parameters: 3(String), 2019-03(String)
2019-03-18 18:10:11 -<==      Total: 1
2019-03-18 18:10:11 -耗时 : 15
2019-03-18 18:10:11 -返回值 : com.bootdo.common.utils.PageUtils@4ab8b438
2019-03-18 18:10:13 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:13 -HTTP METHOD : GET
2019-03-18 18:10:13 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:13 -参数 : [{limit=3, offset=0, userType=, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:10:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:13 -==> Parameters: 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:13 -<==      Total: 1
2019-03-18 18:10:13 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:13 -==> Parameters: 3(String), 2019-03(String)
2019-03-18 18:10:13 -<==      Total: 1
2019-03-18 18:10:13 -耗时 : 15
2019-03-18 18:10:13 -返回值 : com.bootdo.common.utils.PageUtils@73e5b43c
2019-03-18 18:10:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:10:14 -HTTP METHOD : GET
2019-03-18 18:10:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:10:14 -参数 : []
2019-03-18 18:10:14 -耗时 : 0
2019-03-18 18:10:14 -返回值 : system/dept/deptTree
2019-03-18 18:10:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:10:14 -HTTP METHOD : GET
2019-03-18 18:10:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:10:14 -参数 : []
2019-03-18 18:10:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:10:14 -==> Parameters: 
2019-03-18 18:10:14 -<==      Total: 3
2019-03-18 18:10:14 -耗时 : 4
2019-03-18 18:10:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:10:16 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:16 -HTTP METHOD : GET
2019-03-18 18:10:16 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:16 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:16 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:16 -<==      Total: 0
2019-03-18 18:10:16 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:16 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:16 -<==      Total: 1
2019-03-18 18:10:16 -耗时 : 8
2019-03-18 18:10:16 -返回值 : com.bootdo.common.utils.PageUtils@16268a22
2019-03-18 18:10:17 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:17 -HTTP METHOD : GET
2019-03-18 18:10:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:17 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:17 -<==      Total: 0
2019-03-18 18:10:17 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:17 -<==      Total: 1
2019-03-18 18:10:17 -耗时 : 7
2019-03-18 18:10:17 -返回值 : com.bootdo.common.utils.PageUtils@31fa1de3
2019-03-18 18:10:17 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:17 -HTTP METHOD : GET
2019-03-18 18:10:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:17 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:17 -<==      Total: 0
2019-03-18 18:10:17 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:17 -<==      Total: 1
2019-03-18 18:10:17 -耗时 : 7
2019-03-18 18:10:17 -返回值 : com.bootdo.common.utils.PageUtils@4f7c23bb
2019-03-18 18:10:17 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:17 -HTTP METHOD : GET
2019-03-18 18:10:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:17 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:17 -<==      Total: 0
2019-03-18 18:10:17 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:17 -<==      Total: 1
2019-03-18 18:10:17 -耗时 : 9
2019-03-18 18:10:17 -返回值 : com.bootdo.common.utils.PageUtils@3bb754f5
2019-03-18 18:10:17 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:17 -HTTP METHOD : GET
2019-03-18 18:10:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:17 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:17 -<==      Total: 0
2019-03-18 18:10:17 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:17 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:17 -<==      Total: 1
2019-03-18 18:10:17 -耗时 : 8
2019-03-18 18:10:17 -返回值 : com.bootdo.common.utils.PageUtils@64a175a4
2019-03-18 18:10:18 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:18 -HTTP METHOD : GET
2019-03-18 18:10:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:18 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:18 -<==      Total: 0
2019-03-18 18:10:18 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:18 -<==      Total: 1
2019-03-18 18:10:18 -耗时 : 9
2019-03-18 18:10:18 -返回值 : com.bootdo.common.utils.PageUtils@7f2bea6c
2019-03-18 18:10:18 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:18 -HTTP METHOD : GET
2019-03-18 18:10:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:18 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:18 -<==      Total: 0
2019-03-18 18:10:18 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:18 -<==      Total: 1
2019-03-18 18:10:18 -耗时 : 7
2019-03-18 18:10:18 -返回值 : com.bootdo.common.utils.PageUtils@7e2ac9a2
2019-03-18 18:10:18 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:18 -HTTP METHOD : GET
2019-03-18 18:10:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:18 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:18 -<==      Total: 0
2019-03-18 18:10:18 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:18 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:18 -<==      Total: 1
2019-03-18 18:10:18 -耗时 : 6
2019-03-18 18:10:18 -返回值 : com.bootdo.common.utils.PageUtils@42750ac2
2019-03-18 18:10:19 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:19 -HTTP METHOD : GET
2019-03-18 18:10:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:19 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:19 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:19 -<==      Total: 0
2019-03-18 18:10:19 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:19 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:19 -<==      Total: 1
2019-03-18 18:10:19 -耗时 : 7
2019-03-18 18:10:19 -返回值 : com.bootdo.common.utils.PageUtils@72332365
2019-03-18 18:10:19 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:19 -HTTP METHOD : GET
2019-03-18 18:10:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:19 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:19 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:19 -<==      Total: 0
2019-03-18 18:10:19 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:19 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:19 -<==      Total: 1
2019-03-18 18:10:19 -耗时 : 7
2019-03-18 18:10:19 -返回值 : com.bootdo.common.utils.PageUtils@3f70c861
2019-03-18 18:10:20 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:20 -HTTP METHOD : GET
2019-03-18 18:10:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:20 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:20 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:20 -<==      Total: 0
2019-03-18 18:10:20 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:20 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:20 -<==      Total: 1
2019-03-18 18:10:20 -耗时 : 5
2019-03-18 18:10:20 -返回值 : com.bootdo.common.utils.PageUtils@52c5ba9c
2019-03-18 18:10:20 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:20 -HTTP METHOD : GET
2019-03-18 18:10:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:20 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:20 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:20 -<==      Total: 0
2019-03-18 18:10:20 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:20 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:20 -<==      Total: 1
2019-03-18 18:10:20 -耗时 : 17
2019-03-18 18:10:20 -返回值 : com.bootdo.common.utils.PageUtils@61d76b9f
2019-03-18 18:10:21 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:21 -HTTP METHOD : GET
2019-03-18 18:10:21 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:21 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:21 -<==      Total: 0
2019-03-18 18:10:21 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:21 -<==      Total: 1
2019-03-18 18:10:21 -耗时 : 7
2019-03-18 18:10:21 -返回值 : com.bootdo.common.utils.PageUtils@76d4de0c
2019-03-18 18:10:21 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:21 -HTTP METHOD : GET
2019-03-18 18:10:21 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:21 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:21 -<==      Total: 0
2019-03-18 18:10:21 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:21 -<==      Total: 1
2019-03-18 18:10:21 -耗时 : 7
2019-03-18 18:10:21 -返回值 : com.bootdo.common.utils.PageUtils@3adae7a4
2019-03-18 18:10:21 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:21 -HTTP METHOD : GET
2019-03-18 18:10:21 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:21 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:21 -<==      Total: 0
2019-03-18 18:10:21 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:21 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:21 -<==      Total: 1
2019-03-18 18:10:21 -耗时 : 9
2019-03-18 18:10:21 -返回值 : com.bootdo.common.utils.PageUtils@716a6a69
2019-03-18 18:10:22 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:22 -HTTP METHOD : GET
2019-03-18 18:10:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:22 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:22 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:22 -<==      Total: 0
2019-03-18 18:10:22 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:22 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:22 -<==      Total: 1
2019-03-18 18:10:22 -耗时 : 7
2019-03-18 18:10:22 -返回值 : com.bootdo.common.utils.PageUtils@484252f9
2019-03-18 18:10:22 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:22 -HTTP METHOD : GET
2019-03-18 18:10:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:22 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:22 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:22 -<==      Total: 0
2019-03-18 18:10:22 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:22 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:22 -<==      Total: 1
2019-03-18 18:10:22 -耗时 : 9
2019-03-18 18:10:22 -返回值 : com.bootdo.common.utils.PageUtils@4fe2054d
2019-03-18 18:10:22 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:22 -HTTP METHOD : GET
2019-03-18 18:10:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:22 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:22 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:23 -<==      Total: 0
2019-03-18 18:10:23 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:23 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:23 -<==      Total: 1
2019-03-18 18:10:23 -耗时 : 6
2019-03-18 18:10:23 -返回值 : com.bootdo.common.utils.PageUtils@13bd505d
2019-03-18 18:10:25 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:25 -HTTP METHOD : GET
2019-03-18 18:10:25 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:25 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:25 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:25 -<==      Total: 0
2019-03-18 18:10:25 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:25 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:25 -<==      Total: 1
2019-03-18 18:10:25 -耗时 : 6
2019-03-18 18:10:25 -返回值 : com.bootdo.common.utils.PageUtils@7b6a33b2
2019-03-18 18:10:26 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:26 -HTTP METHOD : GET
2019-03-18 18:10:26 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:26 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:26 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:26 -<==      Total: 0
2019-03-18 18:10:26 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:26 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:26 -<==      Total: 1
2019-03-18 18:10:26 -耗时 : 7
2019-03-18 18:10:26 -返回值 : com.bootdo.common.utils.PageUtils@388363c3
2019-03-18 18:10:26 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:26 -HTTP METHOD : GET
2019-03-18 18:10:26 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:26 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:26 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:26 -<==      Total: 0
2019-03-18 18:10:26 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:26 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:26 -<==      Total: 1
2019-03-18 18:10:26 -耗时 : 6
2019-03-18 18:10:26 -返回值 : com.bootdo.common.utils.PageUtils@594a7e49
2019-03-18 18:10:27 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:27 -HTTP METHOD : GET
2019-03-18 18:10:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:27 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:27 -<==      Total: 0
2019-03-18 18:10:27 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:27 -<==      Total: 1
2019-03-18 18:10:27 -耗时 : 6
2019-03-18 18:10:27 -返回值 : com.bootdo.common.utils.PageUtils@74cb8b4d
2019-03-18 18:10:27 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:27 -HTTP METHOD : GET
2019-03-18 18:10:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:27 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:27 -<==      Total: 0
2019-03-18 18:10:27 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:27 -<==      Total: 1
2019-03-18 18:10:27 -耗时 : 4
2019-03-18 18:10:27 -返回值 : com.bootdo.common.utils.PageUtils@73f6a556
2019-03-18 18:10:27 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:27 -HTTP METHOD : GET
2019-03-18 18:10:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:27 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 18:10:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:10:27 -<==      Total: 0
2019-03-18 18:10:27 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:27 -==> Parameters: 2(String), 2019-03(String)
2019-03-18 18:10:27 -<==      Total: 1
2019-03-18 18:10:27 -耗时 : 5
2019-03-18 18:10:27 -返回值 : com.bootdo.common.utils.PageUtils@1deb65c
2019-03-18 18:10:35 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:10:35 -HTTP METHOD : GET
2019-03-18 18:10:35 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:10:35 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-02}]
2019-03-18 18:10:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:10:35 -==> Parameters: 2(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-18 18:10:35 -<==      Total: 1
2019-03-18 18:10:35 -==>  Preparing: select count(*) from water WHERE user_org = ? and create_time = ? 
2019-03-18 18:10:35 -==> Parameters: 2(String), 2019-02(String)
2019-03-18 18:10:35 -<==      Total: 1
2019-03-18 18:10:35 -耗时 : 7
2019-03-18 18:10:35 -返回值 : com.bootdo.common.utils.PageUtils@18122c04
2019-03-18 18:12:29 -请求地址 : http://localhost:8081/index
2019-03-18 18:12:29 -HTTP METHOD : GET
2019-03-18 18:12:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 18:12:29 -参数 : [{}]
2019-03-18 18:12:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 18:12:29 -==> Parameters: 1(Long)
2019-03-18 18:12:30 -<==      Total: 45
2019-03-18 18:12:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 18:12:30 -==> Parameters: 138(Long)
2019-03-18 18:12:30 -<==      Total: 1
2019-03-18 18:12:30 -耗时 : 210
2019-03-18 18:12:30 -返回值 : index_v1
2019-03-18 18:12:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 18:12:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 210(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 18:12:30.094(Timestamp)
2019-03-18 18:12:30 -请求地址 : http://localhost:8081/main
2019-03-18 18:12:30 -HTTP METHOD : GET
2019-03-18 18:12:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:12:30 -参数 : []
2019-03-18 18:12:30 -耗时 : 1
2019-03-18 18:12:30 -返回值 : main
2019-03-18 18:12:30 -<==    Updates: 1
2019-03-18 18:12:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 18:12:30 -HTTP METHOD : GET
2019-03-18 18:12:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 18:12:30 -参数 : []
2019-03-18 18:12:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 18:12:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 18:12:30 -<==      Total: 0
2019-03-18 18:12:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 18:12:30 -==> Parameters: 1(Long), 0(String)
2019-03-18 18:12:30 -<==      Total: 1
2019-03-18 18:12:30 -耗时 : 50
2019-03-18 18:12:30 -返回值 : com.bootdo.common.utils.PageUtils@4f06c917
2019-03-18 18:12:30 -请求地址 : http://localhost:8081/main
2019-03-18 18:12:30 -HTTP METHOD : GET
2019-03-18 18:12:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:12:30 -参数 : []
2019-03-18 18:12:30 -耗时 : 2
2019-03-18 18:12:30 -返回值 : main
2019-03-18 18:12:33 -请求地址 : http://localhost:8081/water/water
2019-03-18 18:12:33 -HTTP METHOD : GET
2019-03-18 18:12:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-18 18:12:33 -参数 : []
2019-03-18 18:12:33 -耗时 : 1
2019-03-18 18:12:33 -返回值 : water/water/water
2019-03-18 18:12:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:12:33 -HTTP METHOD : GET
2019-03-18 18:12:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:12:33 -参数 : [userType]
2019-03-18 18:12:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:12:33 -==> Parameters: userType(String)
2019-03-18 18:12:33 -<==      Total: 2
2019-03-18 18:12:33 -耗时 : 4
2019-03-18 18:12:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:12:34 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:12:34 -HTTP METHOD : GET
2019-03-18 18:12:34 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:12:34 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 18:12:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-18 18:12:34 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 18:12:34 -<==      Total: 2
2019-03-18 18:12:34 -==>  Preparing: select count(*) from water 
2019-03-18 18:12:34 -==> Parameters: 
2019-03-18 18:12:34 -<==      Total: 1
2019-03-18 18:12:34 -耗时 : 7
2019-03-18 18:12:34 -返回值 : com.bootdo.common.utils.PageUtils@c149b39
2019-03-18 18:12:57 -请求地址 : http://localhost:8081/water/water/add
2019-03-18 18:12:57 -HTTP METHOD : GET
2019-03-18 18:12:57 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-03-18 18:12:57 -参数 : []
2019-03-18 18:12:57 -耗时 : 1
2019-03-18 18:12:57 -返回值 : water/water/add
2019-03-18 18:12:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:12:58 -HTTP METHOD : GET
2019-03-18 18:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:12:58 -参数 : [userType]
2019-03-18 18:12:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:12:58 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:12:58 -==> Parameters: userType(String)
2019-03-18 18:12:58 -HTTP METHOD : GET
2019-03-18 18:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:12:58 -参数 : [userState]
2019-03-18 18:12:58 -<==      Total: 2
2019-03-18 18:12:58 -耗时 : 4
2019-03-18 18:12:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:12:58 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:12:58 -HTTP METHOD : GET
2019-03-18 18:12:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:12:58 -参数 : [waterType]
2019-03-18 18:12:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:12:58 -==> Parameters: waterType(String)
2019-03-18 18:12:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:12:58 -==> Parameters: userState(String)
2019-03-18 18:12:58 -<==      Total: 6
2019-03-18 18:12:58 -耗时 : 11
2019-03-18 18:12:58 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:12:58 -<==      Total: 2
2019-03-18 18:12:58 -耗时 : 80
2019-03-18 18:12:58 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:01 -请求地址 : http://localhost:8081/water/water/edit/1
2019-03-18 18:13:01 -HTTP METHOD : GET
2019-03-18 18:13:01 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-18 18:13:01 -参数 : [1, {}]
2019-03-18 18:13:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-18 18:13:01 -==> Parameters: 1(Long)
2019-03-18 18:13:01 -<==      Total: 1
2019-03-18 18:13:01 -耗时 : 20
2019-03-18 18:13:01 -返回值 : water/water/edit
2019-03-18 18:13:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:13:01 -HTTP METHOD : GET
2019-03-18 18:13:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:01 -参数 : [userType]
2019-03-18 18:13:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:01 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:13:01 -HTTP METHOD : GET
2019-03-18 18:13:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:01 -参数 : [userState]
2019-03-18 18:13:01 -==> Parameters: userType(String)
2019-03-18 18:13:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:01 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:13:01 -==> Parameters: userState(String)
2019-03-18 18:13:01 -HTTP METHOD : GET
2019-03-18 18:13:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:01 -参数 : [waterType]
2019-03-18 18:13:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:01 -==> Parameters: waterType(String)
2019-03-18 18:13:01 -<==      Total: 2
2019-03-18 18:13:01 -<==      Total: 2
2019-03-18 18:13:01 -耗时 : 4
2019-03-18 18:13:01 -耗时 : 3
2019-03-18 18:13:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:01 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:01 -<==      Total: 6
2019-03-18 18:13:01 -耗时 : 5
2019-03-18 18:13:01 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:13:03 -HTTP METHOD : GET
2019-03-18 18:13:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:13:03 -参数 : []
2019-03-18 18:13:03 -耗时 : 1
2019-03-18 18:13:03 -返回值 : system/dept/deptTree
2019-03-18 18:13:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:13:04 -HTTP METHOD : GET
2019-03-18 18:13:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:13:04 -参数 : []
2019-03-18 18:13:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:13:04 -==> Parameters: 
2019-03-18 18:13:04 -<==      Total: 3
2019-03-18 18:13:04 -耗时 : 4
2019-03-18 18:13:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:13:11 -请求地址 : http://localhost:8081/water/water/add
2019-03-18 18:13:11 -HTTP METHOD : GET
2019-03-18 18:13:11 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-03-18 18:13:11 -参数 : []
2019-03-18 18:13:11 -耗时 : 0
2019-03-18 18:13:11 -返回值 : water/water/add
2019-03-18 18:13:11 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:13:11 -HTTP METHOD : GET
2019-03-18 18:13:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:11 -参数 : [userState]
2019-03-18 18:13:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:13:11 -HTTP METHOD : GET
2019-03-18 18:13:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:11 -参数 : [userType]
2019-03-18 18:13:11 -==> Parameters: userState(String)
2019-03-18 18:13:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:11 -==> Parameters: userType(String)
2019-03-18 18:13:11 -<==      Total: 2
2019-03-18 18:13:11 -耗时 : 6
2019-03-18 18:13:11 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:11 -<==      Total: 2
2019-03-18 18:13:11 -耗时 : 10
2019-03-18 18:13:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:11 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:13:11 -HTTP METHOD : GET
2019-03-18 18:13:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:13:11 -参数 : [waterType]
2019-03-18 18:13:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:13:11 -==> Parameters: waterType(String)
2019-03-18 18:13:11 -<==      Total: 6
2019-03-18 18:13:11 -耗时 : 5
2019-03-18 18:13:11 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:13:11 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 18:13:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:13:12 -HTTP METHOD : GET
2019-03-18 18:13:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:13:12 -参数 : []
2019-03-18 18:13:12 -耗时 : 0
2019-03-18 18:13:12 -返回值 : system/dept/deptTree
2019-03-18 18:13:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:13:12 -HTTP METHOD : GET
2019-03-18 18:13:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:13:12 -参数 : []
2019-03-18 18:13:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:13:12 -==> Parameters: 
2019-03-18 18:13:12 -<==      Total: 3
2019-03-18 18:13:12 -耗时 : 4
2019-03-18 18:13:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:15:48 -请求地址 : http://localhost:8081/water/water/edit/2
2019-03-18 18:15:48 -HTTP METHOD : GET
2019-03-18 18:15:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-18 18:15:48 -参数 : [2, {}]
2019-03-18 18:15:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-18 18:15:48 -==> Parameters: 2(Long)
2019-03-18 18:15:48 -<==      Total: 1
2019-03-18 18:15:48 -耗时 : 5
2019-03-18 18:15:48 -返回值 : water/water/edit
2019-03-18 18:15:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:15:48 -HTTP METHOD : GET
2019-03-18 18:15:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:48 -参数 : [userType]
2019-03-18 18:15:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:48 -==> Parameters: userType(String)
2019-03-18 18:15:48 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:15:48 -HTTP METHOD : GET
2019-03-18 18:15:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:48 -参数 : [userState]
2019-03-18 18:15:48 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:15:48 -HTTP METHOD : GET
2019-03-18 18:15:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:48 -参数 : [waterType]
2019-03-18 18:15:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:48 -==> Parameters: userState(String)
2019-03-18 18:15:48 -<==      Total: 2
2019-03-18 18:15:48 -耗时 : 6
2019-03-18 18:15:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:15:48 -<==      Total: 2
2019-03-18 18:15:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:48 -耗时 : 8
2019-03-18 18:15:48 -==> Parameters: waterType(String)
2019-03-18 18:15:48 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:15:48 -<==      Total: 6
2019-03-18 18:15:48 -耗时 : 10
2019-03-18 18:15:48 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:15:50 -请求地址 : http://localhost:8081/water/water/add
2019-03-18 18:15:50 -HTTP METHOD : GET
2019-03-18 18:15:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-03-18 18:15:50 -参数 : []
2019-03-18 18:15:50 -耗时 : 1
2019-03-18 18:15:50 -返回值 : water/water/add
2019-03-18 18:15:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:15:50 -HTTP METHOD : GET
2019-03-18 18:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:50 -参数 : [userType]
2019-03-18 18:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:50 -==> Parameters: userType(String)
2019-03-18 18:15:50 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-18 18:15:50 -HTTP METHOD : GET
2019-03-18 18:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:50 -参数 : [waterType]
2019-03-18 18:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:50 -==> Parameters: waterType(String)
2019-03-18 18:15:50 -<==      Total: 2
2019-03-18 18:15:50 -耗时 : 8
2019-03-18 18:15:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:15:50 -<==      Total: 6
2019-03-18 18:15:50 -耗时 : 4
2019-03-18 18:15:50 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:15:50 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-18 18:15:50 -HTTP METHOD : GET
2019-03-18 18:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:15:50 -参数 : [userState]
2019-03-18 18:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:15:50 -==> Parameters: userState(String)
2019-03-18 18:15:50 -<==      Total: 2
2019-03-18 18:15:50 -耗时 : 9
2019-03-18 18:15:50 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:35:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 400]
2019-03-18 18:37:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 8524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 18:37:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 18:37:42 -The following profiles are active: dev
2019-03-18 18:37:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58c34bb3: startup date [Mon Mar 18 18:37:42 CST 2019]; root of context hierarchy
2019-03-18 18:37:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 18:37:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$401c451d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$327573c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 18:37:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 18:37:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 18:37:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 18:37:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 18:37:52 -Starting service [Tomcat]
2019-03-18 18:37:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 18:37:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 18:37:53 -Initializing Spring embedded WebApplicationContext
2019-03-18 18:37:53 -Root WebApplicationContext: initialization completed in 10477 ms
2019-03-18 18:37:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 18:37:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 18:37:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 18:37:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 18:37:54 -Filter xssFilter was not registered (disabled)
2019-03-18 18:37:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 18:37:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 18:37:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 18:37:54 -Servlet dispatcherServlet mapped to [/]
2019-03-18 18:37:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58c34bb3: startup date [Mon Mar 18 18:37:42 CST 2019]; root of context hierarchy
2019-03-18 18:37:58 -Using default implementation for ThreadExecutor
2019-03-18 18:37:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 18:37:58 -Quartz Scheduler v.2.2.1 created.
2019-03-18 18:37:58 -RAMJobStore initialized.
2019-03-18 18:37:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 18:37:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 18:37:58 -Quartz scheduler version: 2.2.1
2019-03-18 18:37:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@647af13d
2019-03-18 18:37:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 18:37:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 18:38:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 18:38:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 18:38:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 18:38:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 18:38:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 18:38:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 18:38:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 18:38:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 18:38:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 18:38:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 18:38:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 18:38:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 18:38:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 18:38:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 18:38:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 18:38:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 18:38:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 18:38:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 18:38:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 18:38:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 18:38:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 18:38:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 18:38:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 18:38:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 18:38:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 18:38:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 18:38:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 18:38:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 18:38:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 18:38:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 18:38:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 18:38:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 18:38:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 18:38:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 18:38:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 18:38:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 18:38:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 18:38:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 18:38:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 18:38:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 18:38:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 18:38:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 18:38:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 18:38:02 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 18:38:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 18:38:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 18:38:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 18:38:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 18:38:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 18:38:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 18:38:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 18:38:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 18:38:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 18:38:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 18:38:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 18:38:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 18:38:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 18:38:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 18:38:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:38:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 18:38:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 18:38:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 18:38:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 18:38:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 18:38:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 18:38:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 18:38:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 18:38:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 18:38:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 18:38:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 18:38:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 18:38:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 18:38:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 18:38:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 18:38:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 18:38:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:38:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 18:38:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 18:38:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 18:38:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 18:38:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 18:38:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 18:38:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 18:38:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 18:38:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 18:38:02 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 18:38:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 18:38:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 18:38:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 18:38:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 18:38:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 18:38:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 18:38:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 18:38:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 18:38:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:38:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58c34bb3: startup date [Mon Mar 18 18:37:42 CST 2019]; root of context hierarchy
2019-03-18 18:38:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:38:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:38:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 18:38:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 18:38:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 18:38:06 -Registering beans for JMX exposure on startup
2019-03-18 18:38:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 18:38:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 18:38:06 -Starting beans in phase 2147483647
2019-03-18 18:38:06 -Context refreshed
2019-03-18 18:38:07 -Found 1 custom documentation plugin(s)
2019-03-18 18:38:07 -Scanning for api listing references
2019-03-18 18:38:07 -Generating unique operation named: removeUsingPOST_1
2019-03-18 18:38:07 -Generating unique operation named: addUsingGET_1
2019-03-18 18:38:07 -Generating unique operation named: editUsingGET_1
2019-03-18 18:38:07 -Generating unique operation named: listUsingGET_1
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_2
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_3
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_2
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_2
2019-03-18 18:38:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_2
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_4
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_5
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 18:38:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_3
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_3
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_3
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_6
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_7
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_4
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_4
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_4
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_8
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_9
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 18:38:08 -Generating unique operation named: ElecUsingGET_1
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_5
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_5
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_5
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_10
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_11
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_6
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_6
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_6
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_7
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_7
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_12
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_13
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 18:38:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_7
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_8
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_8
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_14
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_15
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPOST_8
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPUT_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 18:38:08 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 18:38:08 -Generating unique operation named: addUsingGET_8
2019-03-18 18:38:08 -Generating unique operation named: editUsingGET_9
2019-03-18 18:38:08 -Generating unique operation named: listUsingGET_9
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_16
2019-03-18 18:38:08 -Generating unique operation named: removeUsingPOST_17
2019-03-18 18:38:08 -Generating unique operation named: saveUsingPOST_8
2019-03-18 18:38:08 -Generating unique operation named: updateUsingGET_8
2019-03-18 18:38:08 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPUT_8
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 18:38:09 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 18:38:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 18:38:09 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_9
2019-03-18 18:38:09 -Generating unique operation named: editUsingGET_10
2019-03-18 18:38:09 -Generating unique operation named: infoUsingGET_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingPOST_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingPUT_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 18:38:09 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_10
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_18
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_19
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_10
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_11
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_20
2019-03-18 18:38:09 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_10
2019-03-18 18:38:09 -Generating unique operation named: editUsingGET_11
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_12
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_21
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_10
2019-03-18 18:38:09 -Generating unique operation named: treeUsingGET_1
2019-03-18 18:38:09 -Generating unique operation named: treeUsingGET_2
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_11
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_11
2019-03-18 18:38:09 -Generating unique operation named: editUsingGET_12
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_13
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_22
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_23
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_11
2019-03-18 18:38:09 -Generating unique operation named: updateUsingGET_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_12
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPUT_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 18:38:09 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_12
2019-03-18 18:38:09 -Generating unique operation named: editUsingGET_13
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_14
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_24
2019-03-18 18:38:09 -Generating unique operation named: removeUsingPOST_25
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_12
2019-03-18 18:38:09 -Generating unique operation named: updateUsingGET_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_13
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPUT_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 18:38:09 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_13
2019-03-18 18:38:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 18:38:09 -Generating unique operation named: editUsingGET_14
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_15
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_13
2019-03-18 18:38:09 -Generating unique operation named: saveUsingPOST_14
2019-03-18 18:38:09 -Generating unique operation named: updateUsingPOST_14
2019-03-18 18:38:09 -Generating unique operation named: listUsingGET_16
2019-03-18 18:38:09 -Generating unique operation named: listUsingHEAD_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingPOST_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingPUT_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingPATCH_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingDELETE_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 18:38:09 -Generating unique operation named: listUsingTRACE_1
2019-03-18 18:38:09 -Generating unique operation named: addUsingGET_14
2019-03-18 18:38:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 18:38:10 -Generating unique operation named: editUsingGET_15
2019-03-18 18:38:10 -Generating unique operation named: listUsingGET_17
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_26
2019-03-18 18:38:10 -Generating unique operation named: saveUsingPOST_15
2019-03-18 18:38:10 -Generating unique operation named: treeUsingGET_3
2019-03-18 18:38:10 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPOST_15
2019-03-18 18:38:10 -Generating unique operation named: addUsingGET_15
2019-03-18 18:38:10 -Generating unique operation named: editUsingGET_16
2019-03-18 18:38:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 18:38:10 -Generating unique operation named: listUsingGET_18
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_27
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_28
2019-03-18 18:38:10 -Generating unique operation named: saveUsingPOST_16
2019-03-18 18:38:10 -Generating unique operation named: updateUsingGET_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPOST_16
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPUT_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 18:38:10 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 18:38:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 18:38:10 -Generating unique operation named: addUsingGET_16
2019-03-18 18:38:10 -Generating unique operation named: editUsingGET_17
2019-03-18 18:38:10 -Generating unique operation named: listUsingGET_19
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_29
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_30
2019-03-18 18:38:10 -Generating unique operation named: saveUsingPOST_17
2019-03-18 18:38:10 -Generating unique operation named: updateUsingGET_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPOST_17
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPUT_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 18:38:10 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 18:38:10 -Generating unique operation named: addUsingGET_17
2019-03-18 18:38:10 -Generating unique operation named: editUsingGET_18
2019-03-18 18:38:10 -Generating unique operation named: listUsingGET_20
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_31
2019-03-18 18:38:10 -Generating unique operation named: removeUsingPOST_32
2019-03-18 18:38:10 -Generating unique operation named: saveUsingPOST_18
2019-03-18 18:38:10 -Generating unique operation named: updateUsingGET_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPOST_18
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPUT_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 18:38:10 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 18:38:10 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 18:38:10 -Starting Quartz Scheduler now
2019-03-18 18:38:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 18:38:10 -Starting...
2019-03-18 18:38:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 18:38:10 -Started.
2019-03-18 18:38:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 18:38:12 -Using a shared selector for servlet write/read
2019-03-18 18:38:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 18:38:12 -Started BootdoApplication in 32.119 seconds (JVM running for 33.94)
2019-03-18 18:38:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 18:38:13 -==> Parameters: 
2019-03-18 18:38:13 -<==      Total: 1
2019-03-18 18:38:22 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 18:38:22 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 18:38:22 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-03-18 18:38:22 -Enabling session validation scheduler...
2019-03-18 18:38:22 -请求地址 : http://localhost:8081/login;JSESSIONID=1dd0cd1a-4973-44ad-b6ee-5f94e2f57f16
2019-03-18 18:38:22 -HTTP METHOD : GET
2019-03-18 18:38:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 18:38:22 -参数 : [{}]
2019-03-18 18:38:22 -耗时 : 3
2019-03-18 18:38:22 -返回值 : login
2019-03-18 18:38:23 -请求地址 : http://localhost:8081/getVerify
2019-03-18 18:38:23 -HTTP METHOD : GET
2019-03-18 18:38:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 18:38:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@333078d7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e6c6d5f]
2019-03-18 18:38:27 -6314
2019-03-18 18:38:27 -耗时 : 3580
2019-03-18 18:38:27 -返回值 : null
2019-03-18 18:38:27 -请求地址 : http://localhost:8081/login
2019-03-18 18:38:27 -HTTP METHOD : GET
2019-03-18 18:38:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 18:38:27 -参数 : [{}]
2019-03-18 18:38:27 -耗时 : 0
2019-03-18 18:38:27 -返回值 : login
2019-03-18 18:38:34 -请求地址 : http://localhost:8081/login
2019-03-18 18:38:34 -HTTP METHOD : POST
2019-03-18 18:38:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 18:38:34 -参数 : [admin, 111111, 6314, org.apache.shiro.web.servlet.ShiroHttpServletRequest@19d8663f]
2019-03-18 18:38:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 18:38:34 -==> Parameters: admin(String)
2019-03-18 18:38:34 -<==      Total: 1
2019-03-18 18:38:34 -耗时 : 286
2019-03-18 18:38:34 -返回值 : {msg=操作成功, code=0}
2019-03-18 18:38:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 18:38:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 18:38:34 -==> Parameters: 1(Long), admin(String), 登录(String), 286(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 18:38:34.919(Timestamp)
2019-03-18 18:38:35 -请求地址 : http://localhost:8081/index
2019-03-18 18:38:35 -HTTP METHOD : GET
2019-03-18 18:38:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 18:38:35 -参数 : [{}]
2019-03-18 18:38:35 -<==    Updates: 1
2019-03-18 18:38:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 18:38:35 -==> Parameters: 1(Long)
2019-03-18 18:38:35 -<==      Total: 45
2019-03-18 18:38:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 18:38:35 -==> Parameters: 138(Long)
2019-03-18 18:38:35 -<==      Total: 1
2019-03-18 18:38:35 -耗时 : 404
2019-03-18 18:38:35 -返回值 : index_v1
2019-03-18 18:38:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 18:38:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 404(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 18:38:35.487(Timestamp)
2019-03-18 18:38:35 -<==    Updates: 1
2019-03-18 18:38:35 -请求地址 : http://localhost:8081/main
2019-03-18 18:38:35 -HTTP METHOD : GET
2019-03-18 18:38:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:38:35 -参数 : []
2019-03-18 18:38:35 -耗时 : 1
2019-03-18 18:38:35 -返回值 : main
2019-03-18 18:38:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 18:38:36 -HTTP METHOD : GET
2019-03-18 18:38:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 18:38:36 -参数 : []
2019-03-18 18:38:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 18:38:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 18:38:36 -请求地址 : http://localhost:8081/main
2019-03-18 18:38:36 -HTTP METHOD : GET
2019-03-18 18:38:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 18:38:36 -参数 : []
2019-03-18 18:38:36 -耗时 : 1
2019-03-18 18:38:36 -返回值 : main
2019-03-18 18:38:36 -<==      Total: 0
2019-03-18 18:38:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 18:38:36 -==> Parameters: 1(Long), 0(String)
2019-03-18 18:38:36 -<==      Total: 1
2019-03-18 18:38:36 -耗时 : 547
2019-03-18 18:38:36 -返回值 : com.bootdo.common.utils.PageUtils@3ed5810d
2019-03-18 18:38:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 18:38:47 -==> Parameters: 1(Long)
2019-03-18 18:38:47 -<==      Total: 86
2019-03-18 18:38:47 -请求地址 : http://localhost:8081/water/water
2019-03-18 18:38:47 -HTTP METHOD : GET
2019-03-18 18:38:47 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-18 18:38:47 -参数 : []
2019-03-18 18:38:47 -耗时 : 1
2019-03-18 18:38:47 -返回值 : water/water/water
2019-03-18 18:38:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 18:38:48 -HTTP METHOD : GET
2019-03-18 18:38:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 18:38:48 -参数 : [userType]
2019-03-18 18:38:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 18:38:48 -==> Parameters: userType(String)
2019-03-18 18:38:48 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:38:48 -HTTP METHOD : GET
2019-03-18 18:38:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:38:48 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 18:38:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-18 18:38:48 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 18:38:48 -<==      Total: 2
2019-03-18 18:38:48 -耗时 : 226
2019-03-18 18:38:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 18:38:48 -<==      Total: 2
2019-03-18 18:38:48 -==>  Preparing: select count(*) from water 
2019-03-18 18:38:48 -==> Parameters: 
2019-03-18 18:38:48 -<==      Total: 1
2019-03-18 18:38:48 -耗时 : 218
2019-03-18 18:38:48 -返回值 : com.bootdo.common.utils.PageUtils@3be5b44e
2019-03-18 18:39:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-18 18:39:16 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:39:16 -HTTP METHOD : GET
2019-03-18 18:39:16 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:39:16 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03}]
2019-03-18 18:39:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:39:16 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:39:16 -<==      Total: 1
2019-03-18 18:39:16 -==>  Preparing: select count(*) from water WHERE user_type = ? and create_time = ? 
2019-03-18 18:39:16 -==> Parameters: B(String), 2019-03(String)
2019-03-18 18:39:16 -<==      Total: 1
2019-03-18 18:39:16 -耗时 : 25
2019-03-18 18:39:16 -返回值 : com.bootdo.common.utils.PageUtils@6cc93a3e
2019-03-18 18:39:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 18:39:17 -HTTP METHOD : GET
2019-03-18 18:39:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 18:39:17 -参数 : []
2019-03-18 18:39:17 -耗时 : 0
2019-03-18 18:39:17 -返回值 : system/dept/deptTree
2019-03-18 18:39:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 18:39:17 -HTTP METHOD : GET
2019-03-18 18:39:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 18:39:17 -参数 : []
2019-03-18 18:39:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 18:39:17 -==> Parameters: 
2019-03-18 18:39:17 -<==      Total: 3
2019-03-18 18:39:17 -耗时 : 23
2019-03-18 18:39:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 18:39:20 -请求地址 : http://localhost:8081/water/water/list
2019-03-18 18:39:20 -HTTP METHOD : GET
2019-03-18 18:39:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-18 18:39:20 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 18:39:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and user_org = ? and create_time = ? order by id desc limit ?, ? 
2019-03-18 18:39:20 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 18:39:20 -<==      Total: 1
2019-03-18 18:39:20 -==>  Preparing: select count(*) from water WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 18:39:20 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-18 18:39:20 -<==      Total: 1
2019-03-18 18:39:20 -耗时 : 20
2019-03-18 18:39:20 -返回值 : com.bootdo.common.utils.PageUtils@251bc4ae
2019-03-18 18:39:22 -请求地址 : http://localhost:8081/water/water/exprotWater
2019-03-18 18:39:22 -HTTP METHOD : GET
2019-03-18 18:39:22 -CLASS_METHOD : com.bootdo.water.controller.WaterController.exprotExcel
2019-03-18 18:39:22 -参数 : [com.bootdo.water.vo.WaterVo@49c5eb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3272797f]
2019-03-18 18:39:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 18:39:22 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-18 18:39:22 -<==      Total: 1
2019-03-18 18:39:23 -耗时 : 1161
2019-03-18 18:39:23 -返回值 : null
2019-03-18 18:42:43 -请求地址 : http://localhost:8081/common/time
2019-03-18 18:42:43 -HTTP METHOD : GET
2019-03-18 18:42:43 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-18 18:42:43 -参数 : []
2019-03-18 18:42:43 -耗时 : 1
2019-03-18 18:42:43 -返回值 : common/job/time
2019-03-18 19:00:05 -请求地址 : http://localhost:8081/login;JSESSIONID=c898c7ef-4249-4258-a691-8c61fed96445
2019-03-18 19:00:05 -HTTP METHOD : GET
2019-03-18 19:00:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 19:00:05 -参数 : [{}]
2019-03-18 19:00:05 -耗时 : 0
2019-03-18 19:00:05 -返回值 : login
2019-03-18 19:00:06 -请求地址 : http://localhost:8081/login;JSESSIONID=c898c7ef-4249-4258-a691-8c61fed96445
2019-03-18 19:00:06 -HTTP METHOD : GET
2019-03-18 19:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 19:00:06 -参数 : [{}]
2019-03-18 19:00:06 -耗时 : 0
2019-03-18 19:00:06 -返回值 : login
2019-03-18 19:00:06 -请求地址 : http://localhost:8081/getVerify
2019-03-18 19:00:06 -HTTP METHOD : GET
2019-03-18 19:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 19:00:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@a86f91f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@232ef2a6]
2019-03-18 19:00:06 -6044
2019-03-18 19:00:06 -耗时 : 17
2019-03-18 19:00:06 -返回值 : null
2019-03-18 19:00:06 -请求地址 : http://localhost:8081/getVerify
2019-03-18 19:00:06 -HTTP METHOD : GET
2019-03-18 19:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 19:00:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@e98ed92, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b253eb5]
2019-03-18 19:00:06 -1317
2019-03-18 19:00:06 -耗时 : 15
2019-03-18 19:00:06 -返回值 : null
2019-03-18 19:00:06 -请求地址 : http://localhost:8081/login
2019-03-18 19:00:06 -HTTP METHOD : GET
2019-03-18 19:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 19:00:06 -参数 : [{}]
2019-03-18 19:00:06 -耗时 : 0
2019-03-18 19:00:06 -返回值 : login
2019-03-18 19:00:11 -请求地址 : http://localhost:8081/login
2019-03-18 19:00:11 -HTTP METHOD : POST
2019-03-18 19:00:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 19:00:11 -参数 : [admin, 111111, 1317, org.apache.shiro.web.servlet.ShiroHttpServletRequest@39a43883]
2019-03-18 19:00:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 19:00:11 -==> Parameters: admin(String)
2019-03-18 19:00:11 -<==      Total: 1
2019-03-18 19:00:11 -耗时 : 94
2019-03-18 19:00:11 -返回值 : {msg=操作成功, code=0}
2019-03-18 19:00:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 19:00:11 -==> Parameters: 1(Long), admin(String), 登录(String), 95(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 19:00:11.336(Timestamp)
2019-03-18 19:00:11 -请求地址 : http://localhost:8081/index
2019-03-18 19:00:11 -HTTP METHOD : GET
2019-03-18 19:00:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 19:00:11 -参数 : [{}]
2019-03-18 19:00:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 19:00:11 -==> Parameters: 1(Long)
2019-03-18 19:00:11 -<==      Total: 45
2019-03-18 19:00:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 19:00:11 -==> Parameters: 138(Long)
2019-03-18 19:00:11 -<==      Total: 1
2019-03-18 19:00:11 -耗时 : 101
2019-03-18 19:00:11 -返回值 : index_v1
2019-03-18 19:00:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 19:00:11 -<==    Updates: 1
2019-03-18 19:00:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 19:00:11.469(Timestamp)
2019-03-18 19:00:11 -请求地址 : http://localhost:8081/main
2019-03-18 19:00:11 -HTTP METHOD : GET
2019-03-18 19:00:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 19:00:11 -参数 : []
2019-03-18 19:00:11 -耗时 : 0
2019-03-18 19:00:11 -返回值 : main
2019-03-18 19:00:11 -<==    Updates: 1
2019-03-18 19:00:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 19:00:11 -HTTP METHOD : GET
2019-03-18 19:00:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 19:00:11 -参数 : []
2019-03-18 19:00:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 19:00:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 19:00:11 -<==      Total: 0
2019-03-18 19:00:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 19:00:11 -==> Parameters: 1(Long), 0(String)
2019-03-18 19:00:11 -<==      Total: 1
2019-03-18 19:00:11 -耗时 : 8
2019-03-18 19:00:11 -返回值 : com.bootdo.common.utils.PageUtils@4523eca8
2019-03-18 19:00:11 -请求地址 : http://localhost:8081/main
2019-03-18 19:00:11 -HTTP METHOD : GET
2019-03-18 19:00:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 19:00:11 -参数 : []
2019-03-18 19:00:11 -耗时 : 1
2019-03-18 19:00:11 -返回值 : main
2019-03-18 19:01:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 19:01:56 -==> Parameters: 1(Long)
2019-03-18 19:01:56 -<==      Total: 86
2019-03-18 19:01:56 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 19:01:56 -HTTP METHOD : GET
2019-03-18 19:01:56 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 19:01:56 -参数 : []
2019-03-18 19:01:56 -耗时 : 0
2019-03-18 19:01:56 -返回值 : heat/heat/heat
2019-03-18 19:01:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 19:01:57 -HTTP METHOD : GET
2019-03-18 19:01:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 19:01:57 -参数 : [userType]
2019-03-18 19:01:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 19:01:57 -==> Parameters: userType(String)
2019-03-18 19:01:57 -<==      Total: 2
2019-03-18 19:01:57 -耗时 : 8
2019-03-18 19:01:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 19:01:57 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:01:57 -HTTP METHOD : GET
2019-03-18 19:01:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:01:57 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 19:01:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 19:01:58 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 19:01:58 -<==      Total: 3
2019-03-18 19:01:58 -==>  Preparing: select count(*) from heat 
2019-03-18 19:01:58 -==> Parameters: 
2019-03-18 19:01:58 -<==      Total: 1
2019-03-18 19:01:58 -耗时 : 49
2019-03-18 19:01:58 -返回值 : com.bootdo.common.utils.PageUtils@3dd0c1cf
2019-03-18 19:02:10 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:10 -HTTP METHOD : GET
2019-03-18 19:02:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:10 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}]
2019-03-18 19:02:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:10 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:10 -<==      Total: 3
2019-03-18 19:02:10 -==>  Preparing: select count(*) from heat WHERE create_time = ? 
2019-03-18 19:02:10 -==> Parameters: 2019-03(String)
2019-03-18 19:02:10 -<==      Total: 1
2019-03-18 19:02:10 -耗时 : 14
2019-03-18 19:02:10 -返回值 : com.bootdo.common.utils.PageUtils@5515b54d
2019-03-18 19:02:11 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:11 -HTTP METHOD : GET
2019-03-18 19:02:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:11 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}]
2019-03-18 19:02:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:11 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:11 -<==      Total: 3
2019-03-18 19:02:11 -==>  Preparing: select count(*) from heat WHERE create_time = ? 
2019-03-18 19:02:11 -==> Parameters: 2019-03(String)
2019-03-18 19:02:11 -<==      Total: 1
2019-03-18 19:02:11 -耗时 : 11
2019-03-18 19:02:11 -返回值 : com.bootdo.common.utils.PageUtils@185be4f5
2019-03-18 19:02:21 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:21 -HTTP METHOD : GET
2019-03-18 19:02:21 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:21 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03}]
2019-03-18 19:02:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:21 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:21 -<==      Total: 3
2019-03-18 19:02:21 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 19:02:21 -==> Parameters: B(String), 2019-03(String)
2019-03-18 19:02:21 -<==      Total: 1
2019-03-18 19:02:21 -耗时 : 25
2019-03-18 19:02:21 -返回值 : com.bootdo.common.utils.PageUtils@1320a6ad
2019-03-18 19:02:22 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:22 -HTTP METHOD : GET
2019-03-18 19:02:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:22 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03}]
2019-03-18 19:02:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:22 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:22 -<==      Total: 3
2019-03-18 19:02:22 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 19:02:22 -==> Parameters: B(String), 2019-03(String)
2019-03-18 19:02:22 -<==      Total: 1
2019-03-18 19:02:22 -耗时 : 9
2019-03-18 19:02:22 -返回值 : com.bootdo.common.utils.PageUtils@613ff270
2019-03-18 19:02:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 19:02:27 -HTTP METHOD : GET
2019-03-18 19:02:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 19:02:27 -参数 : []
2019-03-18 19:02:27 -耗时 : 0
2019-03-18 19:02:27 -返回值 : system/dept/deptTree
2019-03-18 19:02:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 19:02:27 -HTTP METHOD : GET
2019-03-18 19:02:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 19:02:27 -参数 : []
2019-03-18 19:02:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 19:02:27 -==> Parameters: 
2019-03-18 19:02:27 -<==      Total: 3
2019-03-18 19:02:27 -耗时 : 6
2019-03-18 19:02:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 19:02:29 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:29 -HTTP METHOD : GET
2019-03-18 19:02:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:29 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 19:02:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:29 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:29 -<==      Total: 0
2019-03-18 19:02:29 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 19:02:29 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-18 19:02:29 -<==      Total: 1
2019-03-18 19:02:29 -耗时 : 11
2019-03-18 19:02:29 -返回值 : com.bootdo.common.utils.PageUtils@7b26c332
2019-03-18 19:02:31 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:02:31 -HTTP METHOD : GET
2019-03-18 19:02:31 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:02:31 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 19:02:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 19:02:31 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 19:02:31 -<==      Total: 0
2019-03-18 19:02:31 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 19:02:31 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-18 19:02:31 -<==      Total: 1
2019-03-18 19:02:31 -耗时 : 6
2019-03-18 19:02:31 -返回值 : com.bootdo.common.utils.PageUtils@7607119d
2019-03-18 19:02:35 -请求地址 : http://localhost:8081/index
2019-03-18 19:02:35 -HTTP METHOD : GET
2019-03-18 19:02:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 19:02:35 -参数 : [{}]
2019-03-18 19:02:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 19:02:35 -==> Parameters: 1(Long)
2019-03-18 19:02:35 -<==      Total: 45
2019-03-18 19:02:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 19:02:35 -==> Parameters: 138(Long)
2019-03-18 19:02:35 -<==      Total: 1
2019-03-18 19:02:35 -耗时 : 26
2019-03-18 19:02:35 -返回值 : index_v1
2019-03-18 19:02:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 19:02:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 19:02:35.723(Timestamp)
2019-03-18 19:02:35 -请求地址 : http://localhost:8081/main
2019-03-18 19:02:35 -HTTP METHOD : GET
2019-03-18 19:02:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 19:02:35 -参数 : []
2019-03-18 19:02:35 -耗时 : 2
2019-03-18 19:02:35 -返回值 : main
2019-03-18 19:02:35 -<==    Updates: 1
2019-03-18 19:02:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 19:02:36 -HTTP METHOD : GET
2019-03-18 19:02:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 19:02:36 -参数 : []
2019-03-18 19:02:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 19:02:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 19:02:36 -<==      Total: 0
2019-03-18 19:02:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 19:02:36 -==> Parameters: 1(Long), 0(String)
2019-03-18 19:02:36 -<==      Total: 1
2019-03-18 19:02:36 -耗时 : 11
2019-03-18 19:02:36 -返回值 : com.bootdo.common.utils.PageUtils@9ddb0f2
2019-03-18 19:02:36 -请求地址 : http://localhost:8081/main
2019-03-18 19:02:36 -HTTP METHOD : GET
2019-03-18 19:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 19:02:36 -参数 : []
2019-03-18 19:02:36 -耗时 : 0
2019-03-18 19:02:36 -返回值 : main
2019-03-18 19:03:06 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 19:03:06 -HTTP METHOD : GET
2019-03-18 19:03:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 19:03:06 -参数 : []
2019-03-18 19:03:06 -耗时 : 0
2019-03-18 19:03:06 -返回值 : elec/elec/elec
2019-03-18 19:03:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 19:03:06 -HTTP METHOD : GET
2019-03-18 19:03:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 19:03:06 -参数 : [userType]
2019-03-18 19:03:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 19:03:06 -==> Parameters: userType(String)
2019-03-18 19:03:06 -<==      Total: 2
2019-03-18 19:03:06 -耗时 : 4
2019-03-18 19:03:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 19:03:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 19:03:06 -HTTP METHOD : GET
2019-03-18 19:03:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 19:03:06 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@5a29e47b]
2019-03-18 19:03:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 19:03:06 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 19:03:06 -<==      Total: 3
2019-03-18 19:03:06 -==>  Preparing: select count(*) from elec 
2019-03-18 19:03:06 -==> Parameters: 
2019-03-18 19:03:06 -<==      Total: 1
2019-03-18 19:03:06 -耗时 : 57
2019-03-18 19:03:06 -返回值 : com.bootdo.common.utils.PageUtils@924e4bd
2019-03-18 19:03:09 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 19:03:09 -HTTP METHOD : GET
2019-03-18 19:03:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 19:03:09 -参数 : []
2019-03-18 19:03:09 -耗时 : 0
2019-03-18 19:03:09 -返回值 : heat/heat/heat
2019-03-18 19:03:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 19:03:09 -HTTP METHOD : GET
2019-03-18 19:03:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 19:03:09 -参数 : [userType]
2019-03-18 19:03:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 19:03:09 -==> Parameters: userType(String)
2019-03-18 19:03:09 -<==      Total: 2
2019-03-18 19:03:09 -耗时 : 4
2019-03-18 19:03:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 19:03:09 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 19:03:09 -HTTP METHOD : GET
2019-03-18 19:03:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 19:03:09 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 19:03:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 19:03:09 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 19:03:09 -<==      Total: 3
2019-03-18 19:03:09 -==>  Preparing: select count(*) from heat 
2019-03-18 19:03:09 -==> Parameters: 
2019-03-18 19:03:09 -<==      Total: 1
2019-03-18 19:03:09 -耗时 : 11
2019-03-18 19:03:09 -返回值 : com.bootdo.common.utils.PageUtils@377385ee
2019-03-18 19:09:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-03-18 19:38:22 -Validating all active sessions...
2019-03-18 19:38:22 -Finished session validation.  [2] sessions were stopped.
2019-03-18 19:39:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]
2019-03-18 19:40:43 -Starting BootdoApplication on ZJZL-20180906VX with PID 4828 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 19:40:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 19:40:43 -The following profiles are active: dev
2019-03-18 19:40:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 18 19:40:43 CST 2019]; root of context hierarchy
2019-03-18 19:40:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 19:40:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af446ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a19d9e9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 19:40:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 19:40:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 19:40:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 19:40:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 19:40:53 -Starting service [Tomcat]
2019-03-18 19:40:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 19:40:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 19:40:53 -Initializing Spring embedded WebApplicationContext
2019-03-18 19:40:53 -Root WebApplicationContext: initialization completed in 9731 ms
2019-03-18 19:40:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 19:40:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 19:40:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 19:40:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 19:40:54 -Filter xssFilter was not registered (disabled)
2019-03-18 19:40:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 19:40:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 19:40:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 19:40:54 -Servlet dispatcherServlet mapped to [/]
2019-03-18 19:40:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 18 19:40:43 CST 2019]; root of context hierarchy
2019-03-18 19:40:58 -Using default implementation for ThreadExecutor
2019-03-18 19:40:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 19:40:58 -Quartz Scheduler v.2.2.1 created.
2019-03-18 19:40:58 -RAMJobStore initialized.
2019-03-18 19:40:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 19:40:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 19:40:58 -Quartz scheduler version: 2.2.1
2019-03-18 19:40:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@706d2bae
2019-03-18 19:40:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 19:40:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 19:41:01 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 19:41:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 19:41:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 19:41:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 19:41:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 19:41:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 19:41:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 19:41:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 19:41:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 19:41:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 19:41:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 19:41:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 19:41:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 19:41:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 19:41:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 19:41:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 19:41:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 19:41:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 19:41:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 19:41:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 19:41:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 19:41:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 19:41:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 19:41:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 19:41:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 19:41:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 19:41:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 19:41:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 19:41:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 19:41:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 19:41:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 19:41:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 19:41:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 19:41:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 19:41:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 19:41:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 19:41:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 19:41:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 19:41:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 19:41:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 19:41:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 19:41:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 19:41:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 19:41:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 19:41:01 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 19:41:01 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 19:41:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 19:41:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 19:41:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 19:41:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 19:41:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 19:41:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 19:41:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 19:41:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 19:41:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 19:41:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 19:41:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 19:41:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 19:41:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 19:41:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 19:41:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 19:41:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 19:41:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 19:41:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 19:41:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 19:41:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 19:41:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 19:41:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 19:41:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 19:41:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 19:41:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 19:41:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 19:41:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 19:41:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 19:41:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 19:41:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 19:41:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 19:41:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 19:41:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 19:41:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 19:41:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 19:41:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 19:41:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 19:41:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 19:41:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 19:41:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 19:41:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 19:41:02 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 19:41:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 19:41:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 19:41:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 19:41:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 19:41:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 19:41:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 19:41:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 19:41:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 19:41:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 19:41:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 18 19:40:43 CST 2019]; root of context hierarchy
2019-03-18 19:41:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 19:41:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 19:41:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 19:41:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 19:41:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 19:41:06 -Registering beans for JMX exposure on startup
2019-03-18 19:41:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 19:41:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 19:41:06 -Starting beans in phase 2147483647
2019-03-18 19:41:06 -Context refreshed
2019-03-18 19:41:06 -Found 1 custom documentation plugin(s)
2019-03-18 19:41:06 -Scanning for api listing references
2019-03-18 19:41:07 -Generating unique operation named: removeUsingPOST_1
2019-03-18 19:41:07 -Generating unique operation named: addUsingGET_1
2019-03-18 19:41:07 -Generating unique operation named: editUsingGET_1
2019-03-18 19:41:07 -Generating unique operation named: listUsingGET_1
2019-03-18 19:41:07 -Generating unique operation named: removeUsingPOST_2
2019-03-18 19:41:07 -Generating unique operation named: removeUsingPOST_3
2019-03-18 19:41:07 -Generating unique operation named: saveUsingPOST_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingGET_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPOST_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPUT_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 19:41:07 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 19:41:07 -Generating unique operation named: addUsingGET_2
2019-03-18 19:41:07 -Generating unique operation named: editUsingGET_2
2019-03-18 19:41:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 19:41:07 -Generating unique operation named: listUsingGET_2
2019-03-18 19:41:07 -Generating unique operation named: removeUsingPOST_4
2019-03-18 19:41:07 -Generating unique operation named: removeUsingPOST_5
2019-03-18 19:41:07 -Generating unique operation named: saveUsingPOST_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingGET_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPOST_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPUT_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 19:41:07 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 19:41:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_3
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_3
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_3
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_6
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_7
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_4
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_4
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_4
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_8
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_9
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 19:41:08 -Generating unique operation named: ElecUsingGET_1
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_5
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_5
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_5
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_10
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_11
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_6
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_6
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_6
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_7
2019-03-18 19:41:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_7
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_12
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_13
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 19:41:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_7
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_8
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_8
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_14
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_15
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_8
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_9
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_9
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_16
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_17
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingGET_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_9
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPUT_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 19:41:08 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 19:41:08 -Generating unique operation named: addUsingGET_9
2019-03-18 19:41:08 -Generating unique operation named: editUsingGET_10
2019-03-18 19:41:08 -Generating unique operation named: infoUsingGET_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingPOST_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingPUT_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 19:41:08 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_10
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_18
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_19
2019-03-18 19:41:08 -Generating unique operation named: saveUsingPOST_9
2019-03-18 19:41:08 -Generating unique operation named: updateUsingPOST_10
2019-03-18 19:41:08 -Generating unique operation named: listUsingGET_11
2019-03-18 19:41:08 -Generating unique operation named: removeUsingPOST_20
2019-03-18 19:41:08 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_10
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_11
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_12
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_21
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_10
2019-03-18 19:41:09 -Generating unique operation named: treeUsingGET_1
2019-03-18 19:41:09 -Generating unique operation named: treeUsingGET_2
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_11
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_11
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_12
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_13
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_22
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_23
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingGET_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPUT_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 19:41:09 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_12
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_13
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_14
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_24
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_25
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingGET_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPUT_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 19:41:09 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_13
2019-03-18 19:41:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_14
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_15
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_13
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_14
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_14
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_16
2019-03-18 19:41:09 -Generating unique operation named: listUsingHEAD_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingPOST_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingPUT_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingPATCH_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingDELETE_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 19:41:09 -Generating unique operation named: listUsingTRACE_1
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_14
2019-03-18 19:41:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_15
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_17
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_26
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_15
2019-03-18 19:41:09 -Generating unique operation named: treeUsingGET_3
2019-03-18 19:41:09 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_15
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_15
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_16
2019-03-18 19:41:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_18
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_27
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_28
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_16
2019-03-18 19:41:09 -Generating unique operation named: updateUsingGET_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_16
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPUT_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 19:41:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 19:41:09 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_16
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_17
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_19
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_29
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_30
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_17
2019-03-18 19:41:09 -Generating unique operation named: updateUsingGET_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_17
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPUT_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 19:41:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 19:41:09 -Generating unique operation named: addUsingGET_17
2019-03-18 19:41:09 -Generating unique operation named: editUsingGET_18
2019-03-18 19:41:09 -Generating unique operation named: listUsingGET_20
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_31
2019-03-18 19:41:09 -Generating unique operation named: removeUsingPOST_32
2019-03-18 19:41:09 -Generating unique operation named: saveUsingPOST_18
2019-03-18 19:41:09 -Generating unique operation named: updateUsingGET_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPOST_18
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPUT_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 19:41:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 19:41:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 19:41:09 -Starting Quartz Scheduler now
2019-03-18 19:41:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 19:41:09 -Starting...
2019-03-18 19:41:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 19:41:09 -Started.
2019-03-18 19:41:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 19:41:10 -Using a shared selector for servlet write/read
2019-03-18 19:41:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 19:41:10 -Started BootdoApplication in 28.682 seconds (JVM running for 30.333)
2019-03-18 19:41:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 19:41:10 -==> Parameters: 
2019-03-18 19:41:10 -<==      Total: 1
2019-03-18 19:42:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 20:03:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 20:03:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 20:03:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-03-18 20:03:29 -Enabling session validation scheduler...
2019-03-18 20:03:29 -请求地址 : http://localhost:8081/
2019-03-18 20:03:29 -HTTP METHOD : GET
2019-03-18 20:03:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 20:03:29 -参数 : [{}]
2019-03-18 20:03:29 -耗时 : 4
2019-03-18 20:03:29 -返回值 : redirect:/index
2019-03-18 20:03:29 -请求地址 : http://localhost:8081/login;JSESSIONID=91408a9d-d05b-4773-8934-80e855b7ad8b
2019-03-18 20:03:29 -HTTP METHOD : GET
2019-03-18 20:03:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:03:29 -参数 : [{}]
2019-03-18 20:03:29 -耗时 : 1
2019-03-18 20:03:29 -返回值 : login
2019-03-18 20:03:32 -请求地址 : http://localhost:8081/getVerify
2019-03-18 20:03:32 -HTTP METHOD : GET
2019-03-18 20:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 20:03:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b8f0a07, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a3f24d2]
2019-03-18 20:03:45 -2871
2019-03-18 20:03:45 -耗时 : 13594
2019-03-18 20:03:45 -返回值 : null
2019-03-18 20:03:45 -请求地址 : http://localhost:8081/login
2019-03-18 20:03:45 -HTTP METHOD : GET
2019-03-18 20:03:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:03:45 -参数 : [{}]
2019-03-18 20:03:45 -耗时 : 1
2019-03-18 20:03:45 -返回值 : login
2019-03-18 20:03:52 -请求地址 : http://localhost:8081/login
2019-03-18 20:03:52 -HTTP METHOD : POST
2019-03-18 20:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 20:03:52 -参数 : [admin, 111111, 2871, org.apache.shiro.web.servlet.ShiroHttpServletRequest@f2b8812]
2019-03-18 20:03:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 20:03:52 -==> Parameters: admin(String)
2019-03-18 20:03:52 -<==      Total: 1
2019-03-18 20:03:52 -耗时 : 273
2019-03-18 20:03:52 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:03:52 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 20:03:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:03:52 -==> Parameters: 1(Long), admin(String), 登录(String), 273(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 20:03:52.572(Timestamp)
2019-03-18 20:03:52 -<==    Updates: 1
2019-03-18 20:03:52 -请求地址 : http://localhost:8081/index
2019-03-18 20:03:52 -HTTP METHOD : GET
2019-03-18 20:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:03:52 -参数 : [{}]
2019-03-18 20:03:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:03:53 -==> Parameters: 1(Long)
2019-03-18 20:03:53 -<==      Total: 45
2019-03-18 20:03:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:03:53 -==> Parameters: 138(Long)
2019-03-18 20:03:53 -<==      Total: 1
2019-03-18 20:03:53 -耗时 : 515
2019-03-18 20:03:53 -返回值 : index_v1
2019-03-18 20:03:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:03:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 516(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:03:53.487(Timestamp)
2019-03-18 20:03:53 -<==    Updates: 1
2019-03-18 20:03:53 -请求地址 : http://localhost:8081/main
2019-03-18 20:03:53 -HTTP METHOD : GET
2019-03-18 20:03:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:03:53 -参数 : []
2019-03-18 20:03:53 -耗时 : 0
2019-03-18 20:03:53 -返回值 : main
2019-03-18 20:03:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:03:55 -HTTP METHOD : GET
2019-03-18 20:03:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:03:55 -参数 : []
2019-03-18 20:03:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:03:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:03:55 -<==      Total: 0
2019-03-18 20:03:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:03:55 -请求地址 : http://localhost:8081/main
2019-03-18 20:03:55 -HTTP METHOD : GET
2019-03-18 20:03:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:03:55 -参数 : []
2019-03-18 20:03:55 -耗时 : 0
2019-03-18 20:03:55 -返回值 : main
2019-03-18 20:03:56 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:03:56 -<==      Total: 1
2019-03-18 20:03:56 -耗时 : 137
2019-03-18 20:03:56 -返回值 : com.bootdo.common.utils.PageUtils@c049c5b
2019-03-18 20:04:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 20:04:02 -==> Parameters: 1(Long)
2019-03-18 20:04:02 -<==      Total: 86
2019-03-18 20:04:02 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:04:02 -HTTP METHOD : GET
2019-03-18 20:04:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:04:02 -参数 : []
2019-03-18 20:04:02 -耗时 : 0
2019-03-18 20:04:02 -返回值 : heat/heat/heat
2019-03-18 20:04:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:04:03 -HTTP METHOD : GET
2019-03-18 20:04:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:04:03 -参数 : [userType]
2019-03-18 20:04:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:04:03 -==> Parameters: userType(String)
2019-03-18 20:04:03 -<==      Total: 2
2019-03-18 20:04:03 -耗时 : 29
2019-03-18 20:04:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:04:04 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:04:04 -HTTP METHOD : GET
2019-03-18 20:04:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:04:04 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:04:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:04:04 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:04:04 -<==      Total: 3
2019-03-18 20:04:04 -==>  Preparing: select count(*) from heat 
2019-03-18 20:04:04 -==> Parameters: 
2019-03-18 20:04:04 -<==      Total: 1
2019-03-18 20:04:04 -耗时 : 57
2019-03-18 20:04:04 -返回值 : com.bootdo.common.utils.PageUtils@1151531a
2019-03-18 20:04:23 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:04:23 -HTTP METHOD : GET
2019-03-18 20:04:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:04:23 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-18 20:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:04:23 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:04:23 -<==      Total: 3
2019-03-18 20:04:23 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 20:04:23 -==> Parameters: A(String), 2019-03(String)
2019-03-18 20:04:23 -<==      Total: 1
2019-03-18 20:04:23 -耗时 : 39
2019-03-18 20:04:23 -返回值 : com.bootdo.common.utils.PageUtils@3ec69c44
2019-03-18 20:04:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:04:23 -HTTP METHOD : GET
2019-03-18 20:04:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:04:23 -参数 : []
2019-03-18 20:04:23 -耗时 : 0
2019-03-18 20:04:23 -返回值 : system/dept/deptTree
2019-03-18 20:04:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:04:24 -HTTP METHOD : GET
2019-03-18 20:04:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:04:24 -参数 : []
2019-03-18 20:04:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:04:24 -==> Parameters: 
2019-03-18 20:04:24 -<==      Total: 3
2019-03-18 20:04:24 -耗时 : 23
2019-03-18 20:04:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:06:21 -请求地址 : http://localhost:8081/index
2019-03-18 20:06:21 -HTTP METHOD : GET
2019-03-18 20:06:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:06:21 -参数 : [{}]
2019-03-18 20:06:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:06:21 -==> Parameters: 1(Long)
2019-03-18 20:06:21 -<==      Total: 45
2019-03-18 20:06:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:06:21 -==> Parameters: 138(Long)
2019-03-18 20:06:21 -<==      Total: 1
2019-03-18 20:06:21 -耗时 : 134
2019-03-18 20:06:21 -返回值 : index_v1
2019-03-18 20:06:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:06:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 135(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:06:21.891(Timestamp)
2019-03-18 20:06:22 -<==    Updates: 1
2019-03-18 20:06:22 -请求地址 : http://localhost:8081/main
2019-03-18 20:06:22 -HTTP METHOD : GET
2019-03-18 20:06:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:06:22 -参数 : []
2019-03-18 20:06:22 -耗时 : 1
2019-03-18 20:06:22 -返回值 : main
2019-03-18 20:06:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:06:22 -HTTP METHOD : GET
2019-03-18 20:06:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:06:22 -参数 : []
2019-03-18 20:06:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:06:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:06:22 -<==      Total: 0
2019-03-18 20:06:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:06:22 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:06:22 -<==      Total: 1
2019-03-18 20:06:22 -耗时 : 12
2019-03-18 20:06:22 -返回值 : com.bootdo.common.utils.PageUtils@487d306
2019-03-18 20:06:22 -请求地址 : http://localhost:8081/main
2019-03-18 20:06:22 -HTTP METHOD : GET
2019-03-18 20:06:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:06:22 -参数 : []
2019-03-18 20:06:22 -耗时 : 0
2019-03-18 20:06:22 -返回值 : main
2019-03-18 20:06:25 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:06:25 -HTTP METHOD : GET
2019-03-18 20:06:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:06:25 -参数 : []
2019-03-18 20:06:25 -耗时 : 1
2019-03-18 20:06:25 -返回值 : heat/heat/heat
2019-03-18 20:06:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:06:25 -HTTP METHOD : GET
2019-03-18 20:06:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:06:25 -参数 : [userType]
2019-03-18 20:06:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:06:25 -==> Parameters: userType(String)
2019-03-18 20:06:25 -<==      Total: 2
2019-03-18 20:06:25 -耗时 : 6
2019-03-18 20:06:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:06:25 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:06:25 -HTTP METHOD : GET
2019-03-18 20:06:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:06:25 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:06:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:06:25 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:06:25 -<==      Total: 3
2019-03-18 20:06:25 -==>  Preparing: select count(*) from heat 
2019-03-18 20:06:25 -==> Parameters: 
2019-03-18 20:06:25 -<==      Total: 1
2019-03-18 20:06:25 -耗时 : 10
2019-03-18 20:06:25 -返回值 : com.bootdo.common.utils.PageUtils@4d62282b
2019-03-18 20:06:34 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:06:34 -HTTP METHOD : GET
2019-03-18 20:06:34 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:06:34 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-18 20:06:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:06:34 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:06:34 -<==      Total: 3
2019-03-18 20:06:34 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 20:06:34 -==> Parameters: A(String), 2019-03(String)
2019-03-18 20:06:34 -<==      Total: 1
2019-03-18 20:06:34 -耗时 : 23
2019-03-18 20:06:34 -返回值 : com.bootdo.common.utils.PageUtils@458e4d4
2019-03-18 20:06:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:06:35 -HTTP METHOD : GET
2019-03-18 20:06:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:06:35 -参数 : []
2019-03-18 20:06:35 -耗时 : 0
2019-03-18 20:06:35 -返回值 : system/dept/deptTree
2019-03-18 20:06:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:06:35 -HTTP METHOD : GET
2019-03-18 20:06:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:06:35 -参数 : []
2019-03-18 20:06:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:06:35 -==> Parameters: 
2019-03-18 20:06:35 -<==      Total: 3
2019-03-18 20:06:35 -耗时 : 4
2019-03-18 20:06:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:06:53 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 20:08:14 -请求地址 : http://localhost:8081/common/time
2019-03-18 20:08:14 -HTTP METHOD : GET
2019-03-18 20:08:14 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-18 20:08:14 -参数 : []
2019-03-18 20:08:14 -耗时 : 0
2019-03-18 20:08:14 -返回值 : common/job/time
2019-03-18 20:08:39 -请求地址 : http://localhost:8081/sys/menu/
2019-03-18 20:08:39 -HTTP METHOD : GET
2019-03-18 20:08:39 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-18 20:08:39 -参数 : [{}]
2019-03-18 20:08:39 -耗时 : 1
2019-03-18 20:08:39 -返回值 : system/menu/menu
2019-03-18 20:08:39 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 20:08:39 -HTTP METHOD : GET
2019-03-18 20:08:39 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 20:08:39 -参数 : [{sort=order_num}]
2019-03-18 20:08:39 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 20:08:39 -==> Parameters: 
2019-03-18 20:08:39 -<==      Total: 106
2019-03-18 20:08:39 -耗时 : 46
2019-03-18 20:08:39 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 20:08:57 -请求地址 : http://localhost:8081/sys/menu/edit/160
2019-03-18 20:08:57 -HTTP METHOD : GET
2019-03-18 20:08:57 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 20:08:57 -参数 : [{}, 160]
2019-03-18 20:08:57 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 20:08:57 -==> Parameters: 160(Long)
2019-03-18 20:08:57 -<==      Total: 1
2019-03-18 20:08:57 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 20:08:57 -==> Parameters: 77(Long)
2019-03-18 20:08:57 -<==      Total: 1
2019-03-18 20:08:57 -耗时 : 20
2019-03-18 20:08:57 -返回值 : system/menu/edit
2019-03-18 20:08:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:08:57 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 20(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 20:08:57.218(Timestamp)
2019-03-18 20:08:57 -<==    Updates: 1
2019-03-18 20:09:06 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-18 20:09:06 -HTTP METHOD : POST
2019-03-18 20:09:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-18 20:09:06 -参数 : [MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-03-18 20:09:06 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-03-18 20:09:06 -==> Parameters: 77(Long), 3D龙卷风(String), common/long(String), (String), 1(Integer), fa fa-space-shuttle(String), 3(Integer), 160(Long)
2019-03-18 20:09:06 -<==    Updates: 1
2019-03-18 20:09:06 -耗时 : 74
2019-03-18 20:09:06 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:09:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:09:06 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 74(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-18 20:09:06.673(Timestamp)
2019-03-18 20:09:06 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 20:09:06 -HTTP METHOD : GET
2019-03-18 20:09:06 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 20:09:06 -参数 : [{sort=order_num}]
2019-03-18 20:09:06 -<==    Updates: 1
2019-03-18 20:09:06 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 20:09:06 -==> Parameters: 
2019-03-18 20:09:06 -<==      Total: 106
2019-03-18 20:09:06 -耗时 : 69
2019-03-18 20:09:06 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 20:12:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 119]
2019-03-18 20:12:49 -请求地址 : http://localhost:8081/sys/menu/edit/77
2019-03-18 20:12:49 -HTTP METHOD : GET
2019-03-18 20:12:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 20:12:49 -参数 : [{}, 77]
2019-03-18 20:12:49 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 20:12:49 -==> Parameters: 77(Long)
2019-03-18 20:12:49 -<==      Total: 1
2019-03-18 20:12:49 -耗时 : 37
2019-03-18 20:12:49 -返回值 : system/menu/edit
2019-03-18 20:12:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:12:49 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 37(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 20:12:49.911(Timestamp)
2019-03-18 20:12:49 -<==    Updates: 1
2019-03-18 20:13:03 -请求地址 : http://localhost:8081/sys/menu/edit/72
2019-03-18 20:13:03 -HTTP METHOD : GET
2019-03-18 20:13:03 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-18 20:13:03 -参数 : [{}, 72]
2019-03-18 20:13:03 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 20:13:03 -==> Parameters: 72(Long)
2019-03-18 20:13:03 -<==      Total: 1
2019-03-18 20:13:03 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-18 20:13:03 -==> Parameters: 77(Long)
2019-03-18 20:13:03 -<==      Total: 1
2019-03-18 20:13:03 -耗时 : 16
2019-03-18 20:13:03 -返回值 : system/menu/edit
2019-03-18 20:13:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:13:03 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 16(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-18 20:13:03.094(Timestamp)
2019-03-18 20:13:03 -<==    Updates: 1
2019-03-18 20:13:43 -请求地址 : http://localhost:8081/sys/menu/add/0
2019-03-18 20:13:43 -HTTP METHOD : GET
2019-03-18 20:13:43 -CLASS_METHOD : com.bootdo.system.controller.MenuController.add
2019-03-18 20:13:43 -参数 : [{}, 0]
2019-03-18 20:13:43 -耗时 : 1
2019-03-18 20:13:43 -返回值 : system/menu/add
2019-03-18 20:13:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:13:43 -==> Parameters: 1(Long), admin(String), 添加菜单(String), 2(Integer), com.bootdo.system.controller.MenuController.add()(String), null, 127.0.0.1(String), 2019-03-18 20:13:43.672(Timestamp)
2019-03-18 20:13:43 -<==    Updates: 1
2019-03-18 20:15:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 10796 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 20:15:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 20:15:44 -The following profiles are active: dev
2019-03-18 20:15:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Mon Mar 18 20:15:44 CST 2019]; root of context hierarchy
2019-03-18 20:15:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 20:15:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ad48c75b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9fa1f602] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 20:15:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 20:15:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:15:59 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 20:15:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 20:15:59 -Starting service [Tomcat]
2019-03-18 20:15:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 20:15:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 20:15:59 -Initializing Spring embedded WebApplicationContext
2019-03-18 20:15:59 -Root WebApplicationContext: initialization completed in 15191 ms
2019-03-18 20:16:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 20:16:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 20:16:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 20:16:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 20:16:01 -Filter xssFilter was not registered (disabled)
2019-03-18 20:16:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 20:16:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 20:16:01 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 20:16:01 -Servlet dispatcherServlet mapped to [/]
2019-03-18 20:16:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Mon Mar 18 20:15:44 CST 2019]; root of context hierarchy
2019-03-18 20:16:05 -Using default implementation for ThreadExecutor
2019-03-18 20:16:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 20:16:05 -Quartz Scheduler v.2.2.1 created.
2019-03-18 20:16:05 -RAMJobStore initialized.
2019-03-18 20:16:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 20:16:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 20:16:05 -Quartz scheduler version: 2.2.1
2019-03-18 20:16:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53b2e1eb
2019-03-18 20:16:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 20:16:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 20:16:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 20:16:10 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 20:16:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 20:16:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 20:16:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 20:16:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 20:16:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 20:16:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 20:16:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 20:16:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 20:16:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 20:16:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 20:16:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 20:16:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 20:16:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:16:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 20:16:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:16:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 20:16:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 20:16:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 20:16:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 20:16:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 20:16:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 20:16:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 20:16:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 20:16:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 20:16:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 20:16:10 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 20:16:10 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 20:16:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 20:16:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:16:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 20:16:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 20:16:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 20:16:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:16:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:16:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 20:16:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 20:16:10 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 20:16:10 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:16:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 20:16:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 20:16:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 20:16:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 20:16:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 20:16:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 20:16:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 20:16:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 20:16:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 20:16:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 20:16:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 20:16:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 20:16:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 20:16:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 20:16:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 20:16:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:16:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 20:16:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 20:16:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 20:16:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 20:16:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 20:16:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 20:16:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 20:16:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 20:16:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 20:16:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 20:16:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 20:16:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 20:16:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 20:16:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:16:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 20:16:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:16:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:16:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 20:16:10 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 20:16:10 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 20:16:10 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 20:16:10 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 20:16:10 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 20:16:10 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 20:16:10 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 20:16:10 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:16:10 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 20:16:10 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:16:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:16:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 20:16:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 20:16:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 20:16:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 20:16:11 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 20:16:11 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 20:16:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:16:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Mon Mar 18 20:15:44 CST 2019]; root of context hierarchy
2019-03-18 20:16:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:16:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:16:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:16:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 20:16:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 20:16:16 -Registering beans for JMX exposure on startup
2019-03-18 20:16:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 20:16:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 20:16:16 -Starting beans in phase 2147483647
2019-03-18 20:16:16 -Context refreshed
2019-03-18 20:16:16 -Found 1 custom documentation plugin(s)
2019-03-18 20:16:16 -Scanning for api listing references
2019-03-18 20:16:17 -Generating unique operation named: removeUsingPOST_1
2019-03-18 20:16:17 -Generating unique operation named: addUsingGET_1
2019-03-18 20:16:17 -Generating unique operation named: editUsingGET_1
2019-03-18 20:16:17 -Generating unique operation named: listUsingGET_1
2019-03-18 20:16:17 -Generating unique operation named: removeUsingPOST_2
2019-03-18 20:16:17 -Generating unique operation named: removeUsingPOST_3
2019-03-18 20:16:17 -Generating unique operation named: saveUsingPOST_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingGET_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingPOST_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingPUT_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 20:16:17 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_2
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_2
2019-03-18 20:16:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_2
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_4
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_5
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 20:16:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_3
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_3
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_3
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_6
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_7
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_4
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_4
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_4
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_8
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_9
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 20:16:18 -Generating unique operation named: ElecUsingGET_1
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_5
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_5
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_5
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_10
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_11
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_6
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_6
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_6
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_7
2019-03-18 20:16:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_7
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_12
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_13
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 20:16:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 20:16:18 -Generating unique operation named: addUsingGET_7
2019-03-18 20:16:18 -Generating unique operation named: editUsingGET_8
2019-03-18 20:16:18 -Generating unique operation named: listUsingGET_8
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_14
2019-03-18 20:16:18 -Generating unique operation named: removeUsingPOST_15
2019-03-18 20:16:18 -Generating unique operation named: saveUsingPOST_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingGET_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPOST_8
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPUT_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 20:16:18 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_8
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_9
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_9
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_16
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_17
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingGET_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPUT_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 20:16:19 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_9
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_10
2019-03-18 20:16:19 -Generating unique operation named: infoUsingGET_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingPOST_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingPUT_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 20:16:19 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_10
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_18
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_19
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_10
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_11
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_20
2019-03-18 20:16:19 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_10
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_11
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_12
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_21
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_10
2019-03-18 20:16:19 -Generating unique operation named: treeUsingGET_1
2019-03-18 20:16:19 -Generating unique operation named: treeUsingGET_2
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_11
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_11
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_12
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_13
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_22
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_23
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_11
2019-03-18 20:16:19 -Generating unique operation named: updateUsingGET_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_12
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPUT_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 20:16:19 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_12
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_13
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_14
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_24
2019-03-18 20:16:19 -Generating unique operation named: removeUsingPOST_25
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_12
2019-03-18 20:16:19 -Generating unique operation named: updateUsingGET_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_13
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPUT_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 20:16:19 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_13
2019-03-18 20:16:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 20:16:19 -Generating unique operation named: editUsingGET_14
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_15
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_13
2019-03-18 20:16:19 -Generating unique operation named: saveUsingPOST_14
2019-03-18 20:16:19 -Generating unique operation named: updateUsingPOST_14
2019-03-18 20:16:19 -Generating unique operation named: listUsingGET_16
2019-03-18 20:16:19 -Generating unique operation named: listUsingHEAD_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingPOST_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingPUT_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingPATCH_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingDELETE_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 20:16:19 -Generating unique operation named: listUsingTRACE_1
2019-03-18 20:16:19 -Generating unique operation named: addUsingGET_14
2019-03-18 20:16:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 20:16:20 -Generating unique operation named: editUsingGET_15
2019-03-18 20:16:20 -Generating unique operation named: listUsingGET_17
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_26
2019-03-18 20:16:20 -Generating unique operation named: saveUsingPOST_15
2019-03-18 20:16:20 -Generating unique operation named: treeUsingGET_3
2019-03-18 20:16:20 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPOST_15
2019-03-18 20:16:20 -Generating unique operation named: addUsingGET_15
2019-03-18 20:16:20 -Generating unique operation named: editUsingGET_16
2019-03-18 20:16:20 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 20:16:20 -Generating unique operation named: listUsingGET_18
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_27
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_28
2019-03-18 20:16:20 -Generating unique operation named: saveUsingPOST_16
2019-03-18 20:16:20 -Generating unique operation named: updateUsingGET_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPOST_16
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPUT_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 20:16:20 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 20:16:20 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 20:16:20 -Generating unique operation named: addUsingGET_16
2019-03-18 20:16:20 -Generating unique operation named: editUsingGET_17
2019-03-18 20:16:20 -Generating unique operation named: listUsingGET_19
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_29
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_30
2019-03-18 20:16:20 -Generating unique operation named: saveUsingPOST_17
2019-03-18 20:16:20 -Generating unique operation named: updateUsingGET_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPOST_17
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPUT_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 20:16:20 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 20:16:20 -Generating unique operation named: addUsingGET_17
2019-03-18 20:16:20 -Generating unique operation named: editUsingGET_18
2019-03-18 20:16:20 -Generating unique operation named: listUsingGET_20
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_31
2019-03-18 20:16:20 -Generating unique operation named: removeUsingPOST_32
2019-03-18 20:16:20 -Generating unique operation named: saveUsingPOST_18
2019-03-18 20:16:20 -Generating unique operation named: updateUsingGET_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPOST_18
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPUT_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 20:16:20 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 20:16:20 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 20:16:20 -Starting Quartz Scheduler now
2019-03-18 20:16:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 20:16:20 -Starting...
2019-03-18 20:16:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 20:16:20 -Started.
2019-03-18 20:16:20 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 20:16:20 -Using a shared selector for servlet write/read
2019-03-18 20:16:20 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 20:16:20 -Started BootdoApplication in 39.733 seconds (JVM running for 44.517)
2019-03-18 20:16:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 20:16:21 -==> Parameters: 
2019-03-18 20:16:21 -<==      Total: 1
2019-03-18 20:17:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 20:21:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 20:21:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 20:21:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 99 ms
2019-03-18 20:21:24 -Enabling session validation scheduler...
2019-03-18 20:21:24 -请求地址 : http://localhost:8081/
2019-03-18 20:21:24 -HTTP METHOD : GET
2019-03-18 20:21:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 20:21:24 -参数 : [{}]
2019-03-18 20:21:24 -耗时 : 4
2019-03-18 20:21:24 -返回值 : redirect:/index
2019-03-18 20:21:24 -请求地址 : http://localhost:8081/login;JSESSIONID=a5ff159b-3e81-4efb-83f6-2cc325ff0f51
2019-03-18 20:21:24 -HTTP METHOD : GET
2019-03-18 20:21:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:21:24 -参数 : [{}]
2019-03-18 20:21:24 -耗时 : 1
2019-03-18 20:21:24 -返回值 : login
2019-03-18 20:21:26 -请求地址 : http://localhost:8081/getVerify
2019-03-18 20:21:26 -HTTP METHOD : GET
2019-03-18 20:21:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 20:21:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@16b6ae94, org.apache.shiro.web.servlet.ShiroHttpServletResponse@253c14ba]
2019-03-18 20:21:30 -3561
2019-03-18 20:21:30 -耗时 : 3799
2019-03-18 20:21:30 -返回值 : null
2019-03-18 20:21:30 -请求地址 : http://localhost:8081/login
2019-03-18 20:21:30 -HTTP METHOD : GET
2019-03-18 20:21:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:21:30 -参数 : [{}]
2019-03-18 20:21:30 -耗时 : 1
2019-03-18 20:21:30 -返回值 : login
2019-03-18 20:21:36 -请求地址 : http://localhost:8081/login
2019-03-18 20:21:36 -HTTP METHOD : POST
2019-03-18 20:21:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 20:21:36 -参数 : [admin, 111111, 3561, org.apache.shiro.web.servlet.ShiroHttpServletRequest@491e975a]
2019-03-18 20:21:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 20:21:36 -==> Parameters: admin(String)
2019-03-18 20:21:36 -<==      Total: 1
2019-03-18 20:21:36 -耗时 : 278
2019-03-18 20:21:36 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:21:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 20:21:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:21:36 -==> Parameters: 1(Long), admin(String), 登录(String), 278(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 20:21:36.555(Timestamp)
2019-03-18 20:21:36 -请求地址 : http://localhost:8081/index
2019-03-18 20:21:36 -HTTP METHOD : GET
2019-03-18 20:21:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:21:36 -参数 : [{}]
2019-03-18 20:21:36 -<==    Updates: 1
2019-03-18 20:21:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:21:37 -==> Parameters: 1(Long)
2019-03-18 20:21:37 -<==      Total: 45
2019-03-18 20:21:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:21:37 -==> Parameters: 138(Long)
2019-03-18 20:21:37 -<==      Total: 1
2019-03-18 20:21:37 -耗时 : 565
2019-03-18 20:21:37 -返回值 : index_v1
2019-03-18 20:21:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:21:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 566(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:21:37.408(Timestamp)
2019-03-18 20:21:37 -<==    Updates: 1
2019-03-18 20:21:37 -请求地址 : http://localhost:8081/main
2019-03-18 20:21:37 -HTTP METHOD : GET
2019-03-18 20:21:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:21:37 -参数 : []
2019-03-18 20:21:37 -耗时 : 5
2019-03-18 20:21:37 -返回值 : main
2019-03-18 20:21:38 -请求地址 : http://localhost:8081/main
2019-03-18 20:21:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:21:38 -HTTP METHOD : GET
2019-03-18 20:21:38 -HTTP METHOD : GET
2019-03-18 20:21:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:21:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:21:38 -参数 : []
2019-03-18 20:21:38 -参数 : []
2019-03-18 20:21:38 -耗时 : 3
2019-03-18 20:21:38 -返回值 : main
2019-03-18 20:21:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:21:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:21:38 -<==      Total: 0
2019-03-18 20:21:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:21:38 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:21:38 -<==      Total: 1
2019-03-18 20:21:38 -耗时 : 160
2019-03-18 20:21:38 -返回值 : com.bootdo.common.utils.PageUtils@43c235a1
2019-03-18 20:21:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 20:21:48 -==> Parameters: 1(Long)
2019-03-18 20:21:48 -<==      Total: 86
2019-03-18 20:21:48 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:21:48 -HTTP METHOD : GET
2019-03-18 20:21:48 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:21:48 -参数 : []
2019-03-18 20:21:48 -耗时 : 0
2019-03-18 20:21:48 -返回值 : heat/heat/heat
2019-03-18 20:21:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:21:49 -HTTP METHOD : GET
2019-03-18 20:21:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:21:49 -参数 : [userType]
2019-03-18 20:21:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:21:49 -==> Parameters: userType(String)
2019-03-18 20:21:49 -<==      Total: 2
2019-03-18 20:21:49 -耗时 : 128
2019-03-18 20:21:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:21:49 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:21:49 -HTTP METHOD : GET
2019-03-18 20:21:49 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:21:49 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:21:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:21:49 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:21:49 -<==      Total: 3
2019-03-18 20:21:49 -==>  Preparing: select count(*) from heat 
2019-03-18 20:21:49 -==> Parameters: 
2019-03-18 20:21:49 -<==      Total: 1
2019-03-18 20:21:49 -耗时 : 91
2019-03-18 20:21:49 -返回值 : com.bootdo.common.utils.PageUtils@1cb9be96
2019-03-18 20:21:57 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:21:57 -HTTP METHOD : GET
2019-03-18 20:21:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:21:57 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-18 20:21:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:21:57 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:21:57 -<==      Total: 3
2019-03-18 20:21:57 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 20:21:57 -==> Parameters: A(String), 2019-03(String)
2019-03-18 20:21:57 -<==      Total: 1
2019-03-18 20:21:57 -耗时 : 29
2019-03-18 20:21:57 -返回值 : com.bootdo.common.utils.PageUtils@64f63f6a
2019-03-18 20:21:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:21:57 -HTTP METHOD : GET
2019-03-18 20:21:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:21:57 -参数 : []
2019-03-18 20:21:57 -耗时 : 1
2019-03-18 20:21:57 -返回值 : system/dept/deptTree
2019-03-18 20:21:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:21:58 -HTTP METHOD : GET
2019-03-18 20:21:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:21:58 -参数 : []
2019-03-18 20:21:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:21:58 -==> Parameters: 
2019-03-18 20:21:58 -<==      Total: 3
2019-03-18 20:21:58 -耗时 : 23
2019-03-18 20:21:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:22:00 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:22:00 -HTTP METHOD : GET
2019-03-18 20:22:00 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:22:00 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 20:22:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:22:00 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:22:00 -<==      Total: 1
2019-03-18 20:22:00 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:22:00 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 20:22:00 -<==      Total: 1
2019-03-18 20:22:00 -耗时 : 20
2019-03-18 20:22:00 -返回值 : com.bootdo.common.utils.PageUtils@7f48e628
2019-03-18 20:22:07 -请求地址 : http://localhost:8081/heat/heat/exprotHeat
2019-03-18 20:22:07 -HTTP METHOD : GET
2019-03-18 20:22:07 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.exprotExcel
2019-03-18 20:22:07 -参数 : [com.bootdo.heat.vo.HeatVo@671655d6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@54ef455e]
2019-03-18 20:22:07 -耗时 : 11
2019-03-18 20:22:07 -返回值 : null
2019-03-18 20:26:50 -请求地址 : http://localhost:8081/index
2019-03-18 20:26:50 -HTTP METHOD : GET
2019-03-18 20:26:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:26:50 -参数 : [{}]
2019-03-18 20:26:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:26:50 -==> Parameters: 1(Long)
2019-03-18 20:26:50 -<==      Total: 45
2019-03-18 20:26:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:26:50 -==> Parameters: 138(Long)
2019-03-18 20:26:50 -<==      Total: 1
2019-03-18 20:26:50 -耗时 : 116
2019-03-18 20:26:50 -返回值 : index_v1
2019-03-18 20:26:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:26:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 116(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:26:50.968(Timestamp)
2019-03-18 20:26:51 -<==    Updates: 1
2019-03-18 20:26:51 -请求地址 : http://localhost:8081/main
2019-03-18 20:26:51 -HTTP METHOD : GET
2019-03-18 20:26:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:26:51 -参数 : []
2019-03-18 20:26:51 -耗时 : 1
2019-03-18 20:26:51 -返回值 : main
2019-03-18 20:26:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:26:51 -HTTP METHOD : GET
2019-03-18 20:26:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:26:51 -参数 : []
2019-03-18 20:26:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:26:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:26:51 -<==      Total: 0
2019-03-18 20:26:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:26:51 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:26:51 -<==      Total: 1
2019-03-18 20:26:51 -耗时 : 10
2019-03-18 20:26:51 -返回值 : com.bootdo.common.utils.PageUtils@3d0b441f
2019-03-18 20:26:51 -请求地址 : http://localhost:8081/main
2019-03-18 20:26:51 -HTTP METHOD : GET
2019-03-18 20:26:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:26:51 -参数 : []
2019-03-18 20:26:51 -耗时 : 1
2019-03-18 20:26:51 -返回值 : main
2019-03-18 20:26:54 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:26:54 -HTTP METHOD : GET
2019-03-18 20:26:54 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:26:54 -参数 : []
2019-03-18 20:26:54 -耗时 : 0
2019-03-18 20:26:54 -返回值 : heat/heat/heat
2019-03-18 20:26:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:26:54 -HTTP METHOD : GET
2019-03-18 20:26:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:26:54 -参数 : [userType]
2019-03-18 20:26:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:26:54 -==> Parameters: userType(String)
2019-03-18 20:26:54 -<==      Total: 2
2019-03-18 20:26:54 -耗时 : 6
2019-03-18 20:26:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:26:54 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:26:54 -HTTP METHOD : GET
2019-03-18 20:26:54 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:26:54 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:26:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:26:54 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:26:54 -<==      Total: 3
2019-03-18 20:26:54 -==>  Preparing: select count(*) from heat 
2019-03-18 20:26:54 -==> Parameters: 
2019-03-18 20:26:54 -<==      Total: 1
2019-03-18 20:26:54 -耗时 : 11
2019-03-18 20:26:54 -返回值 : com.bootdo.common.utils.PageUtils@2c04f379
2019-03-18 20:27:34 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:27:34 -HTTP METHOD : GET
2019-03-18 20:27:34 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:27:34 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-18 20:27:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:27:34 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:27:34 -<==      Total: 3
2019-03-18 20:27:34 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 20:27:34 -==> Parameters: A(String), 2019-03(String)
2019-03-18 20:27:34 -<==      Total: 1
2019-03-18 20:27:34 -耗时 : 24
2019-03-18 20:27:34 -返回值 : com.bootdo.common.utils.PageUtils@6a032ca2
2019-03-18 20:27:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:27:35 -HTTP METHOD : GET
2019-03-18 20:27:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:27:35 -参数 : []
2019-03-18 20:27:35 -耗时 : 1
2019-03-18 20:27:35 -返回值 : system/dept/deptTree
2019-03-18 20:27:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:27:35 -HTTP METHOD : GET
2019-03-18 20:27:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:27:35 -参数 : []
2019-03-18 20:27:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:27:35 -==> Parameters: 
2019-03-18 20:27:35 -<==      Total: 3
2019-03-18 20:27:35 -耗时 : 5
2019-03-18 20:27:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:27:38 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:27:38 -HTTP METHOD : GET
2019-03-18 20:27:38 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:27:38 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 20:27:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:27:38 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:27:38 -<==      Total: 3
2019-03-18 20:27:38 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:27:38 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-18 20:27:38 -<==      Total: 1
2019-03-18 20:27:38 -耗时 : 18
2019-03-18 20:27:38 -返回值 : com.bootdo.common.utils.PageUtils@74c57886
2019-03-18 20:27:39 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:27:39 -HTTP METHOD : GET
2019-03-18 20:27:39 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:27:39 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 20:27:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:27:39 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:27:39 -<==      Total: 3
2019-03-18 20:27:39 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:27:39 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-18 20:27:39 -<==      Total: 1
2019-03-18 20:27:39 -耗时 : 12
2019-03-18 20:27:39 -返回值 : com.bootdo.common.utils.PageUtils@2b1866a5
2019-03-18 20:27:41 -请求地址 : http://localhost:8081/heat/heat/exprotHeat
2019-03-18 20:27:41 -HTTP METHOD : GET
2019-03-18 20:27:41 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.exprotExcel
2019-03-18 20:27:41 -参数 : [com.bootdo.heat.vo.HeatVo@56091c67, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30196592]
2019-03-18 20:27:41 -耗时 : 6
2019-03-18 20:27:41 -返回值 : null
2019-03-18 20:32:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 7568 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 20:32:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 20:32:26 -The following profiles are active: dev
2019-03-18 20:32:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 18 20:32:26 CST 2019]; root of context hierarchy
2019-03-18 20:32:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 20:32:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f845610e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ea9e8fb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 20:32:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 20:32:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:32:35 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 20:32:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 20:32:35 -Starting service [Tomcat]
2019-03-18 20:32:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 20:32:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 20:32:35 -Initializing Spring embedded WebApplicationContext
2019-03-18 20:32:35 -Root WebApplicationContext: initialization completed in 9437 ms
2019-03-18 20:32:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 20:32:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 20:32:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 20:32:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 20:32:36 -Filter xssFilter was not registered (disabled)
2019-03-18 20:32:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 20:32:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 20:32:36 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 20:32:36 -Servlet dispatcherServlet mapped to [/]
2019-03-18 20:32:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 18 20:32:26 CST 2019]; root of context hierarchy
2019-03-18 20:32:39 -Using default implementation for ThreadExecutor
2019-03-18 20:32:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 20:32:39 -Quartz Scheduler v.2.2.1 created.
2019-03-18 20:32:39 -RAMJobStore initialized.
2019-03-18 20:32:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 20:32:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 20:32:39 -Quartz scheduler version: 2.2.1
2019-03-18 20:32:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5e2b512b
2019-03-18 20:32:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 20:32:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 20:32:43 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 20:32:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 20:32:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 20:32:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 20:32:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 20:32:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 20:32:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 20:32:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 20:32:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 20:32:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 20:32:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 20:32:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 20:32:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 20:32:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 20:32:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:32:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:32:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 20:32:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 20:32:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 20:32:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 20:32:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 20:32:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 20:32:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 20:32:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 20:32:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 20:32:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 20:32:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:32:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 20:32:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:32:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 20:32:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 20:32:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 20:32:43 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 20:32:43 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:32:43 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 20:32:43 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 20:32:43 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 20:32:43 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:32:43 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:32:43 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 20:32:43 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 20:32:43 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 20:32:43 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:32:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 20:32:43 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 20:32:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 20:32:43 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 20:32:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 20:32:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:32:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 20:32:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 20:32:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 20:32:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 20:32:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 20:32:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 20:32:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 20:32:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 20:32:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 20:32:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 20:32:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 20:32:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:32:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 20:32:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 20:32:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 20:32:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 20:32:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 20:32:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 20:32:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 20:32:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 20:32:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 20:32:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 20:32:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 20:32:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 20:32:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 20:32:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 20:32:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 20:32:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:32:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:32:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:32:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 20:32:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 20:32:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 20:32:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 20:32:43 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 20:32:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:32:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:32:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 20:32:43 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:32:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 20:32:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:32:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 20:32:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 20:32:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 20:32:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 20:32:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 20:32:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 20:32:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:32:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 18 20:32:26 CST 2019]; root of context hierarchy
2019-03-18 20:32:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:32:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:32:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:32:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 20:32:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 20:32:47 -Registering beans for JMX exposure on startup
2019-03-18 20:32:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 20:32:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 20:32:47 -Starting beans in phase 2147483647
2019-03-18 20:32:47 -Context refreshed
2019-03-18 20:32:47 -Found 1 custom documentation plugin(s)
2019-03-18 20:32:47 -Scanning for api listing references
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_1
2019-03-18 20:32:48 -Generating unique operation named: addUsingGET_1
2019-03-18 20:32:48 -Generating unique operation named: editUsingGET_1
2019-03-18 20:32:48 -Generating unique operation named: listUsingGET_1
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_2
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_3
2019-03-18 20:32:48 -Generating unique operation named: saveUsingPOST_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingGET_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPOST_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPUT_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 20:32:48 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 20:32:48 -Generating unique operation named: addUsingGET_2
2019-03-18 20:32:48 -Generating unique operation named: editUsingGET_2
2019-03-18 20:32:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 20:32:48 -Generating unique operation named: listUsingGET_2
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_4
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_5
2019-03-18 20:32:48 -Generating unique operation named: saveUsingPOST_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingGET_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPOST_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPUT_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 20:32:48 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 20:32:48 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 20:32:48 -Generating unique operation named: addUsingGET_3
2019-03-18 20:32:48 -Generating unique operation named: editUsingGET_3
2019-03-18 20:32:48 -Generating unique operation named: listUsingGET_3
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_6
2019-03-18 20:32:48 -Generating unique operation named: removeUsingPOST_7
2019-03-18 20:32:48 -Generating unique operation named: saveUsingPOST_3
2019-03-18 20:32:48 -Generating unique operation named: updateUsingGET_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_4
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_4
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_4
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_8
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_9
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingGET_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 20:32:49 -Generating unique operation named: ElecUsingGET_1
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_5
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_5
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_5
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_10
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_11
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingGET_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_6
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_6
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_6
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_7
2019-03-18 20:32:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_7
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_12
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_13
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingGET_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 20:32:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_7
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_8
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_8
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_14
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_15
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingGET_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_8
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_9
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_9
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_16
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_17
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingGET_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_9
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPUT_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 20:32:49 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_9
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_10
2019-03-18 20:32:49 -Generating unique operation named: infoUsingGET_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingPOST_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingPUT_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 20:32:49 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_10
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_18
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_19
2019-03-18 20:32:49 -Generating unique operation named: saveUsingPOST_9
2019-03-18 20:32:49 -Generating unique operation named: updateUsingPOST_10
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_11
2019-03-18 20:32:49 -Generating unique operation named: removeUsingPOST_20
2019-03-18 20:32:49 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 20:32:49 -Generating unique operation named: addUsingGET_10
2019-03-18 20:32:49 -Generating unique operation named: editUsingGET_11
2019-03-18 20:32:49 -Generating unique operation named: listUsingGET_12
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_21
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_10
2019-03-18 20:32:50 -Generating unique operation named: treeUsingGET_1
2019-03-18 20:32:50 -Generating unique operation named: treeUsingGET_2
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_11
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_11
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_12
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_13
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_22
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_23
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingGET_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPUT_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 20:32:50 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_12
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_13
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_14
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_24
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_25
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingGET_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPUT_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 20:32:50 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_13
2019-03-18 20:32:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_14
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_15
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_13
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_14
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_14
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_16
2019-03-18 20:32:50 -Generating unique operation named: listUsingHEAD_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingPOST_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingPUT_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingPATCH_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingDELETE_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 20:32:50 -Generating unique operation named: listUsingTRACE_1
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_14
2019-03-18 20:32:50 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_15
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_17
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_26
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_15
2019-03-18 20:32:50 -Generating unique operation named: treeUsingGET_3
2019-03-18 20:32:50 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_15
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_15
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_16
2019-03-18 20:32:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_18
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_27
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_28
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_16
2019-03-18 20:32:50 -Generating unique operation named: updateUsingGET_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_16
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPUT_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 20:32:50 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 20:32:50 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_16
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_17
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_19
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_29
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_30
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_17
2019-03-18 20:32:50 -Generating unique operation named: updateUsingGET_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_17
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPUT_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 20:32:50 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 20:32:50 -Generating unique operation named: addUsingGET_17
2019-03-18 20:32:50 -Generating unique operation named: editUsingGET_18
2019-03-18 20:32:50 -Generating unique operation named: listUsingGET_20
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_31
2019-03-18 20:32:50 -Generating unique operation named: removeUsingPOST_32
2019-03-18 20:32:50 -Generating unique operation named: saveUsingPOST_18
2019-03-18 20:32:50 -Generating unique operation named: updateUsingGET_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPOST_18
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPUT_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 20:32:50 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 20:32:50 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 20:32:51 -Starting Quartz Scheduler now
2019-03-18 20:32:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 20:32:51 -Starting...
2019-03-18 20:32:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 20:32:51 -Started.
2019-03-18 20:32:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 20:32:51 -Using a shared selector for servlet write/read
2019-03-18 20:32:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 20:32:51 -Started BootdoApplication in 27.201 seconds (JVM running for 28.777)
2019-03-18 20:32:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 20:32:51 -==> Parameters: 
2019-03-18 20:32:51 -<==      Total: 1
2019-03-18 20:33:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 20:33:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 20:33:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-03-18 20:33:31 -Enabling session validation scheduler...
2019-03-18 20:33:31 -请求地址 : http://localhost:8081/
2019-03-18 20:33:31 -HTTP METHOD : GET
2019-03-18 20:33:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-18 20:33:31 -参数 : [{}]
2019-03-18 20:33:31 -耗时 : 5
2019-03-18 20:33:31 -返回值 : redirect:/index
2019-03-18 20:33:31 -请求地址 : http://localhost:8081/login;JSESSIONID=00e7981e-2bdc-40fe-860c-d7891a60847f
2019-03-18 20:33:31 -HTTP METHOD : GET
2019-03-18 20:33:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:33:31 -参数 : [{}]
2019-03-18 20:33:31 -耗时 : 1
2019-03-18 20:33:31 -返回值 : login
2019-03-18 20:33:33 -请求地址 : http://localhost:8081/getVerify
2019-03-18 20:33:33 -HTTP METHOD : GET
2019-03-18 20:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 20:33:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24d0c8c1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@171bba84]
2019-03-18 20:33:34 -2442
2019-03-18 20:33:34 -耗时 : 544
2019-03-18 20:33:34 -返回值 : null
2019-03-18 20:33:34 -请求地址 : http://localhost:8081/login
2019-03-18 20:33:34 -HTTP METHOD : GET
2019-03-18 20:33:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:33:34 -参数 : [{}]
2019-03-18 20:33:34 -耗时 : 1
2019-03-18 20:33:34 -返回值 : login
2019-03-18 20:33:42 -请求地址 : http://localhost:8081/login
2019-03-18 20:33:42 -HTTP METHOD : POST
2019-03-18 20:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 20:33:42 -参数 : [admin, 111111, 2442, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2dc92b4a]
2019-03-18 20:33:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 20:33:42 -==> Parameters: admin(String)
2019-03-18 20:33:42 -<==      Total: 1
2019-03-18 20:33:42 -耗时 : 198
2019-03-18 20:33:42 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:33:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 20:33:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:33:42 -==> Parameters: 1(Long), admin(String), 登录(String), 198(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 20:33:42.376(Timestamp)
2019-03-18 20:33:42 -<==    Updates: 1
2019-03-18 20:33:42 -请求地址 : http://localhost:8081/index
2019-03-18 20:33:42 -HTTP METHOD : GET
2019-03-18 20:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:33:42 -参数 : [{}]
2019-03-18 20:33:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:33:42 -==> Parameters: 1(Long)
2019-03-18 20:33:42 -<==      Total: 45
2019-03-18 20:33:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:33:42 -==> Parameters: 138(Long)
2019-03-18 20:33:42 -<==      Total: 1
2019-03-18 20:33:42 -耗时 : 481
2019-03-18 20:33:42 -返回值 : index_v1
2019-03-18 20:33:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:33:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 482(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:33:43.09(Timestamp)
2019-03-18 20:33:43 -<==    Updates: 1
2019-03-18 20:33:43 -请求地址 : http://localhost:8081/main
2019-03-18 20:33:43 -HTTP METHOD : GET
2019-03-18 20:33:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:33:43 -参数 : []
2019-03-18 20:33:43 -耗时 : 24
2019-03-18 20:33:43 -返回值 : main
2019-03-18 20:33:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:33:43 -HTTP METHOD : GET
2019-03-18 20:33:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:33:43 -参数 : []
2019-03-18 20:33:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:33:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:33:43 -请求地址 : http://localhost:8081/main
2019-03-18 20:33:43 -HTTP METHOD : GET
2019-03-18 20:33:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:33:43 -参数 : []
2019-03-18 20:33:43 -耗时 : 1
2019-03-18 20:33:43 -返回值 : main
2019-03-18 20:33:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2019-03-18 20:33:44 -<==      Total: 0
2019-03-18 20:33:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:33:44 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:33:44 -<==      Total: 1
2019-03-18 20:33:44 -耗时 : 531
2019-03-18 20:33:44 -返回值 : com.bootdo.common.utils.PageUtils@47ae5323
2019-03-18 20:33:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 20:33:56 -==> Parameters: 1(Long)
2019-03-18 20:33:56 -<==      Total: 86
2019-03-18 20:33:56 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:33:56 -HTTP METHOD : GET
2019-03-18 20:33:56 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:33:56 -参数 : []
2019-03-18 20:33:56 -耗时 : 0
2019-03-18 20:33:56 -返回值 : heat/heat/heat
2019-03-18 20:33:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:33:57 -HTTP METHOD : GET
2019-03-18 20:33:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:33:57 -参数 : [userType]
2019-03-18 20:33:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:33:57 -==> Parameters: userType(String)
2019-03-18 20:33:57 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:33:57 -HTTP METHOD : GET
2019-03-18 20:33:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:33:57 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:33:57 -<==      Total: 2
2019-03-18 20:33:57 -耗时 : 63
2019-03-18 20:33:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:33:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:33:57 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:33:57 -<==      Total: 3
2019-03-18 20:33:57 -==>  Preparing: select count(*) from heat 
2019-03-18 20:33:57 -==> Parameters: 
2019-03-18 20:33:57 -<==      Total: 1
2019-03-18 20:33:57 -耗时 : 78
2019-03-18 20:33:57 -返回值 : com.bootdo.common.utils.PageUtils@c3dcd8f
2019-03-18 20:34:06 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:34:06 -HTTP METHOD : GET
2019-03-18 20:34:06 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:34:06 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-18 20:34:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:34:06 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:34:06 -<==      Total: 3
2019-03-18 20:34:06 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-18 20:34:06 -==> Parameters: A(String), 2019-03(String)
2019-03-18 20:34:06 -<==      Total: 1
2019-03-18 20:34:06 -耗时 : 30
2019-03-18 20:34:06 -返回值 : com.bootdo.common.utils.PageUtils@46f36906
2019-03-18 20:34:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:34:06 -HTTP METHOD : GET
2019-03-18 20:34:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:34:06 -参数 : []
2019-03-18 20:34:06 -耗时 : 1
2019-03-18 20:34:06 -返回值 : system/dept/deptTree
2019-03-18 20:34:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:34:07 -HTTP METHOD : GET
2019-03-18 20:34:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:34:07 -参数 : []
2019-03-18 20:34:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:34:07 -==> Parameters: 
2019-03-18 20:34:07 -<==      Total: 3
2019-03-18 20:34:07 -耗时 : 31
2019-03-18 20:34:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:34:28 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:34:28 -HTTP METHOD : GET
2019-03-18 20:34:28 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:34:28 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}]
2019-03-18 20:34:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:34:28 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:34:28 -<==      Total: 1
2019-03-18 20:34:28 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:34:28 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 20:34:28 -<==      Total: 1
2019-03-18 20:34:28 -耗时 : 20
2019-03-18 20:34:28 -返回值 : com.bootdo.common.utils.PageUtils@729edcfe
2019-03-18 20:34:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 20:34:30 -HTTP METHOD : GET
2019-03-18 20:34:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 20:34:30 -参数 : []
2019-03-18 20:34:30 -耗时 : 0
2019-03-18 20:34:30 -返回值 : system/dept/deptTree
2019-03-18 20:34:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 20:34:30 -HTTP METHOD : GET
2019-03-18 20:34:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 20:34:30 -参数 : []
2019-03-18 20:34:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 20:34:30 -==> Parameters: 
2019-03-18 20:34:30 -<==      Total: 3
2019-03-18 20:34:30 -耗时 : 10
2019-03-18 20:34:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 20:34:32 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:34:32 -HTTP METHOD : GET
2019-03-18 20:34:32 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:34:32 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}]
2019-03-18 20:34:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-18 20:34:32 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 20:34:32 -<==      Total: 3
2019-03-18 20:34:32 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:34:32 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-18 20:34:32 -<==      Total: 1
2019-03-18 20:34:32 -耗时 : 13
2019-03-18 20:34:32 -返回值 : com.bootdo.common.utils.PageUtils@bb2832e
2019-03-18 20:34:38 -请求地址 : http://localhost:8081/heat/heat/exprotHeat
2019-03-18 20:34:38 -HTTP METHOD : GET
2019-03-18 20:34:38 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.exprotExcel
2019-03-18 20:34:38 -参数 : [com.bootdo.heat.vo.HeatVo@18997e37, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b22f274]
2019-03-18 20:34:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-18 20:34:38 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-18 20:34:38 -<==      Total: 3
2019-03-18 20:34:39 -耗时 : 1259
2019-03-18 20:34:39 -返回值 : null
2019-03-18 20:38:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 20:38:48 -HTTP METHOD : GET
2019-03-18 20:38:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 20:38:48 -参数 : []
2019-03-18 20:38:48 -耗时 : 1
2019-03-18 20:38:48 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 20:38:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:38:48 -HTTP METHOD : GET
2019-03-18 20:38:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:38:48 -参数 : [userType]
2019-03-18 20:38:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:38:48 -==> Parameters: userType(String)
2019-03-18 20:38:48 -<==      Total: 2
2019-03-18 20:38:48 -耗时 : 7
2019-03-18 20:38:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:38:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:38:49 -HTTP METHOD : GET
2019-03-18 20:38:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:38:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:38:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 20:38:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:38:49 -<==      Total: 3
2019-03-18 20:38:49 -==>  Preparing: select count(*) from elec_log 
2019-03-18 20:38:49 -==> Parameters: 
2019-03-18 20:38:49 -<==      Total: 1
2019-03-18 20:38:49 -耗时 : 84
2019-03-18 20:38:49 -返回值 : com.bootdo.common.utils.PageUtils@1cc8e55d
2019-03-18 20:39:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:39:01 -HTTP METHOD : GET
2019-03-18 20:39:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:39:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:39:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:39:01 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:39:01 -<==      Total: 0
2019-03-18 20:39:01 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:39:01 -==> Parameters: 2019-03-09(String)
2019-03-18 20:39:01 -<==      Total: 1
2019-03-18 20:39:01 -耗时 : 15
2019-03-18 20:39:01 -返回值 : com.bootdo.common.utils.PageUtils@3a201d10
2019-03-18 20:39:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:39:02 -HTTP METHOD : GET
2019-03-18 20:39:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:39:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:39:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:39:02 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:39:02 -<==      Total: 0
2019-03-18 20:39:02 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:39:02 -==> Parameters: 2019-03-09(String)
2019-03-18 20:39:02 -<==      Total: 1
2019-03-18 20:39:02 -耗时 : 7
2019-03-18 20:39:02 -返回值 : com.bootdo.common.utils.PageUtils@446faae6
2019-03-18 20:39:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:39:02 -HTTP METHOD : GET
2019-03-18 20:39:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:39:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:39:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:39:02 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:39:02 -<==      Total: 0
2019-03-18 20:39:02 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:39:02 -==> Parameters: 2019-03-09(String)
2019-03-18 20:39:02 -<==      Total: 1
2019-03-18 20:39:02 -耗时 : 6
2019-03-18 20:39:02 -返回值 : com.bootdo.common.utils.PageUtils@388c09f1
2019-03-18 20:39:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:39:03 -HTTP METHOD : GET
2019-03-18 20:39:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:39:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:39:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:39:03 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:39:03 -<==      Total: 0
2019-03-18 20:39:03 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:39:03 -==> Parameters: 2019-03-09(String)
2019-03-18 20:39:03 -<==      Total: 1
2019-03-18 20:39:03 -耗时 : 8
2019-03-18 20:39:03 -返回值 : com.bootdo.common.utils.PageUtils@7695c549
2019-03-18 20:39:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 20:39:08 -HTTP METHOD : GET
2019-03-18 20:39:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 20:39:08 -参数 : []
2019-03-18 20:39:08 -耗时 : 1
2019-03-18 20:39:08 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 20:39:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:39:09 -HTTP METHOD : GET
2019-03-18 20:39:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:39:09 -参数 : [userType]
2019-03-18 20:39:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:39:09 -==> Parameters: userType(String)
2019-03-18 20:39:09 -<==      Total: 2
2019-03-18 20:39:09 -耗时 : 10
2019-03-18 20:39:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:39:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 20:39:09 -HTTP METHOD : GET
2019-03-18 20:39:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 20:39:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:39:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 20:39:09 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-18 20:39:09 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-18 20:39:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:39:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 20:39:09.454(Timestamp)
2019-03-18 20:39:09 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$b3f4d0c3.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 20:39:09 -<==    Updates: 1
2019-03-18 20:39:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-18 20:39:10 -HTTP METHOD : GET
2019-03-18 20:39:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-18 20:39:10 -参数 : []
2019-03-18 20:39:10 -耗时 : 0
2019-03-18 20:39:10 -返回值 : /moneyLog/waterLog/waterLog
2019-03-18 20:39:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:39:10 -HTTP METHOD : GET
2019-03-18 20:39:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:39:10 -参数 : [userType]
2019-03-18 20:39:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:39:10 -==> Parameters: userType(String)
2019-03-18 20:39:10 -<==      Total: 2
2019-03-18 20:39:10 -耗时 : 5
2019-03-18 20:39:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:39:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-18 20:39:10 -HTTP METHOD : GET
2019-03-18 20:39:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-18 20:39:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:39:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-18 20:39:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:39:10 -<==      Total: 3
2019-03-18 20:39:10 -==>  Preparing: select count(*) from water_log 
2019-03-18 20:39:10 -==> Parameters: 
2019-03-18 20:39:10 -<==      Total: 1
2019-03-18 20:39:10 -耗时 : 169
2019-03-18 20:39:10 -返回值 : com.bootdo.common.utils.PageUtils@23b7f822
2019-03-18 20:39:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 20:39:11 -HTTP METHOD : GET
2019-03-18 20:39:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 20:39:11 -参数 : []
2019-03-18 20:39:11 -耗时 : 1
2019-03-18 20:39:11 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 20:39:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:39:11 -HTTP METHOD : GET
2019-03-18 20:39:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:39:11 -参数 : [userType]
2019-03-18 20:39:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:39:11 -==> Parameters: userType(String)
2019-03-18 20:39:11 -<==      Total: 2
2019-03-18 20:39:11 -耗时 : 5
2019-03-18 20:39:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:39:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 20:39:11 -HTTP METHOD : GET
2019-03-18 20:39:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 20:39:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:39:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 20:39:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:39:11 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:62)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$b3f4d0c3.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy170.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, expect RPAREN, actual IDENTIFIER t
	at com.alibaba.druid.sql.parser.SQLExprParser.accept(SQLExprParser.java:1827)
	at com.alibaba.druid.sql.parser.SQLExprParser.primary(SQLExprParser.java:220)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.primary(MySqlExprParser.java:172)
	at com.alibaba.druid.sql.parser.SQLExprParser.expr(SQLExprParser.java:85)
	at com.alibaba.druid.sql.parser.SQLExprParser.parseSelectItem(SQLExprParser.java:2153)
	at com.alibaba.druid.sql.parser.SQLSelectParser.parseSelectList(SQLSelectParser.java:373)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.query(MySqlSelectParser.java:152)
	at com.alibaba.druid.sql.parser.SQLSelectParser.select(SQLSelectParser.java:59)
	at com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.parseSelect(MySqlStatementParser.java:247)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:114)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 131 common frames omitted
2019-03-18 20:39:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, expect RPAREN, actual IDENTIFIER t : select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SHEATT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?(String), null, 2019-03-18 20:39:11.892(Timestamp)
2019-03-18 20:39:11 -<==    Updates: 1
2019-03-18 20:41:59 -Starting BootdoApplication on ZJZL-20180906VX with PID 15464 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 20:41:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 20:41:59 -The following profiles are active: dev
2019-03-18 20:41:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Mon Mar 18 20:41:59 CST 2019]; root of context hierarchy
2019-03-18 20:42:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 20:42:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c8d2c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f722016f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 20:42:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 20:42:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:42:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 20:42:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 20:42:11 -Starting service [Tomcat]
2019-03-18 20:42:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 20:42:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 20:42:12 -Initializing Spring embedded WebApplicationContext
2019-03-18 20:42:12 -Root WebApplicationContext: initialization completed in 12558 ms
2019-03-18 20:42:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 20:42:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 20:42:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 20:42:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 20:42:13 -Filter xssFilter was not registered (disabled)
2019-03-18 20:42:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 20:42:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 20:42:13 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 20:42:13 -Servlet dispatcherServlet mapped to [/]
2019-03-18 20:42:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Mon Mar 18 20:41:59 CST 2019]; root of context hierarchy
2019-03-18 20:42:18 -Using default implementation for ThreadExecutor
2019-03-18 20:42:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 20:42:18 -Quartz Scheduler v.2.2.1 created.
2019-03-18 20:42:18 -RAMJobStore initialized.
2019-03-18 20:42:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 20:42:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 20:42:18 -Quartz scheduler version: 2.2.1
2019-03-18 20:42:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4153a832
2019-03-18 20:42:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 20:42:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 20:42:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 20:42:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 20:42:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 20:42:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 20:42:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 20:42:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 20:42:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 20:42:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 20:42:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 20:42:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 20:42:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 20:42:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 20:42:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 20:42:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 20:42:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:42:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 20:42:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:42:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 20:42:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 20:42:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 20:42:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 20:42:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 20:42:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 20:42:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 20:42:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 20:42:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 20:42:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 20:42:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 20:42:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 20:42:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 20:42:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:42:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 20:42:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 20:42:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 20:42:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:42:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:42:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 20:42:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 20:42:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 20:42:23 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:42:23 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 20:42:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 20:42:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 20:42:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 20:42:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 20:42:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 20:42:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 20:42:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 20:42:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 20:42:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 20:42:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 20:42:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 20:42:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 20:42:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 20:42:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 20:42:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:42:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 20:42:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 20:42:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 20:42:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 20:42:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 20:42:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 20:42:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 20:42:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 20:42:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 20:42:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 20:42:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 20:42:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 20:42:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 20:42:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 20:42:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:42:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 20:42:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:42:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:42:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 20:42:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 20:42:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 20:42:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 20:42:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 20:42:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:42:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:42:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 20:42:23 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:42:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 20:42:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:42:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 20:42:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 20:42:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 20:42:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 20:42:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 20:42:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 20:42:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:42:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Mon Mar 18 20:41:59 CST 2019]; root of context hierarchy
2019-03-18 20:42:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:42:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:42:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:42:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 20:42:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 20:42:28 -Registering beans for JMX exposure on startup
2019-03-18 20:42:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 20:42:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 20:42:28 -Starting beans in phase 2147483647
2019-03-18 20:42:28 -Context refreshed
2019-03-18 20:42:29 -Found 1 custom documentation plugin(s)
2019-03-18 20:42:29 -Scanning for api listing references
2019-03-18 20:42:29 -Generating unique operation named: removeUsingPOST_1
2019-03-18 20:42:29 -Generating unique operation named: addUsingGET_1
2019-03-18 20:42:29 -Generating unique operation named: editUsingGET_1
2019-03-18 20:42:29 -Generating unique operation named: listUsingGET_1
2019-03-18 20:42:29 -Generating unique operation named: removeUsingPOST_2
2019-03-18 20:42:29 -Generating unique operation named: removeUsingPOST_3
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPUT_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 20:42:30 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 20:42:30 -Generating unique operation named: addUsingGET_2
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_2
2019-03-18 20:42:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_2
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_4
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_5
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPUT_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 20:42:30 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 20:42:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 20:42:30 -Generating unique operation named: addUsingGET_3
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_3
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_3
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_6
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_7
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPUT_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 20:42:30 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 20:42:30 -Generating unique operation named: addUsingGET_4
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_4
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_4
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_8
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_9
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPUT_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 20:42:30 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 20:42:30 -Generating unique operation named: ElecUsingGET_1
2019-03-18 20:42:30 -Generating unique operation named: addUsingGET_5
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_5
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_5
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_10
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_11
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPUT_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 20:42:30 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_6
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_6
2019-03-18 20:42:30 -Generating unique operation named: updateUsingPOST_6
2019-03-18 20:42:30 -Generating unique operation named: addUsingGET_6
2019-03-18 20:42:30 -Generating unique operation named: editUsingGET_7
2019-03-18 20:42:30 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 20:42:30 -Generating unique operation named: listUsingGET_7
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_12
2019-03-18 20:42:30 -Generating unique operation named: removeUsingPOST_13
2019-03-18 20:42:30 -Generating unique operation named: saveUsingPOST_6
2019-03-18 20:42:30 -Generating unique operation named: updateUsingGET_6
2019-03-18 20:42:30 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPUT_6
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 20:42:31 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 20:42:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 20:42:31 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 20:42:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_7
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_8
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_8
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_14
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_15
2019-03-18 20:42:31 -Generating unique operation named: saveUsingPOST_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingGET_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPUT_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 20:42:31 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_8
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_9
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_9
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_16
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_17
2019-03-18 20:42:31 -Generating unique operation named: saveUsingPOST_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingGET_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPUT_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 20:42:31 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_9
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_10
2019-03-18 20:42:31 -Generating unique operation named: infoUsingGET_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingPOST_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingPUT_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 20:42:31 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_10
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_18
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_19
2019-03-18 20:42:31 -Generating unique operation named: saveUsingPOST_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_10
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_11
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_20
2019-03-18 20:42:31 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_10
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_11
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_12
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_21
2019-03-18 20:42:31 -Generating unique operation named: saveUsingPOST_10
2019-03-18 20:42:31 -Generating unique operation named: treeUsingGET_1
2019-03-18 20:42:31 -Generating unique operation named: treeUsingGET_2
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_11
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_11
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_12
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_13
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_22
2019-03-18 20:42:31 -Generating unique operation named: removeUsingPOST_23
2019-03-18 20:42:31 -Generating unique operation named: saveUsingPOST_11
2019-03-18 20:42:31 -Generating unique operation named: updateUsingGET_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPOST_12
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPUT_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 20:42:31 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 20:42:31 -Generating unique operation named: addUsingGET_12
2019-03-18 20:42:31 -Generating unique operation named: editUsingGET_13
2019-03-18 20:42:31 -Generating unique operation named: listUsingGET_14
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_24
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_25
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingGET_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPUT_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 20:42:32 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 20:42:32 -Generating unique operation named: addUsingGET_13
2019-03-18 20:42:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 20:42:32 -Generating unique operation named: editUsingGET_14
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_15
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_13
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_14
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_14
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_16
2019-03-18 20:42:32 -Generating unique operation named: listUsingHEAD_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingPOST_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingPUT_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingPATCH_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingDELETE_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 20:42:32 -Generating unique operation named: listUsingTRACE_1
2019-03-18 20:42:32 -Generating unique operation named: addUsingGET_14
2019-03-18 20:42:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 20:42:32 -Generating unique operation named: editUsingGET_15
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_17
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_26
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_15
2019-03-18 20:42:32 -Generating unique operation named: treeUsingGET_3
2019-03-18 20:42:32 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_15
2019-03-18 20:42:32 -Generating unique operation named: addUsingGET_15
2019-03-18 20:42:32 -Generating unique operation named: editUsingGET_16
2019-03-18 20:42:32 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_18
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_27
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_28
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_16
2019-03-18 20:42:32 -Generating unique operation named: updateUsingGET_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_16
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPUT_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 20:42:32 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 20:42:32 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 20:42:32 -Generating unique operation named: addUsingGET_16
2019-03-18 20:42:32 -Generating unique operation named: editUsingGET_17
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_19
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_29
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_30
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_17
2019-03-18 20:42:32 -Generating unique operation named: updateUsingGET_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_17
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPUT_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 20:42:32 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 20:42:32 -Generating unique operation named: addUsingGET_17
2019-03-18 20:42:32 -Generating unique operation named: editUsingGET_18
2019-03-18 20:42:32 -Generating unique operation named: listUsingGET_20
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_31
2019-03-18 20:42:32 -Generating unique operation named: removeUsingPOST_32
2019-03-18 20:42:32 -Generating unique operation named: saveUsingPOST_18
2019-03-18 20:42:32 -Generating unique operation named: updateUsingGET_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPOST_18
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPUT_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 20:42:32 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 20:42:32 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 20:42:32 -Starting Quartz Scheduler now
2019-03-18 20:42:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 20:42:32 -Starting...
2019-03-18 20:42:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 20:42:32 -Started.
2019-03-18 20:42:32 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 20:42:33 -Using a shared selector for servlet write/read
2019-03-18 20:42:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 20:42:33 -Started BootdoApplication in 36.084 seconds (JVM running for 38.029)
2019-03-18 20:42:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 20:42:33 -==> Parameters: 
2019-03-18 20:42:33 -<==      Total: 1
2019-03-18 20:42:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 20:42:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 20:42:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2019-03-18 20:42:45 -Enabling session validation scheduler...
2019-03-18 20:42:45 -请求地址 : http://localhost:8081/login;JSESSIONID=a36c3531-9c49-44f4-8028-da3b529affe6
2019-03-18 20:42:45 -HTTP METHOD : GET
2019-03-18 20:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:42:45 -参数 : [{}]
2019-03-18 20:42:45 -耗时 : 5
2019-03-18 20:42:45 -返回值 : login
2019-03-18 20:42:47 -请求地址 : http://localhost:8081/getVerify
2019-03-18 20:42:47 -HTTP METHOD : GET
2019-03-18 20:42:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 20:42:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@16cfb4f7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@72aac37c]
2019-03-18 20:42:50 -1348
2019-03-18 20:42:50 -耗时 : 2824
2019-03-18 20:42:50 -返回值 : null
2019-03-18 20:42:55 -请求地址 : http://localhost:8081/login
2019-03-18 20:42:55 -HTTP METHOD : POST
2019-03-18 20:42:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 20:42:55 -参数 : [admin, 111111, 1348, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f3a1f25]
2019-03-18 20:42:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 20:42:55 -==> Parameters: admin(String)
2019-03-18 20:42:55 -<==      Total: 1
2019-03-18 20:42:55 -耗时 : 177
2019-03-18 20:42:55 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:42:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 20:42:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:42:55 -==> Parameters: 1(Long), admin(String), 登录(String), 178(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 20:42:55.5(Timestamp)
2019-03-18 20:42:55 -请求地址 : http://localhost:8081/index
2019-03-18 20:42:55 -HTTP METHOD : GET
2019-03-18 20:42:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:42:55 -参数 : [{}]
2019-03-18 20:42:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:42:55 -==> Parameters: 1(Long)
2019-03-18 20:42:55 -<==    Updates: 1
2019-03-18 20:42:56 -<==      Total: 45
2019-03-18 20:42:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:42:56 -==> Parameters: 138(Long)
2019-03-18 20:42:56 -<==      Total: 1
2019-03-18 20:42:56 -耗时 : 600
2019-03-18 20:42:56 -返回值 : index_v1
2019-03-18 20:42:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:42:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 601(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:42:56.23(Timestamp)
2019-03-18 20:42:56 -<==    Updates: 1
2019-03-18 20:42:56 -请求地址 : http://localhost:8081/main
2019-03-18 20:42:56 -HTTP METHOD : GET
2019-03-18 20:42:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:42:56 -参数 : []
2019-03-18 20:42:56 -耗时 : 0
2019-03-18 20:42:56 -返回值 : main
2019-03-18 20:42:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:42:56 -HTTP METHOD : GET
2019-03-18 20:42:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:42:56 -参数 : []
2019-03-18 20:42:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:42:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:42:56 -请求地址 : http://localhost:8081/main
2019-03-18 20:42:56 -HTTP METHOD : GET
2019-03-18 20:42:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:42:56 -参数 : []
2019-03-18 20:42:56 -耗时 : 1
2019-03-18 20:42:56 -返回值 : main
2019-03-18 20:42:56 -<==      Total: 0
2019-03-18 20:42:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:42:56 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:42:56 -<==      Total: 1
2019-03-18 20:42:56 -耗时 : 165
2019-03-18 20:42:56 -返回值 : com.bootdo.common.utils.PageUtils@74e7b02a
2019-03-18 20:43:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 20:43:08 -==> Parameters: 1(Long)
2019-03-18 20:43:08 -<==      Total: 86
2019-03-18 20:43:08 -请求地址 : http://localhost:8081/heat/heat
2019-03-18 20:43:08 -HTTP METHOD : GET
2019-03-18 20:43:08 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-18 20:43:08 -参数 : []
2019-03-18 20:43:08 -耗时 : 2
2019-03-18 20:43:08 -返回值 : heat/heat/heat
2019-03-18 20:43:09 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-18 20:43:09 -HTTP METHOD : GET
2019-03-18 20:43:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-18 20:43:09 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:09 -HTTP METHOD : GET
2019-03-18 20:43:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:09 -参数 : [userType]
2019-03-18 20:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-18 20:43:09 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 20:43:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:09 -==> Parameters: userType(String)
2019-03-18 20:43:09 -<==      Total: 3
2019-03-18 20:43:09 -==>  Preparing: select count(*) from heat 
2019-03-18 20:43:09 -==> Parameters: 
2019-03-18 20:43:09 -<==      Total: 1
2019-03-18 20:43:09 -耗时 : 103
2019-03-18 20:43:09 -返回值 : com.bootdo.common.utils.PageUtils@36f29506
2019-03-18 20:43:09 -<==      Total: 2
2019-03-18 20:43:09 -耗时 : 101
2019-03-18 20:43:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 20:43:13 -HTTP METHOD : GET
2019-03-18 20:43:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 20:43:13 -参数 : []
2019-03-18 20:43:13 -耗时 : 1
2019-03-18 20:43:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 20:43:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:13 -HTTP METHOD : GET
2019-03-18 20:43:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:13 -参数 : [userType]
2019-03-18 20:43:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:13 -==> Parameters: userType(String)
2019-03-18 20:43:13 -<==      Total: 2
2019-03-18 20:43:13 -耗时 : 8
2019-03-18 20:43:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:43:13 -HTTP METHOD : GET
2019-03-18 20:43:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:43:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 20:43:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:13 -<==      Total: 3
2019-03-18 20:43:13 -==>  Preparing: select count(*) from elec_log 
2019-03-18 20:43:13 -==> Parameters: 
2019-03-18 20:43:13 -<==      Total: 1
2019-03-18 20:43:13 -耗时 : 104
2019-03-18 20:43:13 -返回值 : com.bootdo.common.utils.PageUtils@b4944ff
2019-03-18 20:43:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 20:43:14 -HTTP METHOD : GET
2019-03-18 20:43:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 20:43:14 -参数 : []
2019-03-18 20:43:14 -耗时 : 1
2019-03-18 20:43:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 20:43:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:14 -HTTP METHOD : GET
2019-03-18 20:43:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:14 -参数 : [userType]
2019-03-18 20:43:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:14 -==> Parameters: userType(String)
2019-03-18 20:43:14 -<==      Total: 2
2019-03-18 20:43:14 -耗时 : 9
2019-03-18 20:43:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 20:43:14 -HTTP METHOD : GET
2019-03-18 20:43:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 20:43:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 20:43:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:14 -<==      Total: 3
2019-03-18 20:43:14 -==>  Preparing: select count(*) from heat_log 
2019-03-18 20:43:14 -==> Parameters: 
2019-03-18 20:43:14 -<==      Total: 1
2019-03-18 20:43:14 -耗时 : 140
2019-03-18 20:43:14 -返回值 : com.bootdo.common.utils.PageUtils@477a63f6
2019-03-18 20:43:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-18 20:43:15 -HTTP METHOD : GET
2019-03-18 20:43:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-18 20:43:15 -参数 : []
2019-03-18 20:43:15 -耗时 : 1
2019-03-18 20:43:15 -返回值 : /moneyLog/waterLog/waterLog
2019-03-18 20:43:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:16 -HTTP METHOD : GET
2019-03-18 20:43:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:16 -参数 : [userType]
2019-03-18 20:43:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:16 -==> Parameters: userType(String)
2019-03-18 20:43:16 -<==      Total: 2
2019-03-18 20:43:16 -耗时 : 10
2019-03-18 20:43:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-18 20:43:16 -HTTP METHOD : GET
2019-03-18 20:43:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-18 20:43:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-18 20:43:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:16 -<==      Total: 3
2019-03-18 20:43:16 -==>  Preparing: select count(*) from water_log 
2019-03-18 20:43:16 -==> Parameters: 
2019-03-18 20:43:16 -<==      Total: 1
2019-03-18 20:43:16 -耗时 : 65
2019-03-18 20:43:16 -返回值 : com.bootdo.common.utils.PageUtils@1915fe1
2019-03-18 20:43:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 20:43:17 -HTTP METHOD : GET
2019-03-18 20:43:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 20:43:17 -参数 : []
2019-03-18 20:43:17 -耗时 : 1
2019-03-18 20:43:17 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 20:43:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:17 -HTTP METHOD : GET
2019-03-18 20:43:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:17 -参数 : [userType]
2019-03-18 20:43:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:17 -==> Parameters: userType(String)
2019-03-18 20:43:17 -<==      Total: 2
2019-03-18 20:43:17 -耗时 : 4
2019-03-18 20:43:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 20:43:17 -HTTP METHOD : GET
2019-03-18 20:43:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 20:43:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 20:43:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:17 -<==      Total: 3
2019-03-18 20:43:17 -==>  Preparing: select count(*) from heat_log 
2019-03-18 20:43:17 -==> Parameters: 
2019-03-18 20:43:17 -<==      Total: 1
2019-03-18 20:43:17 -耗时 : 8
2019-03-18 20:43:17 -返回值 : com.bootdo.common.utils.PageUtils@74081a2
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 20:43:18 -参数 : []
2019-03-18 20:43:18 -耗时 : 1
2019-03-18 20:43:18 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:18 -参数 : [userType]
2019-03-18 20:43:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:18 -==> Parameters: userType(String)
2019-03-18 20:43:18 -<==      Total: 2
2019-03-18 20:43:18 -耗时 : 6
2019-03-18 20:43:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:43:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 20:43:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:18 -<==      Total: 3
2019-03-18 20:43:18 -==>  Preparing: select count(*) from elec_log 
2019-03-18 20:43:18 -==> Parameters: 
2019-03-18 20:43:18 -<==      Total: 1
2019-03-18 20:43:18 -耗时 : 8
2019-03-18 20:43:18 -返回值 : com.bootdo.common.utils.PageUtils@47b5e9ff
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-18 20:43:18 -参数 : []
2019-03-18 20:43:18 -耗时 : 0
2019-03-18 20:43:18 -返回值 : /moneyLog/heatLog/heatLog
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:18 -参数 : [userType]
2019-03-18 20:43:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:18 -==> Parameters: userType(String)
2019-03-18 20:43:18 -<==      Total: 2
2019-03-18 20:43:18 -耗时 : 5
2019-03-18 20:43:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-18 20:43:18 -HTTP METHOD : GET
2019-03-18 20:43:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-18 20:43:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-18 20:43:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:18 -<==      Total: 3
2019-03-18 20:43:18 -==>  Preparing: select count(*) from heat_log 
2019-03-18 20:43:18 -==> Parameters: 
2019-03-18 20:43:18 -<==      Total: 1
2019-03-18 20:43:18 -耗时 : 8
2019-03-18 20:43:18 -返回值 : com.bootdo.common.utils.PageUtils@76b2011c
2019-03-18 20:43:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 20:43:19 -HTTP METHOD : GET
2019-03-18 20:43:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 20:43:19 -参数 : []
2019-03-18 20:43:19 -耗时 : 0
2019-03-18 20:43:19 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 20:43:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:43:19 -HTTP METHOD : GET
2019-03-18 20:43:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:43:19 -参数 : [userType]
2019-03-18 20:43:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:43:19 -==> Parameters: userType(String)
2019-03-18 20:43:19 -<==      Total: 2
2019-03-18 20:43:19 -耗时 : 6
2019-03-18 20:43:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:43:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:43:19 -HTTP METHOD : GET
2019-03-18 20:43:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:43:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:43:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 20:43:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:43:19 -<==      Total: 3
2019-03-18 20:43:19 -==>  Preparing: select count(*) from elec_log 
2019-03-18 20:43:19 -==> Parameters: 
2019-03-18 20:43:19 -<==      Total: 1
2019-03-18 20:43:19 -耗时 : 7
2019-03-18 20:43:19 -返回值 : com.bootdo.common.utils.PageUtils@f7f5cd1
2019-03-18 20:43:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-18 20:47:25 -请求地址 : http://localhost:8081/print/print
2019-03-18 20:47:25 -HTTP METHOD : GET
2019-03-18 20:47:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-18 20:47:25 -参数 : []
2019-03-18 20:47:25 -耗时 : 1
2019-03-18 20:47:25 -返回值 : print/print/print
2019-03-18 20:47:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:47:26 -HTTP METHOD : GET
2019-03-18 20:47:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:47:26 -参数 : [userType]
2019-03-18 20:47:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:47:26 -==> Parameters: userType(String)
2019-03-18 20:47:26 -<==      Total: 2
2019-03-18 20:47:26 -耗时 : 7
2019-03-18 20:47:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:47:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-18 20:47:26 -HTTP METHOD : GET
2019-03-18 20:47:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-18 20:47:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:47:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-18 20:47:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:47:26 -<==      Total: 3
2019-03-18 20:47:26 -==>  Preparing: select count(*) from print 
2019-03-18 20:47:26 -==> Parameters: 
2019-03-18 20:47:26 -<==      Total: 1
2019-03-18 20:47:26 -耗时 : 120
2019-03-18 20:47:26 -返回值 : com.bootdo.common.utils.PageUtils@68c3ad7b
2019-03-18 20:47:51 -请求地址 : http://localhost:8081/print/print/list
2019-03-18 20:47:51 -HTTP METHOD : GET
2019-03-18 20:47:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-18 20:47:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-18 20:47:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-18 20:47:51 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 20:47:51 -<==      Total: 2
2019-03-18 20:47:51 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-18 20:47:51 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-18 20:47:51 -<==      Total: 1
2019-03-18 20:47:51 -耗时 : 126
2019-03-18 20:47:51 -返回值 : com.bootdo.common.utils.PageUtils@fd186d4
2019-03-18 20:47:52 -请求地址 : http://localhost:8081/print/print/list
2019-03-18 20:47:52 -HTTP METHOD : GET
2019-03-18 20:47:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-18 20:47:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-18 20:47:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-18 20:47:52 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 20:47:52 -<==      Total: 2
2019-03-18 20:47:52 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-18 20:47:52 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-18 20:47:52 -<==      Total: 1
2019-03-18 20:47:52 -耗时 : 10
2019-03-18 20:47:52 -返回值 : com.bootdo.common.utils.PageUtils@3ffe8a1b
2019-03-18 20:47:52 -请求地址 : http://localhost:8081/print/print/list
2019-03-18 20:47:52 -HTTP METHOD : GET
2019-03-18 20:47:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-18 20:47:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-18 20:47:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-18 20:47:52 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 20:47:52 -<==      Total: 2
2019-03-18 20:47:52 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-18 20:47:52 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-18 20:47:52 -<==      Total: 1
2019-03-18 20:47:52 -耗时 : 10
2019-03-18 20:47:52 -返回值 : com.bootdo.common.utils.PageUtils@5013a681
2019-03-18 20:55:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 5364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 20:55:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 20:55:35 -The following profiles are active: dev
2019-03-18 20:55:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Mon Mar 18 20:55:35 CST 2019]; root of context hierarchy
2019-03-18 20:55:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 20:55:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f717581] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1caa428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 20:55:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 20:55:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 20:55:45 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 20:55:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 20:55:45 -Starting service [Tomcat]
2019-03-18 20:55:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 20:55:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 20:55:45 -Initializing Spring embedded WebApplicationContext
2019-03-18 20:55:45 -Root WebApplicationContext: initialization completed in 9960 ms
2019-03-18 20:55:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 20:55:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 20:55:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 20:55:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 20:55:46 -Filter xssFilter was not registered (disabled)
2019-03-18 20:55:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 20:55:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 20:55:46 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 20:55:46 -Servlet dispatcherServlet mapped to [/]
2019-03-18 20:55:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Mon Mar 18 20:55:35 CST 2019]; root of context hierarchy
2019-03-18 20:55:49 -Using default implementation for ThreadExecutor
2019-03-18 20:55:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 20:55:49 -Quartz Scheduler v.2.2.1 created.
2019-03-18 20:55:49 -RAMJobStore initialized.
2019-03-18 20:55:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 20:55:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 20:55:49 -Quartz scheduler version: 2.2.1
2019-03-18 20:55:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@175957b6
2019-03-18 20:55:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 20:55:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 20:55:52 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 20:55:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 20:55:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 20:55:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 20:55:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 20:55:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 20:55:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 20:55:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 20:55:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 20:55:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 20:55:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 20:55:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 20:55:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 20:55:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 20:55:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 20:55:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 20:55:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 20:55:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:55:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 20:55:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 20:55:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 20:55:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 20:55:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 20:55:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 20:55:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 20:55:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 20:55:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 20:55:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 20:55:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 20:55:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 20:55:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 20:55:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 20:55:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 20:55:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:55:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 20:55:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 20:55:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 20:55:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 20:55:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 20:55:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 20:55:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:55:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 20:55:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 20:55:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 20:55:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:55:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 20:55:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 20:55:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 20:55:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 20:55:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 20:55:53 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 20:55:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 20:55:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 20:55:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 20:55:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 20:55:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 20:55:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 20:55:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 20:55:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 20:55:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 20:55:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 20:55:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 20:55:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 20:55:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 20:55:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 20:55:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 20:55:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 20:55:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 20:55:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 20:55:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 20:55:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 20:55:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 20:55:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 20:55:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 20:55:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 20:55:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 20:55:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 20:55:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 20:55:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 20:55:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:55:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:55:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 20:55:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 20:55:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 20:55:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 20:55:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 20:55:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 20:55:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 20:55:53 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 20:55:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 20:55:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 20:55:53 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 20:55:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 20:55:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 20:55:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 20:55:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 20:55:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 20:55:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 20:55:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 20:55:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 20:55:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:55:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Mon Mar 18 20:55:35 CST 2019]; root of context hierarchy
2019-03-18 20:55:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:55:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:55:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 20:55:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 20:55:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 20:55:57 -Registering beans for JMX exposure on startup
2019-03-18 20:55:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 20:55:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 20:55:57 -Starting beans in phase 2147483647
2019-03-18 20:55:57 -Context refreshed
2019-03-18 20:55:57 -Found 1 custom documentation plugin(s)
2019-03-18 20:55:58 -Scanning for api listing references
2019-03-18 20:55:58 -Generating unique operation named: removeUsingPOST_1
2019-03-18 20:55:58 -Generating unique operation named: addUsingGET_1
2019-03-18 20:55:58 -Generating unique operation named: editUsingGET_1
2019-03-18 20:55:58 -Generating unique operation named: listUsingGET_1
2019-03-18 20:55:58 -Generating unique operation named: removeUsingPOST_2
2019-03-18 20:55:58 -Generating unique operation named: removeUsingPOST_3
2019-03-18 20:55:58 -Generating unique operation named: saveUsingPOST_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingGET_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingPOST_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingPUT_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 20:55:58 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 20:55:58 -Generating unique operation named: addUsingGET_2
2019-03-18 20:55:58 -Generating unique operation named: editUsingGET_2
2019-03-18 20:55:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 20:55:58 -Generating unique operation named: listUsingGET_2
2019-03-18 20:55:58 -Generating unique operation named: removeUsingPOST_4
2019-03-18 20:55:58 -Generating unique operation named: removeUsingPOST_5
2019-03-18 20:55:58 -Generating unique operation named: saveUsingPOST_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingGET_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPOST_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPUT_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 20:55:59 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 20:55:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 20:55:59 -Generating unique operation named: addUsingGET_3
2019-03-18 20:55:59 -Generating unique operation named: editUsingGET_3
2019-03-18 20:55:59 -Generating unique operation named: listUsingGET_3
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_6
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_7
2019-03-18 20:55:59 -Generating unique operation named: saveUsingPOST_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingGET_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPOST_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPUT_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 20:55:59 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 20:55:59 -Generating unique operation named: addUsingGET_4
2019-03-18 20:55:59 -Generating unique operation named: editUsingGET_4
2019-03-18 20:55:59 -Generating unique operation named: listUsingGET_4
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_8
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_9
2019-03-18 20:55:59 -Generating unique operation named: saveUsingPOST_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingGET_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPOST_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPUT_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 20:55:59 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 20:55:59 -Generating unique operation named: ElecUsingGET_1
2019-03-18 20:55:59 -Generating unique operation named: addUsingGET_5
2019-03-18 20:55:59 -Generating unique operation named: editUsingGET_5
2019-03-18 20:55:59 -Generating unique operation named: listUsingGET_5
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_10
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_11
2019-03-18 20:55:59 -Generating unique operation named: saveUsingPOST_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingGET_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPOST_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPUT_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 20:55:59 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 20:55:59 -Generating unique operation named: editUsingGET_6
2019-03-18 20:55:59 -Generating unique operation named: listUsingGET_6
2019-03-18 20:55:59 -Generating unique operation named: updateUsingPOST_6
2019-03-18 20:55:59 -Generating unique operation named: addUsingGET_6
2019-03-18 20:55:59 -Generating unique operation named: editUsingGET_7
2019-03-18 20:55:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 20:55:59 -Generating unique operation named: listUsingGET_7
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_12
2019-03-18 20:55:59 -Generating unique operation named: removeUsingPOST_13
2019-03-18 20:55:59 -Generating unique operation named: saveUsingPOST_6
2019-03-18 20:55:59 -Generating unique operation named: updateUsingGET_6
2019-03-18 20:55:59 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPUT_6
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 20:56:00 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 20:56:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 20:56:00 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 20:56:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_7
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_8
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_8
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_14
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_15
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingGET_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPUT_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 20:56:00 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_8
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_9
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_9
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_16
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_17
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingGET_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPUT_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 20:56:00 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_9
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_10
2019-03-18 20:56:00 -Generating unique operation named: infoUsingGET_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingPOST_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingPUT_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 20:56:00 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_10
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_18
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_19
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_10
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_11
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_20
2019-03-18 20:56:00 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_10
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_11
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_12
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_21
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_10
2019-03-18 20:56:00 -Generating unique operation named: treeUsingGET_1
2019-03-18 20:56:00 -Generating unique operation named: treeUsingGET_2
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_11
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_11
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_12
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_13
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_22
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_23
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_11
2019-03-18 20:56:00 -Generating unique operation named: updateUsingGET_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_12
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPUT_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 20:56:00 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_12
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_13
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_14
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_24
2019-03-18 20:56:00 -Generating unique operation named: removeUsingPOST_25
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_12
2019-03-18 20:56:00 -Generating unique operation named: updateUsingGET_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_13
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPUT_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 20:56:00 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 20:56:00 -Generating unique operation named: addUsingGET_13
2019-03-18 20:56:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 20:56:00 -Generating unique operation named: editUsingGET_14
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_15
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_13
2019-03-18 20:56:00 -Generating unique operation named: saveUsingPOST_14
2019-03-18 20:56:00 -Generating unique operation named: updateUsingPOST_14
2019-03-18 20:56:00 -Generating unique operation named: listUsingGET_16
2019-03-18 20:56:00 -Generating unique operation named: listUsingHEAD_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingPOST_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingPUT_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingPATCH_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingDELETE_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 20:56:01 -Generating unique operation named: listUsingTRACE_1
2019-03-18 20:56:01 -Generating unique operation named: addUsingGET_14
2019-03-18 20:56:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 20:56:01 -Generating unique operation named: editUsingGET_15
2019-03-18 20:56:01 -Generating unique operation named: listUsingGET_17
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_26
2019-03-18 20:56:01 -Generating unique operation named: saveUsingPOST_15
2019-03-18 20:56:01 -Generating unique operation named: treeUsingGET_3
2019-03-18 20:56:01 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPOST_15
2019-03-18 20:56:01 -Generating unique operation named: addUsingGET_15
2019-03-18 20:56:01 -Generating unique operation named: editUsingGET_16
2019-03-18 20:56:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 20:56:01 -Generating unique operation named: listUsingGET_18
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_27
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_28
2019-03-18 20:56:01 -Generating unique operation named: saveUsingPOST_16
2019-03-18 20:56:01 -Generating unique operation named: updateUsingGET_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPOST_16
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPUT_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 20:56:01 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 20:56:01 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 20:56:01 -Generating unique operation named: addUsingGET_16
2019-03-18 20:56:01 -Generating unique operation named: editUsingGET_17
2019-03-18 20:56:01 -Generating unique operation named: listUsingGET_19
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_29
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_30
2019-03-18 20:56:01 -Generating unique operation named: saveUsingPOST_17
2019-03-18 20:56:01 -Generating unique operation named: updateUsingGET_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPOST_17
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPUT_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 20:56:01 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 20:56:01 -Generating unique operation named: addUsingGET_17
2019-03-18 20:56:01 -Generating unique operation named: editUsingGET_18
2019-03-18 20:56:01 -Generating unique operation named: listUsingGET_20
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_31
2019-03-18 20:56:01 -Generating unique operation named: removeUsingPOST_32
2019-03-18 20:56:01 -Generating unique operation named: saveUsingPOST_18
2019-03-18 20:56:01 -Generating unique operation named: updateUsingGET_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPOST_18
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPUT_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 20:56:01 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 20:56:01 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 20:56:01 -Starting Quartz Scheduler now
2019-03-18 20:56:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 20:56:01 -Starting...
2019-03-18 20:56:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 20:56:01 -Started.
2019-03-18 20:56:01 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 20:56:01 -Using a shared selector for servlet write/read
2019-03-18 20:56:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 20:56:01 -Started BootdoApplication in 28.462 seconds (JVM running for 30.035)
2019-03-18 20:56:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 20:56:01 -==> Parameters: 
2019-03-18 20:56:02 -<==      Total: 1
2019-03-18 20:56:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 20:56:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 20:56:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2019-03-18 20:56:21 -Enabling session validation scheduler...
2019-03-18 20:56:21 -请求地址 : http://localhost:8081/login;JSESSIONID=4022887b-422f-4496-8995-344e76bf8992
2019-03-18 20:56:21 -HTTP METHOD : GET
2019-03-18 20:56:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:56:21 -参数 : [{}]
2019-03-18 20:56:21 -耗时 : 3
2019-03-18 20:56:21 -返回值 : login
2019-03-18 20:56:23 -请求地址 : http://localhost:8081/getVerify
2019-03-18 20:56:23 -HTTP METHOD : GET
2019-03-18 20:56:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 20:56:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@479da9a8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@a6e9757]
2019-03-18 20:56:24 -1793
2019-03-18 20:56:24 -耗时 : 621
2019-03-18 20:56:24 -返回值 : null
2019-03-18 20:56:24 -请求地址 : http://localhost:8081/login
2019-03-18 20:56:24 -HTTP METHOD : GET
2019-03-18 20:56:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 20:56:24 -参数 : [{}]
2019-03-18 20:56:24 -耗时 : 1
2019-03-18 20:56:24 -返回值 : login
2019-03-18 20:56:31 -请求地址 : http://localhost:8081/login
2019-03-18 20:56:31 -HTTP METHOD : POST
2019-03-18 20:56:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 20:56:31 -参数 : [admin, 111111, 1793, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e73beca]
2019-03-18 20:56:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 20:56:31 -==> Parameters: admin(String)
2019-03-18 20:56:31 -<==      Total: 1
2019-03-18 20:56:31 -耗时 : 169
2019-03-18 20:56:31 -返回值 : {msg=操作成功, code=0}
2019-03-18 20:56:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 20:56:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:56:31 -==> Parameters: 1(Long), admin(String), 登录(String), 171(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 20:56:31.746(Timestamp)
2019-03-18 20:56:31 -请求地址 : http://localhost:8081/index
2019-03-18 20:56:31 -HTTP METHOD : GET
2019-03-18 20:56:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 20:56:31 -参数 : [{}]
2019-03-18 20:56:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 20:56:32 -<==    Updates: 1
2019-03-18 20:56:32 -==> Parameters: 1(Long)
2019-03-18 20:56:32 -<==      Total: 45
2019-03-18 20:56:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 20:56:32 -==> Parameters: 138(Long)
2019-03-18 20:56:32 -<==      Total: 1
2019-03-18 20:56:32 -耗时 : 364
2019-03-18 20:56:32 -返回值 : index_v1
2019-03-18 20:56:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 20:56:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 364(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 20:56:32.25(Timestamp)
2019-03-18 20:56:32 -<==    Updates: 1
2019-03-18 20:56:32 -请求地址 : http://localhost:8081/main
2019-03-18 20:56:32 -HTTP METHOD : GET
2019-03-18 20:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:56:32 -参数 : []
2019-03-18 20:56:32 -耗时 : 0
2019-03-18 20:56:32 -返回值 : main
2019-03-18 20:56:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 20:56:32 -HTTP METHOD : GET
2019-03-18 20:56:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 20:56:32 -参数 : []
2019-03-18 20:56:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 20:56:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 20:56:32 -请求地址 : http://localhost:8081/main
2019-03-18 20:56:32 -HTTP METHOD : GET
2019-03-18 20:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 20:56:32 -参数 : []
2019-03-18 20:56:32 -耗时 : 1
2019-03-18 20:56:32 -返回值 : main
2019-03-18 20:56:32 -<==      Total: 0
2019-03-18 20:56:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 20:56:32 -==> Parameters: 1(Long), 0(String)
2019-03-18 20:56:32 -<==      Total: 1
2019-03-18 20:56:32 -耗时 : 177
2019-03-18 20:56:32 -返回值 : com.bootdo.common.utils.PageUtils@241bec4f
2019-03-18 20:56:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-18 20:57:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 20:57:01 -==> Parameters: 1(Long)
2019-03-18 20:57:01 -<==      Total: 86
2019-03-18 20:57:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 20:57:02 -HTTP METHOD : GET
2019-03-18 20:57:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 20:57:02 -参数 : []
2019-03-18 20:57:02 -耗时 : 1
2019-03-18 20:57:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 20:57:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 20:57:02 -HTTP METHOD : GET
2019-03-18 20:57:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 20:57:02 -参数 : [userType]
2019-03-18 20:57:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 20:57:02 -==> Parameters: userType(String)
2019-03-18 20:57:02 -<==      Total: 2
2019-03-18 20:57:02 -耗时 : 49
2019-03-18 20:57:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 20:57:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:02 -HTTP METHOD : GET
2019-03-18 20:57:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 20:57:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 20:57:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 20:57:02 -<==      Total: 3
2019-03-18 20:57:02 -==>  Preparing: select count(*) from elec_log 
2019-03-18 20:57:02 -==> Parameters: 
2019-03-18 20:57:02 -<==      Total: 1
2019-03-18 20:57:02 -耗时 : 84
2019-03-18 20:57:02 -返回值 : com.bootdo.common.utils.PageUtils@34ae30ae
2019-03-18 20:57:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:11 -HTTP METHOD : GET
2019-03-18 20:57:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:11 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:11 -<==      Total: 0
2019-03-18 20:57:11 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:11 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:11 -<==      Total: 1
2019-03-18 20:57:11 -耗时 : 13
2019-03-18 20:57:11 -返回值 : com.bootdo.common.utils.PageUtils@33108a89
2019-03-18 20:57:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:11 -HTTP METHOD : GET
2019-03-18 20:57:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:11 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:11 -<==      Total: 0
2019-03-18 20:57:11 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:11 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:11 -<==      Total: 1
2019-03-18 20:57:11 -耗时 : 13
2019-03-18 20:57:11 -返回值 : com.bootdo.common.utils.PageUtils@42dc9a11
2019-03-18 20:57:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:12 -HTTP METHOD : GET
2019-03-18 20:57:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:12 -<==      Total: 0
2019-03-18 20:57:12 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:12 -<==      Total: 1
2019-03-18 20:57:12 -耗时 : 13
2019-03-18 20:57:12 -返回值 : com.bootdo.common.utils.PageUtils@1aa6eb3c
2019-03-18 20:57:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:12 -HTTP METHOD : GET
2019-03-18 20:57:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:12 -<==      Total: 0
2019-03-18 20:57:12 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:12 -<==      Total: 1
2019-03-18 20:57:12 -耗时 : 6
2019-03-18 20:57:12 -返回值 : com.bootdo.common.utils.PageUtils@592a946c
2019-03-18 20:57:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:12 -HTTP METHOD : GET
2019-03-18 20:57:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:12 -<==      Total: 0
2019-03-18 20:57:12 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:12 -<==      Total: 1
2019-03-18 20:57:12 -耗时 : 8
2019-03-18 20:57:12 -返回值 : com.bootdo.common.utils.PageUtils@64f90560
2019-03-18 20:57:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:12 -HTTP METHOD : GET
2019-03-18 20:57:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:12 -<==      Total: 0
2019-03-18 20:57:12 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:12 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:12 -<==      Total: 1
2019-03-18 20:57:12 -耗时 : 7
2019-03-18 20:57:12 -返回值 : com.bootdo.common.utils.PageUtils@15ec1151
2019-03-18 20:57:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 20:57:13 -HTTP METHOD : GET
2019-03-18 20:57:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 20:57:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-18 20:57:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 20:57:13 -==> Parameters: 2019-03-09(String), 0(Integer), 10(Integer)
2019-03-18 20:57:13 -<==      Total: 0
2019-03-18 20:57:13 -==>  Preparing: select count(*) from elec_log WHERE CREATE_TIME = ? 
2019-03-18 20:57:13 -==> Parameters: 2019-03-09(String)
2019-03-18 20:57:13 -<==      Total: 1
2019-03-18 20:57:13 -耗时 : 8
2019-03-18 20:57:13 -返回值 : com.bootdo.common.utils.PageUtils@297afcbf
2019-03-18 21:06:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 12476 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 21:06:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 21:06:11 -The following profiles are active: dev
2019-03-18 21:06:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e5499cc: startup date [Mon Mar 18 21:06:11 CST 2019]; root of context hierarchy
2019-03-18 21:06:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 21:06:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5b97d784] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4df1062b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 21:06:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 21:06:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:06:20 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 21:06:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 21:06:20 -Starting service [Tomcat]
2019-03-18 21:06:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 21:06:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 21:06:21 -Initializing Spring embedded WebApplicationContext
2019-03-18 21:06:21 -Root WebApplicationContext: initialization completed in 9536 ms
2019-03-18 21:06:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 21:06:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 21:06:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 21:06:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 21:06:22 -Filter xssFilter was not registered (disabled)
2019-03-18 21:06:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 21:06:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 21:06:22 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 21:06:22 -Servlet dispatcherServlet mapped to [/]
2019-03-18 21:06:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e5499cc: startup date [Mon Mar 18 21:06:11 CST 2019]; root of context hierarchy
2019-03-18 21:06:25 -Using default implementation for ThreadExecutor
2019-03-18 21:06:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 21:06:25 -Quartz Scheduler v.2.2.1 created.
2019-03-18 21:06:25 -RAMJobStore initialized.
2019-03-18 21:06:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 21:06:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 21:06:25 -Quartz scheduler version: 2.2.1
2019-03-18 21:06:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@621a387f
2019-03-18 21:06:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 21:06:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 21:06:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 21:06:29 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 21:06:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 21:06:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 21:06:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 21:06:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 21:06:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 21:06:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 21:06:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 21:06:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 21:06:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 21:06:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 21:06:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 21:06:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 21:06:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 21:06:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 21:06:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 21:06:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 21:06:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 21:06:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 21:06:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 21:06:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 21:06:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 21:06:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 21:06:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 21:06:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 21:06:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 21:06:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 21:06:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 21:06:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 21:06:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 21:06:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 21:06:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 21:06:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 21:06:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 21:06:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 21:06:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 21:06:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 21:06:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 21:06:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 21:06:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 21:06:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 21:06:29 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 21:06:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 21:06:29 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 21:06:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 21:06:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 21:06:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 21:06:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 21:06:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 21:06:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 21:06:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 21:06:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 21:06:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 21:06:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 21:06:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 21:06:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 21:06:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 21:06:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 21:06:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 21:06:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:06:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 21:06:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 21:06:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 21:06:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 21:06:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 21:06:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 21:06:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 21:06:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 21:06:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 21:06:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 21:06:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 21:06:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 21:06:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 21:06:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 21:06:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 21:06:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 21:06:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 21:06:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:06:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 21:06:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 21:06:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 21:06:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 21:06:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 21:06:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 21:06:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:06:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 21:06:29 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:06:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 21:06:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:06:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 21:06:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 21:06:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 21:06:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 21:06:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 21:06:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 21:06:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:06:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e5499cc: startup date [Mon Mar 18 21:06:11 CST 2019]; root of context hierarchy
2019-03-18 21:06:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:06:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:06:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:06:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 21:06:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 21:06:34 -Registering beans for JMX exposure on startup
2019-03-18 21:06:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 21:06:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 21:06:34 -Starting beans in phase 2147483647
2019-03-18 21:06:34 -Context refreshed
2019-03-18 21:06:34 -Found 1 custom documentation plugin(s)
2019-03-18 21:06:34 -Scanning for api listing references
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_1
2019-03-18 21:06:35 -Generating unique operation named: addUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: editUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: listUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_2
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_3
2019-03-18 21:06:35 -Generating unique operation named: saveUsingPOST_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPOST_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPUT_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 21:06:35 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 21:06:35 -Generating unique operation named: addUsingGET_2
2019-03-18 21:06:35 -Generating unique operation named: editUsingGET_2
2019-03-18 21:06:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: listUsingGET_2
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_4
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_5
2019-03-18 21:06:35 -Generating unique operation named: saveUsingPOST_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingGET_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPOST_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPUT_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 21:06:35 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 21:06:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 21:06:35 -Generating unique operation named: addUsingGET_3
2019-03-18 21:06:35 -Generating unique operation named: editUsingGET_3
2019-03-18 21:06:35 -Generating unique operation named: listUsingGET_3
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_6
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_7
2019-03-18 21:06:35 -Generating unique operation named: saveUsingPOST_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingGET_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPOST_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPUT_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 21:06:35 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 21:06:35 -Generating unique operation named: addUsingGET_4
2019-03-18 21:06:35 -Generating unique operation named: editUsingGET_4
2019-03-18 21:06:35 -Generating unique operation named: listUsingGET_4
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_8
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_9
2019-03-18 21:06:35 -Generating unique operation named: saveUsingPOST_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingGET_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPOST_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPUT_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 21:06:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 21:06:35 -Generating unique operation named: ElecUsingGET_1
2019-03-18 21:06:35 -Generating unique operation named: addUsingGET_5
2019-03-18 21:06:35 -Generating unique operation named: editUsingGET_5
2019-03-18 21:06:35 -Generating unique operation named: listUsingGET_5
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_10
2019-03-18 21:06:35 -Generating unique operation named: removeUsingPOST_11
2019-03-18 21:06:35 -Generating unique operation named: saveUsingPOST_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingGET_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPOST_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPUT_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 21:06:35 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_6
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_6
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_6
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_7
2019-03-18 21:06:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_7
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_12
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_13
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingGET_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPUT_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 21:06:36 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 21:06:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_7
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_8
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_8
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_14
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_15
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingGET_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPUT_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 21:06:36 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_8
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_9
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_9
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_16
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_17
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingGET_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPUT_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 21:06:36 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_9
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_10
2019-03-18 21:06:36 -Generating unique operation named: infoUsingGET_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingPOST_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingPUT_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 21:06:36 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_10
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_18
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_19
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_10
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_11
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_20
2019-03-18 21:06:36 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_10
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_11
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_12
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_21
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_10
2019-03-18 21:06:36 -Generating unique operation named: treeUsingGET_1
2019-03-18 21:06:36 -Generating unique operation named: treeUsingGET_2
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_11
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_11
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_12
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_13
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_22
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_23
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_11
2019-03-18 21:06:36 -Generating unique operation named: updateUsingGET_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPOST_12
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPUT_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 21:06:36 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 21:06:36 -Generating unique operation named: addUsingGET_12
2019-03-18 21:06:36 -Generating unique operation named: editUsingGET_13
2019-03-18 21:06:36 -Generating unique operation named: listUsingGET_14
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_24
2019-03-18 21:06:36 -Generating unique operation named: removeUsingPOST_25
2019-03-18 21:06:36 -Generating unique operation named: saveUsingPOST_12
2019-03-18 21:06:36 -Generating unique operation named: updateUsingGET_10
2019-03-18 21:06:36 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPUT_10
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 21:06:37 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 21:06:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 21:06:37 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 21:06:37 -Generating unique operation named: addUsingGET_13
2019-03-18 21:06:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 21:06:37 -Generating unique operation named: editUsingGET_14
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_15
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_13
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_14
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_14
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_16
2019-03-18 21:06:37 -Generating unique operation named: listUsingHEAD_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingPOST_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingPUT_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingPATCH_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingDELETE_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 21:06:37 -Generating unique operation named: listUsingTRACE_1
2019-03-18 21:06:37 -Generating unique operation named: addUsingGET_14
2019-03-18 21:06:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 21:06:37 -Generating unique operation named: editUsingGET_15
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_17
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_26
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_15
2019-03-18 21:06:37 -Generating unique operation named: treeUsingGET_3
2019-03-18 21:06:37 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_15
2019-03-18 21:06:37 -Generating unique operation named: addUsingGET_15
2019-03-18 21:06:37 -Generating unique operation named: editUsingGET_16
2019-03-18 21:06:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_18
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_27
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_28
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_16
2019-03-18 21:06:37 -Generating unique operation named: updateUsingGET_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_16
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPUT_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 21:06:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 21:06:37 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 21:06:37 -Generating unique operation named: addUsingGET_16
2019-03-18 21:06:37 -Generating unique operation named: editUsingGET_17
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_19
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_29
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_30
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_17
2019-03-18 21:06:37 -Generating unique operation named: updateUsingGET_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_17
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPUT_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 21:06:37 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 21:06:37 -Generating unique operation named: addUsingGET_17
2019-03-18 21:06:37 -Generating unique operation named: editUsingGET_18
2019-03-18 21:06:37 -Generating unique operation named: listUsingGET_20
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_31
2019-03-18 21:06:37 -Generating unique operation named: removeUsingPOST_32
2019-03-18 21:06:37 -Generating unique operation named: saveUsingPOST_18
2019-03-18 21:06:37 -Generating unique operation named: updateUsingGET_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPOST_18
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPUT_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 21:06:37 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 21:06:37 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 21:06:37 -Starting Quartz Scheduler now
2019-03-18 21:06:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 21:06:37 -Starting...
2019-03-18 21:06:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 21:06:37 -Started.
2019-03-18 21:06:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 21:06:37 -Using a shared selector for servlet write/read
2019-03-18 21:06:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 21:06:37 -Started BootdoApplication in 28.601 seconds (JVM running for 30.248)
2019-03-18 21:06:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 21:06:38 -==> Parameters: 
2019-03-18 21:06:38 -<==      Total: 1
2019-03-18 21:06:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 21:06:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 21:06:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-03-18 21:06:56 -Enabling session validation scheduler...
2019-03-18 21:06:56 -请求地址 : http://localhost:8081/login;JSESSIONID=4742cc01-74a1-43a6-ad1e-363dde3adacd
2019-03-18 21:06:56 -HTTP METHOD : GET
2019-03-18 21:06:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 21:06:56 -参数 : [{}]
2019-03-18 21:06:56 -耗时 : 4
2019-03-18 21:06:56 -返回值 : login
2019-03-18 21:06:58 -请求地址 : http://localhost:8081/getVerify
2019-03-18 21:06:58 -HTTP METHOD : GET
2019-03-18 21:06:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 21:06:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ff4e232, org.apache.shiro.web.servlet.ShiroHttpServletResponse@227c2ac4]
2019-03-18 21:06:58 -4350
2019-03-18 21:06:58 -耗时 : 628
2019-03-18 21:06:58 -返回值 : null
2019-03-18 21:07:06 -请求地址 : http://localhost:8081/login
2019-03-18 21:07:06 -HTTP METHOD : POST
2019-03-18 21:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 21:07:06 -参数 : [admin, 111111, 4350, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1676bd22]
2019-03-18 21:07:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 21:07:06 -==> Parameters: admin(String)
2019-03-18 21:07:06 -<==      Total: 1
2019-03-18 21:07:06 -耗时 : 122
2019-03-18 21:07:06 -返回值 : {msg=操作成功, code=0}
2019-03-18 21:07:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 21:07:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 21:07:06 -==> Parameters: 1(Long), admin(String), 登录(String), 123(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 21:07:06.243(Timestamp)
2019-03-18 21:07:06 -请求地址 : http://localhost:8081/index
2019-03-18 21:07:06 -HTTP METHOD : GET
2019-03-18 21:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 21:07:06 -参数 : [{}]
2019-03-18 21:07:06 -<==    Updates: 1
2019-03-18 21:07:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 21:07:06 -==> Parameters: 1(Long)
2019-03-18 21:07:06 -<==      Total: 45
2019-03-18 21:07:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 21:07:06 -==> Parameters: 138(Long)
2019-03-18 21:07:06 -<==      Total: 1
2019-03-18 21:07:06 -耗时 : 321
2019-03-18 21:07:06 -返回值 : index_v1
2019-03-18 21:07:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 21:07:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 321(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 21:07:06.7(Timestamp)
2019-03-18 21:07:06 -<==    Updates: 1
2019-03-18 21:07:06 -请求地址 : http://localhost:8081/main
2019-03-18 21:07:06 -HTTP METHOD : GET
2019-03-18 21:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:07:06 -参数 : []
2019-03-18 21:07:06 -耗时 : 0
2019-03-18 21:07:06 -返回值 : main
2019-03-18 21:07:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 21:07:07 -HTTP METHOD : GET
2019-03-18 21:07:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 21:07:07 -参数 : []
2019-03-18 21:07:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 21:07:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 21:07:07 -请求地址 : http://localhost:8081/main
2019-03-18 21:07:07 -HTTP METHOD : GET
2019-03-18 21:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:07:07 -参数 : []
2019-03-18 21:07:07 -耗时 : 0
2019-03-18 21:07:07 -返回值 : main
2019-03-18 21:07:07 -<==      Total: 0
2019-03-18 21:07:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 21:07:07 -==> Parameters: 1(Long), 0(String)
2019-03-18 21:07:07 -<==      Total: 1
2019-03-18 21:07:07 -耗时 : 184
2019-03-18 21:07:07 -返回值 : com.bootdo.common.utils.PageUtils@2b856b76
2019-03-18 21:07:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 21:07:21 -==> Parameters: 1(Long)
2019-03-18 21:07:21 -<==      Total: 86
2019-03-18 21:07:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-18 21:07:21 -HTTP METHOD : GET
2019-03-18 21:07:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-18 21:07:21 -参数 : []
2019-03-18 21:07:21 -耗时 : 1
2019-03-18 21:07:21 -返回值 : /moneyLog/elecLog/elecLog
2019-03-18 21:07:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 21:07:22 -HTTP METHOD : GET
2019-03-18 21:07:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 21:07:22 -参数 : [userType]
2019-03-18 21:07:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 21:07:22 -==> Parameters: userType(String)
2019-03-18 21:07:22 -<==      Total: 2
2019-03-18 21:07:22 -耗时 : 44
2019-03-18 21:07:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 21:07:22 -HTTP METHOD : GET
2019-03-18 21:07:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 21:07:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-18 21:07:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-18 21:07:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 21:07:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 21:07:22 -<==      Total: 3
2019-03-18 21:07:22 -==>  Preparing: select count(*) from elec_log 
2019-03-18 21:07:22 -==> Parameters: 
2019-03-18 21:07:22 -<==      Total: 1
2019-03-18 21:07:22 -耗时 : 68
2019-03-18 21:07:22 -返回值 : com.bootdo.common.utils.PageUtils@122efd5a
2019-03-18 21:07:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 21:07:28 -HTTP METHOD : GET
2019-03-18 21:07:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 21:07:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-09}]
2019-03-18 21:07:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-18 21:07:28 -==> Parameters: 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 21:07:28 -<==      Total: 1
2019-03-18 21:07:28 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-18 21:07:28 -==> Parameters: 2019-03-09(String)
2019-03-18 21:07:28 -<==      Total: 1
2019-03-18 21:07:28 -耗时 : 13
2019-03-18 21:07:28 -返回值 : com.bootdo.common.utils.PageUtils@3d386b59
2019-03-18 21:07:30 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-18 21:07:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 21:07:36 -HTTP METHOD : GET
2019-03-18 21:07:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 21:07:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-18 21:07:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-18 21:07:36 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 21:07:36 -<==      Total: 1
2019-03-18 21:07:36 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-18 21:07:36 -==> Parameters: 2019-03-10(String)
2019-03-18 21:07:36 -<==      Total: 1
2019-03-18 21:07:36 -耗时 : 13
2019-03-18 21:07:36 -返回值 : com.bootdo.common.utils.PageUtils@37e505e3
2019-03-18 21:07:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-18 21:07:39 -HTTP METHOD : GET
2019-03-18 21:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-18 21:07:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-18 21:07:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-18 21:07:39 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-18 21:07:39 -<==      Total: 1
2019-03-18 21:07:39 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-18 21:07:39 -==> Parameters: 2019-03-08(String)
2019-03-18 21:07:39 -<==      Total: 1
2019-03-18 21:07:39 -耗时 : 10
2019-03-18 21:07:39 -返回值 : com.bootdo.common.utils.PageUtils@44e0636
2019-03-18 21:07:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 21:07:42 -HTTP METHOD : GET
2019-03-18 21:07:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 21:07:42 -参数 : []
2019-03-18 21:07:42 -耗时 : 1
2019-03-18 21:07:42 -返回值 : system/dept/deptTree
2019-03-18 21:07:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 21:07:42 -HTTP METHOD : GET
2019-03-18 21:07:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 21:07:42 -参数 : []
2019-03-18 21:07:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 21:07:42 -==> Parameters: 
2019-03-18 21:07:42 -<==      Total: 3
2019-03-18 21:07:42 -耗时 : 22
2019-03-18 21:07:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 21:17:33 -请求地址 : http://localhost:8081/index
2019-03-18 21:17:33 -HTTP METHOD : GET
2019-03-18 21:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 21:17:33 -参数 : [{}]
2019-03-18 21:17:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 21:17:33 -==> Parameters: 1(Long)
2019-03-18 21:17:33 -<==      Total: 45
2019-03-18 21:17:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 21:17:33 -==> Parameters: 138(Long)
2019-03-18 21:17:33 -<==      Total: 1
2019-03-18 21:17:33 -耗时 : 34
2019-03-18 21:17:33 -返回值 : index_v1
2019-03-18 21:17:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 21:17:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 21:17:33.636(Timestamp)
2019-03-18 21:17:33 -请求地址 : http://localhost:8081/main
2019-03-18 21:17:33 -HTTP METHOD : GET
2019-03-18 21:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:17:33 -参数 : []
2019-03-18 21:17:33 -耗时 : 0
2019-03-18 21:17:33 -返回值 : main
2019-03-18 21:17:33 -<==    Updates: 1
2019-03-18 21:17:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 21:17:33 -HTTP METHOD : GET
2019-03-18 21:17:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 21:17:33 -参数 : []
2019-03-18 21:17:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 21:17:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 21:17:33 -<==      Total: 0
2019-03-18 21:17:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 21:17:33 -==> Parameters: 1(Long), 0(String)
2019-03-18 21:17:33 -<==      Total: 1
2019-03-18 21:17:33 -耗时 : 10
2019-03-18 21:17:33 -返回值 : com.bootdo.common.utils.PageUtils@98d27ea
2019-03-18 21:17:34 -请求地址 : http://localhost:8081/main
2019-03-18 21:17:34 -HTTP METHOD : GET
2019-03-18 21:17:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:17:34 -参数 : []
2019-03-18 21:17:34 -耗时 : 0
2019-03-18 21:17:34 -返回值 : main
2019-03-18 21:17:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 21:17:37 -==> Parameters: 1(Long)
2019-03-18 21:17:37 -<==      Total: 86
2019-03-18 21:17:37 -请求地址 : http://localhost:8081/print/print
2019-03-18 21:17:37 -HTTP METHOD : GET
2019-03-18 21:17:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-18 21:17:37 -参数 : []
2019-03-18 21:17:37 -耗时 : 0
2019-03-18 21:17:37 -返回值 : print/print/print
2019-03-18 21:17:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 21:17:37 -HTTP METHOD : GET
2019-03-18 21:17:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 21:17:37 -参数 : [userType]
2019-03-18 21:17:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 21:17:37 -==> Parameters: userType(String)
2019-03-18 21:17:37 -<==      Total: 2
2019-03-18 21:17:37 -耗时 : 10
2019-03-18 21:17:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 21:17:37 -请求地址 : http://localhost:8081/print/print/list
2019-03-18 21:17:37 -HTTP METHOD : GET
2019-03-18 21:17:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-18 21:17:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-18 21:17:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-18 21:17:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 21:17:37 -<==      Total: 3
2019-03-18 21:17:37 -==>  Preparing: select count(*) from print 
2019-03-18 21:17:37 -==> Parameters: 
2019-03-18 21:17:37 -<==      Total: 1
2019-03-18 21:17:37 -耗时 : 45
2019-03-18 21:17:37 -返回值 : com.bootdo.common.utils.PageUtils@370f371b
2019-03-18 21:24:28 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-18 21:24:28 -HTTP METHOD : GET
2019-03-18 21:24:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-18 21:24:28 -参数 : [1, {}]
2019-03-18 21:24:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-18 21:24:28 -==> Parameters: 1(Long)
2019-03-18 21:24:28 -<==      Total: 1
2019-03-18 21:24:28 -耗时 : 12
2019-03-18 21:24:28 -返回值 : print/print/edit
2019-03-18 21:24:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 21:24:29 -HTTP METHOD : GET
2019-03-18 21:24:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 21:24:29 -参数 : [userType]
2019-03-18 21:24:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 21:24:29 -==> Parameters: userType(String)
2019-03-18 21:24:29 -<==      Total: 2
2019-03-18 21:24:29 -耗时 : 6
2019-03-18 21:24:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 21:37:30 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-03-18 21:52:06 -Starting BootdoApplication on ZJZL-20180906VX with PID 8008 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 21:52:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 21:52:06 -The following profiles are active: dev
2019-03-18 21:52:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Mon Mar 18 21:52:06 CST 2019]; root of context hierarchy
2019-03-18 21:52:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 21:52:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$137b4418] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5d472bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 21:52:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 21:52:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:52:38 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 21:52:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 21:52:39 -Starting service [Tomcat]
2019-03-18 21:52:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 21:52:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 21:52:41 -Initializing Spring embedded WebApplicationContext
2019-03-18 21:52:41 -Root WebApplicationContext: initialization completed in 34468 ms
2019-03-18 21:52:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 21:52:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 21:52:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 21:52:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 21:52:43 -Filter xssFilter was not registered (disabled)
2019-03-18 21:52:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 21:52:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 21:52:43 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 21:52:43 -Servlet dispatcherServlet mapped to [/]
2019-03-18 21:52:50 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
2019-03-18 21:52:50 -Stopping service [Tomcat]
2019-03-18 21:52:50 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 21:52:50 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$464f9548.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$464f9548$$FastClassBySpringCGLIB$$6face782.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$464f9548.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 85; columnNumber: 33; The reference to entity "lt" must end with the ';' delimiter.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The reference to entity "lt" must end with the ';' delimiter.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEntityReference(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-03-18 21:54:29 -Starting BootdoApplication on ZJZL-20180906VX with PID 4396 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 21:54:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 21:54:29 -The following profiles are active: dev
2019-03-18 21:54:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon Mar 18 21:54:29 CST 2019]; root of context hierarchy
2019-03-18 21:54:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 21:54:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e564a4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d7bdd355] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 21:54:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 21:54:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:54:39 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 21:54:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 21:54:39 -Starting service [Tomcat]
2019-03-18 21:54:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 21:54:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 21:54:40 -Initializing Spring embedded WebApplicationContext
2019-03-18 21:54:40 -Root WebApplicationContext: initialization completed in 10799 ms
2019-03-18 21:54:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 21:54:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 21:54:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 21:54:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 21:54:40 -Filter xssFilter was not registered (disabled)
2019-03-18 21:54:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 21:54:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 21:54:40 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 21:54:40 -Servlet dispatcherServlet mapped to [/]
2019-03-18 21:54:42 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
2019-03-18 21:54:42 -Stopping service [Tomcat]
2019-03-18 21:54:42 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-18 21:54:42 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1838f5de.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1838f5de$$FastClassBySpringCGLIB$$9dad404a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1838f5de.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 89; columnNumber: 13; The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of element type "where" must match "(include|trim|where|set|foreach|choose|if|bind)".
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.handleEndElement(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.endElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-03-18 21:56:28 -Starting BootdoApplication on ZJZL-20180906VX with PID 2064 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 21:56:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 21:56:28 -The following profiles are active: dev
2019-03-18 21:56:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b64c4b7: startup date [Mon Mar 18 21:56:28 CST 2019]; root of context hierarchy
2019-03-18 21:56:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 21:56:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa4e5151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9ca77ff8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 21:56:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 21:56:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 21:56:38 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 21:56:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 21:56:38 -Starting service [Tomcat]
2019-03-18 21:56:38 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 21:56:38 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 21:56:39 -Initializing Spring embedded WebApplicationContext
2019-03-18 21:56:39 -Root WebApplicationContext: initialization completed in 10457 ms
2019-03-18 21:56:39 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 21:56:39 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 21:56:39 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 21:56:39 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 21:56:39 -Filter xssFilter was not registered (disabled)
2019-03-18 21:56:39 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 21:56:39 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 21:56:39 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 21:56:39 -Servlet dispatcherServlet mapped to [/]
2019-03-18 21:56:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b64c4b7: startup date [Mon Mar 18 21:56:28 CST 2019]; root of context hierarchy
2019-03-18 21:56:43 -Using default implementation for ThreadExecutor
2019-03-18 21:56:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 21:56:44 -Quartz Scheduler v.2.2.1 created.
2019-03-18 21:56:44 -RAMJobStore initialized.
2019-03-18 21:56:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 21:56:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 21:56:44 -Quartz scheduler version: 2.2.1
2019-03-18 21:56:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a4cb483
2019-03-18 21:56:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 21:56:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 21:56:49 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 21:56:49 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 21:56:49 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 21:56:49 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 21:56:49 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 21:56:49 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 21:56:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 21:56:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 21:56:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 21:56:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 21:56:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 21:56:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 21:56:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 21:56:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 21:56:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 21:56:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 21:56:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 21:56:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 21:56:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 21:56:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 21:56:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 21:56:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 21:56:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 21:56:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 21:56:49 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 21:56:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 21:56:49 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 21:56:49 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 21:56:49 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 21:56:49 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 21:56:49 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 21:56:49 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 21:56:49 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 21:56:49 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 21:56:49 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 21:56:49 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 21:56:49 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 21:56:49 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 21:56:49 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 21:56:49 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 21:56:49 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 21:56:49 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 21:56:49 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 21:56:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 21:56:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 21:56:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 21:56:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 21:56:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 21:56:49 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 21:56:49 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 21:56:49 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 21:56:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 21:56:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 21:56:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 21:56:49 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:56:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 21:56:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 21:56:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 21:56:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 21:56:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 21:56:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 21:56:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 21:56:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 21:56:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 21:56:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 21:56:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 21:56:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 21:56:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 21:56:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 21:56:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:56:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 21:56:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 21:56:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 21:56:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 21:56:49 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 21:56:49 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 21:56:49 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 21:56:49 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 21:56:49 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 21:56:49 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:49 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 21:56:49 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:49 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 21:56:49 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 21:56:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 21:56:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 21:56:50 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 21:56:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 21:56:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 21:56:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 21:56:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 21:56:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 21:56:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 21:56:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 21:56:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:56:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b64c4b7: startup date [Mon Mar 18 21:56:28 CST 2019]; root of context hierarchy
2019-03-18 21:56:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:56:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:56:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 21:56:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 21:56:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 21:56:57 -Registering beans for JMX exposure on startup
2019-03-18 21:56:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 21:56:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 21:56:57 -Starting beans in phase 2147483647
2019-03-18 21:56:57 -Context refreshed
2019-03-18 21:56:57 -Found 1 custom documentation plugin(s)
2019-03-18 21:56:57 -Scanning for api listing references
2019-03-18 21:56:58 -Generating unique operation named: removeUsingPOST_1
2019-03-18 21:56:58 -Generating unique operation named: addUsingGET_1
2019-03-18 21:56:58 -Generating unique operation named: editUsingGET_1
2019-03-18 21:56:58 -Generating unique operation named: listUsingGET_1
2019-03-18 21:56:58 -Generating unique operation named: removeUsingPOST_2
2019-03-18 21:56:58 -Generating unique operation named: removeUsingPOST_3
2019-03-18 21:56:58 -Generating unique operation named: saveUsingPOST_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingGET_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPOST_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPUT_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 21:56:58 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 21:56:58 -Generating unique operation named: addUsingGET_2
2019-03-18 21:56:58 -Generating unique operation named: editUsingGET_2
2019-03-18 21:56:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 21:56:58 -Generating unique operation named: listUsingGET_2
2019-03-18 21:56:58 -Generating unique operation named: removeUsingPOST_4
2019-03-18 21:56:58 -Generating unique operation named: removeUsingPOST_5
2019-03-18 21:56:58 -Generating unique operation named: saveUsingPOST_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingGET_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPOST_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPUT_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 21:56:58 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 21:56:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 21:56:59 -Generating unique operation named: addUsingGET_3
2019-03-18 21:56:59 -Generating unique operation named: editUsingGET_3
2019-03-18 21:56:59 -Generating unique operation named: listUsingGET_3
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_6
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_7
2019-03-18 21:56:59 -Generating unique operation named: saveUsingPOST_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingGET_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPOST_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPUT_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 21:56:59 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 21:56:59 -Generating unique operation named: addUsingGET_4
2019-03-18 21:56:59 -Generating unique operation named: editUsingGET_4
2019-03-18 21:56:59 -Generating unique operation named: listUsingGET_4
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_8
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_9
2019-03-18 21:56:59 -Generating unique operation named: saveUsingPOST_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingGET_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPOST_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPUT_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 21:56:59 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 21:56:59 -Generating unique operation named: ElecUsingGET_1
2019-03-18 21:56:59 -Generating unique operation named: addUsingGET_5
2019-03-18 21:56:59 -Generating unique operation named: editUsingGET_5
2019-03-18 21:56:59 -Generating unique operation named: listUsingGET_5
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_10
2019-03-18 21:56:59 -Generating unique operation named: removeUsingPOST_11
2019-03-18 21:56:59 -Generating unique operation named: saveUsingPOST_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingGET_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPOST_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPUT_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 21:56:59 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 21:57:00 -Generating unique operation named: editUsingGET_6
2019-03-18 21:57:00 -Generating unique operation named: listUsingGET_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPOST_6
2019-03-18 21:57:00 -Generating unique operation named: addUsingGET_6
2019-03-18 21:57:00 -Generating unique operation named: editUsingGET_7
2019-03-18 21:57:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 21:57:00 -Generating unique operation named: listUsingGET_7
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_12
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_13
2019-03-18 21:57:00 -Generating unique operation named: saveUsingPOST_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingGET_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPOST_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPUT_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 21:57:00 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 21:57:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 21:57:00 -Generating unique operation named: addUsingGET_7
2019-03-18 21:57:00 -Generating unique operation named: editUsingGET_8
2019-03-18 21:57:00 -Generating unique operation named: listUsingGET_8
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_14
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_15
2019-03-18 21:57:00 -Generating unique operation named: saveUsingPOST_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingGET_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPOST_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPUT_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 21:57:00 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 21:57:00 -Generating unique operation named: addUsingGET_8
2019-03-18 21:57:00 -Generating unique operation named: editUsingGET_9
2019-03-18 21:57:00 -Generating unique operation named: listUsingGET_9
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_16
2019-03-18 21:57:00 -Generating unique operation named: removeUsingPOST_17
2019-03-18 21:57:00 -Generating unique operation named: saveUsingPOST_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingGET_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPOST_9
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPUT_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 21:57:00 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 21:57:01 -Generating unique operation named: addUsingGET_9
2019-03-18 21:57:01 -Generating unique operation named: editUsingGET_10
2019-03-18 21:57:01 -Generating unique operation named: infoUsingGET_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingPOST_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingPUT_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 21:57:01 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 21:57:01 -Generating unique operation named: listUsingGET_10
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_18
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_19
2019-03-18 21:57:01 -Generating unique operation named: saveUsingPOST_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingPOST_10
2019-03-18 21:57:01 -Generating unique operation named: listUsingGET_11
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_20
2019-03-18 21:57:01 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 21:57:01 -Generating unique operation named: addUsingGET_10
2019-03-18 21:57:01 -Generating unique operation named: editUsingGET_11
2019-03-18 21:57:01 -Generating unique operation named: listUsingGET_12
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_21
2019-03-18 21:57:01 -Generating unique operation named: saveUsingPOST_10
2019-03-18 21:57:01 -Generating unique operation named: treeUsingGET_1
2019-03-18 21:57:01 -Generating unique operation named: treeUsingGET_2
2019-03-18 21:57:01 -Generating unique operation named: updateUsingPOST_11
2019-03-18 21:57:01 -Generating unique operation named: addUsingGET_11
2019-03-18 21:57:01 -Generating unique operation named: editUsingGET_12
2019-03-18 21:57:01 -Generating unique operation named: listUsingGET_13
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_22
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_23
2019-03-18 21:57:01 -Generating unique operation named: saveUsingPOST_11
2019-03-18 21:57:01 -Generating unique operation named: updateUsingGET_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingPOST_12
2019-03-18 21:57:01 -Generating unique operation named: updateUsingPUT_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 21:57:01 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 21:57:01 -Generating unique operation named: addUsingGET_12
2019-03-18 21:57:01 -Generating unique operation named: editUsingGET_13
2019-03-18 21:57:01 -Generating unique operation named: listUsingGET_14
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_24
2019-03-18 21:57:01 -Generating unique operation named: removeUsingPOST_25
2019-03-18 21:57:01 -Generating unique operation named: saveUsingPOST_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingGET_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_13
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPUT_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 21:57:02 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 21:57:02 -Generating unique operation named: addUsingGET_13
2019-03-18 21:57:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 21:57:02 -Generating unique operation named: editUsingGET_14
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_15
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_13
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_14
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_14
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_16
2019-03-18 21:57:02 -Generating unique operation named: listUsingHEAD_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingPOST_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingPUT_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingPATCH_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingDELETE_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 21:57:02 -Generating unique operation named: listUsingTRACE_1
2019-03-18 21:57:02 -Generating unique operation named: addUsingGET_14
2019-03-18 21:57:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 21:57:02 -Generating unique operation named: editUsingGET_15
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_17
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_26
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_15
2019-03-18 21:57:02 -Generating unique operation named: treeUsingGET_3
2019-03-18 21:57:02 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_15
2019-03-18 21:57:02 -Generating unique operation named: addUsingGET_15
2019-03-18 21:57:02 -Generating unique operation named: editUsingGET_16
2019-03-18 21:57:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_18
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_27
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_28
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_16
2019-03-18 21:57:02 -Generating unique operation named: updateUsingGET_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_16
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPUT_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 21:57:02 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 21:57:02 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 21:57:02 -Generating unique operation named: addUsingGET_16
2019-03-18 21:57:02 -Generating unique operation named: editUsingGET_17
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_19
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_29
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_30
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_17
2019-03-18 21:57:02 -Generating unique operation named: updateUsingGET_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_17
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPUT_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 21:57:02 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 21:57:02 -Generating unique operation named: addUsingGET_17
2019-03-18 21:57:02 -Generating unique operation named: editUsingGET_18
2019-03-18 21:57:02 -Generating unique operation named: listUsingGET_20
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_31
2019-03-18 21:57:02 -Generating unique operation named: removeUsingPOST_32
2019-03-18 21:57:02 -Generating unique operation named: saveUsingPOST_18
2019-03-18 21:57:02 -Generating unique operation named: updateUsingGET_13
2019-03-18 21:57:02 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPOST_18
2019-03-18 21:57:02 -Generating unique operation named: updateUsingPUT_13
2019-03-18 21:57:03 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 21:57:03 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 21:57:03 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 21:57:03 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 21:57:03 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 21:57:03 -Starting Quartz Scheduler now
2019-03-18 21:57:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 21:57:03 -Starting...
2019-03-18 21:57:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 21:57:03 -Started.
2019-03-18 21:57:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 21:57:03 -Using a shared selector for servlet write/read
2019-03-18 21:57:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 21:57:03 -Started BootdoApplication in 37.336 seconds (JVM running for 39.422)
2019-03-18 21:57:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 21:57:04 -==> Parameters: 
2019-03-18 21:57:04 -<==      Total: 1
2019-03-18 21:57:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 21:57:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 21:57:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 197 ms
2019-03-18 21:57:12 -Enabling session validation scheduler...
2019-03-18 21:57:13 -请求地址 : http://localhost:8081/login;JSESSIONID=b6832851-faf7-4ef4-8ad5-18856d4c5888
2019-03-18 21:57:13 -HTTP METHOD : GET
2019-03-18 21:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 21:57:13 -参数 : [{}]
2019-03-18 21:57:13 -耗时 : 4
2019-03-18 21:57:13 -返回值 : login
2019-03-18 21:57:17 -请求地址 : http://localhost:8081/getVerify
2019-03-18 21:57:17 -HTTP METHOD : GET
2019-03-18 21:57:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 21:57:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3aa70c63, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e989fef]
2019-03-18 21:57:39 -9179
2019-03-18 21:57:40 -耗时 : 23452
2019-03-18 21:57:40 -返回值 : null
2019-03-18 21:57:40 -请求地址 : http://localhost:8081/login
2019-03-18 21:57:40 -HTTP METHOD : GET
2019-03-18 21:57:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 21:57:40 -参数 : [{}]
2019-03-18 21:57:40 -耗时 : 0
2019-03-18 21:57:40 -返回值 : login
2019-03-18 21:57:49 -请求地址 : http://localhost:8081/login
2019-03-18 21:57:49 -HTTP METHOD : POST
2019-03-18 21:57:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 21:57:49 -参数 : [admin, 111111, 9179, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f59fe]
2019-03-18 21:57:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 21:57:49 -==> Parameters: admin(String)
2019-03-18 21:57:49 -<==      Total: 1
2019-03-18 21:57:49 -耗时 : 838
2019-03-18 21:57:49 -返回值 : {msg=操作成功, code=0}
2019-03-18 21:57:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 21:57:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 21:57:50 -==> Parameters: 1(Long), admin(String), 登录(String), 839(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 21:57:50.211(Timestamp)
2019-03-18 21:57:50 -请求地址 : http://localhost:8081/index
2019-03-18 21:57:50 -HTTP METHOD : GET
2019-03-18 21:57:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 21:57:50 -参数 : [{}]
2019-03-18 21:57:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-18 21:57:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 21:57:51 -<==    Updates: 1
2019-03-18 21:57:51 -==> Parameters: 1(Long)
2019-03-18 21:57:51 -<==      Total: 45
2019-03-18 21:57:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 21:57:51 -==> Parameters: 138(Long)
2019-03-18 21:57:51 -<==      Total: 1
2019-03-18 21:57:51 -耗时 : 1061
2019-03-18 21:57:51 -返回值 : index_v1
2019-03-18 21:57:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 21:57:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1061(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 21:57:51.928(Timestamp)
2019-03-18 21:57:52 -<==    Updates: 1
2019-03-18 21:57:52 -请求地址 : http://localhost:8081/main
2019-03-18 21:57:52 -HTTP METHOD : GET
2019-03-18 21:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:57:52 -参数 : []
2019-03-18 21:57:52 -耗时 : 1
2019-03-18 21:57:52 -返回值 : main
2019-03-18 21:57:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 21:57:55 -HTTP METHOD : GET
2019-03-18 21:57:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 21:57:55 -参数 : []
2019-03-18 21:57:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 21:57:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 21:57:55 -<==      Total: 0
2019-03-18 21:57:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 21:57:55 -==> Parameters: 1(Long), 0(String)
2019-03-18 21:57:55 -<==      Total: 1
2019-03-18 21:57:55 -耗时 : 314
2019-03-18 21:57:55 -返回值 : com.bootdo.common.utils.PageUtils@173f8c04
2019-03-18 21:57:55 -请求地址 : http://localhost:8081/main
2019-03-18 21:57:55 -HTTP METHOD : GET
2019-03-18 21:57:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 21:57:55 -参数 : []
2019-03-18 21:57:55 -耗时 : 1
2019-03-18 21:57:55 -返回值 : main
2019-03-18 21:58:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 21:58:02 -==> Parameters: 1(Long)
2019-03-18 21:58:02 -<==      Total: 86
2019-03-18 21:58:02 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 21:58:02 -HTTP METHOD : GET
2019-03-18 21:58:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 21:58:02 -参数 : []
2019-03-18 21:58:02 -耗时 : 1
2019-03-18 21:58:02 -返回值 : elec/elec/elec
2019-03-18 21:58:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 21:58:04 -HTTP METHOD : GET
2019-03-18 21:58:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 21:58:04 -参数 : [userType]
2019-03-18 21:58:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 21:58:04 -==> Parameters: userType(String)
2019-03-18 21:58:04 -<==      Total: 2
2019-03-18 21:58:04 -耗时 : 193
2019-03-18 21:58:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 21:58:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:04 -HTTP METHOD : GET
2019-03-18 21:58:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:04 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@8a12780]
2019-03-18 21:58:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:04 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:05 -<==      Total: 2
2019-03-18 21:58:05 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:05 -==> Parameters: 
2019-03-18 21:58:05 -<==      Total: 1
2019-03-18 21:58:05 -耗时 : 495
2019-03-18 21:58:05 -返回值 : com.bootdo.common.utils.PageUtils@18b50fa8
2019-03-18 21:58:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:16 -HTTP METHOD : GET
2019-03-18 21:58:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:16 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@659fe568]
2019-03-18 21:58:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:16 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:16 -<==      Total: 2
2019-03-18 21:58:16 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:16 -==> Parameters: 
2019-03-18 21:58:16 -<==      Total: 1
2019-03-18 21:58:16 -耗时 : 21
2019-03-18 21:58:16 -返回值 : com.bootdo.common.utils.PageUtils@10b6154
2019-03-18 21:58:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:17 -HTTP METHOD : GET
2019-03-18 21:58:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:17 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@48a306d1]
2019-03-18 21:58:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:17 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:17 -<==      Total: 2
2019-03-18 21:58:17 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:17 -==> Parameters: 
2019-03-18 21:58:17 -<==      Total: 1
2019-03-18 21:58:17 -耗时 : 24
2019-03-18 21:58:17 -返回值 : com.bootdo.common.utils.PageUtils@f2c86f5
2019-03-18 21:58:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:18 -HTTP METHOD : GET
2019-03-18 21:58:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:18 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@39c7cdf8]
2019-03-18 21:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:18 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:18 -<==      Total: 2
2019-03-18 21:58:18 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:18 -==> Parameters: 
2019-03-18 21:58:18 -<==      Total: 1
2019-03-18 21:58:18 -耗时 : 17
2019-03-18 21:58:18 -返回值 : com.bootdo.common.utils.PageUtils@9c7af40
2019-03-18 21:58:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:38 -HTTP METHOD : GET
2019-03-18 21:58:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:38 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@514e28b8]
2019-03-18 21:58:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:38 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:38 -<==      Total: 2
2019-03-18 21:58:38 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:38 -==> Parameters: 
2019-03-18 21:58:38 -<==      Total: 1
2019-03-18 21:58:38 -耗时 : 12
2019-03-18 21:58:38 -返回值 : com.bootdo.common.utils.PageUtils@6b82c120
2019-03-18 21:58:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:39 -HTTP METHOD : GET
2019-03-18 21:58:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:39 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4ef08205]
2019-03-18 21:58:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:39 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:39 -<==      Total: 2
2019-03-18 21:58:39 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:39 -==> Parameters: 
2019-03-18 21:58:39 -<==      Total: 1
2019-03-18 21:58:39 -耗时 : 13
2019-03-18 21:58:39 -返回值 : com.bootdo.common.utils.PageUtils@7f298d5d
2019-03-18 21:58:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:40 -HTTP METHOD : GET
2019-03-18 21:58:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:40 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@30ccbdf]
2019-03-18 21:58:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:40 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:40 -<==      Total: 2
2019-03-18 21:58:40 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:40 -==> Parameters: 
2019-03-18 21:58:40 -<==      Total: 1
2019-03-18 21:58:40 -耗时 : 13
2019-03-18 21:58:40 -返回值 : com.bootdo.common.utils.PageUtils@47c0adfb
2019-03-18 21:58:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:42 -HTTP METHOD : GET
2019-03-18 21:58:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:42 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@421dd634]
2019-03-18 21:58:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:42 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:42 -<==      Total: 2
2019-03-18 21:58:42 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:42 -==> Parameters: 
2019-03-18 21:58:42 -<==      Total: 1
2019-03-18 21:58:42 -耗时 : 25
2019-03-18 21:58:42 -返回值 : com.bootdo.common.utils.PageUtils@63d30017
2019-03-18 21:58:43 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 21:58:43 -HTTP METHOD : GET
2019-03-18 21:58:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 21:58:43 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@18bb72ba]
2019-03-18 21:58:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 21:58:43 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 21:58:43 -<==      Total: 2
2019-03-18 21:58:43 -==>  Preparing: select count(*) from elec 
2019-03-18 21:58:43 -==> Parameters: 
2019-03-18 21:58:43 -<==      Total: 1
2019-03-18 21:58:43 -耗时 : 14
2019-03-18 21:58:43 -返回值 : com.bootdo.common.utils.PageUtils@7220d843
2019-03-18 22:00:01 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:01 -HTTP METHOD : GET
2019-03-18 22:00:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:01 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@36732cf1]
2019-03-18 22:00:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:01 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:01 -<==      Total: 0
2019-03-18 22:00:01 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:01 -==> Parameters: 2019-03(String)
2019-03-18 22:00:01 -<==      Total: 1
2019-03-18 22:00:01 -耗时 : 77
2019-03-18 22:00:01 -返回值 : com.bootdo.common.utils.PageUtils@67c019cf
2019-03-18 22:00:02 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:02 -HTTP METHOD : GET
2019-03-18 22:00:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:02 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@3863da20]
2019-03-18 22:00:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:02 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:02 -<==      Total: 0
2019-03-18 22:00:02 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:02 -==> Parameters: 2019-03(String)
2019-03-18 22:00:02 -<==      Total: 1
2019-03-18 22:00:02 -耗时 : 17
2019-03-18 22:00:02 -返回值 : com.bootdo.common.utils.PageUtils@2562937d
2019-03-18 22:00:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:03 -HTTP METHOD : GET
2019-03-18 22:00:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:03 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@4ba92f00]
2019-03-18 22:00:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:03 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:03 -<==      Total: 0
2019-03-18 22:00:03 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:03 -==> Parameters: 2019-03(String)
2019-03-18 22:00:03 -<==      Total: 1
2019-03-18 22:00:03 -耗时 : 13
2019-03-18 22:00:03 -返回值 : com.bootdo.common.utils.PageUtils@42e245dc
2019-03-18 22:00:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:03 -HTTP METHOD : GET
2019-03-18 22:00:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:03 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@367210fd]
2019-03-18 22:00:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:03 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:03 -<==      Total: 0
2019-03-18 22:00:03 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:03 -==> Parameters: 2019-03(String)
2019-03-18 22:00:03 -<==      Total: 1
2019-03-18 22:00:03 -耗时 : 10
2019-03-18 22:00:03 -返回值 : com.bootdo.common.utils.PageUtils@7847cef9
2019-03-18 22:00:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:04 -HTTP METHOD : GET
2019-03-18 22:00:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:04 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@22f7c4ef]
2019-03-18 22:00:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:04 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:04 -<==      Total: 0
2019-03-18 22:00:04 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:04 -==> Parameters: 2019-03(String)
2019-03-18 22:00:04 -<==      Total: 1
2019-03-18 22:00:04 -耗时 : 11
2019-03-18 22:00:04 -返回值 : com.bootdo.common.utils.PageUtils@4ed9628d
2019-03-18 22:00:05 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:05 -HTTP METHOD : GET
2019-03-18 22:00:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:05 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@1cde58ce]
2019-03-18 22:00:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:05 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:05 -<==      Total: 0
2019-03-18 22:00:05 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:05 -==> Parameters: 2019-03(String)
2019-03-18 22:00:05 -<==      Total: 1
2019-03-18 22:00:05 -耗时 : 10
2019-03-18 22:00:05 -返回值 : com.bootdo.common.utils.PageUtils@3ce609e5
2019-03-18 22:00:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:06 -HTTP METHOD : GET
2019-03-18 22:00:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:06 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@21d2cae2]
2019-03-18 22:00:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:06 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:06 -<==      Total: 0
2019-03-18 22:00:06 -==>  Preparing: select count(*) from elec WHERE CREATE_TIME = ? 
2019-03-18 22:00:06 -==> Parameters: 2019-03(String)
2019-03-18 22:00:06 -<==      Total: 1
2019-03-18 22:00:06 -耗时 : 10
2019-03-18 22:00:06 -返回值 : com.bootdo.common.utils.PageUtils@74dea58f
2019-03-18 22:00:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:09 -HTTP METHOD : GET
2019-03-18 22:00:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:09 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@314d4a1f]
2019-03-18 22:00:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:09 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:09 -<==      Total: 0
2019-03-18 22:00:09 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-18 22:00:09 -==> Parameters: A(String), 2019-03(String)
2019-03-18 22:00:09 -<==      Total: 1
2019-03-18 22:00:09 -耗时 : 14
2019-03-18 22:00:09 -返回值 : com.bootdo.common.utils.PageUtils@2066585a
2019-03-18 22:00:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 22:00:10 -HTTP METHOD : GET
2019-03-18 22:00:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 22:00:10 -参数 : []
2019-03-18 22:00:10 -耗时 : 0
2019-03-18 22:00:10 -返回值 : system/dept/deptTree
2019-03-18 22:00:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 22:00:10 -HTTP METHOD : GET
2019-03-18 22:00:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 22:00:10 -参数 : []
2019-03-18 22:00:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 22:00:10 -==> Parameters: 
2019-03-18 22:00:10 -<==      Total: 3
2019-03-18 22:00:10 -耗时 : 48
2019-03-18 22:00:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 22:00:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:13 -HTTP METHOD : GET
2019-03-18 22:00:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:13 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@43ecf42c]
2019-03-18 22:00:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:13 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:13 -<==      Total: 0
2019-03-18 22:00:13 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:13 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:13 -<==      Total: 1
2019-03-18 22:00:13 -耗时 : 20
2019-03-18 22:00:13 -返回值 : com.bootdo.common.utils.PageUtils@68579f15
2019-03-18 22:00:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:13 -HTTP METHOD : GET
2019-03-18 22:00:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:13 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@45e53dda]
2019-03-18 22:00:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:14 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:14 -<==      Total: 0
2019-03-18 22:00:14 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:14 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:14 -<==      Total: 1
2019-03-18 22:00:14 -耗时 : 12
2019-03-18 22:00:14 -返回值 : com.bootdo.common.utils.PageUtils@39611ff7
2019-03-18 22:00:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:14 -HTTP METHOD : GET
2019-03-18 22:00:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:14 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@22f57fd5]
2019-03-18 22:00:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:14 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:14 -<==      Total: 0
2019-03-18 22:00:14 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:14 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:14 -<==      Total: 1
2019-03-18 22:00:14 -耗时 : 11
2019-03-18 22:00:14 -返回值 : com.bootdo.common.utils.PageUtils@3747ec94
2019-03-18 22:00:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:15 -HTTP METHOD : GET
2019-03-18 22:00:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:15 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@247b3c59]
2019-03-18 22:00:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:15 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:15 -<==      Total: 0
2019-03-18 22:00:15 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:15 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:15 -<==      Total: 1
2019-03-18 22:00:15 -耗时 : 10
2019-03-18 22:00:15 -返回值 : com.bootdo.common.utils.PageUtils@5f4eb912
2019-03-18 22:00:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:15 -HTTP METHOD : GET
2019-03-18 22:00:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:15 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@405d3099]
2019-03-18 22:00:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:15 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:15 -<==      Total: 0
2019-03-18 22:00:15 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:15 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:15 -<==      Total: 1
2019-03-18 22:00:15 -耗时 : 10
2019-03-18 22:00:15 -返回值 : com.bootdo.common.utils.PageUtils@70be6ead
2019-03-18 22:00:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:16 -HTTP METHOD : GET
2019-03-18 22:00:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:16 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@72e42de4]
2019-03-18 22:00:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:16 -<==      Total: 0
2019-03-18 22:00:16 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:16 -<==      Total: 1
2019-03-18 22:00:16 -耗时 : 9
2019-03-18 22:00:16 -返回值 : com.bootdo.common.utils.PageUtils@1517ec04
2019-03-18 22:00:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:16 -HTTP METHOD : GET
2019-03-18 22:00:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:16 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@4031a3af]
2019-03-18 22:00:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:16 -<==      Total: 0
2019-03-18 22:00:16 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:16 -<==      Total: 1
2019-03-18 22:00:16 -耗时 : 9
2019-03-18 22:00:16 -返回值 : com.bootdo.common.utils.PageUtils@23deb899
2019-03-18 22:00:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:16 -HTTP METHOD : GET
2019-03-18 22:00:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:16 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@5e94ccf4]
2019-03-18 22:00:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:16 -<==      Total: 0
2019-03-18 22:00:16 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:16 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:16 -<==      Total: 1
2019-03-18 22:00:16 -耗时 : 9
2019-03-18 22:00:16 -返回值 : com.bootdo.common.utils.PageUtils@59bf8dec
2019-03-18 22:00:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:17 -HTTP METHOD : GET
2019-03-18 22:00:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:17 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@36f7cb8e]
2019-03-18 22:00:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:17 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:17 -<==      Total: 0
2019-03-18 22:00:17 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:17 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:17 -<==      Total: 1
2019-03-18 22:00:17 -耗时 : 11
2019-03-18 22:00:17 -返回值 : com.bootdo.common.utils.PageUtils@4c684b5c
2019-03-18 22:00:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:18 -HTTP METHOD : GET
2019-03-18 22:00:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:18 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@6ce56284]
2019-03-18 22:00:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:18 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:18 -<==      Total: 0
2019-03-18 22:00:18 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:18 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:18 -<==      Total: 1
2019-03-18 22:00:18 -耗时 : 9
2019-03-18 22:00:18 -返回值 : com.bootdo.common.utils.PageUtils@4fc552d0
2019-03-18 22:00:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:00:18 -HTTP METHOD : GET
2019-03-18 22:00:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:00:18 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@4cbe4ba7]
2019-03-18 22:00:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-18 22:00:18 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-18 22:00:18 -<==      Total: 0
2019-03-18 22:00:18 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-18 22:00:18 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-18 22:00:18 -<==      Total: 1
2019-03-18 22:00:18 -耗时 : 10
2019-03-18 22:00:18 -返回值 : com.bootdo.common.utils.PageUtils@15de3c25
2019-03-18 22:01:39 -请求地址 : http://localhost:8081/index
2019-03-18 22:01:39 -HTTP METHOD : GET
2019-03-18 22:01:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:01:39 -参数 : [{}]
2019-03-18 22:01:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:01:39 -==> Parameters: 1(Long)
2019-03-18 22:01:40 -<==      Total: 45
2019-03-18 22:01:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:01:40 -==> Parameters: 138(Long)
2019-03-18 22:01:40 -<==      Total: 1
2019-03-18 22:01:40 -耗时 : 242
2019-03-18 22:01:40 -返回值 : index_v1
2019-03-18 22:01:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:01:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 243(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:01:40.067(Timestamp)
2019-03-18 22:01:40 -请求地址 : http://localhost:8081/main
2019-03-18 22:01:40 -HTTP METHOD : GET
2019-03-18 22:01:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:01:40 -参数 : []
2019-03-18 22:01:40 -耗时 : 5
2019-03-18 22:01:40 -返回值 : main
2019-03-18 22:01:40 -<==    Updates: 1
2019-03-18 22:01:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:01:40 -HTTP METHOD : GET
2019-03-18 22:01:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:01:40 -参数 : []
2019-03-18 22:01:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:01:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:01:40 -<==      Total: 0
2019-03-18 22:01:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:01:40 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:01:40 -<==      Total: 1
2019-03-18 22:01:40 -耗时 : 8
2019-03-18 22:01:40 -返回值 : com.bootdo.common.utils.PageUtils@3f40c6ed
2019-03-18 22:01:41 -请求地址 : http://localhost:8081/main
2019-03-18 22:01:41 -HTTP METHOD : GET
2019-03-18 22:01:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:01:41 -参数 : []
2019-03-18 22:01:41 -耗时 : 1
2019-03-18 22:01:41 -返回值 : main
2019-03-18 22:01:42 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:01:42 -HTTP METHOD : GET
2019-03-18 22:01:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:01:42 -参数 : []
2019-03-18 22:01:42 -耗时 : 2
2019-03-18 22:01:42 -返回值 : elec/elec/elec
2019-03-18 22:01:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:01:43 -HTTP METHOD : GET
2019-03-18 22:01:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:01:43 -参数 : [userType]
2019-03-18 22:01:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:01:43 -==> Parameters: userType(String)
2019-03-18 22:01:43 -<==      Total: 2
2019-03-18 22:01:43 -耗时 : 7
2019-03-18 22:01:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:01:43 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:01:43 -HTTP METHOD : GET
2019-03-18 22:01:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:01:43 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5ac25ed9]
2019-03-18 22:01:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:01:43 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 22:01:43 -<==      Total: 2
2019-03-18 22:01:43 -==>  Preparing: select count(*) from elec 
2019-03-18 22:01:43 -==> Parameters: 
2019-03-18 22:01:43 -<==      Total: 1
2019-03-18 22:01:43 -耗时 : 11
2019-03-18 22:01:43 -返回值 : com.bootdo.common.utils.PageUtils@6fa528a
2019-03-18 22:02:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:06 -HTTP METHOD : GET
2019-03-18 22:02:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@64e0316a]
2019-03-18 22:02:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:02:06 -<==      Total: 2
2019-03-18 22:02:06 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:06 -==> Parameters: 
2019-03-18 22:02:06 -<==      Total: 1
2019-03-18 22:02:06 -耗时 : 10
2019-03-18 22:02:06 -返回值 : com.bootdo.common.utils.PageUtils@4f0442aa
2019-03-18 22:02:08 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-18 22:02:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:20 -HTTP METHOD : GET
2019-03-18 22:02:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:20 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4e86f01a]
2019-03-18 22:02:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:20 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:20 -<==      Total: 0
2019-03-18 22:02:20 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:20 -==> Parameters: 
2019-03-18 22:02:20 -<==      Total: 1
2019-03-18 22:02:20 -耗时 : 8
2019-03-18 22:02:20 -返回值 : com.bootdo.common.utils.PageUtils@2d786f25
2019-03-18 22:02:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:27 -HTTP METHOD : GET
2019-03-18 22:02:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:27 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3ed93923]
2019-03-18 22:02:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:27 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:27 -<==      Total: 0
2019-03-18 22:02:27 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:27 -==> Parameters: 
2019-03-18 22:02:27 -<==      Total: 1
2019-03-18 22:02:27 -耗时 : 8
2019-03-18 22:02:27 -返回值 : com.bootdo.common.utils.PageUtils@2f60d130
2019-03-18 22:02:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:27 -HTTP METHOD : GET
2019-03-18 22:02:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:27 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@39e61e17]
2019-03-18 22:02:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:27 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:27 -<==      Total: 0
2019-03-18 22:02:27 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:27 -==> Parameters: 
2019-03-18 22:02:27 -<==      Total: 1
2019-03-18 22:02:27 -耗时 : 11
2019-03-18 22:02:27 -返回值 : com.bootdo.common.utils.PageUtils@f2b2cc8
2019-03-18 22:02:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:27 -HTTP METHOD : GET
2019-03-18 22:02:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:27 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@9dc1696]
2019-03-18 22:02:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:27 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:27 -<==      Total: 0
2019-03-18 22:02:27 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:27 -==> Parameters: 
2019-03-18 22:02:27 -<==      Total: 1
2019-03-18 22:02:27 -耗时 : 11
2019-03-18 22:02:27 -返回值 : com.bootdo.common.utils.PageUtils@4f8f977d
2019-03-18 22:02:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:27 -HTTP METHOD : GET
2019-03-18 22:02:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:27 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@39a533fd]
2019-03-18 22:02:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:27 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:27 -<==      Total: 0
2019-03-18 22:02:27 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:27 -==> Parameters: 
2019-03-18 22:02:27 -<==      Total: 1
2019-03-18 22:02:27 -耗时 : 9
2019-03-18 22:02:27 -返回值 : com.bootdo.common.utils.PageUtils@4ec2684
2019-03-18 22:02:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:28 -HTTP METHOD : GET
2019-03-18 22:02:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:28 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7f70819a]
2019-03-18 22:02:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:28 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:28 -<==      Total: 0
2019-03-18 22:02:28 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:28 -==> Parameters: 
2019-03-18 22:02:28 -<==      Total: 1
2019-03-18 22:02:28 -耗时 : 9
2019-03-18 22:02:28 -返回值 : com.bootdo.common.utils.PageUtils@5c6bf0a3
2019-03-18 22:02:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:28 -HTTP METHOD : GET
2019-03-18 22:02:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:28 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2a8a4141]
2019-03-18 22:02:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:28 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:28 -<==      Total: 0
2019-03-18 22:02:28 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:28 -==> Parameters: 
2019-03-18 22:02:28 -<==      Total: 1
2019-03-18 22:02:28 -耗时 : 7
2019-03-18 22:02:28 -返回值 : com.bootdo.common.utils.PageUtils@455aaf3e
2019-03-18 22:02:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:28 -HTTP METHOD : GET
2019-03-18 22:02:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:28 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4028c25b]
2019-03-18 22:02:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:28 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:02:28 -<==      Total: 0
2019-03-18 22:02:28 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:28 -==> Parameters: 
2019-03-18 22:02:28 -<==      Total: 1
2019-03-18 22:02:28 -耗时 : 7
2019-03-18 22:02:28 -返回值 : com.bootdo.common.utils.PageUtils@6234be1a
2019-03-18 22:02:35 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:02:35 -HTTP METHOD : GET
2019-03-18 22:02:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:02:35 -参数 : []
2019-03-18 22:02:35 -耗时 : 1
2019-03-18 22:02:35 -返回值 : elec/elec/elec
2019-03-18 22:02:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:02:35 -HTTP METHOD : GET
2019-03-18 22:02:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:02:35 -参数 : [userType]
2019-03-18 22:02:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:02:35 -==> Parameters: userType(String)
2019-03-18 22:02:35 -<==      Total: 2
2019-03-18 22:02:35 -耗时 : 8
2019-03-18 22:02:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:02:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:02:35 -HTTP METHOD : GET
2019-03-18 22:02:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:02:35 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6348d9c]
2019-03-18 22:02:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:02:35 -==> Parameters: 0(Integer), 3(Integer)
2019-03-18 22:02:35 -<==      Total: 2
2019-03-18 22:02:35 -==>  Preparing: select count(*) from elec 
2019-03-18 22:02:35 -==> Parameters: 
2019-03-18 22:02:35 -<==      Total: 1
2019-03-18 22:02:35 -耗时 : 10
2019-03-18 22:02:35 -返回值 : com.bootdo.common.utils.PageUtils@60b03b24
2019-03-18 22:05:29 -请求地址 : http://localhost:8081/index
2019-03-18 22:05:29 -HTTP METHOD : GET
2019-03-18 22:05:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:05:29 -参数 : [{}]
2019-03-18 22:05:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:05:29 -==> Parameters: 1(Long)
2019-03-18 22:05:29 -<==      Total: 45
2019-03-18 22:05:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:05:29 -==> Parameters: 138(Long)
2019-03-18 22:05:29 -<==      Total: 1
2019-03-18 22:05:29 -耗时 : 30
2019-03-18 22:05:29 -返回值 : index_v1
2019-03-18 22:05:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:05:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:05:29.57(Timestamp)
2019-03-18 22:05:29 -<==    Updates: 1
2019-03-18 22:05:29 -请求地址 : http://localhost:8081/main
2019-03-18 22:05:29 -HTTP METHOD : GET
2019-03-18 22:05:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:05:29 -参数 : []
2019-03-18 22:05:29 -耗时 : 2
2019-03-18 22:05:29 -返回值 : main
2019-03-18 22:05:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:05:29 -HTTP METHOD : GET
2019-03-18 22:05:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:05:29 -参数 : []
2019-03-18 22:05:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:05:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:05:30 -<==      Total: 0
2019-03-18 22:05:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:05:30 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:05:30 -<==      Total: 1
2019-03-18 22:05:30 -耗时 : 21
2019-03-18 22:05:30 -返回值 : com.bootdo.common.utils.PageUtils@39b24646
2019-03-18 22:05:30 -请求地址 : http://localhost:8081/main
2019-03-18 22:05:30 -HTTP METHOD : GET
2019-03-18 22:05:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:05:30 -参数 : []
2019-03-18 22:05:30 -耗时 : 0
2019-03-18 22:05:30 -返回值 : main
2019-03-18 22:05:34 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:05:34 -HTTP METHOD : GET
2019-03-18 22:05:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:05:34 -参数 : []
2019-03-18 22:05:34 -耗时 : 0
2019-03-18 22:05:34 -返回值 : elec/elec/elec
2019-03-18 22:05:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:05:34 -HTTP METHOD : GET
2019-03-18 22:05:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:05:34 -参数 : [userType]
2019-03-18 22:05:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:05:34 -==> Parameters: userType(String)
2019-03-18 22:05:34 -<==      Total: 2
2019-03-18 22:05:34 -耗时 : 8
2019-03-18 22:05:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:05:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:05:34 -HTTP METHOD : GET
2019-03-18 22:05:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:05:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3107a171]
2019-03-18 22:05:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:05:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:05:34 -<==      Total: 2
2019-03-18 22:05:34 -==>  Preparing: select count(*) from elec 
2019-03-18 22:05:34 -==> Parameters: 
2019-03-18 22:05:34 -<==      Total: 1
2019-03-18 22:05:34 -耗时 : 10
2019-03-18 22:05:34 -返回值 : com.bootdo.common.utils.PageUtils@7e460f1e
2019-03-18 22:06:12 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:06:12 -HTTP METHOD : GET
2019-03-18 22:06:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:06:12 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@55e72a58]
2019-03-18 22:06:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:06:12 -==> Parameters: 10(Integer), 10(Integer)
2019-03-18 22:06:12 -<==      Total: 0
2019-03-18 22:06:12 -==>  Preparing: select count(*) from elec 
2019-03-18 22:06:12 -==> Parameters: 
2019-03-18 22:06:12 -<==      Total: 1
2019-03-18 22:06:12 -耗时 : 8
2019-03-18 22:06:12 -返回值 : com.bootdo.common.utils.PageUtils@1bde0cd2
2019-03-18 22:07:57 -请求地址 : http://localhost:8081/index
2019-03-18 22:07:57 -HTTP METHOD : GET
2019-03-18 22:07:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:07:57 -参数 : [{}]
2019-03-18 22:07:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:07:57 -==> Parameters: 1(Long)
2019-03-18 22:07:57 -<==      Total: 45
2019-03-18 22:07:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:07:57 -==> Parameters: 138(Long)
2019-03-18 22:07:57 -<==      Total: 1
2019-03-18 22:07:57 -耗时 : 102
2019-03-18 22:07:57 -返回值 : index_v1
2019-03-18 22:07:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:07:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 102(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:07:57.931(Timestamp)
2019-03-18 22:07:58 -请求地址 : http://localhost:8081/main
2019-03-18 22:07:58 -HTTP METHOD : GET
2019-03-18 22:07:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:07:58 -参数 : []
2019-03-18 22:07:58 -耗时 : 0
2019-03-18 22:07:58 -返回值 : main
2019-03-18 22:07:58 -<==    Updates: 1
2019-03-18 22:07:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:07:58 -HTTP METHOD : GET
2019-03-18 22:07:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:07:58 -参数 : []
2019-03-18 22:07:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:07:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:07:58 -<==      Total: 0
2019-03-18 22:07:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:07:58 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:07:58 -<==      Total: 1
2019-03-18 22:07:58 -耗时 : 8
2019-03-18 22:07:58 -返回值 : com.bootdo.common.utils.PageUtils@9c3e401
2019-03-18 22:07:58 -请求地址 : http://localhost:8081/main
2019-03-18 22:07:58 -HTTP METHOD : GET
2019-03-18 22:07:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:07:58 -参数 : []
2019-03-18 22:07:58 -耗时 : 2
2019-03-18 22:07:58 -返回值 : main
2019-03-18 22:07:59 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:07:59 -HTTP METHOD : GET
2019-03-18 22:07:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:07:59 -参数 : []
2019-03-18 22:07:59 -耗时 : 2
2019-03-18 22:07:59 -返回值 : elec/elec/elec
2019-03-18 22:08:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:08:00 -HTTP METHOD : GET
2019-03-18 22:08:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:08:00 -参数 : [userType]
2019-03-18 22:08:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:08:00 -==> Parameters: userType(String)
2019-03-18 22:08:00 -<==      Total: 2
2019-03-18 22:08:00 -耗时 : 4
2019-03-18 22:08:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:08:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:08:00 -HTTP METHOD : GET
2019-03-18 22:08:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:08:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@646899e]
2019-03-18 22:08:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:08:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:08:00 -<==      Total: 2
2019-03-18 22:08:00 -==>  Preparing: select count(*) from elec 
2019-03-18 22:08:00 -==> Parameters: 
2019-03-18 22:08:00 -<==      Total: 1
2019-03-18 22:08:00 -耗时 : 8
2019-03-18 22:08:00 -返回值 : com.bootdo.common.utils.PageUtils@6d9f7a19
2019-03-18 22:08:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 22:08:28 -==> Parameters: 1(Long)
2019-03-18 22:08:28 -<==      Total: 86
2019-03-18 22:08:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:08:28 -HTTP METHOD : GET
2019-03-18 22:08:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:08:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3aa2439f]
2019-03-18 22:08:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:08:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:08:28 -<==      Total: 2
2019-03-18 22:08:28 -==>  Preparing: select count(*) from elec 
2019-03-18 22:08:28 -==> Parameters: 
2019-03-18 22:08:28 -<==      Total: 1
2019-03-18 22:08:28 -耗时 : 9
2019-03-18 22:08:28 -返回值 : com.bootdo.common.utils.PageUtils@1ef978bc
2019-03-18 22:12:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 4524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 22:12:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 22:12:41 -The following profiles are active: dev
2019-03-18 22:12:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Mon Mar 18 22:12:41 CST 2019]; root of context hierarchy
2019-03-18 22:12:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 22:12:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69bcc858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c15f6ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 22:12:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 22:12:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:12:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 22:12:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 22:12:56 -Starting service [Tomcat]
2019-03-18 22:12:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 22:12:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 22:12:57 -Initializing Spring embedded WebApplicationContext
2019-03-18 22:12:57 -Root WebApplicationContext: initialization completed in 16386 ms
2019-03-18 22:12:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 22:12:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 22:12:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 22:12:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 22:12:59 -Filter xssFilter was not registered (disabled)
2019-03-18 22:12:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 22:12:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 22:12:59 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 22:12:59 -Servlet dispatcherServlet mapped to [/]
2019-03-18 22:13:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Mon Mar 18 22:12:41 CST 2019]; root of context hierarchy
2019-03-18 22:13:04 -Using default implementation for ThreadExecutor
2019-03-18 22:13:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 22:13:04 -Quartz Scheduler v.2.2.1 created.
2019-03-18 22:13:04 -RAMJobStore initialized.
2019-03-18 22:13:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 22:13:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 22:13:04 -Quartz scheduler version: 2.2.1
2019-03-18 22:13:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5151accb
2019-03-18 22:13:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 22:13:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 22:13:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 22:13:11 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 22:13:11 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 22:13:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 22:13:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 22:13:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 22:13:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 22:13:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 22:13:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 22:13:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 22:13:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 22:13:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 22:13:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 22:13:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 22:13:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:13:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:13:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 22:13:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 22:13:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 22:13:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 22:13:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 22:13:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 22:13:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 22:13:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 22:13:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 22:13:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 22:13:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:13:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 22:13:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:13:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 22:13:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 22:13:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 22:13:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 22:13:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:13:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 22:13:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 22:13:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 22:13:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:13:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:13:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 22:13:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 22:13:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 22:13:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 22:13:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 22:13:11 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:13:11 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 22:13:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 22:13:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 22:13:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 22:13:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 22:13:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 22:13:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 22:13:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 22:13:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 22:13:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 22:13:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 22:13:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 22:13:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 22:13:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:13:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 22:13:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 22:13:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 22:13:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 22:13:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 22:13:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 22:13:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 22:13:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 22:13:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 22:13:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 22:13:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 22:13:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 22:13:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 22:13:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 22:13:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 22:13:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:13:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:13:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:13:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 22:13:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 22:13:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 22:13:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 22:13:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 22:13:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 22:13:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 22:13:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 22:13:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:13:11 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:13:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 22:13:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:13:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 22:13:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 22:13:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 22:13:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 22:13:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 22:13:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 22:13:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:13:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Mon Mar 18 22:12:41 CST 2019]; root of context hierarchy
2019-03-18 22:13:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:13:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:13:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:13:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 22:13:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 22:13:24 -Registering beans for JMX exposure on startup
2019-03-18 22:13:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 22:13:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 22:13:24 -Starting beans in phase 2147483647
2019-03-18 22:13:24 -Context refreshed
2019-03-18 22:13:25 -Found 1 custom documentation plugin(s)
2019-03-18 22:13:25 -Scanning for api listing references
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_1
2019-03-18 22:13:28 -Generating unique operation named: addUsingGET_1
2019-03-18 22:13:28 -Generating unique operation named: editUsingGET_1
2019-03-18 22:13:28 -Generating unique operation named: listUsingGET_1
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_2
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_3
2019-03-18 22:13:28 -Generating unique operation named: saveUsingPOST_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingGET_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPOST_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPUT_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 22:13:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 22:13:28 -Generating unique operation named: addUsingGET_2
2019-03-18 22:13:28 -Generating unique operation named: editUsingGET_2
2019-03-18 22:13:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 22:13:28 -Generating unique operation named: listUsingGET_2
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_4
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_5
2019-03-18 22:13:28 -Generating unique operation named: saveUsingPOST_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingGET_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPOST_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPUT_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 22:13:28 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 22:13:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 22:13:28 -Generating unique operation named: addUsingGET_3
2019-03-18 22:13:28 -Generating unique operation named: editUsingGET_3
2019-03-18 22:13:28 -Generating unique operation named: listUsingGET_3
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_6
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_7
2019-03-18 22:13:28 -Generating unique operation named: saveUsingPOST_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingGET_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPOST_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPUT_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 22:13:28 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 22:13:28 -Generating unique operation named: addUsingGET_4
2019-03-18 22:13:28 -Generating unique operation named: editUsingGET_4
2019-03-18 22:13:28 -Generating unique operation named: listUsingGET_4
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_8
2019-03-18 22:13:28 -Generating unique operation named: removeUsingPOST_9
2019-03-18 22:13:28 -Generating unique operation named: saveUsingPOST_4
2019-03-18 22:13:28 -Generating unique operation named: updateUsingGET_4
2019-03-18 22:13:28 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPUT_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 22:13:29 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 22:13:29 -Generating unique operation named: ElecUsingGET_1
2019-03-18 22:13:29 -Generating unique operation named: addUsingGET_5
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_5
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_5
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_10
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_11
2019-03-18 22:13:29 -Generating unique operation named: saveUsingPOST_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingGET_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPUT_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 22:13:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_6
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_6
2019-03-18 22:13:29 -Generating unique operation named: addUsingGET_6
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_7
2019-03-18 22:13:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_7
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_12
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_13
2019-03-18 22:13:29 -Generating unique operation named: saveUsingPOST_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingGET_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPUT_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 22:13:29 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 22:13:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 22:13:29 -Generating unique operation named: addUsingGET_7
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_8
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_8
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_14
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_15
2019-03-18 22:13:29 -Generating unique operation named: saveUsingPOST_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingGET_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPUT_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 22:13:29 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 22:13:29 -Generating unique operation named: addUsingGET_8
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_9
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_9
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_16
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_17
2019-03-18 22:13:29 -Generating unique operation named: saveUsingPOST_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingGET_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_9
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPUT_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 22:13:29 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 22:13:29 -Generating unique operation named: addUsingGET_9
2019-03-18 22:13:29 -Generating unique operation named: editUsingGET_10
2019-03-18 22:13:29 -Generating unique operation named: infoUsingGET_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingPOST_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingPUT_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 22:13:29 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_10
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_18
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_19
2019-03-18 22:13:29 -Generating unique operation named: saveUsingPOST_9
2019-03-18 22:13:29 -Generating unique operation named: updateUsingPOST_10
2019-03-18 22:13:29 -Generating unique operation named: listUsingGET_11
2019-03-18 22:13:29 -Generating unique operation named: removeUsingPOST_20
2019-03-18 22:13:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 22:13:30 -Generating unique operation named: addUsingGET_10
2019-03-18 22:13:30 -Generating unique operation named: editUsingGET_11
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_12
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_21
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_10
2019-03-18 22:13:30 -Generating unique operation named: treeUsingGET_1
2019-03-18 22:13:30 -Generating unique operation named: treeUsingGET_2
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPOST_11
2019-03-18 22:13:30 -Generating unique operation named: addUsingGET_11
2019-03-18 22:13:30 -Generating unique operation named: editUsingGET_12
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_13
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_22
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_23
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_11
2019-03-18 22:13:30 -Generating unique operation named: updateUsingGET_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPOST_12
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPUT_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 22:13:30 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 22:13:30 -Generating unique operation named: addUsingGET_12
2019-03-18 22:13:30 -Generating unique operation named: editUsingGET_13
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_14
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_24
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_25
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_12
2019-03-18 22:13:30 -Generating unique operation named: updateUsingGET_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPOST_13
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPUT_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 22:13:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 22:13:30 -Generating unique operation named: addUsingGET_13
2019-03-18 22:13:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 22:13:30 -Generating unique operation named: editUsingGET_14
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_15
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_13
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_14
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPOST_14
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_16
2019-03-18 22:13:30 -Generating unique operation named: listUsingHEAD_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingPOST_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingPUT_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingPATCH_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingDELETE_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 22:13:30 -Generating unique operation named: listUsingTRACE_1
2019-03-18 22:13:30 -Generating unique operation named: addUsingGET_14
2019-03-18 22:13:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 22:13:30 -Generating unique operation named: editUsingGET_15
2019-03-18 22:13:30 -Generating unique operation named: listUsingGET_17
2019-03-18 22:13:30 -Generating unique operation named: removeUsingPOST_26
2019-03-18 22:13:30 -Generating unique operation named: saveUsingPOST_15
2019-03-18 22:13:30 -Generating unique operation named: treeUsingGET_3
2019-03-18 22:13:30 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 22:13:30 -Generating unique operation named: updateUsingPOST_15
2019-03-18 22:13:31 -Generating unique operation named: addUsingGET_15
2019-03-18 22:13:31 -Generating unique operation named: editUsingGET_16
2019-03-18 22:13:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 22:13:31 -Generating unique operation named: listUsingGET_18
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_27
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_28
2019-03-18 22:13:31 -Generating unique operation named: saveUsingPOST_16
2019-03-18 22:13:31 -Generating unique operation named: updateUsingGET_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPOST_16
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPUT_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 22:13:31 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 22:13:31 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 22:13:31 -Generating unique operation named: addUsingGET_16
2019-03-18 22:13:31 -Generating unique operation named: editUsingGET_17
2019-03-18 22:13:31 -Generating unique operation named: listUsingGET_19
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_29
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_30
2019-03-18 22:13:31 -Generating unique operation named: saveUsingPOST_17
2019-03-18 22:13:31 -Generating unique operation named: updateUsingGET_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPOST_17
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPUT_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 22:13:31 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 22:13:31 -Generating unique operation named: addUsingGET_17
2019-03-18 22:13:31 -Generating unique operation named: editUsingGET_18
2019-03-18 22:13:31 -Generating unique operation named: listUsingGET_20
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_31
2019-03-18 22:13:31 -Generating unique operation named: removeUsingPOST_32
2019-03-18 22:13:31 -Generating unique operation named: saveUsingPOST_18
2019-03-18 22:13:31 -Generating unique operation named: updateUsingGET_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPOST_18
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPUT_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 22:13:31 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 22:13:31 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 22:13:31 -Starting Quartz Scheduler now
2019-03-18 22:13:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 22:13:31 -Starting...
2019-03-18 22:13:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 22:13:31 -Started.
2019-03-18 22:13:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 22:13:31 -Using a shared selector for servlet write/read
2019-03-18 22:13:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 22:13:32 -Started BootdoApplication in 53.958 seconds (JVM running for 56.062)
2019-03-18 22:13:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 22:13:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 22:13:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 22:13:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 219 ms
2019-03-18 22:13:32 -Enabling session validation scheduler...
2019-03-18 22:13:32 -==> Parameters: 
2019-03-18 22:13:33 -请求地址 : http://localhost:8081/login;JSESSIONID=d41c53a8-b01f-40fc-8a82-5efa8390f01b
2019-03-18 22:13:33 -HTTP METHOD : GET
2019-03-18 22:13:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 22:13:33 -参数 : [{}]
2019-03-18 22:13:33 -耗时 : 4
2019-03-18 22:13:33 -返回值 : login
2019-03-18 22:13:33 -<==      Total: 1
2019-03-18 22:13:36 -请求地址 : http://localhost:8081/getVerify
2019-03-18 22:13:36 -HTTP METHOD : GET
2019-03-18 22:13:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 22:13:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35b6e0b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b711873]
2019-03-18 22:13:43 -5130
2019-03-18 22:13:43 -耗时 : 6677
2019-03-18 22:13:43 -返回值 : null
2019-03-18 22:13:52 -请求地址 : http://localhost:8081/login
2019-03-18 22:13:52 -HTTP METHOD : POST
2019-03-18 22:13:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 22:13:52 -参数 : [admin, 111111, 5130, org.apache.shiro.web.servlet.ShiroHttpServletRequest@175325ae]
2019-03-18 22:13:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 22:13:52 -==> Parameters: admin(String)
2019-03-18 22:13:52 -<==      Total: 1
2019-03-18 22:13:52 -耗时 : 162
2019-03-18 22:13:52 -返回值 : {msg=操作成功, code=0}
2019-03-18 22:13:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 22:13:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:13:53 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 22:13:53.071(Timestamp)
2019-03-18 22:13:53 -请求地址 : http://localhost:8081/index
2019-03-18 22:13:53 -HTTP METHOD : GET
2019-03-18 22:13:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:13:53 -参数 : [{}]
2019-03-18 22:13:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:13:53 -<==    Updates: 1
2019-03-18 22:13:53 -==> Parameters: 1(Long)
2019-03-18 22:13:54 -<==      Total: 45
2019-03-18 22:13:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:13:54 -==> Parameters: 138(Long)
2019-03-18 22:13:54 -<==      Total: 1
2019-03-18 22:13:54 -耗时 : 971
2019-03-18 22:13:54 -返回值 : index_v1
2019-03-18 22:13:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:13:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 972(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:13:54.23(Timestamp)
2019-03-18 22:13:54 -<==    Updates: 1
2019-03-18 22:13:54 -请求地址 : http://localhost:8081/main
2019-03-18 22:13:54 -HTTP METHOD : GET
2019-03-18 22:13:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:13:54 -参数 : []
2019-03-18 22:13:54 -耗时 : 0
2019-03-18 22:13:54 -返回值 : main
2019-03-18 22:13:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:13:54 -HTTP METHOD : GET
2019-03-18 22:13:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:13:54 -参数 : []
2019-03-18 22:13:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:13:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:13:54 -请求地址 : http://localhost:8081/main
2019-03-18 22:13:54 -HTTP METHOD : GET
2019-03-18 22:13:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:13:54 -参数 : []
2019-03-18 22:13:54 -耗时 : 0
2019-03-18 22:13:54 -返回值 : main
2019-03-18 22:13:54 -<==      Total: 0
2019-03-18 22:13:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:13:54 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:13:54 -<==      Total: 1
2019-03-18 22:13:54 -耗时 : 160
2019-03-18 22:13:54 -返回值 : com.bootdo.common.utils.PageUtils@4f3cf1b0
2019-03-18 22:14:13 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-18 22:14:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 22:14:15 -==> Parameters: 1(Long)
2019-03-18 22:14:15 -<==      Total: 86
2019-03-18 22:14:15 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:14:15 -HTTP METHOD : GET
2019-03-18 22:14:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:14:15 -参数 : []
2019-03-18 22:14:15 -耗时 : 1
2019-03-18 22:14:15 -返回值 : elec/elec/elec
2019-03-18 22:14:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:14:16 -HTTP METHOD : GET
2019-03-18 22:14:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:14:16 -参数 : [userType]
2019-03-18 22:14:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:14:16 -==> Parameters: userType(String)
2019-03-18 22:14:16 -<==      Total: 2
2019-03-18 22:14:16 -耗时 : 112
2019-03-18 22:14:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:14:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:14:16 -HTTP METHOD : GET
2019-03-18 22:14:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:14:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@8cfd9f1]
2019-03-18 22:14:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:14:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:14:16 -<==      Total: 2
2019-03-18 22:14:16 -==>  Preparing: select count(*) from elec 
2019-03-18 22:14:16 -==> Parameters: 
2019-03-18 22:14:16 -<==      Total: 1
2019-03-18 22:14:16 -耗时 : 161
2019-03-18 22:14:16 -返回值 : com.bootdo.common.utils.PageUtils@3e78796d
2019-03-18 22:14:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:14:18 -HTTP METHOD : GET
2019-03-18 22:14:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:14:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@10503a71]
2019-03-18 22:14:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:14:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:14:18 -<==      Total: 2
2019-03-18 22:14:18 -==>  Preparing: select count(*) from elec 
2019-03-18 22:14:18 -==> Parameters: 
2019-03-18 22:14:18 -<==      Total: 1
2019-03-18 22:14:18 -耗时 : 13
2019-03-18 22:14:18 -返回值 : com.bootdo.common.utils.PageUtils@266349e1
2019-03-18 22:14:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:14:20 -HTTP METHOD : GET
2019-03-18 22:14:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:14:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7f39d8d0]
2019-03-18 22:14:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:14:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:14:20 -<==      Total: 2
2019-03-18 22:14:20 -==>  Preparing: select count(*) from elec 
2019-03-18 22:14:20 -==> Parameters: 
2019-03-18 22:14:20 -<==      Total: 1
2019-03-18 22:14:20 -耗时 : 23
2019-03-18 22:14:20 -返回值 : com.bootdo.common.utils.PageUtils@55beec9e
2019-03-18 22:14:37 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:14:37 -HTTP METHOD : GET
2019-03-18 22:14:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:14:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1ef8ec18]
2019-03-18 22:15:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:15:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:15:13 -<==      Total: 2
2019-03-18 22:15:13 -==>  Preparing: select count(*) from elec 
2019-03-18 22:15:13 -==> Parameters: 
2019-03-18 22:15:13 -<==      Total: 1
2019-03-18 22:15:13 -耗时 : 36246
2019-03-18 22:15:13 -返回值 : com.bootdo.common.utils.PageUtils@3055d174
2019-03-18 22:17:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 1632 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 22:17:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 22:17:02 -The following profiles are active: dev
2019-03-18 22:17:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1433046b: startup date [Mon Mar 18 22:17:02 CST 2019]; root of context hierarchy
2019-03-18 22:17:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 22:17:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$998cabd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8be5da7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 22:17:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 22:17:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:17:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 22:17:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 22:17:16 -Starting service [Tomcat]
2019-03-18 22:17:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 22:17:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 22:17:17 -Initializing Spring embedded WebApplicationContext
2019-03-18 22:17:17 -Root WebApplicationContext: initialization completed in 14586 ms
2019-03-18 22:17:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 22:17:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 22:17:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 22:17:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 22:17:18 -Filter xssFilter was not registered (disabled)
2019-03-18 22:17:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 22:17:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 22:17:18 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 22:17:18 -Servlet dispatcherServlet mapped to [/]
2019-03-18 22:17:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1433046b: startup date [Mon Mar 18 22:17:02 CST 2019]; root of context hierarchy
2019-03-18 22:17:24 -Using default implementation for ThreadExecutor
2019-03-18 22:17:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 22:17:24 -Quartz Scheduler v.2.2.1 created.
2019-03-18 22:17:24 -RAMJobStore initialized.
2019-03-18 22:17:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 22:17:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 22:17:24 -Quartz scheduler version: 2.2.1
2019-03-18 22:17:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1ef04613
2019-03-18 22:17:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 22:17:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 22:17:30 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 22:17:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 22:17:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 22:17:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 22:17:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 22:17:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 22:17:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 22:17:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 22:17:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 22:17:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 22:17:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 22:17:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 22:17:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 22:17:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 22:17:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:17:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 22:17:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:17:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 22:17:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 22:17:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 22:17:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 22:17:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 22:17:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 22:17:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 22:17:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 22:17:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 22:17:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:17:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 22:17:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:17:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 22:17:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 22:17:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 22:17:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:17:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 22:17:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 22:17:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 22:17:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 22:17:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:17:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:17:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 22:17:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 22:17:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 22:17:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:17:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 22:17:30 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 22:17:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 22:17:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 22:17:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 22:17:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 22:17:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 22:17:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 22:17:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 22:17:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 22:17:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 22:17:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 22:17:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 22:17:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 22:17:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 22:17:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 22:17:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 22:17:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 22:17:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 22:17:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 22:17:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 22:17:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 22:17:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 22:17:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 22:17:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 22:17:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 22:17:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 22:17:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 22:17:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 22:17:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 22:17:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:17:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 22:17:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:17:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:17:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 22:17:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 22:17:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 22:17:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 22:17:30 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 22:17:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 22:17:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 22:17:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:17:30 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:17:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 22:17:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:17:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 22:17:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 22:17:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 22:17:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 22:17:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 22:17:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 22:17:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:17:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1433046b: startup date [Mon Mar 18 22:17:02 CST 2019]; root of context hierarchy
2019-03-18 22:17:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:17:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:17:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:17:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 22:17:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 22:17:37 -Registering beans for JMX exposure on startup
2019-03-18 22:17:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 22:17:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 22:17:37 -Starting beans in phase 2147483647
2019-03-18 22:17:37 -Context refreshed
2019-03-18 22:17:37 -Found 1 custom documentation plugin(s)
2019-03-18 22:17:37 -Scanning for api listing references
2019-03-18 22:17:38 -Generating unique operation named: removeUsingPOST_1
2019-03-18 22:17:38 -Generating unique operation named: addUsingGET_1
2019-03-18 22:17:38 -Generating unique operation named: editUsingGET_1
2019-03-18 22:17:38 -Generating unique operation named: listUsingGET_1
2019-03-18 22:17:38 -Generating unique operation named: removeUsingPOST_2
2019-03-18 22:17:38 -Generating unique operation named: removeUsingPOST_3
2019-03-18 22:17:38 -Generating unique operation named: saveUsingPOST_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingGET_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingPOST_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingPUT_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 22:17:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 22:17:39 -Generating unique operation named: addUsingGET_2
2019-03-18 22:17:39 -Generating unique operation named: editUsingGET_2
2019-03-18 22:17:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 22:17:39 -Generating unique operation named: listUsingGET_2
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_4
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_5
2019-03-18 22:17:39 -Generating unique operation named: saveUsingPOST_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingGET_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPOST_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPUT_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 22:17:39 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 22:17:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 22:17:39 -Generating unique operation named: addUsingGET_3
2019-03-18 22:17:39 -Generating unique operation named: editUsingGET_3
2019-03-18 22:17:39 -Generating unique operation named: listUsingGET_3
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_6
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_7
2019-03-18 22:17:39 -Generating unique operation named: saveUsingPOST_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingGET_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPOST_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPUT_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 22:17:39 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 22:17:39 -Generating unique operation named: addUsingGET_4
2019-03-18 22:17:39 -Generating unique operation named: editUsingGET_4
2019-03-18 22:17:39 -Generating unique operation named: listUsingGET_4
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_8
2019-03-18 22:17:39 -Generating unique operation named: removeUsingPOST_9
2019-03-18 22:17:39 -Generating unique operation named: saveUsingPOST_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingGET_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPOST_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPUT_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 22:17:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 22:17:39 -Generating unique operation named: ElecUsingGET_1
2019-03-18 22:17:40 -Generating unique operation named: addUsingGET_5
2019-03-18 22:17:40 -Generating unique operation named: editUsingGET_5
2019-03-18 22:17:40 -Generating unique operation named: listUsingGET_5
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_10
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_11
2019-03-18 22:17:40 -Generating unique operation named: saveUsingPOST_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingGET_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPOST_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPUT_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 22:17:40 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 22:17:40 -Generating unique operation named: editUsingGET_6
2019-03-18 22:17:40 -Generating unique operation named: listUsingGET_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPOST_6
2019-03-18 22:17:40 -Generating unique operation named: addUsingGET_6
2019-03-18 22:17:40 -Generating unique operation named: editUsingGET_7
2019-03-18 22:17:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 22:17:40 -Generating unique operation named: listUsingGET_7
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_12
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_13
2019-03-18 22:17:40 -Generating unique operation named: saveUsingPOST_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingGET_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPOST_7
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPUT_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 22:17:40 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 22:17:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 22:17:40 -Generating unique operation named: addUsingGET_7
2019-03-18 22:17:40 -Generating unique operation named: editUsingGET_8
2019-03-18 22:17:40 -Generating unique operation named: listUsingGET_8
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_14
2019-03-18 22:17:40 -Generating unique operation named: removeUsingPOST_15
2019-03-18 22:17:40 -Generating unique operation named: saveUsingPOST_7
2019-03-18 22:17:40 -Generating unique operation named: updateUsingGET_7
2019-03-18 22:17:40 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPOST_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPUT_7
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 22:17:41 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 22:17:41 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 22:17:41 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 22:17:41 -Generating unique operation named: addUsingGET_8
2019-03-18 22:17:41 -Generating unique operation named: editUsingGET_9
2019-03-18 22:17:41 -Generating unique operation named: listUsingGET_9
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_16
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_17
2019-03-18 22:17:41 -Generating unique operation named: saveUsingPOST_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingGET_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPOST_9
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPUT_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 22:17:41 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 22:17:41 -Generating unique operation named: addUsingGET_9
2019-03-18 22:17:41 -Generating unique operation named: editUsingGET_10
2019-03-18 22:17:41 -Generating unique operation named: infoUsingGET_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingPOST_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingPUT_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 22:17:41 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 22:17:41 -Generating unique operation named: listUsingGET_10
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_18
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_19
2019-03-18 22:17:41 -Generating unique operation named: saveUsingPOST_9
2019-03-18 22:17:41 -Generating unique operation named: updateUsingPOST_10
2019-03-18 22:17:41 -Generating unique operation named: listUsingGET_11
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_20
2019-03-18 22:17:41 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 22:17:41 -Generating unique operation named: addUsingGET_10
2019-03-18 22:17:41 -Generating unique operation named: editUsingGET_11
2019-03-18 22:17:41 -Generating unique operation named: listUsingGET_12
2019-03-18 22:17:41 -Generating unique operation named: removeUsingPOST_21
2019-03-18 22:17:41 -Generating unique operation named: saveUsingPOST_10
2019-03-18 22:17:42 -Generating unique operation named: treeUsingGET_1
2019-03-18 22:17:42 -Generating unique operation named: treeUsingGET_2
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPOST_11
2019-03-18 22:17:42 -Generating unique operation named: addUsingGET_11
2019-03-18 22:17:42 -Generating unique operation named: editUsingGET_12
2019-03-18 22:17:42 -Generating unique operation named: listUsingGET_13
2019-03-18 22:17:42 -Generating unique operation named: removeUsingPOST_22
2019-03-18 22:17:42 -Generating unique operation named: removeUsingPOST_23
2019-03-18 22:17:42 -Generating unique operation named: saveUsingPOST_11
2019-03-18 22:17:42 -Generating unique operation named: updateUsingGET_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPOST_12
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPUT_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 22:17:42 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 22:17:42 -Generating unique operation named: addUsingGET_12
2019-03-18 22:17:42 -Generating unique operation named: editUsingGET_13
2019-03-18 22:17:42 -Generating unique operation named: listUsingGET_14
2019-03-18 22:17:42 -Generating unique operation named: removeUsingPOST_24
2019-03-18 22:17:42 -Generating unique operation named: removeUsingPOST_25
2019-03-18 22:17:42 -Generating unique operation named: saveUsingPOST_12
2019-03-18 22:17:42 -Generating unique operation named: updateUsingGET_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPOST_13
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPUT_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 22:17:42 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 22:17:42 -Generating unique operation named: addUsingGET_13
2019-03-18 22:17:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 22:17:42 -Generating unique operation named: editUsingGET_14
2019-03-18 22:17:42 -Generating unique operation named: listUsingGET_15
2019-03-18 22:17:42 -Generating unique operation named: saveUsingPOST_13
2019-03-18 22:17:42 -Generating unique operation named: saveUsingPOST_14
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPOST_14
2019-03-18 22:17:42 -Generating unique operation named: listUsingGET_16
2019-03-18 22:17:42 -Generating unique operation named: listUsingHEAD_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingPOST_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingPUT_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingPATCH_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingDELETE_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 22:17:42 -Generating unique operation named: listUsingTRACE_1
2019-03-18 22:17:42 -Generating unique operation named: addUsingGET_14
2019-03-18 22:17:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 22:17:42 -Generating unique operation named: editUsingGET_15
2019-03-18 22:17:42 -Generating unique operation named: listUsingGET_17
2019-03-18 22:17:42 -Generating unique operation named: removeUsingPOST_26
2019-03-18 22:17:42 -Generating unique operation named: saveUsingPOST_15
2019-03-18 22:17:42 -Generating unique operation named: treeUsingGET_3
2019-03-18 22:17:42 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 22:17:42 -Generating unique operation named: updateUsingPOST_15
2019-03-18 22:17:42 -Generating unique operation named: addUsingGET_15
2019-03-18 22:17:42 -Generating unique operation named: editUsingGET_16
2019-03-18 22:17:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 22:17:43 -Generating unique operation named: listUsingGET_18
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_27
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_28
2019-03-18 22:17:43 -Generating unique operation named: saveUsingPOST_16
2019-03-18 22:17:43 -Generating unique operation named: updateUsingGET_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPOST_16
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPUT_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 22:17:43 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 22:17:43 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 22:17:43 -Generating unique operation named: addUsingGET_16
2019-03-18 22:17:43 -Generating unique operation named: editUsingGET_17
2019-03-18 22:17:43 -Generating unique operation named: listUsingGET_19
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_29
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_30
2019-03-18 22:17:43 -Generating unique operation named: saveUsingPOST_17
2019-03-18 22:17:43 -Generating unique operation named: updateUsingGET_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPOST_17
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPUT_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 22:17:43 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 22:17:43 -Generating unique operation named: addUsingGET_17
2019-03-18 22:17:43 -Generating unique operation named: editUsingGET_18
2019-03-18 22:17:43 -Generating unique operation named: listUsingGET_20
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_31
2019-03-18 22:17:43 -Generating unique operation named: removeUsingPOST_32
2019-03-18 22:17:43 -Generating unique operation named: saveUsingPOST_18
2019-03-18 22:17:43 -Generating unique operation named: updateUsingGET_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPOST_18
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPUT_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 22:17:43 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 22:17:43 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 22:17:43 -Starting Quartz Scheduler now
2019-03-18 22:17:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 22:17:43 -Starting...
2019-03-18 22:17:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 22:17:43 -Started.
2019-03-18 22:17:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 22:17:43 -Using a shared selector for servlet write/read
2019-03-18 22:17:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 22:17:43 -Started BootdoApplication in 43.874 seconds (JVM running for 45.856)
2019-03-18 22:17:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 22:17:44 -==> Parameters: 
2019-03-18 22:17:44 -<==      Total: 1
2019-03-18 22:18:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 22:18:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 22:18:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 141 ms
2019-03-18 22:18:13 -Enabling session validation scheduler...
2019-03-18 22:18:13 -请求地址 : http://localhost:8081/login;JSESSIONID=dc67ab1f-953b-4aa3-8ba3-94c469b202cb
2019-03-18 22:18:13 -HTTP METHOD : GET
2019-03-18 22:18:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 22:18:13 -参数 : [{}]
2019-03-18 22:18:13 -耗时 : 3
2019-03-18 22:18:13 -返回值 : login
2019-03-18 22:18:15 -请求地址 : http://localhost:8081/getVerify
2019-03-18 22:18:15 -HTTP METHOD : GET
2019-03-18 22:18:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 22:18:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@470b6646, org.apache.shiro.web.servlet.ShiroHttpServletResponse@49cc90d7]
2019-03-18 22:18:15 -9525
2019-03-18 22:18:15 -耗时 : 642
2019-03-18 22:18:15 -返回值 : null
2019-03-18 22:18:22 -请求地址 : http://localhost:8081/login
2019-03-18 22:18:22 -HTTP METHOD : POST
2019-03-18 22:18:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 22:18:22 -参数 : [admin, 111111, 9525, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1eb4dffe]
2019-03-18 22:18:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 22:18:22 -==> Parameters: admin(String)
2019-03-18 22:18:22 -<==      Total: 1
2019-03-18 22:18:22 -耗时 : 276
2019-03-18 22:18:22 -返回值 : {msg=操作成功, code=0}
2019-03-18 22:18:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 22:18:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:18:22 -==> Parameters: 1(Long), admin(String), 登录(String), 276(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 22:18:22.931(Timestamp)
2019-03-18 22:18:23 -请求地址 : http://localhost:8081/index
2019-03-18 22:18:23 -HTTP METHOD : GET
2019-03-18 22:18:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:18:23 -参数 : [{}]
2019-03-18 22:18:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:18:23 -==> Parameters: 1(Long)
2019-03-18 22:18:23 -<==    Updates: 1
2019-03-18 22:18:23 -<==      Total: 45
2019-03-18 22:18:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:18:23 -==> Parameters: 138(Long)
2019-03-18 22:18:23 -<==      Total: 1
2019-03-18 22:18:23 -耗时 : 577
2019-03-18 22:18:23 -返回值 : index_v1
2019-03-18 22:18:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:18:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 578(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:18:23.65(Timestamp)
2019-03-18 22:18:23 -<==    Updates: 1
2019-03-18 22:18:23 -请求地址 : http://localhost:8081/main
2019-03-18 22:18:23 -HTTP METHOD : GET
2019-03-18 22:18:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:18:23 -参数 : []
2019-03-18 22:18:23 -耗时 : 1
2019-03-18 22:18:23 -返回值 : main
2019-03-18 22:18:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:18:24 -HTTP METHOD : GET
2019-03-18 22:18:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:18:24 -参数 : []
2019-03-18 22:18:24 -请求地址 : http://localhost:8081/main
2019-03-18 22:18:24 -HTTP METHOD : GET
2019-03-18 22:18:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:18:24 -参数 : []
2019-03-18 22:18:24 -耗时 : 1
2019-03-18 22:18:24 -返回值 : main
2019-03-18 22:18:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:18:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:18:29 -<==      Total: 0
2019-03-18 22:18:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:18:29 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:18:29 -<==      Total: 1
2019-03-18 22:18:29 -耗时 : 5050
2019-03-18 22:18:29 -返回值 : com.bootdo.common.utils.PageUtils@64c6455f
2019-03-18 22:18:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-18 22:18:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 22:18:37 -==> Parameters: 1(Long)
2019-03-18 22:18:37 -<==      Total: 86
2019-03-18 22:18:37 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:18:37 -HTTP METHOD : GET
2019-03-18 22:18:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:18:37 -参数 : []
2019-03-18 22:18:37 -耗时 : 3
2019-03-18 22:18:37 -返回值 : elec/elec/elec
2019-03-18 22:18:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:18:38 -HTTP METHOD : GET
2019-03-18 22:18:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:18:38 -参数 : [userType]
2019-03-18 22:18:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:18:38 -==> Parameters: userType(String)
2019-03-18 22:18:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:18:38 -HTTP METHOD : GET
2019-03-18 22:18:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:18:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@692b4b8b]
2019-03-18 22:18:39 -<==      Total: 2
2019-03-18 22:18:39 -耗时 : 733
2019-03-18 22:18:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:19:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:19:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:19:00 -<==      Total: 10
2019-03-18 22:19:00 -==>  Preparing: select count(*) from elec 
2019-03-18 22:19:00 -==> Parameters: 
2019-03-18 22:19:00 -<==      Total: 1
2019-03-18 22:19:21 -耗时 : 42683
2019-03-18 22:19:21 -返回值 : com.bootdo.common.utils.PageUtils@4a9a1ad1
2019-03-18 22:19:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:19:36 -HTTP METHOD : GET
2019-03-18 22:19:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:19:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@7f97d43]
2019-03-18 22:19:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:19:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:19:51 -<==      Total: 10
2019-03-18 22:19:51 -==>  Preparing: select count(*) from elec 
2019-03-18 22:19:51 -==> Parameters: 
2019-03-18 22:19:51 -<==      Total: 1
2019-03-18 22:19:51 -耗时 : 15425
2019-03-18 22:19:51 -返回值 : com.bootdo.common.utils.PageUtils@73606466
2019-03-18 22:20:37 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:37 -HTTP METHOD : GET
2019-03-18 22:20:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@33bd0ae8]
2019-03-18 22:20:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:20:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:20:37 -<==      Total: 10
2019-03-18 22:20:37 -==>  Preparing: select count(*) from elec 
2019-03-18 22:20:37 -==> Parameters: 
2019-03-18 22:20:37 -<==      Total: 1
2019-03-18 22:20:37 -耗时 : 21
2019-03-18 22:20:37 -返回值 : com.bootdo.common.utils.PageUtils@441247e9
2019-03-18 22:20:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:39 -HTTP METHOD : GET
2019-03-18 22:20:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@4171a4fe]
2019-03-18 22:20:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:20:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:20:39 -<==      Total: 10
2019-03-18 22:20:39 -==>  Preparing: select count(*) from elec 
2019-03-18 22:20:39 -==> Parameters: 
2019-03-18 22:20:39 -<==      Total: 1
2019-03-18 22:20:39 -耗时 : 20
2019-03-18 22:20:39 -返回值 : com.bootdo.common.utils.PageUtils@2dcebce
2019-03-18 22:20:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:40 -HTTP METHOD : GET
2019-03-18 22:20:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@62663a31]
2019-03-18 22:20:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:20:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:20:40 -<==      Total: 10
2019-03-18 22:20:40 -==>  Preparing: select count(*) from elec 
2019-03-18 22:20:40 -==> Parameters: 
2019-03-18 22:20:40 -<==      Total: 1
2019-03-18 22:20:40 -耗时 : 15
2019-03-18 22:20:40 -返回值 : com.bootdo.common.utils.PageUtils@e5ff1f1
2019-03-18 22:20:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:41 -HTTP METHOD : GET
2019-03-18 22:20:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@580b3c9]
2019-03-18 22:20:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:20:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:20:41 -<==      Total: 10
2019-03-18 22:20:41 -==>  Preparing: select count(*) from elec 
2019-03-18 22:20:41 -==> Parameters: 
2019-03-18 22:20:41 -<==      Total: 1
2019-03-18 22:20:41 -耗时 : 23
2019-03-18 22:20:41 -返回值 : com.bootdo.common.utils.PageUtils@5d5e1da0
2019-03-18 22:20:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:42 -HTTP METHOD : GET
2019-03-18 22:20:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@27d749b0]
2019-03-18 22:20:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:20:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:20:42 -<==      Total: 10
2019-03-18 22:20:42 -==>  Preparing: select count(*) from elec 
2019-03-18 22:20:42 -==> Parameters: 
2019-03-18 22:20:42 -<==      Total: 1
2019-03-18 22:20:42 -耗时 : 15
2019-03-18 22:20:42 -返回值 : com.bootdo.common.utils.PageUtils@26ec6ed6
2019-03-18 22:20:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:20:54 -HTTP METHOD : GET
2019-03-18 22:20:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:20:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@4464eb55]
2019-03-18 22:21:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:21:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:21:33 -<==      Total: 10
2019-03-18 22:21:56 -==>  Preparing: select count(*) from elec 
2019-03-18 22:21:56 -==> Parameters: 
2019-03-18 22:21:56 -<==      Total: 1
2019-03-18 22:22:00 -耗时 : 65586
2019-03-18 22:22:00 -返回值 : com.bootdo.common.utils.PageUtils@6c623f3a
2019-03-18 22:25:56 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:25:56 -HTTP METHOD : GET
2019-03-18 22:25:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:25:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@323383cd]
2019-03-18 22:26:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:26:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:26:54 -<==      Total: 10
2019-03-18 22:26:54 -==>  Preparing: select count(*) from elec 
2019-03-18 22:26:54 -==> Parameters: 
2019-03-18 22:26:54 -<==      Total: 1
2019-03-18 22:26:54 -耗时 : 58071
2019-03-18 22:26:54 -返回值 : com.bootdo.common.utils.PageUtils@5a17ba1d
2019-03-18 22:27:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 4156 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-18 22:27:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-18 22:27:54 -The following profiles are active: dev
2019-03-18 22:27:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Mon Mar 18 22:27:54 CST 2019]; root of context hierarchy
2019-03-18 22:28:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-18 22:28:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$78a33098] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6afc5f3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-18 22:28:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-18 22:28:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-18 22:28:10 -Tomcat initialized with port(s): 8081 (http)
2019-03-18 22:28:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-18 22:28:10 -Starting service [Tomcat]
2019-03-18 22:28:10 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-18 22:28:10 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-18 22:28:11 -Initializing Spring embedded WebApplicationContext
2019-03-18 22:28:11 -Root WebApplicationContext: initialization completed in 16626 ms
2019-03-18 22:28:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-18 22:28:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-18 22:28:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-18 22:28:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-18 22:28:12 -Filter xssFilter was not registered (disabled)
2019-03-18 22:28:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-18 22:28:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-18 22:28:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-18 22:28:12 -Servlet dispatcherServlet mapped to [/]
2019-03-18 22:28:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Mon Mar 18 22:27:54 CST 2019]; root of context hierarchy
2019-03-18 22:28:17 -Using default implementation for ThreadExecutor
2019-03-18 22:28:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-18 22:28:17 -Quartz Scheduler v.2.2.1 created.
2019-03-18 22:28:17 -RAMJobStore initialized.
2019-03-18 22:28:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-18 22:28:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-18 22:28:17 -Quartz scheduler version: 2.2.1
2019-03-18 22:28:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7adff6cb
2019-03-18 22:28:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-18 22:28:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-18 22:28:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-18 22:28:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-18 22:28:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-18 22:28:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-18 22:28:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-18 22:28:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-18 22:28:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-18 22:28:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-18 22:28:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-18 22:28:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-18 22:28:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-18 22:28:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-18 22:28:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-18 22:28:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-18 22:28:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:28:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-18 22:28:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-18 22:28:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-18 22:28:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-18 22:28:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-18 22:28:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-18 22:28:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-18 22:28:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-18 22:28:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-18 22:28:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-18 22:28:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-18 22:28:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:28:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-18 22:28:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-18 22:28:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-18 22:28:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-18 22:28:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-18 22:28:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-18 22:28:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:28:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-18 22:28:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-18 22:28:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-18 22:28:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-18 22:28:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:28:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-18 22:28:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-18 22:28:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-18 22:28:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-18 22:28:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-18 22:28:24 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-18 22:28:24 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-18 22:28:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-18 22:28:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-18 22:28:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-18 22:28:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-18 22:28:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-18 22:28:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-18 22:28:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-18 22:28:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-18 22:28:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-18 22:28:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-18 22:28:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-18 22:28:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-18 22:28:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-18 22:28:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-18 22:28:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-18 22:28:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:28:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-18 22:28:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-18 22:28:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-18 22:28:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-18 22:28:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-18 22:28:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-18 22:28:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-18 22:28:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-18 22:28:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-18 22:28:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-18 22:28:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-18 22:28:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-18 22:28:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-18 22:28:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-18 22:28:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-18 22:28:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:28:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-18 22:28:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:28:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-18 22:28:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-18 22:28:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-18 22:28:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-18 22:28:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-18 22:28:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-18 22:28:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-18 22:28:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-18 22:28:24 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-18 22:28:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-18 22:28:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-18 22:28:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-18 22:28:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-18 22:28:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-18 22:28:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-18 22:28:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-18 22:28:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-18 22:28:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:28:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Mon Mar 18 22:27:54 CST 2019]; root of context hierarchy
2019-03-18 22:28:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:28:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:28:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-18 22:28:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-18 22:28:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-18 22:28:32 -Registering beans for JMX exposure on startup
2019-03-18 22:28:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-18 22:28:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-18 22:28:32 -Starting beans in phase 2147483647
2019-03-18 22:28:32 -Context refreshed
2019-03-18 22:28:32 -Found 1 custom documentation plugin(s)
2019-03-18 22:28:32 -Scanning for api listing references
2019-03-18 22:28:33 -Generating unique operation named: removeUsingPOST_1
2019-03-18 22:28:34 -Generating unique operation named: addUsingGET_1
2019-03-18 22:28:34 -Generating unique operation named: editUsingGET_1
2019-03-18 22:28:34 -Generating unique operation named: listUsingGET_1
2019-03-18 22:28:34 -Generating unique operation named: removeUsingPOST_2
2019-03-18 22:28:34 -Generating unique operation named: removeUsingPOST_3
2019-03-18 22:28:34 -Generating unique operation named: saveUsingPOST_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingGET_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPOST_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPUT_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-18 22:28:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-18 22:28:34 -Generating unique operation named: addUsingGET_2
2019-03-18 22:28:34 -Generating unique operation named: editUsingGET_2
2019-03-18 22:28:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-18 22:28:34 -Generating unique operation named: listUsingGET_2
2019-03-18 22:28:34 -Generating unique operation named: removeUsingPOST_4
2019-03-18 22:28:34 -Generating unique operation named: removeUsingPOST_5
2019-03-18 22:28:34 -Generating unique operation named: saveUsingPOST_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingGET_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPOST_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPUT_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-18 22:28:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-18 22:28:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-18 22:28:34 -Generating unique operation named: addUsingGET_3
2019-03-18 22:28:34 -Generating unique operation named: editUsingGET_3
2019-03-18 22:28:35 -Generating unique operation named: listUsingGET_3
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_6
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_7
2019-03-18 22:28:35 -Generating unique operation named: saveUsingPOST_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingGET_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingHEAD_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPOST_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPUT_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPATCH_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingDELETE_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-18 22:28:35 -Generating unique operation named: updateUsingTRACE_3
2019-03-18 22:28:35 -Generating unique operation named: addUsingGET_4
2019-03-18 22:28:35 -Generating unique operation named: editUsingGET_4
2019-03-18 22:28:35 -Generating unique operation named: listUsingGET_4
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_8
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_9
2019-03-18 22:28:35 -Generating unique operation named: saveUsingPOST_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingGET_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPOST_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPUT_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-18 22:28:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-18 22:28:35 -Generating unique operation named: ElecUsingGET_1
2019-03-18 22:28:35 -Generating unique operation named: addUsingGET_5
2019-03-18 22:28:35 -Generating unique operation named: editUsingGET_5
2019-03-18 22:28:35 -Generating unique operation named: listUsingGET_5
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_10
2019-03-18 22:28:35 -Generating unique operation named: removeUsingPOST_11
2019-03-18 22:28:35 -Generating unique operation named: saveUsingPOST_5
2019-03-18 22:28:35 -Generating unique operation named: updateUsingGET_5
2019-03-18 22:28:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPOST_5
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPUT_5
2019-03-18 22:28:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-18 22:28:36 -Generating unique operation named: updateUsingDELETE_5
2019-03-18 22:28:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-18 22:28:36 -Generating unique operation named: updateUsingTRACE_5
2019-03-18 22:28:36 -Generating unique operation named: editUsingGET_6
2019-03-18 22:28:36 -Generating unique operation named: listUsingGET_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPOST_6
2019-03-18 22:28:36 -Generating unique operation named: addUsingGET_6
2019-03-18 22:28:36 -Generating unique operation named: editUsingGET_7
2019-03-18 22:28:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-18 22:28:36 -Generating unique operation named: listUsingGET_7
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_12
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_13
2019-03-18 22:28:36 -Generating unique operation named: saveUsingPOST_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingGET_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPOST_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPUT_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingDELETE_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-18 22:28:36 -Generating unique operation named: updateUsingTRACE_6
2019-03-18 22:28:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-18 22:28:36 -Generating unique operation named: addUsingGET_7
2019-03-18 22:28:36 -Generating unique operation named: editUsingGET_8
2019-03-18 22:28:36 -Generating unique operation named: listUsingGET_8
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_14
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_15
2019-03-18 22:28:36 -Generating unique operation named: saveUsingPOST_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingGET_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingHEAD_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPOST_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPUT_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPATCH_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingDELETE_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-18 22:28:36 -Generating unique operation named: updateUsingTRACE_7
2019-03-18 22:28:36 -Generating unique operation named: addUsingGET_8
2019-03-18 22:28:36 -Generating unique operation named: editUsingGET_9
2019-03-18 22:28:36 -Generating unique operation named: listUsingGET_9
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_16
2019-03-18 22:28:36 -Generating unique operation named: removeUsingPOST_17
2019-03-18 22:28:36 -Generating unique operation named: saveUsingPOST_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingGET_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingHEAD_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPOST_9
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPUT_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingPATCH_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingDELETE_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-18 22:28:36 -Generating unique operation named: updateUsingTRACE_8
2019-03-18 22:28:36 -Generating unique operation named: addUsingGET_9
2019-03-18 22:28:36 -Generating unique operation named: editUsingGET_10
2019-03-18 22:28:36 -Generating unique operation named: infoUsingGET_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingHEAD_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingPOST_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingPUT_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingPATCH_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingDELETE_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-18 22:28:36 -Generating unique operation named: infoUsingTRACE_1
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_10
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_18
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_19
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPOST_10
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_11
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_20
2019-03-18 22:28:37 -Generating unique operation named: welcomeUsingGET_1
2019-03-18 22:28:37 -Generating unique operation named: addUsingGET_10
2019-03-18 22:28:37 -Generating unique operation named: editUsingGET_11
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_12
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_21
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_10
2019-03-18 22:28:37 -Generating unique operation named: treeUsingGET_1
2019-03-18 22:28:37 -Generating unique operation named: treeUsingGET_2
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPOST_11
2019-03-18 22:28:37 -Generating unique operation named: addUsingGET_11
2019-03-18 22:28:37 -Generating unique operation named: editUsingGET_12
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_13
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_22
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_23
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_11
2019-03-18 22:28:37 -Generating unique operation named: updateUsingGET_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingHEAD_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPOST_12
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPUT_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPATCH_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingDELETE_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-18 22:28:37 -Generating unique operation named: updateUsingTRACE_9
2019-03-18 22:28:37 -Generating unique operation named: addUsingGET_12
2019-03-18 22:28:37 -Generating unique operation named: editUsingGET_13
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_14
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_24
2019-03-18 22:28:37 -Generating unique operation named: removeUsingPOST_25
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_12
2019-03-18 22:28:37 -Generating unique operation named: updateUsingGET_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingHEAD_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPOST_13
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPUT_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPATCH_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingDELETE_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-18 22:28:37 -Generating unique operation named: updateUsingTRACE_10
2019-03-18 22:28:37 -Generating unique operation named: addUsingGET_13
2019-03-18 22:28:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-18 22:28:37 -Generating unique operation named: editUsingGET_14
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_15
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_13
2019-03-18 22:28:37 -Generating unique operation named: saveUsingPOST_14
2019-03-18 22:28:37 -Generating unique operation named: updateUsingPOST_14
2019-03-18 22:28:37 -Generating unique operation named: listUsingGET_16
2019-03-18 22:28:38 -Generating unique operation named: listUsingHEAD_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingPOST_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingPUT_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingPATCH_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingDELETE_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingOPTIONS_1
2019-03-18 22:28:38 -Generating unique operation named: listUsingTRACE_1
2019-03-18 22:28:38 -Generating unique operation named: addUsingGET_14
2019-03-18 22:28:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-18 22:28:38 -Generating unique operation named: editUsingGET_15
2019-03-18 22:28:38 -Generating unique operation named: listUsingGET_17
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_26
2019-03-18 22:28:38 -Generating unique operation named: saveUsingPOST_15
2019-03-18 22:28:38 -Generating unique operation named: treeUsingGET_3
2019-03-18 22:28:38 -Generating unique operation named: treeViewUsingGET_1
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPOST_15
2019-03-18 22:28:38 -Generating unique operation named: addUsingGET_15
2019-03-18 22:28:38 -Generating unique operation named: editUsingGET_16
2019-03-18 22:28:38 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-18 22:28:38 -Generating unique operation named: listUsingGET_18
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_27
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_28
2019-03-18 22:28:38 -Generating unique operation named: saveUsingPOST_16
2019-03-18 22:28:38 -Generating unique operation named: updateUsingGET_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingHEAD_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPOST_16
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPUT_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPATCH_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingDELETE_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-18 22:28:38 -Generating unique operation named: updateUsingTRACE_11
2019-03-18 22:28:38 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-18 22:28:38 -Generating unique operation named: addUsingGET_16
2019-03-18 22:28:38 -Generating unique operation named: editUsingGET_17
2019-03-18 22:28:38 -Generating unique operation named: listUsingGET_19
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_29
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_30
2019-03-18 22:28:38 -Generating unique operation named: saveUsingPOST_17
2019-03-18 22:28:38 -Generating unique operation named: updateUsingGET_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingHEAD_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPOST_17
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPUT_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPATCH_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingDELETE_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-18 22:28:38 -Generating unique operation named: updateUsingTRACE_12
2019-03-18 22:28:38 -Generating unique operation named: addUsingGET_17
2019-03-18 22:28:38 -Generating unique operation named: editUsingGET_18
2019-03-18 22:28:38 -Generating unique operation named: listUsingGET_20
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_31
2019-03-18 22:28:38 -Generating unique operation named: removeUsingPOST_32
2019-03-18 22:28:38 -Generating unique operation named: saveUsingPOST_18
2019-03-18 22:28:38 -Generating unique operation named: updateUsingGET_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingHEAD_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPOST_18
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPUT_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingPATCH_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingDELETE_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-18 22:28:38 -Generating unique operation named: updateUsingTRACE_13
2019-03-18 22:28:38 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-18 22:28:39 -Starting Quartz Scheduler now
2019-03-18 22:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-18 22:28:39 -Starting...
2019-03-18 22:28:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-18 22:28:39 -Started.
2019-03-18 22:28:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-18 22:28:39 -Using a shared selector for servlet write/read
2019-03-18 22:28:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-18 22:28:39 -Started BootdoApplication in 48.25 seconds (JVM running for 50.548)
2019-03-18 22:28:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-18 22:28:40 -==> Parameters: 
2019-03-18 22:28:40 -<==      Total: 1
2019-03-18 22:28:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-18 22:28:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-18 22:28:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 263 ms
2019-03-18 22:28:50 -Enabling session validation scheduler...
2019-03-18 22:28:50 -请求地址 : http://localhost:8081/login;JSESSIONID=ff2ccf19-91ab-457a-9994-a6c53ff08f10
2019-03-18 22:28:50 -HTTP METHOD : GET
2019-03-18 22:28:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-18 22:28:50 -参数 : [{}]
2019-03-18 22:28:50 -耗时 : 4
2019-03-18 22:28:50 -返回值 : login
2019-03-18 22:28:52 -请求地址 : http://localhost:8081/getVerify
2019-03-18 22:28:52 -HTTP METHOD : GET
2019-03-18 22:28:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-18 22:28:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4df30d36, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8f19aec]
2019-03-18 22:28:57 -8550
2019-03-18 22:28:57 -耗时 : 5447
2019-03-18 22:28:57 -返回值 : null
2019-03-18 22:29:03 -请求地址 : http://localhost:8081/login
2019-03-18 22:29:03 -HTTP METHOD : POST
2019-03-18 22:29:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-18 22:29:03 -参数 : [admin, 111111, 8550, org.apache.shiro.web.servlet.ShiroHttpServletRequest@72f76a5d]
2019-03-18 22:29:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-18 22:29:03 -==> Parameters: admin(String)
2019-03-18 22:29:03 -<==      Total: 1
2019-03-18 22:29:03 -耗时 : 216
2019-03-18 22:29:03 -返回值 : {msg=操作成功, code=0}
2019-03-18 22:29:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-18 22:29:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:29:03 -==> Parameters: 1(Long), admin(String), 登录(String), 216(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-18 22:29:03.566(Timestamp)
2019-03-18 22:29:03 -请求地址 : http://localhost:8081/index
2019-03-18 22:29:03 -HTTP METHOD : GET
2019-03-18 22:29:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:29:03 -参数 : [{}]
2019-03-18 22:29:03 -<==    Updates: 1
2019-03-18 22:29:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:29:03 -==> Parameters: 1(Long)
2019-03-18 22:29:04 -<==      Total: 45
2019-03-18 22:29:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:29:04 -==> Parameters: 138(Long)
2019-03-18 22:29:04 -<==      Total: 1
2019-03-18 22:29:04 -耗时 : 427
2019-03-18 22:29:04 -返回值 : index_v1
2019-03-18 22:29:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:29:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 427(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-18 22:29:04.254(Timestamp)
2019-03-18 22:29:04 -<==    Updates: 1
2019-03-18 22:29:04 -请求地址 : http://localhost:8081/main
2019-03-18 22:29:04 -HTTP METHOD : GET
2019-03-18 22:29:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:29:04 -参数 : []
2019-03-18 22:29:04 -耗时 : 1
2019-03-18 22:29:04 -返回值 : main
2019-03-18 22:29:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:29:04 -HTTP METHOD : GET
2019-03-18 22:29:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:29:04 -参数 : []
2019-03-18 22:29:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:29:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:29:04 -<==      Total: 0
2019-03-18 22:29:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:29:04 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:29:04 -<==      Total: 1
2019-03-18 22:29:04 -耗时 : 107
2019-03-18 22:29:04 -返回值 : com.bootdo.common.utils.PageUtils@5f7335e0
2019-03-18 22:29:05 -请求地址 : http://localhost:8081/main
2019-03-18 22:29:05 -HTTP METHOD : GET
2019-03-18 22:29:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:29:05 -参数 : []
2019-03-18 22:29:05 -耗时 : 1
2019-03-18 22:29:05 -返回值 : main
2019-03-18 22:29:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 22:29:14 -==> Parameters: 1(Long)
2019-03-18 22:29:14 -<==      Total: 86
2019-03-18 22:29:14 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 22:29:14 -HTTP METHOD : GET
2019-03-18 22:29:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 22:29:14 -参数 : []
2019-03-18 22:29:14 -耗时 : 1
2019-03-18 22:29:14 -返回值 : elec/elec/elec
2019-03-18 22:29:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 22:29:18 -HTTP METHOD : GET
2019-03-18 22:29:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 22:29:18 -参数 : [userType]
2019-03-18 22:29:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 22:29:18 -==> Parameters: userType(String)
2019-03-18 22:29:18 -<==      Total: 2
2019-03-18 22:29:18 -耗时 : 58
2019-03-18 22:29:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 22:29:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:18 -HTTP METHOD : GET
2019-03-18 22:29:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@23f1a00]
2019-03-18 22:29:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:29:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:19 -<==      Total: 10
2019-03-18 22:29:19 -==>  Preparing: select count(*) from elec 
2019-03-18 22:29:19 -==> Parameters: 
2019-03-18 22:29:19 -<==      Total: 1
2019-03-18 22:29:19 -耗时 : 367
2019-03-18 22:29:19 -返回值 : com.bootdo.common.utils.PageUtils@190c4217
2019-03-18 22:29:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:21 -HTTP METHOD : GET
2019-03-18 22:29:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@3b3a89]
2019-03-18 22:29:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:29:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:21 -<==      Total: 2
2019-03-18 22:29:21 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-18 22:29:21 -==> Parameters: 
2019-03-18 22:29:21 -<==      Total: 1
2019-03-18 22:29:21 -耗时 : 21
2019-03-18 22:29:21 -返回值 : com.bootdo.common.utils.PageUtils@1edb1bd8
2019-03-18 22:29:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-18 22:29:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:27 -HTTP METHOD : GET
2019-03-18 22:29:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1a567140]
2019-03-18 22:29:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:29:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:27 -<==      Total: 10
2019-03-18 22:29:27 -==>  Preparing: select count(*) from elec 
2019-03-18 22:29:27 -==> Parameters: 
2019-03-18 22:29:27 -<==      Total: 1
2019-03-18 22:29:27 -耗时 : 36
2019-03-18 22:29:27 -返回值 : com.bootdo.common.utils.PageUtils@7f65872c
2019-03-18 22:29:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:29 -HTTP METHOD : GET
2019-03-18 22:29:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@65f0e427]
2019-03-18 22:29:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:29:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:29 -<==      Total: 2
2019-03-18 22:29:29 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-18 22:29:29 -==> Parameters: 
2019-03-18 22:29:29 -<==      Total: 1
2019-03-18 22:29:29 -耗时 : 16
2019-03-18 22:29:29 -返回值 : com.bootdo.common.utils.PageUtils@4835e17d
2019-03-18 22:29:30 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:30 -HTTP METHOD : GET
2019-03-18 22:29:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2b74ae1b]
2019-03-18 22:29:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:29:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:30 -<==      Total: 10
2019-03-18 22:29:30 -==>  Preparing: select count(*) from elec 
2019-03-18 22:29:30 -==> Parameters: 
2019-03-18 22:29:30 -<==      Total: 1
2019-03-18 22:29:30 -耗时 : 32
2019-03-18 22:29:30 -返回值 : com.bootdo.common.utils.PageUtils@505f6698
2019-03-18 22:29:31 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:31 -HTTP METHOD : GET
2019-03-18 22:29:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@275de638]
2019-03-18 22:29:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:29:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:31 -<==      Total: 2
2019-03-18 22:29:31 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-18 22:29:31 -==> Parameters: 
2019-03-18 22:29:31 -<==      Total: 1
2019-03-18 22:29:31 -耗时 : 14
2019-03-18 22:29:31 -返回值 : com.bootdo.common.utils.PageUtils@7c8d9b0b
2019-03-18 22:29:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:38 -HTTP METHOD : GET
2019-03-18 22:29:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@38f66db5]
2019-03-18 22:29:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 22:29:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:38 -<==      Total: 10
2019-03-18 22:29:38 -==>  Preparing: select count(*) from elec 
2019-03-18 22:29:38 -==> Parameters: 
2019-03-18 22:29:38 -<==      Total: 1
2019-03-18 22:29:38 -耗时 : 17
2019-03-18 22:29:38 -返回值 : com.bootdo.common.utils.PageUtils@2a2af25e
2019-03-18 22:29:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 22:29:42 -HTTP METHOD : GET
2019-03-18 22:29:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 22:29:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@381ebc95]
2019-03-18 22:29:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 22:29:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:29:42 -<==      Total: 2
2019-03-18 22:29:42 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-18 22:29:42 -==> Parameters: 
2019-03-18 22:29:42 -<==      Total: 1
2019-03-18 22:29:42 -耗时 : 16
2019-03-18 22:29:42 -返回值 : com.bootdo.common.utils.PageUtils@59ce9dab
2019-03-18 22:30:48 -请求地址 : http://localhost:8081/sys/menu/
2019-03-18 22:30:48 -HTTP METHOD : GET
2019-03-18 22:30:48 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-18 22:30:48 -参数 : [{}]
2019-03-18 22:30:48 -耗时 : 1
2019-03-18 22:30:48 -返回值 : system/menu/menu
2019-03-18 22:30:49 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-18 22:30:49 -HTTP METHOD : GET
2019-03-18 22:30:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-18 22:30:49 -参数 : [{sort=order_num}]
2019-03-18 22:30:49 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-18 22:30:49 -==> Parameters: 
2019-03-18 22:30:49 -<==      Total: 106
2019-03-18 22:30:49 -耗时 : 141
2019-03-18 22:30:49 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-18 22:31:35 -请求地址 : http://localhost:8081/sys/user/
2019-03-18 22:31:35 -HTTP METHOD : GET
2019-03-18 22:31:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-18 22:31:35 -参数 : [{}]
2019-03-18 22:31:35 -耗时 : 2
2019-03-18 22:31:35 -返回值 : system/user/user
2019-03-18 22:31:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 22:31:36 -HTTP METHOD : GET
2019-03-18 22:31:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 22:31:36 -参数 : []
2019-03-18 22:31:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 22:31:36 -==> Parameters: 
2019-03-18 22:31:36 -<==      Total: 3
2019-03-18 22:31:36 -耗时 : 25
2019-03-18 22:31:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 22:31:36 -请求地址 : http://localhost:8081/sys/user/list
2019-03-18 22:31:36 -HTTP METHOD : GET
2019-03-18 22:31:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-18 22:31:36 -参数 : [{limit=10, offset=0, name=, deptId=}]
2019-03-18 22:31:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-18 22:31:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:31:36 -<==      Total: 10
2019-03-18 22:31:36 -==>  Preparing: select count(*) from sys_user 
2019-03-18 22:31:36 -==> Parameters: 
2019-03-18 22:31:36 -<==      Total: 1
2019-03-18 22:31:36 -耗时 : 40
2019-03-18 22:31:36 -返回值 : com.bootdo.common.utils.PageUtils@5787dac2
2019-03-18 22:31:37 -请求地址 : http://localhost:8081/sys/role
2019-03-18 22:31:37 -HTTP METHOD : GET
2019-03-18 22:31:37 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-18 22:31:37 -参数 : []
2019-03-18 22:31:37 -耗时 : 2
2019-03-18 22:31:37 -返回值 : system/role/role
2019-03-18 22:31:38 -请求地址 : http://localhost:8081/sys/role/list
2019-03-18 22:31:38 -HTTP METHOD : GET
2019-03-18 22:31:38 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-18 22:31:38 -参数 : []
2019-03-18 22:31:38 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-18 22:31:38 -==> Parameters: 
2019-03-18 22:31:38 -<==      Total: 10
2019-03-18 22:31:38 -耗时 : 266
2019-03-18 22:31:38 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-18 22:31:42 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-03-18 22:31:42 -HTTP METHOD : GET
2019-03-18 22:31:42 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-18 22:31:42 -参数 : [1, {}]
2019-03-18 22:31:42 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-18 22:31:42 -==> Parameters: 1(Long)
2019-03-18 22:31:42 -<==      Total: 1
2019-03-18 22:31:42 -耗时 : 13
2019-03-18 22:31:42 -返回值 : system/role/edit
2019-03-18 22:31:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:31:42 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 13(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-18 22:31:42.776(Timestamp)
2019-03-18 22:31:42 -<==    Updates: 1
2019-03-18 22:31:43 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-03-18 22:31:43 -HTTP METHOD : GET
2019-03-18 22:31:43 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-18 22:31:43 -参数 : [1]
2019-03-18 22:31:43 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-18 22:31:43 -==> Parameters: 
2019-03-18 22:31:43 -<==      Total: 106
2019-03-18 22:31:43 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-18 22:31:43 -==> Parameters: 1(Long)
2019-03-18 22:31:43 -<==      Total: 102
2019-03-18 22:31:43 -耗时 : 67
2019-03-18 22:31:43 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-18 22:31:52 -请求地址 : http://localhost:8081/sys/role/update
2019-03-18 22:31:52 -HTTP METHOD : POST
2019-03-18 22:31:52 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-03-18 22:31:52 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 155, 112, 111, 110, 109, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 149, 108, 120, 117, 105, 116, 113, 104, 124, 121, 103, 97, 27, 91, 85, 84, 73, 7, 6, 2, 3, 78, 1, 160, 77, -1, 106]}]
2019-03-18 22:31:52 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-03-18 22:31:52 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-03-18 22:31:53 -<==    Updates: 1
2019-03-18 22:31:53 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-03-18 22:31:53 -==> Parameters: 1(Long)
2019-03-18 22:31:53 -<==    Updates: 102
2019-03-18 22:31:53 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) , (?,?) 
2019-03-18 22:31:53 -==> Parameters: 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 109(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 149(Long), 1(Long), 108(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 97(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 160(Long), 1(Long), 77(Long), 1(Long), -1(Long), 1(Long), 106(Long)
2019-03-18 22:31:53 -<==    Updates: 102
2019-03-18 22:31:53 -耗时 : 649
2019-03-18 22:31:53 -返回值 : {msg=操作成功, code=0}
2019-03-18 22:31:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:31:53 -==> Parameters: 1(Long), admin(String), 更新角色(String), 649(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-03-18 22:31:53.438(Timestamp)
2019-03-18 22:31:53 -<==    Updates: 1
2019-03-18 22:31:53 -请求地址 : http://localhost:8081/sys/role/list
2019-03-18 22:31:53 -HTTP METHOD : GET
2019-03-18 22:31:53 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-18 22:31:53 -参数 : []
2019-03-18 22:31:53 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-18 22:31:53 -==> Parameters: 
2019-03-18 22:31:53 -<==      Total: 10
2019-03-18 22:31:53 -耗时 : 8
2019-03-18 22:31:53 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-18 22:31:57 -请求地址 : http://localhost:8081/index
2019-03-18 22:31:57 -HTTP METHOD : GET
2019-03-18 22:31:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-18 22:31:57 -参数 : [{}]
2019-03-18 22:31:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-18 22:31:57 -==> Parameters: 1(Long)
2019-03-18 22:31:57 -<==      Total: 45
2019-03-18 22:31:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-18 22:31:57 -==> Parameters: 138(Long)
2019-03-18 22:31:57 -<==      Total: 1
2019-03-18 22:31:57 -耗时 : 64
2019-03-18 22:31:57 -返回值 : index_v1
2019-03-18 22:31:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-18 22:31:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 64(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-18 22:31:57.933(Timestamp)
2019-03-18 22:31:58 -<==    Updates: 1
2019-03-18 22:31:58 -请求地址 : http://localhost:8081/main
2019-03-18 22:31:58 -HTTP METHOD : GET
2019-03-18 22:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:31:58 -参数 : []
2019-03-18 22:31:58 -耗时 : 0
2019-03-18 22:31:58 -返回值 : main
2019-03-18 22:31:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-18 22:31:58 -HTTP METHOD : GET
2019-03-18 22:31:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-18 22:31:58 -参数 : []
2019-03-18 22:31:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-18 22:31:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-18 22:31:58 -<==      Total: 0
2019-03-18 22:31:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-18 22:31:58 -==> Parameters: 1(Long), 0(String)
2019-03-18 22:31:58 -<==      Total: 1
2019-03-18 22:31:58 -耗时 : 14
2019-03-18 22:31:58 -返回值 : com.bootdo.common.utils.PageUtils@377d5fd4
2019-03-18 22:31:58 -请求地址 : http://localhost:8081/main
2019-03-18 22:31:58 -HTTP METHOD : GET
2019-03-18 22:31:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-18 22:31:58 -参数 : []
2019-03-18 22:31:58 -耗时 : 3
2019-03-18 22:31:58 -返回值 : main
2019-03-18 22:32:02 -请求地址 : http://localhost:8081/common/long
2019-03-18 22:32:02 -HTTP METHOD : GET
2019-03-18 22:32:02 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-18 22:32:02 -参数 : []
2019-03-18 22:32:02 -耗时 : 0
2019-03-18 22:32:02 -返回值 : common/job/Long
2019-03-18 22:32:09 -请求地址 : http://localhost:8081/charts/countDD
2019-03-18 22:32:09 -HTTP METHOD : GET
2019-03-18 22:32:09 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-18 22:32:09 -参数 : []
2019-03-18 22:32:09 -耗时 : 0
2019-03-18 22:32:09 -返回值 : charts/countDD
2019-03-18 22:33:35 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-18 22:33:35 -HTTP METHOD : GET
2019-03-18 22:33:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-18 22:33:35 -参数 : []
2019-03-18 22:33:35 -耗时 : 1
2019-03-18 22:33:35 -返回值 : elec/elecInto/elecInto
2019-03-18 22:34:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-18 22:34:39 -HTTP METHOD : GET
2019-03-18 22:34:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-18 22:34:39 -参数 : []
2019-03-18 22:34:39 -耗时 : 0
2019-03-18 22:34:39 -返回值 : system/dept/deptTree
2019-03-18 22:34:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-18 22:34:40 -HTTP METHOD : GET
2019-03-18 22:34:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-18 22:34:40 -参数 : []
2019-03-18 22:34:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-18 22:34:40 -==> Parameters: 
2019-03-18 22:34:40 -<==      Total: 3
2019-03-18 22:34:40 -耗时 : 6
2019-03-18 22:34:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-18 22:34:43 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 22:34:43 -HTTP METHOD : POST
2019-03-18 22:34:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 22:34:43 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@184dd874, com.bootdo.elec.vo.ElecVo@2e715747]
2019-03-18 22:34:43 -耗时 : 39
2019-03-18 22:34:43 -返回值 : {result=success}
2019-03-18 22:35:39 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 22:35:39 -HTTP METHOD : POST
2019-03-18 22:35:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 22:35:39 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@72ba0709, com.bootdo.elec.vo.ElecVo@289be0c2]
2019-03-18 22:35:41 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and USER_ID = ? and USER_NAME = ? 
2019-03-18 22:35:41 -==> Parameters: 100(BigDecimal), WS-0098(String), 四季度(String)
2019-03-18 22:35:41 -<==    Updates: 0
2019-03-18 22:35:42 -耗时 : 2967
2019-03-18 22:35:42 -返回值 : {result=success}
2019-03-18 22:38:13 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 22:38:13 -HTTP METHOD : POST
2019-03-18 22:38:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 22:38:13 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19d8663f, com.bootdo.elec.vo.ElecVo@2478aa4b]
2019-03-18 22:38:13 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and USER_ID = ? and USER_NAME = ? 
2019-03-18 22:38:13 -==> Parameters: 100(BigDecimal), WS-0098(String), 四季度(String)
2019-03-18 22:38:13 -<==    Updates: 0
2019-03-18 22:38:13 -耗时 : 155
2019-03-18 22:38:13 -返回值 : {result=notExcel}
2019-03-18 22:38:17 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-18 22:38:17 -HTTP METHOD : POST
2019-03-18 22:38:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-18 22:38:17 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@15c3daba, com.bootdo.elec.vo.ElecVo@31b6d364]
2019-03-18 22:38:17 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and USER_ID = ? and USER_NAME = ? 
2019-03-18 22:38:17 -==> Parameters: 100(BigDecimal), WS-0098(String), 四季度(String)
2019-03-18 22:38:17 -<==    Updates: 0
2019-03-18 22:38:17 -耗时 : 146
2019-03-18 22:38:17 -返回值 : {result=notExcel}
2019-03-18 22:41:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 22:41:08 -==> Parameters: 1(Long)
2019-03-18 22:41:08 -<==      Total: 85
2019-03-18 22:41:08 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-18 22:41:08 -HTTP METHOD : GET
2019-03-18 22:41:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-18 22:41:08 -参数 : []
2019-03-18 22:41:08 -耗时 : 0
2019-03-18 22:41:08 -返回值 : elec/elecPrice/elecPrice
2019-03-18 22:41:09 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-18 22:41:09 -HTTP METHOD : GET
2019-03-18 22:41:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-18 22:41:09 -参数 : [{limit=10, offset=0}]
2019-03-18 22:41:09 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-18 22:41:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 22:41:09 -<==      Total: 2
2019-03-18 22:41:09 -==>  Preparing: select count(*) from elec_price 
2019-03-18 22:41:09 -==> Parameters: 
2019-03-18 22:41:09 -<==      Total: 1
2019-03-18 22:41:09 -耗时 : 236
2019-03-18 22:41:09 -返回值 : com.bootdo.common.utils.PageUtils@6be70e32
2019-03-18 22:43:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-18 22:43:23 -HTTP METHOD : GET
2019-03-18 22:43:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-18 22:43:23 -参数 : []
2019-03-18 22:43:23 -耗时 : 1
2019-03-18 22:43:23 -返回值 : /moneyList/moneyList
2019-03-18 22:59:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 437]
2019-03-18 23:01:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-18 23:01:47 -==> Parameters: 1(Long)
2019-03-18 23:01:47 -<==      Total: 85
2019-03-18 23:01:47 -请求地址 : http://localhost:8081/elec/elec
2019-03-18 23:01:47 -HTTP METHOD : GET
2019-03-18 23:01:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-18 23:01:47 -参数 : []
2019-03-18 23:01:47 -耗时 : 0
2019-03-18 23:01:47 -返回值 : elec/elec/elec
2019-03-18 23:01:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-18 23:01:48 -HTTP METHOD : GET
2019-03-18 23:01:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-18 23:01:48 -参数 : [userType]
2019-03-18 23:01:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-18 23:01:48 -==> Parameters: userType(String)
2019-03-18 23:01:48 -<==      Total: 2
2019-03-18 23:01:48 -耗时 : 9
2019-03-18 23:01:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-18 23:01:48 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 23:01:48 -HTTP METHOD : GET
2019-03-18 23:01:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 23:01:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@c7a09a1]
2019-03-18 23:01:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 23:01:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 23:01:48 -<==      Total: 10
2019-03-18 23:01:48 -==>  Preparing: select count(*) from elec 
2019-03-18 23:01:48 -==> Parameters: 
2019-03-18 23:01:48 -<==      Total: 1
2019-03-18 23:01:48 -耗时 : 17
2019-03-18 23:01:48 -返回值 : com.bootdo.common.utils.PageUtils@76c02b91
2019-03-18 23:02:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 23:02:03 -HTTP METHOD : GET
2019-03-18 23:02:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 23:02:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@6785e959]
2019-03-18 23:02:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-18 23:02:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 23:02:03 -<==      Total: 2
2019-03-18 23:02:03 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-18 23:02:03 -==> Parameters: 
2019-03-18 23:02:03 -<==      Total: 1
2019-03-18 23:02:03 -耗时 : 14
2019-03-18 23:02:03 -返回值 : com.bootdo.common.utils.PageUtils@1567d659
2019-03-18 23:02:05 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-18 23:02:05 -HTTP METHOD : GET
2019-03-18 23:02:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-18 23:02:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@78f0fc37]
2019-03-18 23:02:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-18 23:02:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-18 23:02:05 -<==      Total: 10
2019-03-18 23:02:05 -==>  Preparing: select count(*) from elec 
2019-03-18 23:02:05 -==> Parameters: 
2019-03-18 23:02:05 -<==      Total: 1
2019-03-18 23:02:05 -耗时 : 22
2019-03-18 23:02:05 -返回值 : com.bootdo.common.utils.PageUtils@7b074689

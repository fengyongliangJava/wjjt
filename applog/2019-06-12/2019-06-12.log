2019-06-12 10:00:08 -Starting BootdoApplication on PC-201905091110 with PID 9468 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 10:00:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 10:00:08 -The following profiles are active: dev
2019-06-12 10:00:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Wed Jun 12 10:00:08 CST 2019]; root of context hierarchy
2019-06-12 10:00:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 10:00:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf67b4f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b1c0e399] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 10:00:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 10:00:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:00:20 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 10:00:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 10:00:20 -Starting service [Tomcat]
2019-06-12 10:00:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 10:00:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 10:00:21 -Initializing Spring embedded WebApplicationContext
2019-06-12 10:00:21 -Root WebApplicationContext: initialization completed in 12063 ms
2019-06-12 10:00:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 10:00:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 10:00:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 10:00:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 10:00:21 -Filter xssFilter was not registered (disabled)
2019-06-12 10:00:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 10:00:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 10:00:21 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 10:00:21 -Servlet dispatcherServlet mapped to [/]
2019-06-12 10:00:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Wed Jun 12 10:00:08 CST 2019]; root of context hierarchy
2019-06-12 10:00:26 -Using default implementation for ThreadExecutor
2019-06-12 10:00:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 10:00:26 -Quartz Scheduler v.2.3.0 created.
2019-06-12 10:00:26 -RAMJobStore initialized.
2019-06-12 10:00:26 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 10:00:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 10:00:26 -Quartz scheduler version: 2.3.0
2019-06-12 10:00:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2bd7f686
2019-06-12 10:00:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 10:00:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 10:00:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 10:00:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 10:00:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 10:00:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 10:00:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 10:00:30 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 10:00:30 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 10:00:30 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 10:00:30 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 10:00:30 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 10:00:30 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 10:00:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 10:00:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 10:00:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 10:00:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 10:00:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 10:00:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:00:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 10:00:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:00:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 10:00:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 10:00:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 10:00:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 10:00:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 10:00:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 10:00:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 10:00:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 10:00:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 10:00:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 10:00:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 10:00:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 10:00:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 10:00:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 10:00:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 10:00:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 10:00:30 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 10:00:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 10:00:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 10:00:30 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 10:00:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 10:00:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 10:00:30 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 10:00:30 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 10:00:30 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogUpLoad()
2019-06-12 10:00:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 10:00:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:00:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:00:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 10:00:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 10:00:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 10:00:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 10:00:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 10:00:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 10:00:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 10:00:30 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 10:00:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 10:00:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 10:00:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 10:00:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 10:00:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 10:00:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 10:00:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 10:00:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 10:00:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 10:00:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 10:00:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 10:00:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 10:00:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 10:00:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 10:00:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 10:00:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 10:00:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 10:00:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 10:00:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 10:00:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:00:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:00:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 10:00:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 10:00:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 10:00:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 10:00:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 10:00:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 10:00:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:00:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 10:00:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:00:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:00:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 10:00:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:00:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 10:00:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 10:00:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 10:00:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 10:00:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 10:00:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 10:00:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:00:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Wed Jun 12 10:00:08 CST 2019]; root of context hierarchy
2019-06-12 10:00:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:00:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:00:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 10:00:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 10:00:42 -Registering beans for JMX exposure on startup
2019-06-12 10:00:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 10:00:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 10:00:42 -Starting beans in phase 2147483647
2019-06-12 10:00:42 -Context refreshed
2019-06-12 10:00:42 -Found 1 custom documentation plugin(s)
2019-06-12 10:00:43 -Scanning for api listing references
2019-06-12 10:00:43 -Generating unique operation named: removeUsingPOST_1
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_2
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_3
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPUT_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 10:00:44 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_2
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_2
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_2
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_4
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_5
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_2
2019-06-12 10:00:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_3
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_3
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_3
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_6
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_7
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingGET_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPUT_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 10:00:44 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_4
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_4
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_4
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_8
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_9
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingGET_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPUT_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 10:00:44 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 10:00:44 -Generating unique operation named: ElecUsingGET_1
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_5
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_5
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_5
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_10
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_11
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingGET_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPUT_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 10:00:44 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_6
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_6
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_6
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_6
2019-06-12 10:00:44 -Generating unique operation named: editUsingGET_7
2019-06-12 10:00:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 10:00:44 -Generating unique operation named: listUsingGET_7
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_12
2019-06-12 10:00:44 -Generating unique operation named: removeUsingPOST_13
2019-06-12 10:00:44 -Generating unique operation named: saveUsingPOST_6
2019-06-12 10:00:44 -Generating unique operation named: updateUsingGET_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPOST_7
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPUT_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 10:00:44 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 10:00:44 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 10:00:44 -Generating unique operation named: addUsingGET_7
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_8
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_8
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_14
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_15
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingGET_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPUT_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 10:00:45 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_8
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_9
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_9
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_16
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_17
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingGET_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPUT_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 10:00:45 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_9
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_10
2019-06-12 10:00:45 -Generating unique operation named: infoUsingGET_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingPOST_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingPUT_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 10:00:45 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_10
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_18
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_19
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_10
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_11
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_20
2019-06-12 10:00:45 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_10
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_11
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_12
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_21
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_10
2019-06-12 10:00:45 -Generating unique operation named: treeUsingGET_1
2019-06-12 10:00:45 -Generating unique operation named: treeUsingGET_2
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_11
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_11
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_12
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_13
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_22
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_23
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_12
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_12
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_13
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_14
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_24
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_25
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_11
2019-06-12 10:00:45 -Generating unique operation named: updateUsingGET_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_13
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPUT_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 10:00:45 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_13
2019-06-12 10:00:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_14
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_15
2019-06-12 10:00:45 -Generating unique operation named: printEditUsingGET_1
2019-06-12 10:00:45 -Generating unique operation named: removeUsingPOST_26
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_12
2019-06-12 10:00:45 -Generating unique operation named: updateUsingGET_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_14
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPUT_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 10:00:45 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 10:00:45 -Generating unique operation named: addUsingGET_14
2019-06-12 10:00:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 10:00:45 -Generating unique operation named: editUsingGET_15
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_16
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_13
2019-06-12 10:00:45 -Generating unique operation named: saveUsingPOST_14
2019-06-12 10:00:45 -Generating unique operation named: updateUsingPOST_15
2019-06-12 10:00:45 -Generating unique operation named: listUsingGET_17
2019-06-12 10:00:45 -Generating unique operation named: listUsingHEAD_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingPOST_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingPUT_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingPATCH_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingDELETE_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 10:00:45 -Generating unique operation named: listUsingTRACE_1
2019-06-12 10:00:46 -Generating unique operation named: countDDUsingGET_1
2019-06-12 10:00:46 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 10:00:46 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 10:00:46 -Generating unique operation named: addUsingGET_15
2019-06-12 10:00:46 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 10:00:46 -Generating unique operation named: editUsingGET_16
2019-06-12 10:00:46 -Generating unique operation named: listUsingGET_18
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_27
2019-06-12 10:00:46 -Generating unique operation named: saveUsingPOST_15
2019-06-12 10:00:46 -Generating unique operation named: treeUsingGET_3
2019-06-12 10:00:46 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPOST_16
2019-06-12 10:00:46 -Generating unique operation named: addUsingGET_16
2019-06-12 10:00:46 -Generating unique operation named: editUsingGET_17
2019-06-12 10:00:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 10:00:46 -Generating unique operation named: listUsingGET_19
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_28
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_29
2019-06-12 10:00:46 -Generating unique operation named: saveUsingPOST_16
2019-06-12 10:00:46 -Generating unique operation named: updateUsingGET_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPOST_17
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPUT_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 10:00:46 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 10:00:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 10:00:46 -Generating unique operation named: addUsingGET_17
2019-06-12 10:00:46 -Generating unique operation named: editUsingGET_18
2019-06-12 10:00:46 -Generating unique operation named: listUsingGET_20
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_30
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_31
2019-06-12 10:00:46 -Generating unique operation named: saveUsingPOST_17
2019-06-12 10:00:46 -Generating unique operation named: updateUsingGET_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPOST_18
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPUT_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 10:00:46 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 10:00:46 -Generating unique operation named: addUsingGET_18
2019-06-12 10:00:46 -Generating unique operation named: editUsingGET_19
2019-06-12 10:00:46 -Generating unique operation named: listUsingGET_21
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_32
2019-06-12 10:00:46 -Generating unique operation named: removeUsingPOST_33
2019-06-12 10:00:46 -Generating unique operation named: saveUsingPOST_18
2019-06-12 10:00:46 -Generating unique operation named: updateUsingGET_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPOST_19
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPUT_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 10:00:46 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 10:00:46 -Starting Quartz Scheduler now
2019-06-12 10:00:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 10:00:46 -Starting...
2019-06-12 10:00:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 10:00:46 -Started.
2019-06-12 10:00:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 10:00:46 -Using a shared selector for servlet write/read
2019-06-12 10:00:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 10:00:46 -Started BootdoApplication in 40.673 seconds (JVM running for 43.368)
2019-06-12 10:00:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 10:00:47 -==> Parameters: 
2019-06-12 10:00:47 -<==      Total: 1
2019-06-12 10:01:31 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 10:01:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 10:01:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 10:01:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 211 ms
2019-06-12 10:01:44 -Enabling session validation scheduler...
2019-06-12 10:01:44 -请求地址 : http://localhost:8081/login;JSESSIONID=29939fa2-83d5-43e0-a8be-58b64212194c
2019-06-12 10:01:44 -HTTP METHOD : GET
2019-06-12 10:01:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:01:44 -参数 : [{}]
2019-06-12 10:01:44 -耗时 : 5
2019-06-12 10:01:44 -返回值 : login
2019-06-12 10:01:50 -请求地址 : http://localhost:8081/getVerify
2019-06-12 10:01:50 -HTTP METHOD : GET
2019-06-12 10:01:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 10:01:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1782ef33, org.apache.shiro.web.servlet.ShiroHttpServletResponse@24554fbf]
2019-06-12 10:01:57 -3673
2019-06-12 10:01:57 -耗时 : 6525
2019-06-12 10:01:57 -返回值 : null
2019-06-12 10:02:01 -请求地址 : http://localhost:8081/login
2019-06-12 10:02:01 -HTTP METHOD : POST
2019-06-12 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 10:02:01 -参数 : [admin, 111111, 3673, org.apache.shiro.web.servlet.ShiroHttpServletRequest@160dca5f]
2019-06-12 10:02:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 10:02:02 -==> Parameters: admin(String)
2019-06-12 10:02:02 -<==      Total: 1
2019-06-12 10:02:02 -耗时 : 299
2019-06-12 10:02:02 -返回值 : {msg=操作成功, code=0}
2019-06-12 10:02:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 10:02:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:02:02 -==> Parameters: 1(Long), admin(String), 登录(String), 299(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 10:02:02.62(Timestamp)
2019-06-12 10:02:02 -<==    Updates: 1
2019-06-12 10:02:03 -请求地址 : http://localhost:8081/index
2019-06-12 10:02:03 -HTTP METHOD : GET
2019-06-12 10:02:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:02:03 -参数 : [{}]
2019-06-12 10:02:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:02:03 -==> Parameters: 1(Long)
2019-06-12 10:02:03 -<==      Total: 50
2019-06-12 10:02:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:02:03 -==> Parameters: 138(Long)
2019-06-12 10:02:03 -<==      Total: 1
2019-06-12 10:02:03 -耗时 : 204
2019-06-12 10:02:03 -返回值 : index_v1
2019-06-12 10:02:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:02:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 205(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-06-12 10:02:03.476(Timestamp)
2019-06-12 10:02:03 -<==    Updates: 1
2019-06-12 10:02:03 -请求地址 : http://localhost:8081/main
2019-06-12 10:02:03 -HTTP METHOD : GET
2019-06-12 10:02:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:02:03 -参数 : []
2019-06-12 10:02:03 -耗时 : 1
2019-06-12 10:02:03 -返回值 : main
2019-06-12 10:02:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:02:06 -HTTP METHOD : GET
2019-06-12 10:02:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:02:06 -参数 : []
2019-06-12 10:02:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:02:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:02:06 -<==      Total: 0
2019-06-12 10:02:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:02:06 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:02:06 -<==      Total: 1
2019-06-12 10:02:06 -耗时 : 80
2019-06-12 10:02:06 -返回值 : com.bootdo.common.utils.PageUtils@49ddb1a6
2019-06-12 10:02:07 -请求地址 : http://localhost:8081/main
2019-06-12 10:02:07 -HTTP METHOD : GET
2019-06-12 10:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:02:07 -参数 : []
2019-06-12 10:02:07 -耗时 : 1
2019-06-12 10:02:07 -返回值 : main
2019-06-12 10:02:59 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 10:03:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 10:03:03 -==> Parameters: 1(Long)
2019-06-12 10:03:03 -<==      Total: 94
2019-06-12 10:03:03 -请求地址 : http://localhost:8081/sys/role
2019-06-12 10:03:03 -HTTP METHOD : GET
2019-06-12 10:03:03 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-06-12 10:03:03 -参数 : []
2019-06-12 10:03:03 -耗时 : 0
2019-06-12 10:03:03 -返回值 : system/role/role
2019-06-12 10:03:05 -请求地址 : http://localhost:8081/sys/role/list
2019-06-12 10:03:05 -HTTP METHOD : GET
2019-06-12 10:03:05 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-06-12 10:03:05 -参数 : []
2019-06-12 10:03:05 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-06-12 10:03:05 -==> Parameters: 
2019-06-12 10:03:06 -<==      Total: 10
2019-06-12 10:03:06 -耗时 : 550
2019-06-12 10:03:06 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-06-12 10:03:08 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-06-12 10:03:08 -HTTP METHOD : GET
2019-06-12 10:03:08 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-06-12 10:03:08 -参数 : [1, {}]
2019-06-12 10:03:08 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-06-12 10:03:08 -==> Parameters: 1(Long)
2019-06-12 10:03:08 -<==      Total: 1
2019-06-12 10:03:08 -耗时 : 7
2019-06-12 10:03:08 -返回值 : system/role/edit
2019-06-12 10:03:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:03:08 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 7(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-06-12 10:03:08.975(Timestamp)
2019-06-12 10:03:09 -<==    Updates: 1
2019-06-12 10:03:09 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-06-12 10:03:09 -HTTP METHOD : GET
2019-06-12 10:03:09 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-06-12 10:03:09 -参数 : [1]
2019-06-12 10:03:09 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-06-12 10:03:09 -==> Parameters: 
2019-06-12 10:03:09 -<==      Total: 111
2019-06-12 10:03:09 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-06-12 10:03:09 -==> Parameters: 1(Long)
2019-06-12 10:03:09 -<==      Total: 111
2019-06-12 10:03:09 -耗时 : 56
2019-06-12 10:03:09 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","state":{"selected":false},"text":"缴费上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","state":{"selected":true},"text":"乌镇管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","state":{"selected":true},"text":"年统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","state":{"selected":true},"text":"月统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","state":{"selected":true},"text":"日统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-12 10:03:18 -请求地址 : http://localhost:8081/sys/role/update
2019-06-12 10:03:18 -HTTP METHOD : POST
2019-06-12 10:03:18 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-06-12 10:03:18 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 164, 159, 158, 157, 156, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 163, 162, 161, 155, 112, 111, 110, 109, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 149, 108, 107, 120, 117, 105, 116, 113, 104, 124, 121, 103, 97, 27, 91, 85, 84, 77, 73, 7, 6, 2, 3, 78, 1, 165, 106, -1]}]
2019-06-12 10:03:18 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-06-12 10:03:18 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-06-12 10:03:18 -<==    Updates: 1
2019-06-12 10:03:18 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-06-12 10:03:18 -==> Parameters: 1(Long)
2019-06-12 10:03:18 -<==    Updates: 111
2019-06-12 10:03:19 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-06-12 10:03:19 -==> Parameters: 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 164(Long), 1(Long), 159(Long), 1(Long), 158(Long), 1(Long), 157(Long), 1(Long), 156(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 163(Long), 1(Long), 162(Long), 1(Long), 161(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 109(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 160(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 149(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 97(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 77(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 165(Long), 1(Long), 106(Long), 1(Long), -1(Long)
2019-06-12 10:03:19 -<==    Updates: 112
2019-06-12 10:03:19 -耗时 : 1259
2019-06-12 10:03:19 -返回值 : {msg=操作成功, code=0}
2019-06-12 10:03:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:03:19 -==> Parameters: 1(Long), admin(String), 更新角色(String), 1259(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-06-12 10:03:19.347(Timestamp)
2019-06-12 10:03:19 -请求地址 : http://localhost:8081/sys/role/list
2019-06-12 10:03:19 -HTTP METHOD : GET
2019-06-12 10:03:19 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-06-12 10:03:19 -参数 : []
2019-06-12 10:03:19 -<==    Updates: 1
2019-06-12 10:03:19 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-06-12 10:03:19 -==> Parameters: 
2019-06-12 10:03:19 -<==      Total: 10
2019-06-12 10:03:19 -耗时 : 65
2019-06-12 10:03:19 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-06-12 10:03:21 -请求地址 : http://localhost:8081/index
2019-06-12 10:03:21 -HTTP METHOD : GET
2019-06-12 10:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:03:21 -参数 : [{}]
2019-06-12 10:03:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:03:21 -==> Parameters: 1(Long)
2019-06-12 10:03:21 -<==      Total: 51
2019-06-12 10:03:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:03:21 -==> Parameters: 138(Long)
2019-06-12 10:03:21 -<==      Total: 1
2019-06-12 10:03:21 -耗时 : 431
2019-06-12 10:03:21 -返回值 : index_v1
2019-06-12 10:03:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:03:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 431(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:03:21.82(Timestamp)
2019-06-12 10:03:21 -<==    Updates: 1
2019-06-12 10:03:21 -请求地址 : http://localhost:8081/main
2019-06-12 10:03:21 -HTTP METHOD : GET
2019-06-12 10:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:03:21 -参数 : []
2019-06-12 10:03:21 -耗时 : 1
2019-06-12 10:03:21 -返回值 : main
2019-06-12 10:03:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:03:22 -HTTP METHOD : GET
2019-06-12 10:03:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:03:22 -参数 : []
2019-06-12 10:03:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:03:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:03:22 -<==      Total: 0
2019-06-12 10:03:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:03:22 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:03:22 -<==      Total: 1
2019-06-12 10:03:22 -耗时 : 15
2019-06-12 10:03:22 -返回值 : com.bootdo.common.utils.PageUtils@6e5e88fb
2019-06-12 10:03:22 -请求地址 : http://localhost:8081/main
2019-06-12 10:03:22 -HTTP METHOD : GET
2019-06-12 10:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:03:22 -参数 : []
2019-06-12 10:03:22 -耗时 : 0
2019-06-12 10:03:22 -返回值 : main
2019-06-12 10:03:24 -Subject does not have permission [moneyUpLoad:ElecLogUpLoad]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyUpLoad:ElecLogUpLoad]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController$$EnhancerBySpringCGLIB$$a5c44be0.ElecLogUpLoad(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 77 common frames omitted
2019-06-12 10:04:22 -请求地址 : http://localhost:8081/sys/role
2019-06-12 10:04:22 -HTTP METHOD : GET
2019-06-12 10:04:22 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-06-12 10:04:22 -参数 : []
2019-06-12 10:04:22 -耗时 : 0
2019-06-12 10:04:22 -返回值 : system/role/role
2019-06-12 10:04:23 -请求地址 : http://localhost:8081/sys/role/list
2019-06-12 10:04:23 -HTTP METHOD : GET
2019-06-12 10:04:23 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-06-12 10:04:23 -参数 : []
2019-06-12 10:04:23 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-06-12 10:04:23 -==> Parameters: 
2019-06-12 10:04:23 -<==      Total: 10
2019-06-12 10:04:23 -耗时 : 26
2019-06-12 10:04:23 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-06-12 10:04:25 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-06-12 10:04:25 -HTTP METHOD : GET
2019-06-12 10:04:25 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-06-12 10:04:25 -参数 : [1, {}]
2019-06-12 10:04:25 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-06-12 10:04:25 -==> Parameters: 1(Long)
2019-06-12 10:04:25 -<==      Total: 1
2019-06-12 10:04:25 -耗时 : 3
2019-06-12 10:04:25 -返回值 : system/role/edit
2019-06-12 10:04:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:04:25 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 3(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-06-12 10:04:25.912(Timestamp)
2019-06-12 10:04:26 -<==    Updates: 1
2019-06-12 10:04:26 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-06-12 10:04:26 -HTTP METHOD : GET
2019-06-12 10:04:26 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-06-12 10:04:26 -参数 : [1]
2019-06-12 10:04:26 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-06-12 10:04:26 -==> Parameters: 
2019-06-12 10:04:26 -<==      Total: 111
2019-06-12 10:04:26 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-06-12 10:04:26 -==> Parameters: 1(Long)
2019-06-12 10:04:26 -<==      Total: 112
2019-06-12 10:04:26 -耗时 : 36
2019-06-12 10:04:26 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","state":{"selected":true},"text":"缴费上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","state":{"selected":true},"text":"乌镇管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","state":{"selected":true},"text":"年统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","state":{"selected":true},"text":"月统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","state":{"selected":true},"text":"日统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-12 10:04:31 -请求地址 : http://localhost:8081/sys/menu/
2019-06-12 10:04:31 -HTTP METHOD : GET
2019-06-12 10:04:31 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-06-12 10:04:31 -参数 : [{}]
2019-06-12 10:04:31 -耗时 : 1
2019-06-12 10:04:31 -返回值 : system/menu/menu
2019-06-12 10:04:31 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-12 10:04:31 -HTTP METHOD : GET
2019-06-12 10:04:31 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-12 10:04:31 -参数 : [{sort=order_num}]
2019-06-12 10:04:31 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-12 10:04:31 -==> Parameters: 
2019-06-12 10:04:31 -<==      Total: 111
2019-06-12 10:04:31 -耗时 : 42
2019-06-12 10:04:31 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-12 10:05:26 -请求地址 : http://localhost:8081/login;JSESSIONID=35bf49db-81dc-49bb-9884-0089d31d0a4b
2019-06-12 10:05:26 -HTTP METHOD : GET
2019-06-12 10:05:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:05:26 -参数 : [{}]
2019-06-12 10:05:26 -耗时 : 1
2019-06-12 10:05:26 -返回值 : login
2019-06-12 10:05:28 -请求地址 : http://localhost:8081/getVerify
2019-06-12 10:05:28 -HTTP METHOD : GET
2019-06-12 10:05:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 10:05:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bd91a4c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a21c226]
2019-06-12 10:05:28 -6270
2019-06-12 10:05:28 -耗时 : 26
2019-06-12 10:05:28 -返回值 : null
2019-06-12 10:05:28 -请求地址 : http://localhost:8081/login
2019-06-12 10:05:28 -HTTP METHOD : GET
2019-06-12 10:05:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:05:28 -参数 : [{}]
2019-06-12 10:05:28 -耗时 : 0
2019-06-12 10:05:28 -返回值 : login
2019-06-12 10:05:33 -请求地址 : http://localhost:8081/login
2019-06-12 10:05:33 -HTTP METHOD : POST
2019-06-12 10:05:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 10:05:33 -参数 : [admin, 111111, 6270, org.apache.shiro.web.servlet.ShiroHttpServletRequest@34f8de02]
2019-06-12 10:05:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 10:05:33 -==> Parameters: admin(String)
2019-06-12 10:05:33 -<==      Total: 1
2019-06-12 10:05:33 -耗时 : 9
2019-06-12 10:05:33 -返回值 : {msg=操作成功, code=0}
2019-06-12 10:05:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:05:33 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 10:05:33.717(Timestamp)
2019-06-12 10:05:33 -请求地址 : http://localhost:8081/index
2019-06-12 10:05:33 -HTTP METHOD : GET
2019-06-12 10:05:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:05:33 -参数 : [{}]
2019-06-12 10:05:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:05:33 -==> Parameters: 1(Long)
2019-06-12 10:05:33 -<==    Updates: 1
2019-06-12 10:05:33 -<==      Total: 51
2019-06-12 10:05:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:05:33 -==> Parameters: 138(Long)
2019-06-12 10:05:33 -<==      Total: 1
2019-06-12 10:05:33 -耗时 : 132
2019-06-12 10:05:33 -返回值 : index_v1
2019-06-12 10:05:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:05:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 132(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:05:33.886(Timestamp)
2019-06-12 10:05:33 -<==    Updates: 1
2019-06-12 10:05:33 -请求地址 : http://localhost:8081/main
2019-06-12 10:05:33 -HTTP METHOD : GET
2019-06-12 10:05:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:05:33 -参数 : []
2019-06-12 10:05:33 -耗时 : 0
2019-06-12 10:05:33 -返回值 : main
2019-06-12 10:05:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:05:35 -HTTP METHOD : GET
2019-06-12 10:05:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:05:35 -参数 : []
2019-06-12 10:05:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:05:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:05:35 -<==      Total: 0
2019-06-12 10:05:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:05:35 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:05:35 -<==      Total: 1
2019-06-12 10:05:35 -耗时 : 6
2019-06-12 10:05:35 -返回值 : com.bootdo.common.utils.PageUtils@1dec203f
2019-06-12 10:05:35 -请求地址 : http://localhost:8081/main
2019-06-12 10:05:35 -HTTP METHOD : GET
2019-06-12 10:05:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:05:35 -参数 : []
2019-06-12 10:05:35 -耗时 : 1
2019-06-12 10:05:35 -返回值 : main
2019-06-12 10:05:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 10:05:38 -==> Parameters: 1(Long)
2019-06-12 10:05:38 -<==      Total: 95
2019-06-12 10:05:38 -[THYMELEAF][http-nio-8081-exec-2] Exception processing template "moneyUpLoad/ElecLogUpLoad": Error resolving template "moneyUpLoad/ElecLogUpLoad", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "moneyUpLoad/ElecLogUpLoad", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 10:05:38 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "moneyUpLoad/ElecLogUpLoad", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "moneyUpLoad/ElecLogUpLoad", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 10:05:53 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 10:24:05 -Starting BootdoApplication on PC-201905091110 with PID 2020 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 10:24:05 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 10:24:05 -The following profiles are active: dev
2019-06-12 10:24:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Wed Jun 12 10:24:05 CST 2019]; root of context hierarchy
2019-06-12 10:24:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 10:24:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f445fc36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e69f2add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 10:24:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 10:24:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:24:22 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 10:24:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 10:24:22 -Starting service [Tomcat]
2019-06-12 10:24:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 10:24:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 10:24:22 -Initializing Spring embedded WebApplicationContext
2019-06-12 10:24:22 -Root WebApplicationContext: initialization completed in 17252 ms
2019-06-12 10:24:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 10:24:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 10:24:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 10:24:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 10:24:23 -Filter xssFilter was not registered (disabled)
2019-06-12 10:24:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 10:24:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 10:24:23 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 10:24:23 -Servlet dispatcherServlet mapped to [/]
2019-06-12 10:24:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Wed Jun 12 10:24:05 CST 2019]; root of context hierarchy
2019-06-12 10:24:30 -Using default implementation for ThreadExecutor
2019-06-12 10:24:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 10:24:30 -Quartz Scheduler v.2.3.0 created.
2019-06-12 10:24:30 -RAMJobStore initialized.
2019-06-12 10:24:30 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 10:24:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 10:24:30 -Quartz scheduler version: 2.3.0
2019-06-12 10:24:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2fccf49e
2019-06-12 10:24:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 10:24:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 10:24:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 10:24:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 10:24:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 10:24:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 10:24:34 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 10:24:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 10:24:34 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 10:24:34 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 10:24:34 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 10:24:34 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:24:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 10:24:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 10:24:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 10:24:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 10:24:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 10:24:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 10:24:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 10:24:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 10:24:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 10:24:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:24:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 10:24:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:24:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 10:24:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 10:24:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 10:24:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 10:24:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 10:24:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 10:24:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 10:24:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 10:24:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 10:24:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 10:24:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 10:24:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 10:24:34 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 10:24:34 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 10:24:34 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:34 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:34 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:34 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 10:24:34 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:34 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 10:24:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 10:24:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:24:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 10:24:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 10:24:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 10:24:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 10:24:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:24:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 10:24:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 10:24:35 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 10:24:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 10:24:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 10:24:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 10:24:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogUpLoad()
2019-06-12 10:24:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 10:24:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 10:24:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 10:24:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 10:24:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 10:24:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 10:24:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 10:24:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 10:24:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 10:24:35 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 10:24:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 10:24:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 10:24:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 10:24:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 10:24:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 10:24:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 10:24:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 10:24:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 10:24:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 10:24:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 10:24:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 10:24:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 10:24:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 10:24:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 10:24:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 10:24:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 10:24:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 10:24:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 10:24:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:24:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:24:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 10:24:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 10:24:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 10:24:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 10:24:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 10:24:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 10:24:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:24:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 10:24:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:24:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 10:24:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:24:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:24:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 10:24:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 10:24:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 10:24:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 10:24:36 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 10:24:36 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 10:24:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:24:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76ba13c: startup date [Wed Jun 12 10:24:05 CST 2019]; root of context hierarchy
2019-06-12 10:24:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:24:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:24:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 10:24:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 10:24:40 -Registering beans for JMX exposure on startup
2019-06-12 10:24:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 10:24:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 10:24:40 -Starting beans in phase 2147483647
2019-06-12 10:24:40 -Context refreshed
2019-06-12 10:24:40 -Found 1 custom documentation plugin(s)
2019-06-12 10:24:40 -Scanning for api listing references
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_1
2019-06-12 10:24:41 -Generating unique operation named: addUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: editUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: listUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_2
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_3
2019-06-12 10:24:41 -Generating unique operation named: saveUsingPOST_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPOST_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPUT_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 10:24:41 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 10:24:41 -Generating unique operation named: addUsingGET_2
2019-06-12 10:24:41 -Generating unique operation named: editUsingGET_2
2019-06-12 10:24:41 -Generating unique operation named: listUsingGET_2
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_4
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_5
2019-06-12 10:24:41 -Generating unique operation named: saveUsingPOST_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPOST_2
2019-06-12 10:24:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: addUsingGET_3
2019-06-12 10:24:41 -Generating unique operation named: editUsingGET_3
2019-06-12 10:24:41 -Generating unique operation named: listUsingGET_3
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_6
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_7
2019-06-12 10:24:41 -Generating unique operation named: saveUsingPOST_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingGET_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPOST_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPUT_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 10:24:41 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 10:24:41 -Generating unique operation named: addUsingGET_4
2019-06-12 10:24:41 -Generating unique operation named: editUsingGET_4
2019-06-12 10:24:41 -Generating unique operation named: listUsingGET_4
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_8
2019-06-12 10:24:41 -Generating unique operation named: removeUsingPOST_9
2019-06-12 10:24:41 -Generating unique operation named: saveUsingPOST_4
2019-06-12 10:24:41 -Generating unique operation named: updateUsingGET_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPOST_4
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPUT_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 10:24:41 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 10:24:41 -Generating unique operation named: ElecUsingGET_1
2019-06-12 10:24:41 -Generating unique operation named: addUsingGET_5
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_5
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_5
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_10
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_11
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingGET_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPUT_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 10:24:42 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_6
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_6
2019-06-12 10:24:42 -Generating unique operation named: addUsingGET_6
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_7
2019-06-12 10:24:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_7
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_12
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_13
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingGET_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPUT_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 10:24:42 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 10:24:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 10:24:42 -Generating unique operation named: addUsingGET_7
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_8
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_8
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_14
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_15
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingGET_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_8
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPUT_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 10:24:42 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 10:24:42 -Generating unique operation named: addUsingGET_8
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_9
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_9
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_16
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_17
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_8
2019-06-12 10:24:42 -Generating unique operation named: updateUsingGET_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_9
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPUT_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 10:24:42 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 10:24:42 -Generating unique operation named: addUsingGET_9
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_10
2019-06-12 10:24:42 -Generating unique operation named: infoUsingGET_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingPOST_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingPUT_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 10:24:42 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_10
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_18
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_19
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_9
2019-06-12 10:24:42 -Generating unique operation named: updateUsingPOST_10
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_11
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_20
2019-06-12 10:24:42 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 10:24:42 -Generating unique operation named: addUsingGET_10
2019-06-12 10:24:42 -Generating unique operation named: editUsingGET_11
2019-06-12 10:24:42 -Generating unique operation named: listUsingGET_12
2019-06-12 10:24:42 -Generating unique operation named: removeUsingPOST_21
2019-06-12 10:24:42 -Generating unique operation named: saveUsingPOST_10
2019-06-12 10:24:42 -Generating unique operation named: treeUsingGET_1
2019-06-12 10:24:42 -Generating unique operation named: treeUsingGET_2
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_11
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_11
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_12
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_13
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_22
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_23
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_12
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_12
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_13
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_14
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_24
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_25
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingGET_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_13
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPUT_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 10:24:43 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_13
2019-06-12 10:24:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_14
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_15
2019-06-12 10:24:43 -Generating unique operation named: printEditUsingGET_1
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_26
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_12
2019-06-12 10:24:43 -Generating unique operation named: updateUsingGET_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_14
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPUT_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 10:24:43 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_14
2019-06-12 10:24:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_15
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_16
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_13
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_14
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_15
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_17
2019-06-12 10:24:43 -Generating unique operation named: listUsingHEAD_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingPOST_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingPUT_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingPATCH_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingDELETE_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 10:24:43 -Generating unique operation named: listUsingTRACE_1
2019-06-12 10:24:43 -Generating unique operation named: countDDUsingGET_1
2019-06-12 10:24:43 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 10:24:43 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_15
2019-06-12 10:24:43 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_16
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_18
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_27
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_15
2019-06-12 10:24:43 -Generating unique operation named: treeUsingGET_3
2019-06-12 10:24:43 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_16
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_16
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_17
2019-06-12 10:24:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_19
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_28
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_29
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_16
2019-06-12 10:24:43 -Generating unique operation named: updateUsingGET_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_17
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPUT_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 10:24:43 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 10:24:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_17
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_18
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_20
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_30
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_31
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_17
2019-06-12 10:24:43 -Generating unique operation named: updateUsingGET_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPOST_18
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPUT_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 10:24:43 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 10:24:43 -Generating unique operation named: addUsingGET_18
2019-06-12 10:24:43 -Generating unique operation named: editUsingGET_19
2019-06-12 10:24:43 -Generating unique operation named: listUsingGET_21
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_32
2019-06-12 10:24:43 -Generating unique operation named: removeUsingPOST_33
2019-06-12 10:24:43 -Generating unique operation named: saveUsingPOST_18
2019-06-12 10:24:44 -Generating unique operation named: updateUsingGET_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingPOST_19
2019-06-12 10:24:44 -Generating unique operation named: updateUsingPUT_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 10:24:44 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 10:24:44 -Starting Quartz Scheduler now
2019-06-12 10:24:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 10:24:44 -Starting...
2019-06-12 10:24:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 10:24:44 -Started.
2019-06-12 10:24:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 10:24:44 -Using a shared selector for servlet write/read
2019-06-12 10:24:44 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 10:24:44 -Started BootdoApplication in 41.87 seconds (JVM running for 44.858)
2019-06-12 10:24:44 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 10:24:44 -==> Parameters: 
2019-06-12 10:24:44 -<==      Total: 1
2019-06-12 10:25:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 10:25:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 10:25:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-06-12 10:25:15 -Enabling session validation scheduler...
2019-06-12 10:25:15 -请求地址 : http://localhost:8081/login;JSESSIONID=d91d26e5-1593-49f7-877f-0e6cf18da63f
2019-06-12 10:25:15 -HTTP METHOD : GET
2019-06-12 10:25:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:25:15 -参数 : [{}]
2019-06-12 10:25:15 -耗时 : 5
2019-06-12 10:25:15 -返回值 : login
2019-06-12 10:25:17 -请求地址 : http://localhost:8081/getVerify
2019-06-12 10:25:17 -HTTP METHOD : GET
2019-06-12 10:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 10:25:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f992cb7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@59a8f037]
2019-06-12 10:25:19 -5085
2019-06-12 10:25:20 -耗时 : 2986
2019-06-12 10:25:20 -返回值 : null
2019-06-12 10:25:20 -请求地址 : http://localhost:8081/login
2019-06-12 10:25:20 -HTTP METHOD : GET
2019-06-12 10:25:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:25:20 -参数 : [{}]
2019-06-12 10:25:20 -耗时 : 0
2019-06-12 10:25:20 -返回值 : login
2019-06-12 10:25:26 -请求地址 : http://localhost:8081/login
2019-06-12 10:25:26 -HTTP METHOD : POST
2019-06-12 10:25:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 10:25:26 -参数 : [admin, 111111, 5085, org.apache.shiro.web.servlet.ShiroHttpServletRequest@19e40f3d]
2019-06-12 10:25:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 10:25:26 -==> Parameters: admin(String)
2019-06-12 10:25:26 -<==      Total: 1
2019-06-12 10:25:26 -耗时 : 272
2019-06-12 10:25:26 -返回值 : {msg=操作成功, code=0}
2019-06-12 10:25:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 10:25:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:25:26 -==> Parameters: 1(Long), admin(String), 登录(String), 272(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 10:25:26.935(Timestamp)
2019-06-12 10:25:27 -请求地址 : http://localhost:8081/index
2019-06-12 10:25:27 -HTTP METHOD : GET
2019-06-12 10:25:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:25:27 -参数 : [{}]
2019-06-12 10:25:27 -<==    Updates: 1
2019-06-12 10:25:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:25:27 -==> Parameters: 1(Long)
2019-06-12 10:25:27 -<==      Total: 51
2019-06-12 10:25:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:25:27 -==> Parameters: 138(Long)
2019-06-12 10:25:27 -<==      Total: 1
2019-06-12 10:25:27 -耗时 : 407
2019-06-12 10:25:27 -返回值 : index_v1
2019-06-12 10:25:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:25:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 407(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:25:27.479(Timestamp)
2019-06-12 10:25:27 -<==    Updates: 1
2019-06-12 10:25:27 -请求地址 : http://localhost:8081/main
2019-06-12 10:25:27 -HTTP METHOD : GET
2019-06-12 10:25:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:25:27 -参数 : []
2019-06-12 10:25:27 -耗时 : 2
2019-06-12 10:25:27 -返回值 : main
2019-06-12 10:25:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:25:27 -HTTP METHOD : GET
2019-06-12 10:25:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:25:27 -参数 : []
2019-06-12 10:25:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:25:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:25:27 -<==      Total: 0
2019-06-12 10:25:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:25:28 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:25:28 -<==      Total: 1
2019-06-12 10:25:28 -耗时 : 77
2019-06-12 10:25:28 -返回值 : com.bootdo.common.utils.PageUtils@1d6370fd
2019-06-12 10:25:28 -请求地址 : http://localhost:8081/main
2019-06-12 10:25:28 -HTTP METHOD : GET
2019-06-12 10:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:25:28 -参数 : []
2019-06-12 10:25:28 -耗时 : 2
2019-06-12 10:25:28 -返回值 : main
2019-06-12 10:25:36 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-06-12 10:26:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 10:26:10 -==> Parameters: 1(Long)
2019-06-12 10:26:10 -<==      Total: 95
2019-06-12 10:26:14 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-12 10:26:14 -HTTP METHOD : GET
2019-06-12 10:26:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-12 10:26:14 -参数 : []
2019-06-12 10:26:14 -耗时 : 0
2019-06-12 10:26:14 -返回值 : moneyList/moneyList
2019-06-12 10:28:38 -Starting BootdoApplication on PC-201905091110 with PID 872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 10:28:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 10:28:38 -The following profiles are active: dev
2019-06-12 10:28:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b672daa: startup date [Wed Jun 12 10:28:38 CST 2019]; root of context hierarchy
2019-06-12 10:28:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 10:28:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$366963bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$28c29264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 10:28:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 10:28:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 10:28:46 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 10:28:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 10:28:46 -Starting service [Tomcat]
2019-06-12 10:28:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 10:28:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 10:28:47 -Initializing Spring embedded WebApplicationContext
2019-06-12 10:28:47 -Root WebApplicationContext: initialization completed in 8523 ms
2019-06-12 10:28:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 10:28:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 10:28:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 10:28:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 10:28:47 -Filter xssFilter was not registered (disabled)
2019-06-12 10:28:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 10:28:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 10:28:47 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 10:28:47 -Servlet dispatcherServlet mapped to [/]
2019-06-12 10:28:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b672daa: startup date [Wed Jun 12 10:28:38 CST 2019]; root of context hierarchy
2019-06-12 10:28:51 -Using default implementation for ThreadExecutor
2019-06-12 10:28:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 10:28:52 -Quartz Scheduler v.2.3.0 created.
2019-06-12 10:28:52 -RAMJobStore initialized.
2019-06-12 10:28:52 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 10:28:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 10:28:52 -Quartz scheduler version: 2.3.0
2019-06-12 10:28:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4ca4f762
2019-06-12 10:28:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 10:28:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 10:28:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 10:28:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 10:28:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 10:28:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 10:28:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 10:28:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 10:28:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 10:28:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 10:28:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 10:28:55 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 10:28:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 10:28:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 10:28:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 10:28:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 10:28:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 10:28:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 10:28:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:28:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 10:28:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 10:28:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 10:28:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 10:28:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 10:28:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 10:28:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 10:28:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 10:28:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 10:28:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 10:28:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 10:28:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 10:28:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 10:28:55 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 10:28:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 10:28:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 10:28:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 10:28:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 10:28:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 10:28:55 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 10:28:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 10:28:55 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 10:28:55 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogUpLoad()
2019-06-12 10:28:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 10:28:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:28:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 10:28:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 10:28:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 10:28:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 10:28:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 10:28:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 10:28:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 10:28:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 10:28:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 10:28:55 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 10:28:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 10:28:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 10:28:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 10:28:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 10:28:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 10:28:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 10:28:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 10:28:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 10:28:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 10:28:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 10:28:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 10:28:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 10:28:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 10:28:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 10:28:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 10:28:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 10:28:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 10:28:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 10:28:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:28:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 10:28:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 10:28:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 10:28:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 10:28:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 10:28:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 10:28:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 10:28:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 10:28:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 10:28:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 10:28:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 10:28:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 10:28:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 10:28:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 10:28:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 10:28:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 10:28:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 10:28:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 10:28:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:28:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4b672daa: startup date [Wed Jun 12 10:28:38 CST 2019]; root of context hierarchy
2019-06-12 10:28:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:28:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 10:28:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 10:28:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 10:28:59 -Registering beans for JMX exposure on startup
2019-06-12 10:28:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 10:28:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 10:28:59 -Starting beans in phase 2147483647
2019-06-12 10:28:59 -Context refreshed
2019-06-12 10:28:59 -Found 1 custom documentation plugin(s)
2019-06-12 10:29:00 -Scanning for api listing references
2019-06-12 10:29:00 -Generating unique operation named: removeUsingPOST_1
2019-06-12 10:29:00 -Generating unique operation named: addUsingGET_1
2019-06-12 10:29:00 -Generating unique operation named: editUsingGET_1
2019-06-12 10:29:00 -Generating unique operation named: listUsingGET_1
2019-06-12 10:29:00 -Generating unique operation named: removeUsingPOST_2
2019-06-12 10:29:00 -Generating unique operation named: removeUsingPOST_3
2019-06-12 10:29:00 -Generating unique operation named: saveUsingPOST_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingGET_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingPOST_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingPUT_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 10:29:00 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 10:29:00 -Generating unique operation named: addUsingGET_2
2019-06-12 10:29:00 -Generating unique operation named: editUsingGET_2
2019-06-12 10:29:00 -Generating unique operation named: listUsingGET_2
2019-06-12 10:29:00 -Generating unique operation named: removeUsingPOST_4
2019-06-12 10:29:00 -Generating unique operation named: removeUsingPOST_5
2019-06-12 10:29:00 -Generating unique operation named: saveUsingPOST_2
2019-06-12 10:29:00 -Generating unique operation named: updateUsingPOST_2
2019-06-12 10:29:00 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 10:29:00 -Generating unique operation named: addUsingGET_3
2019-06-12 10:29:00 -Generating unique operation named: editUsingGET_3
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_3
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_6
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_7
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_4
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_4
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_4
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_8
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_9
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 10:29:01 -Generating unique operation named: ElecUsingGET_1
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_5
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_5
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_5
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_10
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_11
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_6
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_6
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_6
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_7
2019-06-12 10:29:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_7
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_12
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_13
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 10:29:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_7
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_8
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_8
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_14
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_15
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_8
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_8
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_9
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_9
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_16
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_17
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_8
2019-06-12 10:29:01 -Generating unique operation named: updateUsingGET_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPOST_9
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPUT_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 10:29:01 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 10:29:01 -Generating unique operation named: addUsingGET_9
2019-06-12 10:29:01 -Generating unique operation named: editUsingGET_10
2019-06-12 10:29:01 -Generating unique operation named: infoUsingGET_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingPOST_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingPUT_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 10:29:01 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 10:29:01 -Generating unique operation named: listUsingGET_10
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_18
2019-06-12 10:29:01 -Generating unique operation named: removeUsingPOST_19
2019-06-12 10:29:01 -Generating unique operation named: saveUsingPOST_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_10
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_11
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_20
2019-06-12 10:29:02 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 10:29:02 -Generating unique operation named: addUsingGET_10
2019-06-12 10:29:02 -Generating unique operation named: editUsingGET_11
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_12
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_21
2019-06-12 10:29:02 -Generating unique operation named: saveUsingPOST_10
2019-06-12 10:29:02 -Generating unique operation named: treeUsingGET_1
2019-06-12 10:29:02 -Generating unique operation named: treeUsingGET_2
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_11
2019-06-12 10:29:02 -Generating unique operation named: addUsingGET_11
2019-06-12 10:29:02 -Generating unique operation named: editUsingGET_12
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_13
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_22
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_23
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_12
2019-06-12 10:29:02 -Generating unique operation named: addUsingGET_12
2019-06-12 10:29:02 -Generating unique operation named: editUsingGET_13
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_14
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_24
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_25
2019-06-12 10:29:02 -Generating unique operation named: saveUsingPOST_11
2019-06-12 10:29:02 -Generating unique operation named: updateUsingGET_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_13
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPUT_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 10:29:02 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 10:29:02 -Generating unique operation named: addUsingGET_13
2019-06-12 10:29:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 10:29:02 -Generating unique operation named: editUsingGET_14
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_15
2019-06-12 10:29:02 -Generating unique operation named: printEditUsingGET_1
2019-06-12 10:29:02 -Generating unique operation named: removeUsingPOST_26
2019-06-12 10:29:02 -Generating unique operation named: saveUsingPOST_12
2019-06-12 10:29:02 -Generating unique operation named: updateUsingGET_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_14
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPUT_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 10:29:02 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 10:29:02 -Generating unique operation named: addUsingGET_14
2019-06-12 10:29:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 10:29:02 -Generating unique operation named: editUsingGET_15
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_16
2019-06-12 10:29:02 -Generating unique operation named: saveUsingPOST_13
2019-06-12 10:29:02 -Generating unique operation named: saveUsingPOST_14
2019-06-12 10:29:02 -Generating unique operation named: updateUsingPOST_15
2019-06-12 10:29:02 -Generating unique operation named: listUsingGET_17
2019-06-12 10:29:03 -Generating unique operation named: listUsingHEAD_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingPOST_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingPUT_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingPATCH_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingDELETE_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 10:29:03 -Generating unique operation named: listUsingTRACE_1
2019-06-12 10:29:03 -Generating unique operation named: countDDUsingGET_1
2019-06-12 10:29:03 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 10:29:03 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 10:29:03 -Generating unique operation named: addUsingGET_15
2019-06-12 10:29:03 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 10:29:03 -Generating unique operation named: editUsingGET_16
2019-06-12 10:29:03 -Generating unique operation named: listUsingGET_18
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_27
2019-06-12 10:29:03 -Generating unique operation named: saveUsingPOST_15
2019-06-12 10:29:03 -Generating unique operation named: treeUsingGET_3
2019-06-12 10:29:03 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPOST_16
2019-06-12 10:29:03 -Generating unique operation named: addUsingGET_16
2019-06-12 10:29:03 -Generating unique operation named: editUsingGET_17
2019-06-12 10:29:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 10:29:03 -Generating unique operation named: listUsingGET_19
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_28
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_29
2019-06-12 10:29:03 -Generating unique operation named: saveUsingPOST_16
2019-06-12 10:29:03 -Generating unique operation named: updateUsingGET_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPOST_17
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPUT_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 10:29:03 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 10:29:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 10:29:03 -Generating unique operation named: addUsingGET_17
2019-06-12 10:29:03 -Generating unique operation named: editUsingGET_18
2019-06-12 10:29:03 -Generating unique operation named: listUsingGET_20
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_30
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_31
2019-06-12 10:29:03 -Generating unique operation named: saveUsingPOST_17
2019-06-12 10:29:03 -Generating unique operation named: updateUsingGET_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPOST_18
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPUT_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 10:29:03 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 10:29:03 -Generating unique operation named: addUsingGET_18
2019-06-12 10:29:03 -Generating unique operation named: editUsingGET_19
2019-06-12 10:29:03 -Generating unique operation named: listUsingGET_21
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_32
2019-06-12 10:29:03 -Generating unique operation named: removeUsingPOST_33
2019-06-12 10:29:03 -Generating unique operation named: saveUsingPOST_18
2019-06-12 10:29:03 -Generating unique operation named: updateUsingGET_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPOST_19
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPUT_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 10:29:03 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 10:29:03 -Starting Quartz Scheduler now
2019-06-12 10:29:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 10:29:03 -Starting...
2019-06-12 10:29:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 10:29:03 -Started.
2019-06-12 10:29:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 10:29:03 -Using a shared selector for servlet write/read
2019-06-12 10:29:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 10:29:03 -Started BootdoApplication in 27.114 seconds (JVM running for 28.584)
2019-06-12 10:29:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 10:29:04 -==> Parameters: 
2019-06-12 10:29:04 -<==      Total: 1
2019-06-12 10:29:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 10:29:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 10:29:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 10:29:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-06-12 10:29:58 -Enabling session validation scheduler...
2019-06-12 10:29:58 -请求地址 : http://localhost:8081/login;JSESSIONID=c9e5fe41-3bbf-440a-9494-49c3b721bfe1
2019-06-12 10:29:58 -HTTP METHOD : GET
2019-06-12 10:29:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 10:29:58 -参数 : [{}]
2019-06-12 10:29:58 -耗时 : 4
2019-06-12 10:29:58 -返回值 : login
2019-06-12 10:29:59 -请求地址 : http://localhost:8081/getVerify
2019-06-12 10:29:59 -HTTP METHOD : GET
2019-06-12 10:29:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 10:29:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2cbb26a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@c0c4c43]
2019-06-12 10:30:04 -7457
2019-06-12 10:30:04 -耗时 : 4878
2019-06-12 10:30:04 -返回值 : null
2019-06-12 10:30:10 -请求地址 : http://localhost:8081/login
2019-06-12 10:30:10 -HTTP METHOD : POST
2019-06-12 10:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 10:30:10 -参数 : [admin, 111111, 7457, org.apache.shiro.web.servlet.ShiroHttpServletRequest@fac149e]
2019-06-12 10:30:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 10:30:10 -==> Parameters: admin(String)
2019-06-12 10:30:10 -<==      Total: 1
2019-06-12 10:30:10 -耗时 : 132
2019-06-12 10:30:10 -返回值 : {msg=操作成功, code=0}
2019-06-12 10:30:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 10:30:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:30:10 -==> Parameters: 1(Long), admin(String), 登录(String), 132(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 10:30:10.275(Timestamp)
2019-06-12 10:30:10 -请求地址 : http://localhost:8081/index
2019-06-12 10:30:10 -HTTP METHOD : GET
2019-06-12 10:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:30:10 -参数 : [{}]
2019-06-12 10:30:10 -<==    Updates: 1
2019-06-12 10:30:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:30:10 -==> Parameters: 1(Long)
2019-06-12 10:30:10 -<==      Total: 51
2019-06-12 10:30:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:30:10 -==> Parameters: 138(Long)
2019-06-12 10:30:10 -<==      Total: 1
2019-06-12 10:30:10 -耗时 : 292
2019-06-12 10:30:10 -返回值 : index_v1
2019-06-12 10:30:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:30:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 292(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:30:10.691(Timestamp)
2019-06-12 10:30:10 -<==    Updates: 1
2019-06-12 10:30:10 -请求地址 : http://localhost:8081/main
2019-06-12 10:30:10 -HTTP METHOD : GET
2019-06-12 10:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:30:10 -参数 : []
2019-06-12 10:30:10 -耗时 : 1
2019-06-12 10:30:10 -返回值 : main
2019-06-12 10:30:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:30:11 -HTTP METHOD : GET
2019-06-12 10:30:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:30:11 -参数 : []
2019-06-12 10:30:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:30:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:30:11 -<==      Total: 0
2019-06-12 10:30:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:30:11 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:30:11 -<==      Total: 1
2019-06-12 10:30:11 -耗时 : 60
2019-06-12 10:30:11 -返回值 : com.bootdo.common.utils.PageUtils@635fe416
2019-06-12 10:30:11 -请求地址 : http://localhost:8081/main
2019-06-12 10:30:11 -HTTP METHOD : GET
2019-06-12 10:30:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:30:11 -参数 : []
2019-06-12 10:30:11 -耗时 : 0
2019-06-12 10:30:11 -返回值 : main
2019-06-12 10:30:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 10:30:13 -==> Parameters: 1(Long)
2019-06-12 10:30:13 -<==      Total: 95
2019-06-12 10:37:56 -请求地址 : http://localhost:8081/index
2019-06-12 10:37:56 -HTTP METHOD : GET
2019-06-12 10:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:37:56 -参数 : [{}]
2019-06-12 10:37:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:37:56 -==> Parameters: 1(Long)
2019-06-12 10:37:56 -<==      Total: 51
2019-06-12 10:37:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:37:56 -==> Parameters: 138(Long)
2019-06-12 10:37:56 -<==      Total: 1
2019-06-12 10:37:56 -耗时 : 32
2019-06-12 10:37:56 -返回值 : index_v1
2019-06-12 10:37:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:37:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:37:56.718(Timestamp)
2019-06-12 10:37:56 -请求地址 : http://localhost:8081/main
2019-06-12 10:37:56 -HTTP METHOD : GET
2019-06-12 10:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:37:56 -参数 : []
2019-06-12 10:37:56 -耗时 : 0
2019-06-12 10:37:56 -返回值 : main
2019-06-12 10:37:57 -<==    Updates: 1
2019-06-12 10:37:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:37:59 -HTTP METHOD : GET
2019-06-12 10:37:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:37:59 -参数 : []
2019-06-12 10:37:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:37:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:37:59 -<==      Total: 0
2019-06-12 10:37:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:37:59 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:37:59 -<==      Total: 1
2019-06-12 10:37:59 -耗时 : 8
2019-06-12 10:37:59 -返回值 : com.bootdo.common.utils.PageUtils@361e1279
2019-06-12 10:38:00 -请求地址 : http://localhost:8081/main
2019-06-12 10:38:00 -HTTP METHOD : GET
2019-06-12 10:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:38:00 -参数 : []
2019-06-12 10:38:00 -耗时 : 2
2019-06-12 10:38:00 -返回值 : main
2019-06-12 10:38:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 10:38:23 -HTTP METHOD : GET
2019-06-12 10:38:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 10:38:23 -参数 : []
2019-06-12 10:38:23 -耗时 : 0
2019-06-12 10:38:23 -返回值 : system/dept/deptTree
2019-06-12 10:38:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 10:38:23 -HTTP METHOD : GET
2019-06-12 10:38:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 10:38:23 -参数 : []
2019-06-12 10:38:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 10:38:23 -==> Parameters: 
2019-06-12 10:38:23 -<==      Total: 3
2019-06-12 10:38:23 -耗时 : 74
2019-06-12 10:38:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 10:38:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 10:38:27 -HTTP METHOD : GET
2019-06-12 10:38:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 10:38:27 -参数 : []
2019-06-12 10:38:27 -耗时 : 0
2019-06-12 10:38:27 -返回值 : system/dept/deptTree
2019-06-12 10:38:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 10:38:27 -HTTP METHOD : GET
2019-06-12 10:38:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 10:38:27 -参数 : []
2019-06-12 10:38:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 10:38:27 -==> Parameters: 
2019-06-12 10:38:27 -<==      Total: 3
2019-06-12 10:38:27 -耗时 : 8
2019-06-12 10:38:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 10:38:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 10:38:31 -HTTP METHOD : GET
2019-06-12 10:38:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 10:38:31 -参数 : []
2019-06-12 10:38:31 -耗时 : 1
2019-06-12 10:38:31 -返回值 : system/dept/deptTree
2019-06-12 10:38:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 10:38:31 -HTTP METHOD : GET
2019-06-12 10:38:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 10:38:31 -参数 : []
2019-06-12 10:38:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 10:38:31 -==> Parameters: 
2019-06-12 10:38:31 -<==      Total: 3
2019-06-12 10:38:31 -耗时 : 4
2019-06-12 10:38:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 10:54:09 -请求地址 : http://localhost:8081/index
2019-06-12 10:54:09 -HTTP METHOD : GET
2019-06-12 10:54:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 10:54:09 -参数 : [{}]
2019-06-12 10:54:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 10:54:09 -==> Parameters: 1(Long)
2019-06-12 10:54:09 -<==      Total: 51
2019-06-12 10:54:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 10:54:09 -==> Parameters: 138(Long)
2019-06-12 10:54:09 -<==      Total: 1
2019-06-12 10:54:09 -耗时 : 61
2019-06-12 10:54:09 -返回值 : index_v1
2019-06-12 10:54:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 10:54:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 61(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 10:54:09.347(Timestamp)
2019-06-12 10:54:09 -<==    Updates: 1
2019-06-12 10:54:09 -请求地址 : http://localhost:8081/main
2019-06-12 10:54:09 -HTTP METHOD : GET
2019-06-12 10:54:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:54:09 -参数 : []
2019-06-12 10:54:09 -耗时 : 0
2019-06-12 10:54:09 -返回值 : main
2019-06-12 10:54:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 10:54:09 -请求地址 : http://localhost:8081/main
2019-06-12 10:54:09 -HTTP METHOD : GET
2019-06-12 10:54:09 -HTTP METHOD : GET
2019-06-12 10:54:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 10:54:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 10:54:09 -参数 : []
2019-06-12 10:54:09 -参数 : []
2019-06-12 10:54:09 -耗时 : 0
2019-06-12 10:54:09 -返回值 : main
2019-06-12 10:54:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 10:54:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 10:54:09 -<==      Total: 0
2019-06-12 10:54:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 10:54:09 -==> Parameters: 1(Long), 0(String)
2019-06-12 10:54:09 -<==      Total: 1
2019-06-12 10:54:09 -耗时 : 16
2019-06-12 10:54:09 -返回值 : com.bootdo.common.utils.PageUtils@5d6d1e53
2019-06-12 10:54:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 10:54:12 -==> Parameters: 1(Long)
2019-06-12 10:54:12 -<==      Total: 95
2019-06-12 10:54:19 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-12 10:54:19 -HTTP METHOD : GET
2019-06-12 10:54:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-12 10:54:19 -参数 : []
2019-06-12 10:54:19 -耗时 : 1
2019-06-12 10:54:19 -返回值 : moneyList/moneyList
2019-06-12 10:54:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-12 10:54:21 -HTTP METHOD : GET
2019-06-12 10:54:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-12 10:54:21 -参数 : []
2019-06-12 10:54:21 -耗时 : 0
2019-06-12 10:54:21 -返回值 : moneyLog/elecLog/elecLog
2019-06-12 10:54:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 10:54:21 -HTTP METHOD : GET
2019-06-12 10:54:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 10:54:21 -参数 : [userType]
2019-06-12 10:54:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 10:54:21 -HTTP METHOD : GET
2019-06-12 10:54:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 10:54:21 -参数 : [elecType]
2019-06-12 10:54:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 10:54:21 -==> Parameters: userType(String)
2019-06-12 10:54:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 10:54:21 -==> Parameters: elecType(String)
2019-06-12 10:54:21 -<==      Total: 4
2019-06-12 10:54:21 -耗时 : 43
2019-06-12 10:54:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 10:54:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-12 10:54:21 -HTTP METHOD : GET
2019-06-12 10:54:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-12 10:54:21 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-12 10:54:21 -<==      Total: 11
2019-06-12 10:54:21 -耗时 : 110
2019-06-12 10:54:21 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 10:54:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-12 10:54:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-12 10:54:22 -<==      Total: 5
2019-06-12 10:54:22 -==>  Preparing: select count(*) from elec_log 
2019-06-12 10:54:22 -==> Parameters: 
2019-06-12 10:54:22 -<==      Total: 1
2019-06-12 10:54:22 -耗时 : 106
2019-06-12 10:54:22 -返回值 : com.bootdo.common.utils.PageUtils@4d7c7db2
2019-06-12 10:59:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 428]
2019-06-12 11:29:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 861]
2019-06-12 11:29:58 -Validating all active sessions...
2019-06-12 11:29:58 -Finished session validation.  No sessions were stopped.
2019-06-12 11:59:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1294]
2019-06-12 12:29:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1727]
2019-06-12 12:29:58 -Validating all active sessions...
2019-06-12 12:29:58 -Finished session validation.  No sessions were stopped.
2019-06-12 12:59:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2160]
2019-06-12 13:29:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2593]
2019-06-12 13:29:58 -Validating all active sessions...
2019-06-12 13:29:59 -Finished session validation.  [1] sessions were stopped.
2019-06-12 13:59:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3026]
2019-06-12 17:10:12 -Starting BootdoApplication on PC-201905091110 with PID 9292 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 17:10:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 17:10:12 -The following profiles are active: dev
2019-06-12 17:10:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2bb7bd00: startup date [Wed Jun 12 17:10:12 CST 2019]; root of context hierarchy
2019-06-12 17:10:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 17:10:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e13b641] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6ce4e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 17:10:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 17:10:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:10:31 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 17:10:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 17:10:31 -Starting service [Tomcat]
2019-06-12 17:10:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 17:10:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 17:10:31 -Initializing Spring embedded WebApplicationContext
2019-06-12 17:10:31 -Root WebApplicationContext: initialization completed in 19260 ms
2019-06-12 17:10:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 17:10:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 17:10:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 17:10:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 17:10:33 -Filter xssFilter was not registered (disabled)
2019-06-12 17:10:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 17:10:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 17:10:33 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 17:10:33 -Servlet dispatcherServlet mapped to [/]
2019-06-12 17:10:43 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
2019-06-12 17:10:43 -Stopping service [Tomcat]
2019-06-12 17:10:44 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-12 17:10:44 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:871)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1714)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1224)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2190)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
2019-06-12 17:14:08 -Starting BootdoApplication on PC-201905091110 with PID 11532 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 17:14:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 17:14:08 -The following profiles are active: dev
2019-06-12 17:14:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Wed Jun 12 17:14:09 CST 2019]; root of context hierarchy
2019-06-12 17:14:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 17:14:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82f55ad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$754e897b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 17:14:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 17:14:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 17:14:19 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 17:14:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 17:14:19 -Starting service [Tomcat]
2019-06-12 17:14:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 17:14:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 17:14:20 -Initializing Spring embedded WebApplicationContext
2019-06-12 17:14:20 -Root WebApplicationContext: initialization completed in 11209 ms
2019-06-12 17:14:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 17:14:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 17:14:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 17:14:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 17:14:21 -Filter xssFilter was not registered (disabled)
2019-06-12 17:14:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 17:14:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 17:14:21 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 17:14:21 -Servlet dispatcherServlet mapped to [/]
2019-06-12 17:14:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Wed Jun 12 17:14:09 CST 2019]; root of context hierarchy
2019-06-12 17:14:26 -Using default implementation for ThreadExecutor
2019-06-12 17:14:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 17:14:26 -Quartz Scheduler v.2.3.0 created.
2019-06-12 17:14:26 -RAMJobStore initialized.
2019-06-12 17:14:26 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 17:14:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 17:14:26 -Quartz scheduler version: 2.3.0
2019-06-12 17:14:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@34eb5d01
2019-06-12 17:14:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 17:14:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 17:14:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 17:14:31 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 17:14:31 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 17:14:31 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 17:14:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 17:14:31 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 17:14:31 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 17:14:31 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 17:14:31 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 17:14:31 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 17:14:31 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 17:14:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 17:14:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 17:14:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 17:14:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 17:14:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 17:14:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 17:14:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 17:14:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 17:14:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 17:14:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 17:14:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 17:14:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 17:14:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 17:14:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 17:14:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 17:14:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 17:14:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 17:14:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 17:14:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 17:14:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 17:14:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 17:14:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 17:14:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 17:14:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 17:14:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 17:14:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 17:14:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 17:14:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 17:14:32 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 17:14:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 17:14:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 17:14:32 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 17:14:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 17:14:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 17:14:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 17:14:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 17:14:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 17:14:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 17:14:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 17:14:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 17:14:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 17:14:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 17:14:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 17:14:32 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 17:14:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 17:14:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 17:14:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 17:14:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 17:14:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 17:14:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 17:14:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 17:14:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 17:14:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 17:14:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 17:14:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 17:14:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 17:14:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 17:14:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 17:14:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 17:14:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 17:14:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 17:14:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 17:14:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 17:14:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 17:14:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 17:14:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 17:14:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 17:14:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 17:14:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 17:14:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 17:14:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 17:14:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 17:14:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 17:14:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 17:14:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 17:14:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 17:14:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 17:14:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 17:14:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 17:14:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 17:14:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 17:14:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 17:14:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 17:14:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Wed Jun 12 17:14:09 CST 2019]; root of context hierarchy
2019-06-12 17:14:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 17:14:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 17:14:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 17:14:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 17:14:37 -Registering beans for JMX exposure on startup
2019-06-12 17:14:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 17:14:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 17:14:37 -Starting beans in phase 2147483647
2019-06-12 17:14:37 -Context refreshed
2019-06-12 17:14:37 -Found 1 custom documentation plugin(s)
2019-06-12 17:14:37 -Scanning for api listing references
2019-06-12 17:14:37 -Generating unique operation named: removeUsingPOST_1
2019-06-12 17:14:38 -Generating unique operation named: addUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: editUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: listUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_2
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_3
2019-06-12 17:14:38 -Generating unique operation named: saveUsingPOST_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPOST_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPUT_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 17:14:38 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 17:14:38 -Generating unique operation named: addUsingGET_2
2019-06-12 17:14:38 -Generating unique operation named: editUsingGET_2
2019-06-12 17:14:38 -Generating unique operation named: listUsingGET_2
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_4
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_5
2019-06-12 17:14:38 -Generating unique operation named: saveUsingPOST_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPOST_2
2019-06-12 17:14:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: addUsingGET_3
2019-06-12 17:14:38 -Generating unique operation named: editUsingGET_3
2019-06-12 17:14:38 -Generating unique operation named: listUsingGET_3
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_6
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_7
2019-06-12 17:14:38 -Generating unique operation named: saveUsingPOST_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingGET_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPOST_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPUT_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 17:14:38 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 17:14:38 -Generating unique operation named: addUsingGET_4
2019-06-12 17:14:38 -Generating unique operation named: editUsingGET_4
2019-06-12 17:14:38 -Generating unique operation named: listUsingGET_4
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_8
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_9
2019-06-12 17:14:38 -Generating unique operation named: saveUsingPOST_4
2019-06-12 17:14:38 -Generating unique operation named: updateUsingGET_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPOST_4
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPUT_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 17:14:38 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 17:14:38 -Generating unique operation named: ElecUsingGET_1
2019-06-12 17:14:38 -Generating unique operation named: addUsingGET_5
2019-06-12 17:14:38 -Generating unique operation named: editUsingGET_5
2019-06-12 17:14:38 -Generating unique operation named: listUsingGET_5
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_10
2019-06-12 17:14:38 -Generating unique operation named: removeUsingPOST_11
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingGET_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPUT_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 17:14:39 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_6
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_6
2019-06-12 17:14:39 -Generating unique operation named: addUsingGET_6
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_7
2019-06-12 17:14:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_7
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_12
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_13
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingGET_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPUT_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 17:14:39 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 17:14:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 17:14:39 -Generating unique operation named: addUsingGET_7
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_8
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_8
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_14
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_15
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingGET_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_8
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPUT_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 17:14:39 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 17:14:39 -Generating unique operation named: addUsingGET_8
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_9
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_9
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_16
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_17
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_8
2019-06-12 17:14:39 -Generating unique operation named: updateUsingGET_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_9
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPUT_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 17:14:39 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 17:14:39 -Generating unique operation named: addUsingGET_9
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_10
2019-06-12 17:14:39 -Generating unique operation named: infoUsingGET_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingPOST_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingPUT_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 17:14:39 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_10
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_18
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_19
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_9
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_10
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_11
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_20
2019-06-12 17:14:39 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 17:14:39 -Generating unique operation named: addUsingGET_10
2019-06-12 17:14:39 -Generating unique operation named: editUsingGET_11
2019-06-12 17:14:39 -Generating unique operation named: listUsingGET_12
2019-06-12 17:14:39 -Generating unique operation named: removeUsingPOST_21
2019-06-12 17:14:39 -Generating unique operation named: saveUsingPOST_10
2019-06-12 17:14:39 -Generating unique operation named: treeUsingGET_1
2019-06-12 17:14:39 -Generating unique operation named: treeUsingGET_2
2019-06-12 17:14:39 -Generating unique operation named: updateUsingPOST_11
2019-06-12 17:14:40 -Generating unique operation named: addUsingGET_11
2019-06-12 17:14:40 -Generating unique operation named: editUsingGET_12
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_13
2019-06-12 17:14:40 -Generating unique operation named: removeUsingPOST_22
2019-06-12 17:14:40 -Generating unique operation named: removeUsingPOST_23
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPOST_12
2019-06-12 17:14:40 -Generating unique operation named: addUsingGET_12
2019-06-12 17:14:40 -Generating unique operation named: editUsingGET_13
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_14
2019-06-12 17:14:40 -Generating unique operation named: removeUsingPOST_24
2019-06-12 17:14:40 -Generating unique operation named: removeUsingPOST_25
2019-06-12 17:14:40 -Generating unique operation named: saveUsingPOST_11
2019-06-12 17:14:40 -Generating unique operation named: updateUsingGET_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPOST_13
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPUT_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 17:14:40 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 17:14:40 -Generating unique operation named: addUsingGET_13
2019-06-12 17:14:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 17:14:40 -Generating unique operation named: editUsingGET_14
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_15
2019-06-12 17:14:40 -Generating unique operation named: printEditUsingGET_1
2019-06-12 17:14:40 -Generating unique operation named: removeUsingPOST_26
2019-06-12 17:14:40 -Generating unique operation named: saveUsingPOST_12
2019-06-12 17:14:40 -Generating unique operation named: updateUsingGET_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPOST_14
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPUT_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 17:14:40 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 17:14:40 -Generating unique operation named: addUsingGET_14
2019-06-12 17:14:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 17:14:40 -Generating unique operation named: editUsingGET_15
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_16
2019-06-12 17:14:40 -Generating unique operation named: saveUsingPOST_13
2019-06-12 17:14:40 -Generating unique operation named: saveUsingPOST_14
2019-06-12 17:14:40 -Generating unique operation named: updateUsingPOST_15
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_17
2019-06-12 17:14:40 -Generating unique operation named: listUsingHEAD_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingPOST_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingPUT_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingPATCH_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingDELETE_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 17:14:40 -Generating unique operation named: listUsingTRACE_1
2019-06-12 17:14:40 -Generating unique operation named: countDDUsingGET_1
2019-06-12 17:14:40 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 17:14:40 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 17:14:40 -Generating unique operation named: addUsingGET_15
2019-06-12 17:14:40 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 17:14:40 -Generating unique operation named: editUsingGET_16
2019-06-12 17:14:40 -Generating unique operation named: listUsingGET_18
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_27
2019-06-12 17:14:41 -Generating unique operation named: saveUsingPOST_15
2019-06-12 17:14:41 -Generating unique operation named: treeUsingGET_3
2019-06-12 17:14:41 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPOST_16
2019-06-12 17:14:41 -Generating unique operation named: addUsingGET_16
2019-06-12 17:14:41 -Generating unique operation named: editUsingGET_17
2019-06-12 17:14:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 17:14:41 -Generating unique operation named: listUsingGET_19
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_28
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_29
2019-06-12 17:14:41 -Generating unique operation named: saveUsingPOST_16
2019-06-12 17:14:41 -Generating unique operation named: updateUsingGET_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPOST_17
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPUT_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 17:14:41 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 17:14:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 17:14:41 -Generating unique operation named: addUsingGET_17
2019-06-12 17:14:41 -Generating unique operation named: editUsingGET_18
2019-06-12 17:14:41 -Generating unique operation named: listUsingGET_20
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_30
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_31
2019-06-12 17:14:41 -Generating unique operation named: saveUsingPOST_17
2019-06-12 17:14:41 -Generating unique operation named: updateUsingGET_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPOST_18
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPUT_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 17:14:41 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 17:14:41 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-06-12 17:14:41 -Generating unique operation named: addUsingGET_18
2019-06-12 17:14:41 -Generating unique operation named: editUsingGET_19
2019-06-12 17:14:41 -Generating unique operation named: listUsingGET_21
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_32
2019-06-12 17:14:41 -Generating unique operation named: removeUsingPOST_33
2019-06-12 17:14:41 -Generating unique operation named: saveUsingPOST_18
2019-06-12 17:14:41 -Generating unique operation named: updateUsingGET_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPOST_19
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPUT_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 17:14:41 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 17:14:41 -Starting Quartz Scheduler now
2019-06-12 17:14:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 17:14:41 -Starting...
2019-06-12 17:14:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 17:14:41 -Started.
2019-06-12 17:14:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 17:14:41 -Using a shared selector for servlet write/read
2019-06-12 17:14:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 17:14:41 -Started BootdoApplication in 35.318 seconds (JVM running for 36.917)
2019-06-12 17:14:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 17:14:42 -==> Parameters: 
2019-06-12 17:14:42 -<==      Total: 1
2019-06-12 17:14:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 17:14:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 17:14:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-06-12 17:14:59 -Enabling session validation scheduler...
2019-06-12 17:14:59 -请求地址 : http://localhost:8081/login;JSESSIONID=bdc55032-15ee-43fc-a100-0b31dd53f340
2019-06-12 17:14:59 -HTTP METHOD : GET
2019-06-12 17:14:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 17:14:59 -参数 : [{}]
2019-06-12 17:14:59 -耗时 : 3
2019-06-12 17:14:59 -返回值 : login
2019-06-12 17:15:04 -请求地址 : http://localhost:8081/getVerify
2019-06-12 17:15:04 -HTTP METHOD : GET
2019-06-12 17:15:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 17:15:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a067ba6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b616bb9]
2019-06-12 17:15:13 -8990
2019-06-12 17:15:14 -耗时 : 10023
2019-06-12 17:15:14 -返回值 : null
2019-06-12 17:15:15 -请求地址 : http://localhost:8081/login
2019-06-12 17:15:15 -HTTP METHOD : GET
2019-06-12 17:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 17:15:15 -参数 : [{}]
2019-06-12 17:15:15 -耗时 : 0
2019-06-12 17:15:15 -返回值 : login
2019-06-12 17:15:19 -请求地址 : http://localhost:8081/login
2019-06-12 17:15:19 -HTTP METHOD : POST
2019-06-12 17:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 17:15:19 -参数 : [admin, 111111, 8990, org.apache.shiro.web.servlet.ShiroHttpServletRequest@83a4164]
2019-06-12 17:15:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 17:15:19 -==> Parameters: admin(String)
2019-06-12 17:15:19 -<==      Total: 1
2019-06-12 17:15:19 -耗时 : 347
2019-06-12 17:15:19 -返回值 : {msg=操作成功, code=0}
2019-06-12 17:15:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 17:15:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:15:19 -==> Parameters: 1(Long), admin(String), 登录(String), 347(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 17:15:19.641(Timestamp)
2019-06-12 17:15:19 -<==    Updates: 1
2019-06-12 17:15:19 -请求地址 : http://localhost:8081/index
2019-06-12 17:15:19 -HTTP METHOD : GET
2019-06-12 17:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:15:19 -参数 : [{}]
2019-06-12 17:15:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:15:20 -==> Parameters: 1(Long)
2019-06-12 17:15:20 -<==      Total: 51
2019-06-12 17:15:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:15:20 -==> Parameters: 138(Long)
2019-06-12 17:15:20 -<==      Total: 1
2019-06-12 17:15:20 -耗时 : 244
2019-06-12 17:15:20 -返回值 : index_v1
2019-06-12 17:15:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:15:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 245(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:15:20.369(Timestamp)
2019-06-12 17:15:20 -<==    Updates: 1
2019-06-12 17:15:20 -请求地址 : http://localhost:8081/main
2019-06-12 17:15:20 -HTTP METHOD : GET
2019-06-12 17:15:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:15:20 -参数 : []
2019-06-12 17:15:20 -耗时 : 0
2019-06-12 17:15:20 -返回值 : main
2019-06-12 17:15:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:15:21 -HTTP METHOD : GET
2019-06-12 17:15:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:15:21 -参数 : []
2019-06-12 17:15:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:15:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:15:22 -<==      Total: 0
2019-06-12 17:15:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:15:22 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:15:22 -<==      Total: 1
2019-06-12 17:15:22 -耗时 : 169
2019-06-12 17:15:22 -返回值 : com.bootdo.common.utils.PageUtils@30705ea2
2019-06-12 17:15:22 -请求地址 : http://localhost:8081/main
2019-06-12 17:15:22 -HTTP METHOD : GET
2019-06-12 17:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:15:22 -参数 : []
2019-06-12 17:15:22 -耗时 : 0
2019-06-12 17:15:22 -返回值 : main
2019-06-12 17:15:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-06-12 17:15:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 17:15:33 -==> Parameters: 1(Long)
2019-06-12 17:15:33 -<==      Total: 95
2019-06-12 17:20:51 -请求地址 : http://localhost:8081/index
2019-06-12 17:20:51 -HTTP METHOD : GET
2019-06-12 17:20:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:20:51 -参数 : [{}]
2019-06-12 17:20:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:20:51 -==> Parameters: 1(Long)
2019-06-12 17:20:52 -<==      Total: 51
2019-06-12 17:20:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:20:52 -==> Parameters: 138(Long)
2019-06-12 17:20:52 -<==      Total: 1
2019-06-12 17:20:52 -耗时 : 27
2019-06-12 17:20:52 -返回值 : index_v1
2019-06-12 17:20:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:20:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:20:52.021(Timestamp)
2019-06-12 17:20:52 -请求地址 : http://localhost:8081/main
2019-06-12 17:20:52 -HTTP METHOD : GET
2019-06-12 17:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:20:52 -参数 : []
2019-06-12 17:20:52 -耗时 : 1
2019-06-12 17:20:52 -返回值 : main
2019-06-12 17:20:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:20:52 -HTTP METHOD : GET
2019-06-12 17:20:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:20:52 -参数 : []
2019-06-12 17:20:52 -请求地址 : http://localhost:8081/main
2019-06-12 17:20:52 -HTTP METHOD : GET
2019-06-12 17:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:20:52 -参数 : []
2019-06-12 17:20:52 -耗时 : 1
2019-06-12 17:20:52 -返回值 : main
2019-06-12 17:20:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:20:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:20:52 -<==    Updates: 1
2019-06-12 17:20:53 -<==      Total: 0
2019-06-12 17:20:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:20:53 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:20:53 -<==      Total: 1
2019-06-12 17:20:53 -耗时 : 923
2019-06-12 17:20:53 -返回值 : com.bootdo.common.utils.PageUtils@2b88d738
2019-06-12 17:21:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:21:00 -HTTP METHOD : GET
2019-06-12 17:21:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:21:00 -参数 : [userType]
2019-06-12 17:21:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:21:00 -HTTP METHOD : GET
2019-06-12 17:21:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:21:00 -参数 : [elecType]
2019-06-12 17:21:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:21:00 -==> Parameters: userType(String)
2019-06-12 17:21:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:21:00 -==> Parameters: elecType(String)
2019-06-12 17:21:00 -<==      Total: 11
2019-06-12 17:21:00 -耗时 : 79
2019-06-12 17:21:00 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:21:00 -<==      Total: 4
2019-06-12 17:21:00 -耗时 : 118
2019-06-12 17:21:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:21:35 -请求地址 : http://localhost:8081/index
2019-06-12 17:21:35 -HTTP METHOD : GET
2019-06-12 17:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:21:35 -参数 : [{}]
2019-06-12 17:21:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:21:35 -==> Parameters: 1(Long)
2019-06-12 17:21:35 -<==      Total: 51
2019-06-12 17:21:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:21:35 -==> Parameters: 138(Long)
2019-06-12 17:21:35 -<==      Total: 1
2019-06-12 17:21:35 -耗时 : 37
2019-06-12 17:21:35 -返回值 : index_v1
2019-06-12 17:21:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:21:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:21:35.327(Timestamp)
2019-06-12 17:21:35 -请求地址 : http://localhost:8081/main
2019-06-12 17:21:35 -HTTP METHOD : GET
2019-06-12 17:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:21:35 -参数 : []
2019-06-12 17:21:35 -耗时 : 1
2019-06-12 17:21:35 -返回值 : main
2019-06-12 17:21:35 -<==    Updates: 1
2019-06-12 17:21:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:21:35 -HTTP METHOD : GET
2019-06-12 17:21:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:21:35 -参数 : []
2019-06-12 17:21:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:21:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:21:35 -<==      Total: 0
2019-06-12 17:21:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:21:35 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:21:35 -<==      Total: 1
2019-06-12 17:21:35 -耗时 : 10
2019-06-12 17:21:35 -返回值 : com.bootdo.common.utils.PageUtils@4da7ddf4
2019-06-12 17:21:35 -请求地址 : http://localhost:8081/main
2019-06-12 17:21:35 -HTTP METHOD : GET
2019-06-12 17:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:21:35 -参数 : []
2019-06-12 17:21:35 -耗时 : 1
2019-06-12 17:21:35 -返回值 : main
2019-06-12 17:21:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:21:39 -HTTP METHOD : GET
2019-06-12 17:21:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:21:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:21:39 -HTTP METHOD : GET
2019-06-12 17:21:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:21:39 -参数 : [elecType]
2019-06-12 17:21:39 -参数 : [userType]
2019-06-12 17:21:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:21:39 -==> Parameters: userType(String)
2019-06-12 17:21:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:21:39 -==> Parameters: elecType(String)
2019-06-12 17:21:39 -<==      Total: 4
2019-06-12 17:21:39 -耗时 : 9
2019-06-12 17:21:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:21:39 -<==      Total: 11
2019-06-12 17:21:39 -耗时 : 10
2019-06-12 17:21:39 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:21:41 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 17:30:37 -请求地址 : http://localhost:8081/index
2019-06-12 17:30:37 -HTTP METHOD : GET
2019-06-12 17:30:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:30:37 -参数 : [{}]
2019-06-12 17:30:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:30:37 -==> Parameters: 1(Long)
2019-06-12 17:30:37 -<==      Total: 51
2019-06-12 17:30:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:30:37 -==> Parameters: 138(Long)
2019-06-12 17:30:37 -<==      Total: 1
2019-06-12 17:30:37 -耗时 : 26
2019-06-12 17:30:37 -返回值 : index_v1
2019-06-12 17:30:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:30:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:30:37.641(Timestamp)
2019-06-12 17:30:37 -请求地址 : http://localhost:8081/main
2019-06-12 17:30:37 -HTTP METHOD : GET
2019-06-12 17:30:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:30:37 -参数 : []
2019-06-12 17:30:37 -耗时 : 1
2019-06-12 17:30:37 -返回值 : main
2019-06-12 17:30:37 -<==    Updates: 1
2019-06-12 17:30:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:30:37 -HTTP METHOD : GET
2019-06-12 17:30:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:30:37 -参数 : []
2019-06-12 17:30:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:30:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:30:37 -<==      Total: 0
2019-06-12 17:30:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:30:37 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:30:37 -<==      Total: 1
2019-06-12 17:30:37 -耗时 : 7
2019-06-12 17:30:37 -返回值 : com.bootdo.common.utils.PageUtils@2f4efd21
2019-06-12 17:30:37 -请求地址 : http://localhost:8081/main
2019-06-12 17:30:37 -HTTP METHOD : GET
2019-06-12 17:30:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:30:37 -参数 : []
2019-06-12 17:30:37 -耗时 : 2
2019-06-12 17:30:37 -返回值 : main
2019-06-12 17:30:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 17:30:41 -==> Parameters: 1(Long)
2019-06-12 17:30:41 -<==      Total: 95
2019-06-12 17:30:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:41 -HTTP METHOD : GET
2019-06-12 17:30:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:41 -参数 : [userType]
2019-06-12 17:30:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:30:41 -HTTP METHOD : GET
2019-06-12 17:30:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:41 -参数 : [elecType]
2019-06-12 17:30:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:41 -==> Parameters: userType(String)
2019-06-12 17:30:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:41 -==> Parameters: elecType(String)
2019-06-12 17:30:41 -<==      Total: 4
2019-06-12 17:30:41 -耗时 : 6
2019-06-12 17:30:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:41 -<==      Total: 11
2019-06-12 17:30:41 -耗时 : 9
2019-06-12 17:30:41 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:44 -HTTP METHOD : GET
2019-06-12 17:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:44 -参数 : [userType]
2019-06-12 17:30:44 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 17:30:44 -HTTP METHOD : GET
2019-06-12 17:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:44 -参数 : [heatType]
2019-06-12 17:30:44 -==> Parameters: userType(String)
2019-06-12 17:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:44 -==> Parameters: heatType(String)
2019-06-12 17:30:44 -<==      Total: 4
2019-06-12 17:30:44 -<==      Total: 4
2019-06-12 17:30:44 -耗时 : 7
2019-06-12 17:30:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:44 -耗时 : 5
2019-06-12 17:30:44 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:47 -HTTP METHOD : GET
2019-06-12 17:30:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:47 -参数 : [userType]
2019-06-12 17:30:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:47 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 17:30:47 -HTTP METHOD : GET
2019-06-12 17:30:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:47 -参数 : [waterType]
2019-06-12 17:30:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:47 -==> Parameters: waterType(String)
2019-06-12 17:30:47 -==> Parameters: userType(String)
2019-06-12 17:30:47 -<==      Total: 4
2019-06-12 17:30:47 -耗时 : 7
2019-06-12 17:30:47 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:47 -<==      Total: 4
2019-06-12 17:30:47 -耗时 : 17
2019-06-12 17:30:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:49 -HTTP METHOD : GET
2019-06-12 17:30:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:49 -参数 : [userType]
2019-06-12 17:30:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:49 -==> Parameters: userType(String)
2019-06-12 17:30:49 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 17:30:49 -HTTP METHOD : GET
2019-06-12 17:30:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:49 -参数 : [heatType]
2019-06-12 17:30:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:49 -==> Parameters: heatType(String)
2019-06-12 17:30:49 -<==      Total: 4
2019-06-12 17:30:49 -耗时 : 4
2019-06-12 17:30:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:49 -<==      Total: 4
2019-06-12 17:30:49 -耗时 : 9
2019-06-12 17:30:49 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:50 -HTTP METHOD : GET
2019-06-12 17:30:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:50 -参数 : [userType]
2019-06-12 17:30:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:30:50 -HTTP METHOD : GET
2019-06-12 17:30:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:50 -参数 : [elecType]
2019-06-12 17:30:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:50 -==> Parameters: elecType(String)
2019-06-12 17:30:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:50 -==> Parameters: userType(String)
2019-06-12 17:30:50 -<==      Total: 11
2019-06-12 17:30:50 -耗时 : 5
2019-06-12 17:30:50 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:50 -<==      Total: 4
2019-06-12 17:30:50 -耗时 : 11
2019-06-12 17:30:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:50 -HTTP METHOD : GET
2019-06-12 17:30:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:50 -参数 : [userType]
2019-06-12 17:30:50 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 17:30:50 -HTTP METHOD : GET
2019-06-12 17:30:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:50 -参数 : [heatType]
2019-06-12 17:30:50 -==> Parameters: userType(String)
2019-06-12 17:30:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:50 -==> Parameters: heatType(String)
2019-06-12 17:30:50 -<==      Total: 4
2019-06-12 17:30:50 -耗时 : 5
2019-06-12 17:30:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:50 -<==      Total: 4
2019-06-12 17:30:50 -耗时 : 8
2019-06-12 17:30:50 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:51 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 17:30:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:51 -HTTP METHOD : GET
2019-06-12 17:30:51 -HTTP METHOD : GET
2019-06-12 17:30:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:51 -参数 : [waterType]
2019-06-12 17:30:51 -参数 : [userType]
2019-06-12 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:51 -==> Parameters: userType(String)
2019-06-12 17:30:51 -==> Parameters: waterType(String)
2019-06-12 17:30:51 -<==      Total: 4
2019-06-12 17:30:51 -耗时 : 4
2019-06-12 17:30:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:51 -<==      Total: 4
2019-06-12 17:30:51 -耗时 : 5
2019-06-12 17:30:51 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:52 -HTTP METHOD : GET
2019-06-12 17:30:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:52 -参数 : [userType]
2019-06-12 17:30:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 17:30:52 -HTTP METHOD : GET
2019-06-12 17:30:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:52 -参数 : [heatType]
2019-06-12 17:30:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:52 -==> Parameters: heatType(String)
2019-06-12 17:30:52 -==> Parameters: userType(String)
2019-06-12 17:30:52 -<==      Total: 4
2019-06-12 17:30:52 -耗时 : 11
2019-06-12 17:30:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:52 -<==      Total: 4
2019-06-12 17:30:52 -耗时 : 15
2019-06-12 17:30:52 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:30:53 -HTTP METHOD : GET
2019-06-12 17:30:53 -HTTP METHOD : GET
2019-06-12 17:30:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:53 -参数 : [userType]
2019-06-12 17:30:53 -参数 : [elecType]
2019-06-12 17:30:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:53 -==> Parameters: userType(String)
2019-06-12 17:30:53 -==> Parameters: elecType(String)
2019-06-12 17:30:53 -<==      Total: 4
2019-06-12 17:30:53 -耗时 : 4
2019-06-12 17:30:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:53 -<==      Total: 11
2019-06-12 17:30:53 -耗时 : 8
2019-06-12 17:30:53 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:53 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 17:30:53 -HTTP METHOD : GET
2019-06-12 17:30:53 -HTTP METHOD : GET
2019-06-12 17:30:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:53 -参数 : [userType]
2019-06-12 17:30:53 -参数 : [heatType]
2019-06-12 17:30:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:53 -==> Parameters: userType(String)
2019-06-12 17:30:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:53 -==> Parameters: heatType(String)
2019-06-12 17:30:53 -<==      Total: 4
2019-06-12 17:30:53 -耗时 : 5
2019-06-12 17:30:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:53 -<==      Total: 4
2019-06-12 17:30:53 -耗时 : 6
2019-06-12 17:30:53 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:30:54 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 17:30:54 -HTTP METHOD : GET
2019-06-12 17:30:54 -HTTP METHOD : GET
2019-06-12 17:30:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:30:54 -参数 : [waterType]
2019-06-12 17:30:54 -参数 : [userType]
2019-06-12 17:30:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:54 -==> Parameters: waterType(String)
2019-06-12 17:30:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:30:54 -==> Parameters: userType(String)
2019-06-12 17:30:54 -<==      Total: 4
2019-06-12 17:30:54 -耗时 : 7
2019-06-12 17:30:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:30:54 -<==      Total: 4
2019-06-12 17:30:54 -耗时 : 11
2019-06-12 17:30:54 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:33:02 -请求地址 : http://localhost:8081/index
2019-06-12 17:33:02 -HTTP METHOD : GET
2019-06-12 17:33:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:33:02 -参数 : [{}]
2019-06-12 17:33:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:33:02 -==> Parameters: 1(Long)
2019-06-12 17:33:02 -<==      Total: 51
2019-06-12 17:33:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:33:02 -==> Parameters: 138(Long)
2019-06-12 17:33:02 -<==      Total: 1
2019-06-12 17:33:02 -耗时 : 42
2019-06-12 17:33:02 -返回值 : index_v1
2019-06-12 17:33:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:33:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:33:02.792(Timestamp)
2019-06-12 17:33:02 -<==    Updates: 1
2019-06-12 17:33:02 -请求地址 : http://localhost:8081/main
2019-06-12 17:33:02 -HTTP METHOD : GET
2019-06-12 17:33:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:33:02 -参数 : []
2019-06-12 17:33:02 -耗时 : 1
2019-06-12 17:33:02 -返回值 : main
2019-06-12 17:33:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:33:03 -HTTP METHOD : GET
2019-06-12 17:33:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:33:03 -参数 : []
2019-06-12 17:33:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:33:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:33:03 -<==      Total: 0
2019-06-12 17:33:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:33:03 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:33:03 -<==      Total: 1
2019-06-12 17:33:03 -耗时 : 7
2019-06-12 17:33:03 -返回值 : com.bootdo.common.utils.PageUtils@2f77a69
2019-06-12 17:33:03 -请求地址 : http://localhost:8081/main
2019-06-12 17:33:03 -HTTP METHOD : GET
2019-06-12 17:33:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:33:03 -参数 : []
2019-06-12 17:33:03 -耗时 : 2
2019-06-12 17:33:03 -返回值 : main
2019-06-12 17:33:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:33:05 -HTTP METHOD : GET
2019-06-12 17:33:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:33:05 -参数 : [userType]
2019-06-12 17:33:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:33:05 -==> Parameters: userType(String)
2019-06-12 17:33:05 -<==      Total: 4
2019-06-12 17:33:05 -耗时 : 5
2019-06-12 17:33:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:33:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:33:05 -HTTP METHOD : GET
2019-06-12 17:33:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:33:05 -参数 : [elecType]
2019-06-12 17:33:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:33:05 -==> Parameters: elecType(String)
2019-06-12 17:33:05 -<==      Total: 11
2019-06-12 17:33:05 -耗时 : 5
2019-06-12 17:33:05 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:33:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-12 17:33:06 -HTTP METHOD : GET
2019-06-12 17:33:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-12 17:33:06 -参数 : []
2019-06-12 17:33:06 -耗时 : 0
2019-06-12 17:33:06 -返回值 : moneyLog/elecLog/elecLog
2019-06-12 17:33:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:33:06 -HTTP METHOD : GET
2019-06-12 17:33:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:33:06 -参数 : [userType]
2019-06-12 17:33:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:33:06 -==> Parameters: userType(String)
2019-06-12 17:33:06 -<==      Total: 4
2019-06-12 17:33:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:33:06 -HTTP METHOD : GET
2019-06-12 17:33:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:33:06 -参数 : [elecType]
2019-06-12 17:33:06 -耗时 : 4
2019-06-12 17:33:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:33:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:33:06 -==> Parameters: elecType(String)
2019-06-12 17:33:06 -<==      Total: 11
2019-06-12 17:33:06 -耗时 : 6
2019-06-12 17:33:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:33:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-12 17:33:07 -HTTP METHOD : GET
2019-06-12 17:33:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-12 17:33:07 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-12 17:33:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-12 17:33:07 -==> Parameters: 0(Integer), 10(Integer)
2019-06-12 17:33:07 -<==      Total: 5
2019-06-12 17:33:07 -==>  Preparing: select count(*) from elec_log 
2019-06-12 17:33:07 -==> Parameters: 
2019-06-12 17:33:07 -<==      Total: 1
2019-06-12 17:33:07 -耗时 : 49
2019-06-12 17:33:07 -返回值 : com.bootdo.common.utils.PageUtils@71f9f8b0
2019-06-12 17:33:35 -请求地址 : http://localhost:8081/sys/menu/
2019-06-12 17:33:35 -HTTP METHOD : GET
2019-06-12 17:33:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-06-12 17:33:35 -参数 : [{}]
2019-06-12 17:33:35 -耗时 : 1
2019-06-12 17:33:35 -返回值 : system/menu/menu
2019-06-12 17:33:35 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-12 17:33:35 -HTTP METHOD : GET
2019-06-12 17:33:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-12 17:33:35 -参数 : [{sort=order_num}]
2019-06-12 17:33:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-12 17:33:35 -==> Parameters: 
2019-06-12 17:33:35 -<==      Total: 111
2019-06-12 17:33:35 -耗时 : 49
2019-06-12 17:33:35 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-12 17:33:49 -请求地址 : http://localhost:8081/sys/menu/edit/164
2019-06-12 17:33:49 -HTTP METHOD : GET
2019-06-12 17:33:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-06-12 17:33:49 -参数 : [{}, 164]
2019-06-12 17:33:49 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:33:49 -==> Parameters: 164(Long)
2019-06-12 17:33:49 -<==      Total: 1
2019-06-12 17:33:49 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:33:49 -==> Parameters: 106(Long)
2019-06-12 17:33:49 -<==      Total: 1
2019-06-12 17:33:49 -耗时 : 16
2019-06-12 17:33:49 -返回值 : system/menu/edit
2019-06-12 17:33:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:33:49 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 16(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-06-12 17:33:49.053(Timestamp)
2019-06-12 17:33:49 -<==    Updates: 1
2019-06-12 17:33:55 -请求地址 : http://localhost:8081/sys/menu/update
2019-06-12 17:33:55 -HTTP METHOD : POST
2019-06-12 17:33:55 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-06-12 17:33:55 -参数 : [MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=5, gmtCreate=null, gmtModified=null}]
2019-06-12 17:33:55 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-06-12 17:33:55 -==> Parameters: 106(Long), 乌镇管理(String), /moneyList/moneyWZ(String), moneyList:moneyWZ(String), 1(Integer), fa fa-image(String), 5(Integer), 164(Long)
2019-06-12 17:33:55 -<==    Updates: 1
2019-06-12 17:33:55 -耗时 : 231
2019-06-12 17:33:55 -返回值 : {msg=操作成功, code=0}
2019-06-12 17:33:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:33:55 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 232(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-06-12 17:33:55.414(Timestamp)
2019-06-12 17:33:55 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-12 17:33:55 -HTTP METHOD : GET
2019-06-12 17:33:55 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-12 17:33:55 -参数 : [{sort=order_num}]
2019-06-12 17:33:55 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-12 17:33:55 -==> Parameters: 
2019-06-12 17:33:55 -<==    Updates: 1
2019-06-12 17:33:55 -<==      Total: 111
2019-06-12 17:33:55 -耗时 : 40
2019-06-12 17:33:55 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-12 17:34:04 -请求地址 : http://localhost:8081/sys/menu/edit/165
2019-06-12 17:34:04 -HTTP METHOD : GET
2019-06-12 17:34:04 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-06-12 17:34:04 -参数 : [{}, 165]
2019-06-12 17:34:04 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:34:04 -==> Parameters: 165(Long)
2019-06-12 17:34:04 -<==      Total: 1
2019-06-12 17:34:04 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:34:04 -==> Parameters: 106(Long)
2019-06-12 17:34:04 -<==      Total: 1
2019-06-12 17:34:04 -耗时 : 10
2019-06-12 17:34:04 -返回值 : system/menu/edit
2019-06-12 17:34:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:34:04 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 10(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-06-12 17:34:04.392(Timestamp)
2019-06-12 17:34:04 -<==    Updates: 1
2019-06-12 17:34:08 -请求地址 : http://localhost:8081/sys/menu/update
2019-06-12 17:34:08 -HTTP METHOD : POST
2019-06-12 17:34:08 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-06-12 17:34:08 -参数 : [MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-06-12 17:34:08 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-06-12 17:34:08 -==> Parameters: 106(Long), 缴费上传(String), /moneyUpLoad/ElecLogUpLoad(String), moneyUpLoad:ElecLogUpLoad(String), 1(Integer), fa fa-bullseye(String), 3(Integer), 165(Long)
2019-06-12 17:34:08 -<==    Updates: 1
2019-06-12 17:34:08 -耗时 : 118
2019-06-12 17:34:08 -返回值 : {msg=操作成功, code=0}
2019-06-12 17:34:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:34:08 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 119(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-06-12 17:34:08.84(Timestamp)
2019-06-12 17:34:08 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-12 17:34:08 -HTTP METHOD : GET
2019-06-12 17:34:08 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-12 17:34:08 -参数 : [{sort=order_num}]
2019-06-12 17:34:08 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-12 17:34:08 -==> Parameters: 
2019-06-12 17:34:08 -<==      Total: 111
2019-06-12 17:34:08 -耗时 : 25
2019-06-12 17:34:08 -<==    Updates: 1
2019-06-12 17:34:08 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-12 17:34:14 -请求地址 : http://localhost:8081/sys/menu/edit/164
2019-06-12 17:34:14 -HTTP METHOD : GET
2019-06-12 17:34:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-06-12 17:34:14 -参数 : [{}, 164]
2019-06-12 17:34:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:34:14 -==> Parameters: 164(Long)
2019-06-12 17:34:14 -<==      Total: 1
2019-06-12 17:34:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-06-12 17:34:14 -==> Parameters: 106(Long)
2019-06-12 17:34:14 -<==      Total: 1
2019-06-12 17:34:14 -耗时 : 18
2019-06-12 17:34:14 -返回值 : system/menu/edit
2019-06-12 17:34:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:34:14 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 19(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-06-12 17:34:14.023(Timestamp)
2019-06-12 17:34:14 -<==    Updates: 1
2019-06-12 17:34:17 -请求地址 : http://localhost:8081/sys/menu/update
2019-06-12 17:34:17 -HTTP METHOD : POST
2019-06-12 17:34:17 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-06-12 17:34:17 -参数 : [MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=4, gmtCreate=null, gmtModified=null}]
2019-06-12 17:34:17 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-06-12 17:34:17 -==> Parameters: 106(Long), 乌镇管理(String), /moneyList/moneyWZ(String), moneyList:moneyWZ(String), 1(Integer), fa fa-image(String), 4(Integer), 164(Long)
2019-06-12 17:34:17 -<==    Updates: 1
2019-06-12 17:34:17 -耗时 : 99
2019-06-12 17:34:17 -返回值 : {msg=操作成功, code=0}
2019-06-12 17:34:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:34:17 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 99(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-06-12 17:34:17.135(Timestamp)
2019-06-12 17:34:17 -请求地址 : http://localhost:8081/sys/menu/list
2019-06-12 17:34:17 -HTTP METHOD : GET
2019-06-12 17:34:17 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-06-12 17:34:17 -参数 : [{sort=order_num}]
2019-06-12 17:34:17 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-06-12 17:34:17 -==> Parameters: 
2019-06-12 17:34:17 -<==      Total: 111
2019-06-12 17:34:17 -耗时 : 14
2019-06-12 17:34:17 -<==    Updates: 1
2019-06-12 17:34:17 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=165, parentId=106, name='缴费上传', url='/moneyUpLoad/ElecLogUpLoad', perms='moneyUpLoad:ElecLogUpLoad', type=1, icon='fa fa-bullseye', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-06-12 17:34:19 -请求地址 : http://localhost:8081/index
2019-06-12 17:34:19 -HTTP METHOD : GET
2019-06-12 17:34:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:34:19 -参数 : [{}]
2019-06-12 17:34:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:34:19 -==> Parameters: 1(Long)
2019-06-12 17:34:19 -<==      Total: 51
2019-06-12 17:34:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:34:19 -==> Parameters: 138(Long)
2019-06-12 17:34:19 -<==      Total: 1
2019-06-12 17:34:19 -耗时 : 15
2019-06-12 17:34:19 -返回值 : index_v1
2019-06-12 17:34:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:34:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:34:19.238(Timestamp)
2019-06-12 17:34:19 -请求地址 : http://localhost:8081/main
2019-06-12 17:34:19 -HTTP METHOD : GET
2019-06-12 17:34:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:34:19 -参数 : []
2019-06-12 17:34:19 -耗时 : 0
2019-06-12 17:34:19 -返回值 : main
2019-06-12 17:34:19 -<==    Updates: 1
2019-06-12 17:34:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:34:19 -HTTP METHOD : GET
2019-06-12 17:34:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:34:19 -参数 : []
2019-06-12 17:34:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:34:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:34:19 -<==      Total: 0
2019-06-12 17:34:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:34:19 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:34:19 -<==      Total: 1
2019-06-12 17:34:19 -耗时 : 8
2019-06-12 17:34:19 -返回值 : com.bootdo.common.utils.PageUtils@36a9ce60
2019-06-12 17:34:19 -请求地址 : http://localhost:8081/main
2019-06-12 17:34:19 -HTTP METHOD : GET
2019-06-12 17:34:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:34:19 -参数 : []
2019-06-12 17:34:19 -耗时 : 1
2019-06-12 17:34:19 -返回值 : main
2019-06-12 17:34:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:34:23 -HTTP METHOD : GET
2019-06-12 17:34:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:34:23 -参数 : [userType]
2019-06-12 17:34:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:34:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:34:23 -HTTP METHOD : GET
2019-06-12 17:34:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:34:23 -参数 : [elecType]
2019-06-12 17:34:23 -==> Parameters: userType(String)
2019-06-12 17:34:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:34:23 -==> Parameters: elecType(String)
2019-06-12 17:34:23 -<==      Total: 11
2019-06-12 17:34:23 -耗时 : 3
2019-06-12 17:34:23 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:34:23 -<==      Total: 4
2019-06-12 17:34:23 -耗时 : 5
2019-06-12 17:34:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:34:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:34:24 -HTTP METHOD : GET
2019-06-12 17:34:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:34:24 -参数 : [userType]
2019-06-12 17:34:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:34:24 -==> Parameters: userType(String)
2019-06-12 17:34:24 -<==      Total: 4
2019-06-12 17:34:24 -耗时 : 3
2019-06-12 17:34:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:34:24 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 17:34:24 -HTTP METHOD : GET
2019-06-12 17:34:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:34:24 -参数 : [waterType]
2019-06-12 17:34:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:34:24 -==> Parameters: waterType(String)
2019-06-12 17:34:24 -<==      Total: 4
2019-06-12 17:34:24 -耗时 : 4
2019-06-12 17:34:24 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:35:04 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-12 17:35:04 -HTTP METHOD : GET
2019-06-12 17:35:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-12 17:35:04 -参数 : []
2019-06-12 17:35:04 -耗时 : 0
2019-06-12 17:35:04 -返回值 : moneyList/moneyList
2019-06-12 17:36:38 -请求地址 : http://localhost:8081/index
2019-06-12 17:36:38 -HTTP METHOD : GET
2019-06-12 17:36:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:36:38 -参数 : [{}]
2019-06-12 17:36:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:36:38 -==> Parameters: 1(Long)
2019-06-12 17:36:38 -<==      Total: 51
2019-06-12 17:36:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:36:38 -==> Parameters: 138(Long)
2019-06-12 17:36:38 -<==      Total: 1
2019-06-12 17:36:38 -耗时 : 23
2019-06-12 17:36:38 -返回值 : index_v1
2019-06-12 17:36:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:36:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:36:38.158(Timestamp)
2019-06-12 17:36:38 -请求地址 : http://localhost:8081/main
2019-06-12 17:36:38 -HTTP METHOD : GET
2019-06-12 17:36:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:36:38 -参数 : []
2019-06-12 17:36:38 -耗时 : 0
2019-06-12 17:36:38 -返回值 : main
2019-06-12 17:36:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:36:38 -HTTP METHOD : GET
2019-06-12 17:36:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:36:38 -参数 : []
2019-06-12 17:36:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:36:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:36:38 -<==      Total: 0
2019-06-12 17:36:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:36:38 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:36:38 -<==      Total: 1
2019-06-12 17:36:38 -耗时 : 6
2019-06-12 17:36:38 -返回值 : com.bootdo.common.utils.PageUtils@2b5611c9
2019-06-12 17:36:38 -<==    Updates: 1
2019-06-12 17:36:38 -请求地址 : http://localhost:8081/main
2019-06-12 17:36:38 -HTTP METHOD : GET
2019-06-12 17:36:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:36:38 -参数 : []
2019-06-12 17:36:38 -耗时 : 0
2019-06-12 17:36:38 -返回值 : main
2019-06-12 17:36:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:36:40 -HTTP METHOD : GET
2019-06-12 17:36:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:36:40 -参数 : [userType]
2019-06-12 17:36:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 17:36:40 -HTTP METHOD : GET
2019-06-12 17:36:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:36:40 -参数 : [elecType]
2019-06-12 17:36:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:36:40 -==> Parameters: elecType(String)
2019-06-12 17:36:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:36:40 -==> Parameters: userType(String)
2019-06-12 17:36:40 -<==      Total: 11
2019-06-12 17:36:40 -耗时 : 4
2019-06-12 17:36:40 -<==      Total: 4
2019-06-12 17:36:40 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:36:40 -耗时 : 5
2019-06-12 17:36:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:36:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 17:36:41 -HTTP METHOD : GET
2019-06-12 17:36:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:36:41 -参数 : [userType]
2019-06-12 17:36:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:36:41 -==> Parameters: userType(String)
2019-06-12 17:36:41 -<==      Total: 4
2019-06-12 17:36:41 -耗时 : 3
2019-06-12 17:36:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:36:41 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 17:36:41 -HTTP METHOD : GET
2019-06-12 17:36:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 17:36:41 -参数 : [waterType]
2019-06-12 17:36:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 17:36:41 -==> Parameters: waterType(String)
2019-06-12 17:36:41 -<==      Total: 4
2019-06-12 17:36:41 -耗时 : 3
2019-06-12 17:36:41 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 17:36:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 17:36:47 -HTTP METHOD : GET
2019-06-12 17:36:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 17:36:47 -参数 : []
2019-06-12 17:36:47 -耗时 : 0
2019-06-12 17:36:47 -返回值 : system/dept/deptTree
2019-06-12 17:36:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 17:36:47 -HTTP METHOD : GET
2019-06-12 17:36:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 17:36:47 -参数 : []
2019-06-12 17:36:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 17:36:47 -==> Parameters: 
2019-06-12 17:36:47 -<==      Total: 3
2019-06-12 17:36:47 -耗时 : 60
2019-06-12 17:36:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 17:43:50 -请求地址 : http://localhost:8081/index
2019-06-12 17:43:50 -HTTP METHOD : GET
2019-06-12 17:43:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 17:43:50 -参数 : [{}]
2019-06-12 17:43:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 17:43:50 -==> Parameters: 1(Long)
2019-06-12 17:43:50 -<==      Total: 51
2019-06-12 17:43:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 17:43:50 -==> Parameters: 138(Long)
2019-06-12 17:43:50 -<==      Total: 1
2019-06-12 17:43:50 -耗时 : 23
2019-06-12 17:43:50 -返回值 : index_v1
2019-06-12 17:43:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 17:43:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 17:43:50.313(Timestamp)
2019-06-12 17:43:50 -<==    Updates: 1
2019-06-12 17:43:50 -请求地址 : http://localhost:8081/main
2019-06-12 17:43:50 -HTTP METHOD : GET
2019-06-12 17:43:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:43:50 -参数 : []
2019-06-12 17:43:50 -耗时 : 1
2019-06-12 17:43:50 -返回值 : main
2019-06-12 17:43:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 17:43:50 -HTTP METHOD : GET
2019-06-12 17:43:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 17:43:50 -参数 : []
2019-06-12 17:43:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 17:43:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 17:43:50 -<==      Total: 0
2019-06-12 17:43:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 17:43:50 -==> Parameters: 1(Long), 0(String)
2019-06-12 17:43:50 -<==      Total: 1
2019-06-12 17:43:50 -耗时 : 6
2019-06-12 17:43:50 -返回值 : com.bootdo.common.utils.PageUtils@5a8691db
2019-06-12 17:43:50 -请求地址 : http://localhost:8081/main
2019-06-12 17:43:50 -HTTP METHOD : GET
2019-06-12 17:43:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 17:43:50 -参数 : []
2019-06-12 17:43:50 -耗时 : 1
2019-06-12 17:43:50 -返回值 : main
2019-06-12 17:45:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 99], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 431]
2019-06-12 18:16:39 -Starting BootdoApplication on PC-201905091110 with PID 8124 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 18:16:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 18:16:39 -The following profiles are active: dev
2019-06-12 18:16:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d4b288: startup date [Wed Jun 12 18:16:40 CST 2019]; root of context hierarchy
2019-06-12 18:16:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 18:16:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ab8ffaf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4d122e56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 18:16:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 18:16:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 18:16:53 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 18:16:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 18:16:53 -Starting service [Tomcat]
2019-06-12 18:16:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 18:16:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 18:16:54 -Initializing Spring embedded WebApplicationContext
2019-06-12 18:16:54 -Root WebApplicationContext: initialization completed in 14333 ms
2019-06-12 18:16:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 18:16:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 18:16:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 18:16:55 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 18:16:55 -Filter xssFilter was not registered (disabled)
2019-06-12 18:16:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 18:16:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 18:16:55 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 18:16:55 -Servlet dispatcherServlet mapped to [/]
2019-06-12 18:16:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d4b288: startup date [Wed Jun 12 18:16:40 CST 2019]; root of context hierarchy
2019-06-12 18:17:00 -Using default implementation for ThreadExecutor
2019-06-12 18:17:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 18:17:00 -Quartz Scheduler v.2.3.0 created.
2019-06-12 18:17:00 -RAMJobStore initialized.
2019-06-12 18:17:00 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 18:17:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 18:17:00 -Quartz scheduler version: 2.3.0
2019-06-12 18:17:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3883031d
2019-06-12 18:17:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 18:17:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 18:17:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 18:17:04 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 18:17:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 18:17:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 18:17:04 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 18:17:04 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 18:17:04 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 18:17:04 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 18:17:04 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 18:17:04 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 18:17:04 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 18:17:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 18:17:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 18:17:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 18:17:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 18:17:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 18:17:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 18:17:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 18:17:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 18:17:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 18:17:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 18:17:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 18:17:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 18:17:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 18:17:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 18:17:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 18:17:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 18:17:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 18:17:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 18:17:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 18:17:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 18:17:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 18:17:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 18:17:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 18:17:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 18:17:04 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 18:17:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 18:17:04 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 18:17:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 18:17:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 18:17:05 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 18:17:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 18:17:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 18:17:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 18:17:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 18:17:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 18:17:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 18:17:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 18:17:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 18:17:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 18:17:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 18:17:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 18:17:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 18:17:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 18:17:05 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 18:17:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 18:17:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 18:17:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 18:17:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 18:17:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 18:17:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 18:17:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 18:17:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 18:17:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 18:17:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 18:17:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 18:17:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 18:17:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 18:17:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 18:17:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 18:17:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 18:17:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 18:17:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 18:17:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 18:17:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 18:17:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 18:17:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 18:17:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 18:17:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 18:17:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 18:17:05 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 18:17:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 18:17:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 18:17:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 18:17:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 18:17:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 18:17:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 18:17:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 18:17:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 18:17:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 18:17:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 18:17:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 18:17:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 18:17:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 18:17:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 18:17:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30d4b288: startup date [Wed Jun 12 18:16:40 CST 2019]; root of context hierarchy
2019-06-12 18:17:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 18:17:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 18:17:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 18:17:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 18:17:11 -Registering beans for JMX exposure on startup
2019-06-12 18:17:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 18:17:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 18:17:11 -Starting beans in phase 2147483647
2019-06-12 18:17:11 -Context refreshed
2019-06-12 18:17:12 -Found 1 custom documentation plugin(s)
2019-06-12 18:17:12 -Scanning for api listing references
2019-06-12 18:17:12 -Generating unique operation named: removeUsingPOST_1
2019-06-12 18:17:13 -Generating unique operation named: addUsingGET_1
2019-06-12 18:17:13 -Generating unique operation named: editUsingGET_1
2019-06-12 18:17:13 -Generating unique operation named: listUsingGET_1
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_2
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_3
2019-06-12 18:17:13 -Generating unique operation named: saveUsingPOST_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingGET_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPOST_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPUT_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 18:17:13 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 18:17:13 -Generating unique operation named: addUsingGET_2
2019-06-12 18:17:13 -Generating unique operation named: editUsingGET_2
2019-06-12 18:17:13 -Generating unique operation named: listUsingGET_2
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_4
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_5
2019-06-12 18:17:13 -Generating unique operation named: saveUsingPOST_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPOST_2
2019-06-12 18:17:13 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 18:17:13 -Generating unique operation named: addUsingGET_3
2019-06-12 18:17:13 -Generating unique operation named: editUsingGET_3
2019-06-12 18:17:13 -Generating unique operation named: listUsingGET_3
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_6
2019-06-12 18:17:13 -Generating unique operation named: removeUsingPOST_7
2019-06-12 18:17:13 -Generating unique operation named: saveUsingPOST_3
2019-06-12 18:17:13 -Generating unique operation named: updateUsingGET_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPOST_3
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPUT_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 18:17:13 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 18:17:14 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 18:17:14 -Generating unique operation named: addUsingGET_4
2019-06-12 18:17:14 -Generating unique operation named: editUsingGET_4
2019-06-12 18:17:14 -Generating unique operation named: listUsingGET_4
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_8
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_9
2019-06-12 18:17:14 -Generating unique operation named: saveUsingPOST_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingGET_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPOST_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPUT_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 18:17:14 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 18:17:14 -Generating unique operation named: ElecUsingGET_1
2019-06-12 18:17:14 -Generating unique operation named: addUsingGET_5
2019-06-12 18:17:14 -Generating unique operation named: editUsingGET_5
2019-06-12 18:17:14 -Generating unique operation named: listUsingGET_5
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_10
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_11
2019-06-12 18:17:14 -Generating unique operation named: saveUsingPOST_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingGET_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPOST_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPUT_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 18:17:14 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 18:17:14 -Generating unique operation named: editUsingGET_6
2019-06-12 18:17:14 -Generating unique operation named: listUsingGET_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPOST_6
2019-06-12 18:17:14 -Generating unique operation named: addUsingGET_6
2019-06-12 18:17:14 -Generating unique operation named: editUsingGET_7
2019-06-12 18:17:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 18:17:14 -Generating unique operation named: listUsingGET_7
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_12
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_13
2019-06-12 18:17:14 -Generating unique operation named: saveUsingPOST_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingGET_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPOST_7
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPUT_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 18:17:14 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 18:17:14 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 18:17:14 -Generating unique operation named: addUsingGET_7
2019-06-12 18:17:14 -Generating unique operation named: editUsingGET_8
2019-06-12 18:17:14 -Generating unique operation named: listUsingGET_8
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_14
2019-06-12 18:17:14 -Generating unique operation named: removeUsingPOST_15
2019-06-12 18:17:14 -Generating unique operation named: saveUsingPOST_7
2019-06-12 18:17:14 -Generating unique operation named: updateUsingGET_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPOST_8
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPUT_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 18:17:14 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 18:17:14 -Generating unique operation named: addUsingGET_8
2019-06-12 18:17:15 -Generating unique operation named: editUsingGET_9
2019-06-12 18:17:15 -Generating unique operation named: listUsingGET_9
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_16
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_17
2019-06-12 18:17:15 -Generating unique operation named: saveUsingPOST_8
2019-06-12 18:17:15 -Generating unique operation named: updateUsingGET_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingPOST_9
2019-06-12 18:17:15 -Generating unique operation named: updateUsingPUT_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 18:17:15 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 18:17:15 -Generating unique operation named: addUsingGET_9
2019-06-12 18:17:15 -Generating unique operation named: editUsingGET_10
2019-06-12 18:17:15 -Generating unique operation named: infoUsingGET_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingPOST_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingPUT_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 18:17:15 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 18:17:15 -Generating unique operation named: listUsingGET_10
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_18
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_19
2019-06-12 18:17:15 -Generating unique operation named: saveUsingPOST_9
2019-06-12 18:17:15 -Generating unique operation named: updateUsingPOST_10
2019-06-12 18:17:15 -Generating unique operation named: listUsingGET_11
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_20
2019-06-12 18:17:15 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 18:17:15 -Generating unique operation named: addUsingGET_10
2019-06-12 18:17:15 -Generating unique operation named: editUsingGET_11
2019-06-12 18:17:15 -Generating unique operation named: listUsingGET_12
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_21
2019-06-12 18:17:15 -Generating unique operation named: saveUsingPOST_10
2019-06-12 18:17:15 -Generating unique operation named: treeUsingGET_1
2019-06-12 18:17:15 -Generating unique operation named: treeUsingGET_2
2019-06-12 18:17:15 -Generating unique operation named: updateUsingPOST_11
2019-06-12 18:17:15 -Generating unique operation named: addUsingGET_11
2019-06-12 18:17:15 -Generating unique operation named: editUsingGET_12
2019-06-12 18:17:15 -Generating unique operation named: listUsingGET_13
2019-06-12 18:17:15 -Generating unique operation named: removeUsingPOST_22
2019-06-12 18:17:16 -Generating unique operation named: removeUsingPOST_23
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPOST_12
2019-06-12 18:17:16 -Generating unique operation named: addUsingGET_12
2019-06-12 18:17:16 -Generating unique operation named: editUsingGET_13
2019-06-12 18:17:16 -Generating unique operation named: listUsingGET_14
2019-06-12 18:17:16 -Generating unique operation named: removeUsingPOST_24
2019-06-12 18:17:16 -Generating unique operation named: removeUsingPOST_25
2019-06-12 18:17:16 -Generating unique operation named: saveUsingPOST_11
2019-06-12 18:17:16 -Generating unique operation named: updateUsingGET_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPOST_13
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPUT_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 18:17:16 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 18:17:16 -Generating unique operation named: addUsingGET_13
2019-06-12 18:17:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 18:17:16 -Generating unique operation named: editUsingGET_14
2019-06-12 18:17:16 -Generating unique operation named: listUsingGET_15
2019-06-12 18:17:16 -Generating unique operation named: printEditUsingGET_1
2019-06-12 18:17:16 -Generating unique operation named: removeUsingPOST_26
2019-06-12 18:17:16 -Generating unique operation named: saveUsingPOST_12
2019-06-12 18:17:16 -Generating unique operation named: updateUsingGET_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPOST_14
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPUT_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 18:17:16 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 18:17:16 -Generating unique operation named: addUsingGET_14
2019-06-12 18:17:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 18:17:16 -Generating unique operation named: editUsingGET_15
2019-06-12 18:17:16 -Generating unique operation named: listUsingGET_16
2019-06-12 18:17:16 -Generating unique operation named: saveUsingPOST_13
2019-06-12 18:17:16 -Generating unique operation named: saveUsingPOST_14
2019-06-12 18:17:16 -Generating unique operation named: updateUsingPOST_15
2019-06-12 18:17:16 -Generating unique operation named: listUsingGET_17
2019-06-12 18:17:16 -Generating unique operation named: listUsingHEAD_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingPOST_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingPUT_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingPATCH_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingDELETE_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 18:17:16 -Generating unique operation named: listUsingTRACE_1
2019-06-12 18:17:16 -Generating unique operation named: countDDUsingGET_1
2019-06-12 18:17:16 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 18:17:16 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 18:17:16 -Generating unique operation named: addUsingGET_15
2019-06-12 18:17:16 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 18:17:16 -Generating unique operation named: editUsingGET_16
2019-06-12 18:17:16 -Generating unique operation named: listUsingGET_18
2019-06-12 18:17:16 -Generating unique operation named: removeUsingPOST_27
2019-06-12 18:17:17 -Generating unique operation named: saveUsingPOST_15
2019-06-12 18:17:17 -Generating unique operation named: treeUsingGET_3
2019-06-12 18:17:17 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPOST_16
2019-06-12 18:17:17 -Generating unique operation named: addUsingGET_16
2019-06-12 18:17:17 -Generating unique operation named: editUsingGET_17
2019-06-12 18:17:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 18:17:17 -Generating unique operation named: listUsingGET_19
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_28
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_29
2019-06-12 18:17:17 -Generating unique operation named: saveUsingPOST_16
2019-06-12 18:17:17 -Generating unique operation named: updateUsingGET_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPOST_17
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPUT_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 18:17:17 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 18:17:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 18:17:17 -Generating unique operation named: addUsingGET_17
2019-06-12 18:17:17 -Generating unique operation named: editUsingGET_18
2019-06-12 18:17:17 -Generating unique operation named: listUsingGET_20
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_30
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_31
2019-06-12 18:17:17 -Generating unique operation named: saveUsingPOST_17
2019-06-12 18:17:17 -Generating unique operation named: updateUsingGET_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPOST_18
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPUT_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 18:17:17 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 18:17:17 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-06-12 18:17:17 -Generating unique operation named: addUsingGET_18
2019-06-12 18:17:17 -Generating unique operation named: editUsingGET_19
2019-06-12 18:17:17 -Generating unique operation named: listUsingGET_21
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_32
2019-06-12 18:17:17 -Generating unique operation named: removeUsingPOST_33
2019-06-12 18:17:17 -Generating unique operation named: saveUsingPOST_18
2019-06-12 18:17:17 -Generating unique operation named: updateUsingGET_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPOST_19
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPUT_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 18:17:17 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 18:17:17 -Starting Quartz Scheduler now
2019-06-12 18:17:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 18:17:17 -Starting...
2019-06-12 18:17:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 18:17:17 -Started.
2019-06-12 18:17:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 18:17:17 -Using a shared selector for servlet write/read
2019-06-12 18:17:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 18:17:17 -Started BootdoApplication in 39.707 seconds (JVM running for 41.859)
2019-06-12 18:17:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 18:17:18 -==> Parameters: 
2019-06-12 18:17:18 -<==      Total: 1
2019-06-12 18:18:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 18:22:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 18:22:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 18:22:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2019-06-12 18:22:07 -Enabling session validation scheduler...
2019-06-12 18:22:27 -请求地址 : http://localhost:8081/login;JSESSIONID=b703129d-ebc4-4a1c-9cd4-a73f9a9496d0
2019-06-12 18:22:27 -HTTP METHOD : GET
2019-06-12 18:22:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 18:22:27 -参数 : [{}]
2019-06-12 18:22:27 -耗时 : 6
2019-06-12 18:22:27 -返回值 : login
2019-06-12 18:22:30 -请求地址 : http://localhost:8081/getVerify
2019-06-12 18:22:30 -HTTP METHOD : GET
2019-06-12 18:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 18:22:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5faed333, org.apache.shiro.web.servlet.ShiroHttpServletResponse@60438140]
2019-06-12 18:22:36 -2946
2019-06-12 18:22:37 -耗时 : 7285
2019-06-12 18:22:37 -返回值 : null
2019-06-12 18:22:52 -请求地址 : http://localhost:8081/login
2019-06-12 18:22:52 -HTTP METHOD : POST
2019-06-12 18:22:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 18:22:52 -参数 : [admin, 111111, 2946, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65bc3538]
2019-06-12 18:22:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 18:22:52 -==> Parameters: admin(String)
2019-06-12 18:22:52 -<==      Total: 1
2019-06-12 18:22:52 -耗时 : 264
2019-06-12 18:22:52 -返回值 : {msg=操作成功, code=0}
2019-06-12 18:22:52 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 18:22:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 18:22:52 -==> Parameters: 1(Long), admin(String), 登录(String), 264(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 18:22:52.586(Timestamp)
2019-06-12 18:22:52 -<==    Updates: 1
2019-06-12 18:22:52 -请求地址 : http://localhost:8081/index
2019-06-12 18:22:52 -HTTP METHOD : GET
2019-06-12 18:22:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 18:22:52 -参数 : [{}]
2019-06-12 18:22:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 18:22:53 -==> Parameters: 1(Long)
2019-06-12 18:22:53 -<==      Total: 51
2019-06-12 18:22:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 18:22:53 -==> Parameters: 138(Long)
2019-06-12 18:22:53 -<==      Total: 1
2019-06-12 18:22:53 -耗时 : 478
2019-06-12 18:22:53 -返回值 : index_v1
2019-06-12 18:22:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 18:22:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 478(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 18:22:53.622(Timestamp)
2019-06-12 18:22:53 -<==    Updates: 1
2019-06-12 18:22:53 -请求地址 : http://localhost:8081/main
2019-06-12 18:22:53 -HTTP METHOD : GET
2019-06-12 18:22:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 18:22:53 -参数 : []
2019-06-12 18:22:53 -耗时 : 1
2019-06-12 18:22:53 -返回值 : main
2019-06-12 18:22:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 18:22:55 -HTTP METHOD : GET
2019-06-12 18:22:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 18:22:55 -参数 : []
2019-06-12 18:22:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 18:22:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 18:22:55 -<==      Total: 0
2019-06-12 18:22:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 18:22:55 -==> Parameters: 1(Long), 0(String)
2019-06-12 18:22:55 -<==      Total: 1
2019-06-12 18:22:55 -耗时 : 93
2019-06-12 18:22:55 -返回值 : com.bootdo.common.utils.PageUtils@162304d4
2019-06-12 18:22:56 -请求地址 : http://localhost:8081/main
2019-06-12 18:22:56 -HTTP METHOD : GET
2019-06-12 18:22:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 18:22:56 -参数 : []
2019-06-12 18:22:56 -耗时 : 0
2019-06-12 18:22:56 -返回值 : main
2019-06-12 18:22:59 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/634/s4a_5qhf/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 18:23:00 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 18:23:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 18:23:21 -==> Parameters: 1(Long)
2019-06-12 18:23:21 -<==      Total: 95
2019-06-12 18:23:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 18:23:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 18:23:23 -HTTP METHOD : GET
2019-06-12 18:23:23 -HTTP METHOD : GET
2019-06-12 18:23:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 18:23:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 18:23:23 -参数 : [userType]
2019-06-12 18:23:23 -参数 : [elecType]
2019-06-12 18:23:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 18:23:23 -==> Parameters: userType(String)
2019-06-12 18:23:23 -<==      Total: 4
2019-06-12 18:23:23 -耗时 : 52
2019-06-12 18:23:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 18:23:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 18:23:23 -==> Parameters: elecType(String)
2019-06-12 18:23:23 -<==      Total: 11
2019-06-12 18:23:23 -耗时 : 67
2019-06-12 18:23:23 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 18:23:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 18:23:23 -HTTP METHOD : GET
2019-06-12 18:23:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 18:23:23 -参数 : [userType]
2019-06-12 18:23:23 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 18:23:23 -HTTP METHOD : GET
2019-06-12 18:23:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 18:23:23 -参数 : [waterType]
2019-06-12 18:23:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 18:23:23 -==> Parameters: userType(String)
2019-06-12 18:23:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 18:23:23 -<==      Total: 4
2019-06-12 18:23:23 -耗时 : 15
2019-06-12 18:23:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 18:23:23 -==> Parameters: waterType(String)
2019-06-12 18:23:23 -<==      Total: 4
2019-06-12 18:23:23 -耗时 : 24
2019-06-12 18:23:23 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 18:23:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 18:23:37 -HTTP METHOD : GET
2019-06-12 18:23:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 18:23:37 -参数 : []
2019-06-12 18:23:37 -耗时 : 0
2019-06-12 18:23:37 -返回值 : system/dept/deptTree
2019-06-12 18:23:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 18:23:37 -HTTP METHOD : GET
2019-06-12 18:23:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 18:23:37 -参数 : []
2019-06-12 18:23:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 18:23:37 -==> Parameters: 
2019-06-12 18:23:37 -<==      Total: 3
2019-06-12 18:23:37 -耗时 : 26
2019-06-12 18:23:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 18:23:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-06-12 18:23:39 -==> Parameters: 2019-05(String), 2(String)
2019-06-12 18:23:39 -<==      Total: 1
2019-06-12 18:48:06 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 361]
2019-06-12 19:18:06 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 791]
2019-06-12 19:21:09 -请求地址 : http://localhost:8081/index
2019-06-12 19:21:09 -HTTP METHOD : GET
2019-06-12 19:21:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:21:09 -参数 : [{}]
2019-06-12 19:21:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:21:09 -==> Parameters: 1(Long)
2019-06-12 19:21:09 -<==      Total: 51
2019-06-12 19:21:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:21:09 -==> Parameters: 138(Long)
2019-06-12 19:21:09 -<==      Total: 1
2019-06-12 19:21:09 -耗时 : 131
2019-06-12 19:21:09 -返回值 : index_v1
2019-06-12 19:21:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:21:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 131(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:21:09.865(Timestamp)
2019-06-12 19:21:10 -<==    Updates: 1
2019-06-12 19:21:10 -请求地址 : http://localhost:8081/main
2019-06-12 19:21:10 -HTTP METHOD : GET
2019-06-12 19:21:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:21:10 -参数 : []
2019-06-12 19:21:10 -耗时 : 1
2019-06-12 19:21:10 -返回值 : main
2019-06-12 19:21:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:21:10 -HTTP METHOD : GET
2019-06-12 19:21:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:21:10 -参数 : []
2019-06-12 19:21:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:21:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:21:10 -<==      Total: 0
2019-06-12 19:21:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:21:10 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:21:10 -<==      Total: 1
2019-06-12 19:21:10 -耗时 : 21
2019-06-12 19:21:10 -返回值 : com.bootdo.common.utils.PageUtils@753d8646
2019-06-12 19:21:10 -请求地址 : http://localhost:8081/main
2019-06-12 19:21:10 -HTTP METHOD : GET
2019-06-12 19:21:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:21:10 -参数 : []
2019-06-12 19:21:10 -耗时 : 1
2019-06-12 19:21:10 -返回值 : main
2019-06-12 19:21:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 19:21:15 -==> Parameters: 1(Long)
2019-06-12 19:21:15 -<==      Total: 95
2019-06-12 19:21:15 -请求地址 : http://localhost:8081/water/water
2019-06-12 19:21:15 -HTTP METHOD : GET
2019-06-12 19:21:15 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-06-12 19:21:15 -参数 : []
2019-06-12 19:21:15 -耗时 : 0
2019-06-12 19:21:15 -返回值 : water/water/water
2019-06-12 19:21:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:21:16 -HTTP METHOD : GET
2019-06-12 19:21:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:16 -参数 : [userType]
2019-06-12 19:21:16 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:21:16 -HTTP METHOD : GET
2019-06-12 19:21:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:16 -参数 : [waterType]
2019-06-12 19:21:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:16 -==> Parameters: userType(String)
2019-06-12 19:21:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:16 -==> Parameters: waterType(String)
2019-06-12 19:21:16 -<==      Total: 4
2019-06-12 19:21:16 -耗时 : 7
2019-06-12 19:21:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:16 -<==      Total: 4
2019-06-12 19:21:16 -耗时 : 10
2019-06-12 19:21:16 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:16 -请求地址 : http://localhost:8081/water/water/list
2019-06-12 19:21:16 -HTTP METHOD : GET
2019-06-12 19:21:16 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-06-12 19:21:16 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-06-12 19:21:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-06-12 19:21:16 -==> Parameters: 0(Integer), 10(Integer)
2019-06-12 19:21:16 -<==      Total: 10
2019-06-12 19:21:16 -==>  Preparing: select count(*) from water 
2019-06-12 19:21:16 -==> Parameters: 
2019-06-12 19:21:16 -<==      Total: 1
2019-06-12 19:21:16 -耗时 : 317
2019-06-12 19:21:16 -返回值 : com.bootdo.common.utils.PageUtils@3e857587
2019-06-12 19:21:26 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-06-12 19:21:26 -HTTP METHOD : GET
2019-06-12 19:21:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-06-12 19:21:26 -参数 : []
2019-06-12 19:21:26 -耗时 : 1
2019-06-12 19:21:26 -返回值 : moneyList/moneyWZ
2019-06-12 19:21:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:21:26 -HTTP METHOD : GET
2019-06-12 19:21:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:26 -参数 : [userType]
2019-06-12 19:21:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:26 -==> Parameters: userType(String)
2019-06-12 19:21:26 -<==      Total: 4
2019-06-12 19:21:26 -耗时 : 4
2019-06-12 19:21:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:26 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-06-12 19:21:26 -HTTP METHOD : GET
2019-06-12 19:21:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-06-12 19:21:26 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@2cac4c18]
2019-06-12 19:21:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-06-12 19:21:27 -==> Parameters: 0(Integer), 100(Integer)
2019-06-12 19:21:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:21:27 -HTTP METHOD : GET
2019-06-12 19:21:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:27 -参数 : [userType]
2019-06-12 19:21:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:21:27 -HTTP METHOD : GET
2019-06-12 19:21:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:27 -参数 : [elecType]
2019-06-12 19:21:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:27 -==> Parameters: userType(String)
2019-06-12 19:21:27 -<==      Total: 4
2019-06-12 19:21:27 -耗时 : 8
2019-06-12 19:21:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:27 -==> Parameters: elecType(String)
2019-06-12 19:21:27 -<==      Total: 11
2019-06-12 19:21:27 -耗时 : 12
2019-06-12 19:21:27 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:27 -<==      Total: 100
2019-06-12 19:21:27 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-06-12 19:21:27 -==> Parameters: 
2019-06-12 19:21:27 -<==      Total: 1
2019-06-12 19:21:27 -耗时 : 654
2019-06-12 19:21:27 -返回值 : com.bootdo.common.utils.PageUtils@fee0f73
2019-06-12 19:21:28 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:21:28 -HTTP METHOD : GET
2019-06-12 19:21:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:28 -参数 : [waterType]
2019-06-12 19:21:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:21:28 -HTTP METHOD : GET
2019-06-12 19:21:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:21:28 -参数 : [userType]
2019-06-12 19:21:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:28 -==> Parameters: waterType(String)
2019-06-12 19:21:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:21:28 -==> Parameters: userType(String)
2019-06-12 19:21:28 -<==      Total: 4
2019-06-12 19:21:28 -耗时 : 5
2019-06-12 19:21:28 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:28 -<==      Total: 4
2019-06-12 19:21:28 -耗时 : 65
2019-06-12 19:21:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:21:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:21:45 -HTTP METHOD : GET
2019-06-12 19:21:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:21:45 -参数 : []
2019-06-12 19:21:45 -耗时 : 0
2019-06-12 19:21:45 -返回值 : system/dept/deptTree
2019-06-12 19:21:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:21:45 -HTTP METHOD : GET
2019-06-12 19:21:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:21:45 -参数 : []
2019-06-12 19:21:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:21:45 -==> Parameters: 
2019-06-12 19:21:45 -<==      Total: 3
2019-06-12 19:21:45 -耗时 : 29
2019-06-12 19:21:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:22:07 -Validating all active sessions...
2019-06-12 19:22:07 -Finished session validation.  No sessions were stopped.
2019-06-12 19:22:24 -请求地址 : http://localhost:8081/index
2019-06-12 19:22:24 -HTTP METHOD : GET
2019-06-12 19:22:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:22:24 -参数 : [{}]
2019-06-12 19:22:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:22:24 -==> Parameters: 1(Long)
2019-06-12 19:22:24 -<==      Total: 51
2019-06-12 19:22:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:22:24 -==> Parameters: 138(Long)
2019-06-12 19:22:24 -<==      Total: 1
2019-06-12 19:22:24 -耗时 : 111
2019-06-12 19:22:24 -返回值 : index_v1
2019-06-12 19:22:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:22:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 111(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:22:24.576(Timestamp)
2019-06-12 19:22:24 -<==    Updates: 1
2019-06-12 19:22:24 -请求地址 : http://localhost:8081/main
2019-06-12 19:22:24 -HTTP METHOD : GET
2019-06-12 19:22:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:22:24 -参数 : []
2019-06-12 19:22:24 -耗时 : 0
2019-06-12 19:22:24 -返回值 : main
2019-06-12 19:22:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:22:24 -HTTP METHOD : GET
2019-06-12 19:22:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:22:24 -参数 : []
2019-06-12 19:22:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:22:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:22:24 -请求地址 : http://localhost:8081/main
2019-06-12 19:22:24 -HTTP METHOD : GET
2019-06-12 19:22:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:22:24 -参数 : []
2019-06-12 19:22:24 -耗时 : 3
2019-06-12 19:22:24 -返回值 : main
2019-06-12 19:22:24 -<==      Total: 0
2019-06-12 19:22:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:22:24 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:22:24 -<==      Total: 1
2019-06-12 19:22:24 -耗时 : 129
2019-06-12 19:22:24 -返回值 : com.bootdo.common.utils.PageUtils@298e9c3a
2019-06-12 19:22:29 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:22:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:22:29 -HTTP METHOD : GET
2019-06-12 19:22:29 -HTTP METHOD : GET
2019-06-12 19:22:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:22:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:22:29 -参数 : [userType]
2019-06-12 19:22:29 -参数 : [elecType]
2019-06-12 19:22:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:22:29 -==> Parameters: elecType(String)
2019-06-12 19:22:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:22:29 -==> Parameters: userType(String)
2019-06-12 19:22:29 -<==      Total: 11
2019-06-12 19:22:29 -耗时 : 6
2019-06-12 19:22:29 -<==      Total: 4
2019-06-12 19:22:29 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:22:29 -耗时 : 7
2019-06-12 19:22:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:22:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:22:30 -HTTP METHOD : GET
2019-06-12 19:22:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:22:30 -参数 : [userType]
2019-06-12 19:22:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:22:30 -==> Parameters: userType(String)
2019-06-12 19:22:30 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:22:30 -HTTP METHOD : GET
2019-06-12 19:22:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:22:30 -参数 : [waterType]
2019-06-12 19:22:30 -<==      Total: 4
2019-06-12 19:22:30 -耗时 : 4
2019-06-12 19:22:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:22:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:22:30 -==> Parameters: waterType(String)
2019-06-12 19:22:30 -<==      Total: 4
2019-06-12 19:22:30 -耗时 : 9
2019-06-12 19:22:30 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:22:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:22:37 -HTTP METHOD : GET
2019-06-12 19:22:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:22:37 -参数 : []
2019-06-12 19:22:37 -耗时 : 1
2019-06-12 19:22:37 -返回值 : system/dept/deptTree
2019-06-12 19:22:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:22:37 -HTTP METHOD : GET
2019-06-12 19:22:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:22:37 -参数 : []
2019-06-12 19:22:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:22:37 -==> Parameters: 
2019-06-12 19:22:37 -<==      Total: 3
2019-06-12 19:22:37 -耗时 : 4
2019-06-12 19:22:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:25:39 -Starting BootdoApplication on PC-201905091110 with PID 4444 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 19:25:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 19:25:39 -The following profiles are active: dev
2019-06-12 19:25:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45efc20d: startup date [Wed Jun 12 19:25:40 CST 2019]; root of context hierarchy
2019-06-12 19:25:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 19:25:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e64844e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d8a1738e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 19:25:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 19:25:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:25:52 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 19:25:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 19:25:52 -Starting service [Tomcat]
2019-06-12 19:25:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 19:25:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 19:25:52 -Initializing Spring embedded WebApplicationContext
2019-06-12 19:25:52 -Root WebApplicationContext: initialization completed in 12583 ms
2019-06-12 19:25:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 19:25:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 19:25:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 19:25:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 19:25:53 -Filter xssFilter was not registered (disabled)
2019-06-12 19:25:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 19:25:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 19:25:53 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 19:25:53 -Servlet dispatcherServlet mapped to [/]
2019-06-12 19:25:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45efc20d: startup date [Wed Jun 12 19:25:40 CST 2019]; root of context hierarchy
2019-06-12 19:25:59 -Using default implementation for ThreadExecutor
2019-06-12 19:25:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 19:25:59 -Quartz Scheduler v.2.3.0 created.
2019-06-12 19:25:59 -RAMJobStore initialized.
2019-06-12 19:25:59 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 19:25:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 19:25:59 -Quartz scheduler version: 2.3.0
2019-06-12 19:25:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6104691c
2019-06-12 19:26:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 19:26:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 19:26:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 19:26:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 19:26:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 19:26:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 19:26:07 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 19:26:07 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 19:26:07 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 19:26:07 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 19:26:07 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 19:26:07 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 19:26:07 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 19:26:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 19:26:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 19:26:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 19:26:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 19:26:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 19:26:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 19:26:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 19:26:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 19:26:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 19:26:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 19:26:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 19:26:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 19:26:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 19:26:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 19:26:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 19:26:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 19:26:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 19:26:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 19:26:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:26:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 19:26:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 19:26:07 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 19:26:07 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 19:26:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 19:26:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 19:26:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 19:26:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 19:26:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 19:26:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:26:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 19:26:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 19:26:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 19:26:07 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 19:26:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 19:26:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 19:26:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 19:26:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 19:26:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 19:26:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 19:26:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 19:26:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 19:26:07 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 19:26:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 19:26:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 19:26:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 19:26:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 19:26:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 19:26:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 19:26:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:26:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 19:26:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 19:26:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 19:26:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 19:26:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 19:26:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 19:26:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 19:26:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 19:26:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 19:26:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 19:26:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 19:26:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 19:26:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 19:26:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 19:26:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 19:26:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 19:26:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 19:26:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 19:26:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 19:26:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 19:26:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:26:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 19:26:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 19:26:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 19:26:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 19:26:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 19:26:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 19:26:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 19:26:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 19:26:08 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:26:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 19:26:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:26:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:26:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 19:26:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:26:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 19:26:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:26:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 19:26:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 19:26:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 19:26:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 19:26:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 19:26:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 19:26:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:26:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45efc20d: startup date [Wed Jun 12 19:25:40 CST 2019]; root of context hierarchy
2019-06-12 19:26:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:26:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:26:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 19:26:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 19:26:13 -Registering beans for JMX exposure on startup
2019-06-12 19:26:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 19:26:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 19:26:13 -Starting beans in phase 2147483647
2019-06-12 19:26:13 -Context refreshed
2019-06-12 19:26:13 -Found 1 custom documentation plugin(s)
2019-06-12 19:26:13 -Scanning for api listing references
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_1
2019-06-12 19:26:14 -Generating unique operation named: addUsingGET_1
2019-06-12 19:26:14 -Generating unique operation named: editUsingGET_1
2019-06-12 19:26:14 -Generating unique operation named: listUsingGET_1
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_2
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_3
2019-06-12 19:26:14 -Generating unique operation named: saveUsingPOST_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingGET_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPOST_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPUT_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 19:26:14 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 19:26:14 -Generating unique operation named: addUsingGET_2
2019-06-12 19:26:14 -Generating unique operation named: editUsingGET_2
2019-06-12 19:26:14 -Generating unique operation named: listUsingGET_2
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_4
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_5
2019-06-12 19:26:14 -Generating unique operation named: saveUsingPOST_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPOST_2
2019-06-12 19:26:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 19:26:14 -Generating unique operation named: addUsingGET_3
2019-06-12 19:26:14 -Generating unique operation named: editUsingGET_3
2019-06-12 19:26:14 -Generating unique operation named: listUsingGET_3
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_6
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_7
2019-06-12 19:26:14 -Generating unique operation named: saveUsingPOST_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingGET_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPOST_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPUT_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 19:26:14 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 19:26:14 -Generating unique operation named: addUsingGET_4
2019-06-12 19:26:14 -Generating unique operation named: editUsingGET_4
2019-06-12 19:26:14 -Generating unique operation named: listUsingGET_4
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_8
2019-06-12 19:26:14 -Generating unique operation named: removeUsingPOST_9
2019-06-12 19:26:14 -Generating unique operation named: saveUsingPOST_4
2019-06-12 19:26:14 -Generating unique operation named: updateUsingGET_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPOST_4
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPUT_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 19:26:14 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 19:26:14 -Generating unique operation named: ElecUsingGET_1
2019-06-12 19:26:15 -Generating unique operation named: addUsingGET_5
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_5
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_5
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_10
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_11
2019-06-12 19:26:15 -Generating unique operation named: saveUsingPOST_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingGET_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPUT_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 19:26:15 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_6
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_6
2019-06-12 19:26:15 -Generating unique operation named: addUsingGET_6
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_7
2019-06-12 19:26:15 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_7
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_12
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_13
2019-06-12 19:26:15 -Generating unique operation named: saveUsingPOST_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingGET_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPUT_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 19:26:15 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 19:26:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 19:26:15 -Generating unique operation named: addUsingGET_7
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_8
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_8
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_14
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_15
2019-06-12 19:26:15 -Generating unique operation named: saveUsingPOST_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingGET_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_8
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPUT_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 19:26:15 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 19:26:15 -Generating unique operation named: addUsingGET_8
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_9
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_9
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_16
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_17
2019-06-12 19:26:15 -Generating unique operation named: saveUsingPOST_8
2019-06-12 19:26:15 -Generating unique operation named: updateUsingGET_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_9
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPUT_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 19:26:15 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 19:26:15 -Generating unique operation named: addUsingGET_9
2019-06-12 19:26:15 -Generating unique operation named: editUsingGET_10
2019-06-12 19:26:15 -Generating unique operation named: infoUsingGET_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingPOST_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingPUT_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 19:26:15 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_10
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_18
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_19
2019-06-12 19:26:15 -Generating unique operation named: saveUsingPOST_9
2019-06-12 19:26:15 -Generating unique operation named: updateUsingPOST_10
2019-06-12 19:26:15 -Generating unique operation named: listUsingGET_11
2019-06-12 19:26:15 -Generating unique operation named: removeUsingPOST_20
2019-06-12 19:26:15 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_10
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_11
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_12
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_21
2019-06-12 19:26:16 -Generating unique operation named: saveUsingPOST_10
2019-06-12 19:26:16 -Generating unique operation named: treeUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: treeUsingGET_2
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPOST_11
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_11
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_12
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_13
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_22
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_23
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPOST_12
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_12
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_13
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_14
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_24
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_25
2019-06-12 19:26:16 -Generating unique operation named: saveUsingPOST_11
2019-06-12 19:26:16 -Generating unique operation named: updateUsingGET_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPOST_13
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPUT_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 19:26:16 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_13
2019-06-12 19:26:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_14
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_15
2019-06-12 19:26:16 -Generating unique operation named: printEditUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: removeUsingPOST_26
2019-06-12 19:26:16 -Generating unique operation named: saveUsingPOST_12
2019-06-12 19:26:16 -Generating unique operation named: updateUsingGET_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPOST_14
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPUT_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 19:26:16 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_14
2019-06-12 19:26:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_15
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_16
2019-06-12 19:26:16 -Generating unique operation named: saveUsingPOST_13
2019-06-12 19:26:16 -Generating unique operation named: saveUsingPOST_14
2019-06-12 19:26:16 -Generating unique operation named: updateUsingPOST_15
2019-06-12 19:26:16 -Generating unique operation named: listUsingGET_17
2019-06-12 19:26:16 -Generating unique operation named: listUsingHEAD_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingPOST_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingPUT_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingPATCH_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingDELETE_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 19:26:16 -Generating unique operation named: listUsingTRACE_1
2019-06-12 19:26:16 -Generating unique operation named: countDDUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 19:26:16 -Generating unique operation named: addUsingGET_15
2019-06-12 19:26:16 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 19:26:16 -Generating unique operation named: editUsingGET_16
2019-06-12 19:26:17 -Generating unique operation named: listUsingGET_18
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_27
2019-06-12 19:26:17 -Generating unique operation named: saveUsingPOST_15
2019-06-12 19:26:17 -Generating unique operation named: treeUsingGET_3
2019-06-12 19:26:17 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPOST_16
2019-06-12 19:26:17 -Generating unique operation named: addUsingGET_16
2019-06-12 19:26:17 -Generating unique operation named: editUsingGET_17
2019-06-12 19:26:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 19:26:17 -Generating unique operation named: listUsingGET_19
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_28
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_29
2019-06-12 19:26:17 -Generating unique operation named: saveUsingPOST_16
2019-06-12 19:26:17 -Generating unique operation named: updateUsingGET_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPOST_17
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPUT_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 19:26:17 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 19:26:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 19:26:17 -Generating unique operation named: addUsingGET_17
2019-06-12 19:26:17 -Generating unique operation named: editUsingGET_18
2019-06-12 19:26:17 -Generating unique operation named: listUsingGET_20
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_30
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_31
2019-06-12 19:26:17 -Generating unique operation named: saveUsingPOST_17
2019-06-12 19:26:17 -Generating unique operation named: updateUsingGET_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPOST_18
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPUT_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 19:26:17 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 19:26:17 -Generating unique operation named: addUsingGET_18
2019-06-12 19:26:17 -Generating unique operation named: editUsingGET_19
2019-06-12 19:26:17 -Generating unique operation named: listUsingGET_21
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_32
2019-06-12 19:26:17 -Generating unique operation named: removeUsingPOST_33
2019-06-12 19:26:17 -Generating unique operation named: saveUsingPOST_18
2019-06-12 19:26:17 -Generating unique operation named: updateUsingGET_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPOST_19
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPUT_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 19:26:17 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 19:26:18 -Starting Quartz Scheduler now
2019-06-12 19:26:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 19:26:18 -Starting...
2019-06-12 19:26:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 19:26:18 -Started.
2019-06-12 19:26:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 19:26:18 -Using a shared selector for servlet write/read
2019-06-12 19:26:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 19:26:18 -Started BootdoApplication in 41.006 seconds (JVM running for 42.668)
2019-06-12 19:26:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 19:26:18 -==> Parameters: 
2019-06-12 19:26:18 -<==      Total: 1
2019-06-12 19:27:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 19:30:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 19:30:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 19:30:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 212 ms
2019-06-12 19:30:10 -Enabling session validation scheduler...
2019-06-12 19:30:10 -请求地址 : http://localhost:8081/login;JSESSIONID=d6dd17e3-a9c1-4769-8066-1e75c55535b4
2019-06-12 19:30:10 -HTTP METHOD : GET
2019-06-12 19:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 19:30:10 -参数 : [{}]
2019-06-12 19:30:10 -耗时 : 9
2019-06-12 19:30:10 -返回值 : login
2019-06-12 19:30:12 -请求地址 : http://localhost:8081/getVerify
2019-06-12 19:30:12 -HTTP METHOD : GET
2019-06-12 19:30:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 19:30:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@556a6a6b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1068eea2]
2019-06-12 19:30:18 -6574
2019-06-12 19:30:19 -耗时 : 6809
2019-06-12 19:30:19 -返回值 : null
2019-06-12 19:30:19 -请求地址 : http://localhost:8081/login
2019-06-12 19:30:19 -HTTP METHOD : GET
2019-06-12 19:30:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 19:30:19 -参数 : [{}]
2019-06-12 19:30:19 -耗时 : 0
2019-06-12 19:30:19 -返回值 : login
2019-06-12 19:30:26 -请求地址 : http://localhost:8081/login
2019-06-12 19:30:26 -HTTP METHOD : POST
2019-06-12 19:30:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 19:30:26 -参数 : [admin, 111111, 6574, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ba870a9]
2019-06-12 19:30:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 19:30:26 -==> Parameters: admin(String)
2019-06-12 19:30:26 -<==      Total: 1
2019-06-12 19:30:26 -耗时 : 135
2019-06-12 19:30:26 -返回值 : {msg=操作成功, code=0}
2019-06-12 19:30:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 19:30:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:30:26 -==> Parameters: 1(Long), admin(String), 登录(String), 135(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 19:30:26.466(Timestamp)
2019-06-12 19:30:26 -<==    Updates: 1
2019-06-12 19:30:26 -请求地址 : http://localhost:8081/index
2019-06-12 19:30:26 -HTTP METHOD : GET
2019-06-12 19:30:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:30:26 -参数 : [{}]
2019-06-12 19:30:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:30:26 -==> Parameters: 1(Long)
2019-06-12 19:30:26 -<==      Total: 51
2019-06-12 19:30:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:30:26 -==> Parameters: 138(Long)
2019-06-12 19:30:26 -<==      Total: 1
2019-06-12 19:30:26 -耗时 : 240
2019-06-12 19:30:26 -返回值 : index_v1
2019-06-12 19:30:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:30:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 241(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:30:26.998(Timestamp)
2019-06-12 19:30:27 -<==    Updates: 1
2019-06-12 19:30:27 -请求地址 : http://localhost:8081/main
2019-06-12 19:30:27 -HTTP METHOD : GET
2019-06-12 19:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:30:27 -参数 : []
2019-06-12 19:30:27 -耗时 : 1
2019-06-12 19:30:27 -返回值 : main
2019-06-12 19:30:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:30:27 -HTTP METHOD : GET
2019-06-12 19:30:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:30:27 -参数 : []
2019-06-12 19:30:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:30:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:30:27 -<==      Total: 0
2019-06-12 19:30:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:30:27 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:30:27 -<==      Total: 1
2019-06-12 19:30:27 -耗时 : 77
2019-06-12 19:30:27 -返回值 : com.bootdo.common.utils.PageUtils@73cab430
2019-06-12 19:30:27 -请求地址 : http://localhost:8081/main
2019-06-12 19:30:27 -HTTP METHOD : GET
2019-06-12 19:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:30:27 -参数 : []
2019-06-12 19:30:27 -耗时 : 1
2019-06-12 19:30:27 -返回值 : main
2019-06-12 19:30:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 19:30:31 -==> Parameters: 1(Long)
2019-06-12 19:30:31 -<==      Total: 95
2019-06-12 19:30:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:30:32 -HTTP METHOD : GET
2019-06-12 19:30:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:30:32 -参数 : [userType]
2019-06-12 19:30:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:30:32 -HTTP METHOD : GET
2019-06-12 19:30:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:30:32 -参数 : [elecType]
2019-06-12 19:30:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:30:32 -==> Parameters: elecType(String)
2019-06-12 19:30:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:30:32 -==> Parameters: userType(String)
2019-06-12 19:30:32 -<==      Total: 11
2019-06-12 19:30:32 -耗时 : 94
2019-06-12 19:30:32 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:30:32 -<==      Total: 4
2019-06-12 19:30:32 -耗时 : 126
2019-06-12 19:30:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:30:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:30:32 -HTTP METHOD : GET
2019-06-12 19:30:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:30:32 -参数 : [userType]
2019-06-12 19:30:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:30:32 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:30:32 -HTTP METHOD : GET
2019-06-12 19:30:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:30:32 -参数 : [waterType]
2019-06-12 19:30:32 -==> Parameters: userType(String)
2019-06-12 19:30:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:30:32 -<==      Total: 4
2019-06-12 19:30:32 -耗时 : 13
2019-06-12 19:30:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:30:32 -==> Parameters: waterType(String)
2019-06-12 19:30:32 -<==      Total: 4
2019-06-12 19:30:32 -耗时 : 18
2019-06-12 19:30:32 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:30:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:30:43 -HTTP METHOD : GET
2019-06-12 19:30:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:30:43 -参数 : []
2019-06-12 19:30:43 -耗时 : 1
2019-06-12 19:30:43 -返回值 : system/dept/deptTree
2019-06-12 19:30:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:30:43 -HTTP METHOD : GET
2019-06-12 19:30:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:30:43 -参数 : []
2019-06-12 19:30:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:30:43 -==> Parameters: 
2019-06-12 19:30:43 -<==      Total: 3
2019-06-12 19:30:43 -耗时 : 34
2019-06-12 19:30:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:31:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:31:08 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 19:31:08.535(Timestamp)
2019-06-12 19:31:08 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:31:08 -<==    Updates: 1
2019-06-12 19:31:12 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:31:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:31:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 19:31:12.667(Timestamp)
2019-06-12 19:31:12 -<==    Updates: 1
2019-06-12 19:45:49 -请求地址 : http://localhost:8081/index
2019-06-12 19:45:49 -HTTP METHOD : GET
2019-06-12 19:45:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:45:49 -参数 : [{}]
2019-06-12 19:45:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:45:49 -==> Parameters: 1(Long)
2019-06-12 19:45:49 -<==      Total: 51
2019-06-12 19:45:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:45:49 -==> Parameters: 138(Long)
2019-06-12 19:45:49 -<==      Total: 1
2019-06-12 19:45:49 -耗时 : 79
2019-06-12 19:45:49 -返回值 : index_v1
2019-06-12 19:45:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:45:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 79(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:45:49.369(Timestamp)
2019-06-12 19:45:49 -<==    Updates: 1
2019-06-12 19:45:49 -请求地址 : http://localhost:8081/main
2019-06-12 19:45:49 -HTTP METHOD : GET
2019-06-12 19:45:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:45:49 -参数 : []
2019-06-12 19:45:49 -耗时 : 1
2019-06-12 19:45:49 -返回值 : main
2019-06-12 19:45:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:45:50 -HTTP METHOD : GET
2019-06-12 19:45:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:45:50 -参数 : []
2019-06-12 19:45:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:45:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:45:50 -<==      Total: 0
2019-06-12 19:45:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:45:50 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:45:50 -<==      Total: 1
2019-06-12 19:45:50 -耗时 : 27
2019-06-12 19:45:50 -返回值 : com.bootdo.common.utils.PageUtils@227b1d2a
2019-06-12 19:45:50 -请求地址 : http://localhost:8081/main
2019-06-12 19:45:50 -HTTP METHOD : GET
2019-06-12 19:45:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:45:50 -参数 : []
2019-06-12 19:45:50 -耗时 : 1
2019-06-12 19:45:50 -返回值 : main
2019-06-12 19:45:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 19:45:53 -==> Parameters: 1(Long)
2019-06-12 19:45:53 -<==      Total: 95
2019-06-12 19:45:53 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-06-12 19:45:53 -HTTP METHOD : GET
2019-06-12 19:45:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-06-12 19:45:53 -参数 : []
2019-06-12 19:45:53 -耗时 : 1
2019-06-12 19:45:53 -返回值 : moneyList/moneyWZ
2019-06-12 19:45:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:45:54 -HTTP METHOD : GET
2019-06-12 19:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:45:54 -参数 : [userType]
2019-06-12 19:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:45:54 -==> Parameters: userType(String)
2019-06-12 19:45:54 -<==      Total: 4
2019-06-12 19:45:54 -耗时 : 5
2019-06-12 19:45:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:45:54 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-06-12 19:45:54 -HTTP METHOD : GET
2019-06-12 19:45:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-06-12 19:45:54 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@2fd21a3a]
2019-06-12 19:45:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-06-12 19:45:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:45:54 -HTTP METHOD : GET
2019-06-12 19:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:45:54 -参数 : [userType]
2019-06-12 19:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:45:54 -==> Parameters: userType(String)
2019-06-12 19:45:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:45:54 -HTTP METHOD : GET
2019-06-12 19:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:45:54 -参数 : [elecType]
2019-06-12 19:45:54 -==> Parameters: 0(Integer), 100(Integer)
2019-06-12 19:45:54 -<==      Total: 4
2019-06-12 19:45:54 -耗时 : 51
2019-06-12 19:45:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:45:54 -==> Parameters: elecType(String)
2019-06-12 19:45:54 -<==      Total: 11
2019-06-12 19:45:54 -耗时 : 59
2019-06-12 19:45:54 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:45:55 -<==      Total: 100
2019-06-12 19:45:55 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-06-12 19:45:55 -==> Parameters: 
2019-06-12 19:45:55 -<==      Total: 1
2019-06-12 19:45:55 -耗时 : 308
2019-06-12 19:45:55 -返回值 : com.bootdo.common.utils.PageUtils@56677aef
2019-06-12 19:45:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:45:55 -HTTP METHOD : GET
2019-06-12 19:45:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:45:55 -参数 : [userType]
2019-06-12 19:45:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:45:55 -==> Parameters: userType(String)
2019-06-12 19:45:55 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:45:55 -HTTP METHOD : GET
2019-06-12 19:45:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:45:55 -参数 : [waterType]
2019-06-12 19:45:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:45:55 -==> Parameters: waterType(String)
2019-06-12 19:45:55 -<==      Total: 4
2019-06-12 19:45:55 -耗时 : 6
2019-06-12 19:45:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:45:55 -<==      Total: 4
2019-06-12 19:45:55 -耗时 : 79
2019-06-12 19:45:55 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:46:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:46:05 -HTTP METHOD : GET
2019-06-12 19:46:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:46:05 -参数 : []
2019-06-12 19:46:05 -耗时 : 1
2019-06-12 19:46:05 -返回值 : system/dept/deptTree
2019-06-12 19:46:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:46:05 -HTTP METHOD : GET
2019-06-12 19:46:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:46:05 -参数 : []
2019-06-12 19:46:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:46:05 -==> Parameters: 
2019-06-12 19:46:05 -<==      Total: 3
2019-06-12 19:46:05 -耗时 : 4
2019-06-12 19:46:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:46:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:46:09 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:46:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 19:46:09.526(Timestamp)
2019-06-12 19:46:09 -<==    Updates: 1
2019-06-12 19:46:20 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:49:14 -请求地址 : http://localhost:8081/index
2019-06-12 19:49:14 -HTTP METHOD : GET
2019-06-12 19:49:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:49:14 -参数 : [{}]
2019-06-12 19:49:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:49:14 -==> Parameters: 1(Long)
2019-06-12 19:49:15 -<==      Total: 51
2019-06-12 19:49:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:49:15 -==> Parameters: 138(Long)
2019-06-12 19:49:15 -<==      Total: 1
2019-06-12 19:49:15 -耗时 : 150
2019-06-12 19:49:15 -返回值 : index_v1
2019-06-12 19:49:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:49:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 151(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:49:15.022(Timestamp)
2019-06-12 19:49:15 -<==    Updates: 1
2019-06-12 19:49:15 -请求地址 : http://localhost:8081/main
2019-06-12 19:49:15 -HTTP METHOD : GET
2019-06-12 19:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:49:15 -参数 : []
2019-06-12 19:49:15 -耗时 : 0
2019-06-12 19:49:15 -返回值 : main
2019-06-12 19:49:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:49:15 -HTTP METHOD : GET
2019-06-12 19:49:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:49:15 -参数 : []
2019-06-12 19:49:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:49:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:49:15 -请求地址 : http://localhost:8081/main
2019-06-12 19:49:15 -HTTP METHOD : GET
2019-06-12 19:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:49:15 -参数 : []
2019-06-12 19:49:15 -耗时 : 1
2019-06-12 19:49:15 -返回值 : main
2019-06-12 19:49:15 -<==      Total: 0
2019-06-12 19:49:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:49:15 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:49:15 -<==      Total: 1
2019-06-12 19:49:15 -耗时 : 127
2019-06-12 19:49:15 -返回值 : com.bootdo.common.utils.PageUtils@95ff753
2019-06-12 19:49:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:49:17 -HTTP METHOD : GET
2019-06-12 19:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:49:17 -参数 : [userType]
2019-06-12 19:49:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:49:17 -HTTP METHOD : GET
2019-06-12 19:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:49:17 -参数 : [elecType]
2019-06-12 19:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:49:17 -==> Parameters: userType(String)
2019-06-12 19:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:49:17 -==> Parameters: elecType(String)
2019-06-12 19:49:17 -<==      Total: 4
2019-06-12 19:49:17 -耗时 : 4
2019-06-12 19:49:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:49:17 -<==      Total: 11
2019-06-12 19:49:17 -耗时 : 6
2019-06-12 19:49:17 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:49:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:49:18 -HTTP METHOD : GET
2019-06-12 19:49:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:49:18 -参数 : [userType]
2019-06-12 19:49:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:49:18 -==> Parameters: userType(String)
2019-06-12 19:49:18 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:49:18 -HTTP METHOD : GET
2019-06-12 19:49:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:49:18 -参数 : [waterType]
2019-06-12 19:49:18 -<==      Total: 4
2019-06-12 19:49:18 -耗时 : 5
2019-06-12 19:49:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:49:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:49:18 -==> Parameters: waterType(String)
2019-06-12 19:49:18 -<==      Total: 4
2019-06-12 19:49:18 -耗时 : 9
2019-06-12 19:49:18 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:49:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:49:31 -HTTP METHOD : GET
2019-06-12 19:49:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:49:31 -参数 : []
2019-06-12 19:49:31 -耗时 : 1
2019-06-12 19:49:31 -返回值 : system/dept/deptTree
2019-06-12 19:49:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:49:31 -HTTP METHOD : GET
2019-06-12 19:49:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:49:31 -参数 : []
2019-06-12 19:49:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:49:31 -==> Parameters: 
2019-06-12 19:49:31 -<==      Total: 3
2019-06-12 19:49:31 -耗时 : 3
2019-06-12 19:49:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:49:49 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:49:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:49:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 19:49:49.515(Timestamp)
2019-06-12 19:49:49 -<==    Updates: 1
2019-06-12 19:51:52 -请求地址 : http://localhost:8081/index
2019-06-12 19:51:52 -HTTP METHOD : GET
2019-06-12 19:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 19:51:52 -参数 : [{}]
2019-06-12 19:51:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 19:51:52 -==> Parameters: 1(Long)
2019-06-12 19:51:52 -<==      Total: 51
2019-06-12 19:51:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 19:51:52 -==> Parameters: 138(Long)
2019-06-12 19:51:52 -<==      Total: 1
2019-06-12 19:51:52 -耗时 : 22
2019-06-12 19:51:52 -返回值 : index_v1
2019-06-12 19:51:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:51:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 19:51:52.228(Timestamp)
2019-06-12 19:51:52 -<==    Updates: 1
2019-06-12 19:51:52 -请求地址 : http://localhost:8081/main
2019-06-12 19:51:52 -HTTP METHOD : GET
2019-06-12 19:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:51:52 -参数 : []
2019-06-12 19:51:52 -耗时 : 1
2019-06-12 19:51:52 -返回值 : main
2019-06-12 19:51:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 19:51:52 -HTTP METHOD : GET
2019-06-12 19:51:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 19:51:52 -参数 : []
2019-06-12 19:51:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 19:51:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 19:51:52 -<==      Total: 0
2019-06-12 19:51:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 19:51:52 -==> Parameters: 1(Long), 0(String)
2019-06-12 19:51:52 -<==      Total: 1
2019-06-12 19:51:52 -耗时 : 7
2019-06-12 19:51:52 -返回值 : com.bootdo.common.utils.PageUtils@512591b4
2019-06-12 19:51:52 -请求地址 : http://localhost:8081/main
2019-06-12 19:51:52 -HTTP METHOD : GET
2019-06-12 19:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 19:51:52 -参数 : []
2019-06-12 19:51:52 -耗时 : 2
2019-06-12 19:51:52 -返回值 : main
2019-06-12 19:51:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:51:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 19:51:56 -HTTP METHOD : GET
2019-06-12 19:51:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:51:56 -参数 : [elecType]
2019-06-12 19:51:56 -HTTP METHOD : GET
2019-06-12 19:51:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:51:56 -参数 : [userType]
2019-06-12 19:51:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:51:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:51:56 -==> Parameters: userType(String)
2019-06-12 19:51:56 -==> Parameters: elecType(String)
2019-06-12 19:51:56 -<==      Total: 4
2019-06-12 19:51:56 -耗时 : 5
2019-06-12 19:51:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:51:56 -<==      Total: 11
2019-06-12 19:51:56 -耗时 : 9
2019-06-12 19:51:56 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:51:57 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 19:51:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 19:51:57 -HTTP METHOD : GET
2019-06-12 19:51:57 -HTTP METHOD : GET
2019-06-12 19:51:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:51:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 19:51:57 -参数 : [waterType]
2019-06-12 19:51:57 -参数 : [userType]
2019-06-12 19:51:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:51:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 19:51:57 -==> Parameters: waterType(String)
2019-06-12 19:51:57 -==> Parameters: userType(String)
2019-06-12 19:51:57 -<==      Total: 4
2019-06-12 19:51:57 -耗时 : 5
2019-06-12 19:51:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:51:57 -<==      Total: 4
2019-06-12 19:51:57 -耗时 : 8
2019-06-12 19:51:57 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 19:52:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 19:52:04 -HTTP METHOD : GET
2019-06-12 19:52:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 19:52:04 -参数 : []
2019-06-12 19:52:04 -耗时 : 0
2019-06-12 19:52:04 -返回值 : system/dept/deptTree
2019-06-12 19:52:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 19:52:05 -HTTP METHOD : GET
2019-06-12 19:52:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 19:52:05 -参数 : []
2019-06-12 19:52:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 19:52:05 -==> Parameters: 
2019-06-12 19:52:05 -<==      Total: 3
2019-06-12 19:52:05 -耗时 : 4
2019-06-12 19:52:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 19:52:11 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 19:52:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 19:52:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 19:52:11.439(Timestamp)
2019-06-12 19:52:11 -<==    Updates: 1
2019-06-12 19:53:35 -Starting BootdoApplication on PC-201905091110 with PID 3876 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 19:53:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 19:53:35 -The following profiles are active: dev
2019-06-12 19:53:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Wed Jun 12 19:53:35 CST 2019]; root of context hierarchy
2019-06-12 19:53:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 19:53:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3ffdce9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c6590b90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 19:53:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 19:53:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 19:53:50 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 19:53:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 19:53:50 -Starting service [Tomcat]
2019-06-12 19:53:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 19:53:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 19:53:50 -Initializing Spring embedded WebApplicationContext
2019-06-12 19:53:50 -Root WebApplicationContext: initialization completed in 15070 ms
2019-06-12 19:53:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 19:53:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 19:53:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 19:53:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 19:53:51 -Filter xssFilter was not registered (disabled)
2019-06-12 19:53:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 19:53:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 19:53:51 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 19:53:51 -Servlet dispatcherServlet mapped to [/]
2019-06-12 19:53:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Wed Jun 12 19:53:35 CST 2019]; root of context hierarchy
2019-06-12 19:53:59 -Using default implementation for ThreadExecutor
2019-06-12 19:53:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 19:53:59 -Quartz Scheduler v.2.3.0 created.
2019-06-12 19:53:59 -RAMJobStore initialized.
2019-06-12 19:53:59 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 19:53:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 19:53:59 -Quartz scheduler version: 2.3.0
2019-06-12 19:53:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@b3042ed
2019-06-12 19:54:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 19:54:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 19:54:04 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 19:54:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 19:54:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 19:54:04 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 19:54:04 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 19:54:04 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 19:54:04 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 19:54:04 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 19:54:04 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 19:54:04 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 19:54:04 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 19:54:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 19:54:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 19:54:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 19:54:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 19:54:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 19:54:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 19:54:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 19:54:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 19:54:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 19:54:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 19:54:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 19:54:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 19:54:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 19:54:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 19:54:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 19:54:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 19:54:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 19:54:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 19:54:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 19:54:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 19:54:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 19:54:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 19:54:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 19:54:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 19:54:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 19:54:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 19:54:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 19:54:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 19:54:04 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 19:54:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 19:54:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 19:54:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 19:54:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 19:54:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 19:54:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 19:54:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 19:54:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 19:54:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 19:54:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 19:54:04 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 19:54:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 19:54:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 19:54:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 19:54:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 19:54:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 19:54:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 19:54:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 19:54:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 19:54:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 19:54:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 19:54:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 19:54:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 19:54:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 19:54:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 19:54:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 19:54:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 19:54:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 19:54:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 19:54:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 19:54:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 19:54:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 19:54:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 19:54:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 19:54:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 19:54:04 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 19:54:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 19:54:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 19:54:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 19:54:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 19:54:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 19:54:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 19:54:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 19:54:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 19:54:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 19:54:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 19:54:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 19:54:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 19:54:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:54:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Wed Jun 12 19:53:35 CST 2019]; root of context hierarchy
2019-06-12 19:54:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:54:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 19:54:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 19:54:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 19:54:09 -Registering beans for JMX exposure on startup
2019-06-12 19:54:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 19:54:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 19:54:09 -Starting beans in phase 2147483647
2019-06-12 19:54:09 -Context refreshed
2019-06-12 19:54:09 -Found 1 custom documentation plugin(s)
2019-06-12 19:54:09 -Scanning for api listing references
2019-06-12 19:54:10 -Generating unique operation named: removeUsingPOST_1
2019-06-12 19:54:10 -Generating unique operation named: addUsingGET_1
2019-06-12 19:54:10 -Generating unique operation named: editUsingGET_1
2019-06-12 19:54:10 -Generating unique operation named: listUsingGET_1
2019-06-12 19:54:10 -Generating unique operation named: removeUsingPOST_2
2019-06-12 19:54:10 -Generating unique operation named: removeUsingPOST_3
2019-06-12 19:54:10 -Generating unique operation named: saveUsingPOST_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingGET_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPUT_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 19:54:11 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 19:54:11 -Generating unique operation named: addUsingGET_2
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_2
2019-06-12 19:54:11 -Generating unique operation named: listUsingGET_2
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_4
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_5
2019-06-12 19:54:11 -Generating unique operation named: saveUsingPOST_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_2
2019-06-12 19:54:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 19:54:11 -Generating unique operation named: addUsingGET_3
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_3
2019-06-12 19:54:11 -Generating unique operation named: listUsingGET_3
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_6
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_7
2019-06-12 19:54:11 -Generating unique operation named: saveUsingPOST_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingGET_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPUT_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 19:54:11 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 19:54:11 -Generating unique operation named: addUsingGET_4
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_4
2019-06-12 19:54:11 -Generating unique operation named: listUsingGET_4
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_8
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_9
2019-06-12 19:54:11 -Generating unique operation named: saveUsingPOST_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingGET_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPUT_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 19:54:11 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 19:54:11 -Generating unique operation named: ElecUsingGET_1
2019-06-12 19:54:11 -Generating unique operation named: addUsingGET_5
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_5
2019-06-12 19:54:11 -Generating unique operation named: listUsingGET_5
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_10
2019-06-12 19:54:11 -Generating unique operation named: removeUsingPOST_11
2019-06-12 19:54:11 -Generating unique operation named: saveUsingPOST_5
2019-06-12 19:54:11 -Generating unique operation named: updateUsingGET_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_5
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPUT_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 19:54:11 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_6
2019-06-12 19:54:11 -Generating unique operation named: listUsingGET_6
2019-06-12 19:54:11 -Generating unique operation named: updateUsingPOST_6
2019-06-12 19:54:11 -Generating unique operation named: addUsingGET_6
2019-06-12 19:54:11 -Generating unique operation named: editUsingGET_7
2019-06-12 19:54:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_7
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_12
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_13
2019-06-12 19:54:12 -Generating unique operation named: saveUsingPOST_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingGET_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPUT_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 19:54:12 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 19:54:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_7
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_8
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_8
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_14
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_15
2019-06-12 19:54:12 -Generating unique operation named: saveUsingPOST_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingGET_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_8
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPUT_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 19:54:12 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_8
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_9
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_9
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_16
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_17
2019-06-12 19:54:12 -Generating unique operation named: saveUsingPOST_8
2019-06-12 19:54:12 -Generating unique operation named: updateUsingGET_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_9
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPUT_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 19:54:12 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_9
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_10
2019-06-12 19:54:12 -Generating unique operation named: infoUsingGET_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingPOST_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingPUT_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 19:54:12 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_10
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_18
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_19
2019-06-12 19:54:12 -Generating unique operation named: saveUsingPOST_9
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_10
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_11
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_20
2019-06-12 19:54:12 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_10
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_11
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_12
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_21
2019-06-12 19:54:12 -Generating unique operation named: saveUsingPOST_10
2019-06-12 19:54:12 -Generating unique operation named: treeUsingGET_1
2019-06-12 19:54:12 -Generating unique operation named: treeUsingGET_2
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_11
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_11
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_12
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_13
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_22
2019-06-12 19:54:12 -Generating unique operation named: removeUsingPOST_23
2019-06-12 19:54:12 -Generating unique operation named: updateUsingPOST_12
2019-06-12 19:54:12 -Generating unique operation named: addUsingGET_12
2019-06-12 19:54:12 -Generating unique operation named: editUsingGET_13
2019-06-12 19:54:12 -Generating unique operation named: listUsingGET_14
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_24
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_25
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_11
2019-06-12 19:54:13 -Generating unique operation named: updateUsingGET_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_13
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPUT_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 19:54:13 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 19:54:13 -Generating unique operation named: addUsingGET_13
2019-06-12 19:54:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 19:54:13 -Generating unique operation named: editUsingGET_14
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_15
2019-06-12 19:54:13 -Generating unique operation named: printEditUsingGET_1
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_26
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_12
2019-06-12 19:54:13 -Generating unique operation named: updateUsingGET_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_14
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPUT_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 19:54:13 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 19:54:13 -Generating unique operation named: addUsingGET_14
2019-06-12 19:54:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 19:54:13 -Generating unique operation named: editUsingGET_15
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_16
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_13
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_14
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_15
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_17
2019-06-12 19:54:13 -Generating unique operation named: listUsingHEAD_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingPOST_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingPUT_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingPATCH_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingDELETE_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 19:54:13 -Generating unique operation named: listUsingTRACE_1
2019-06-12 19:54:13 -Generating unique operation named: countDDUsingGET_1
2019-06-12 19:54:13 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 19:54:13 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 19:54:13 -Generating unique operation named: addUsingGET_15
2019-06-12 19:54:13 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 19:54:13 -Generating unique operation named: editUsingGET_16
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_18
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_27
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_15
2019-06-12 19:54:13 -Generating unique operation named: treeUsingGET_3
2019-06-12 19:54:13 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_16
2019-06-12 19:54:13 -Generating unique operation named: addUsingGET_16
2019-06-12 19:54:13 -Generating unique operation named: editUsingGET_17
2019-06-12 19:54:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_19
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_28
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_29
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_16
2019-06-12 19:54:13 -Generating unique operation named: updateUsingGET_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_17
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPUT_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 19:54:13 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 19:54:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 19:54:13 -Generating unique operation named: addUsingGET_17
2019-06-12 19:54:13 -Generating unique operation named: editUsingGET_18
2019-06-12 19:54:13 -Generating unique operation named: listUsingGET_20
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_30
2019-06-12 19:54:13 -Generating unique operation named: removeUsingPOST_31
2019-06-12 19:54:13 -Generating unique operation named: saveUsingPOST_17
2019-06-12 19:54:13 -Generating unique operation named: updateUsingGET_11
2019-06-12 19:54:13 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPOST_18
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPUT_11
2019-06-12 19:54:13 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 19:54:14 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 19:54:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 19:54:14 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 19:54:14 -Generating unique operation named: addUsingGET_18
2019-06-12 19:54:14 -Generating unique operation named: editUsingGET_19
2019-06-12 19:54:14 -Generating unique operation named: listUsingGET_21
2019-06-12 19:54:14 -Generating unique operation named: removeUsingPOST_32
2019-06-12 19:54:14 -Generating unique operation named: removeUsingPOST_33
2019-06-12 19:54:14 -Generating unique operation named: saveUsingPOST_18
2019-06-12 19:54:14 -Generating unique operation named: updateUsingGET_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingPOST_19
2019-06-12 19:54:14 -Generating unique operation named: updateUsingPUT_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 19:54:14 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 19:54:14 -Starting Quartz Scheduler now
2019-06-12 19:54:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 19:54:14 -Starting...
2019-06-12 19:54:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 19:54:14 -Started.
2019-06-12 19:54:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 19:54:14 -Using a shared selector for servlet write/read
2019-06-12 19:54:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 19:54:14 -Started BootdoApplication in 41.785 seconds (JVM running for 43.438)
2019-06-12 19:54:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 19:54:14 -==> Parameters: 
2019-06-12 19:54:14 -<==      Total: 1
2019-06-12 19:55:05 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 20:01:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 20:01:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 20:01:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2019-06-12 20:01:13 -Enabling session validation scheduler...
2019-06-12 20:01:13 -请求地址 : http://localhost:8081/login;JSESSIONID=c387cb19-57d1-4083-9d1c-b57af12e3d61
2019-06-12 20:01:13 -HTTP METHOD : GET
2019-06-12 20:01:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 20:01:13 -参数 : [{}]
2019-06-12 20:01:13 -耗时 : 3
2019-06-12 20:01:13 -返回值 : login
2019-06-12 20:01:14 -请求地址 : http://localhost:8081/getVerify
2019-06-12 20:01:14 -HTTP METHOD : GET
2019-06-12 20:01:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 20:01:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11601abe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@546286f6]
2019-06-12 20:01:18 -8251
2019-06-12 20:01:18 -耗时 : 3870
2019-06-12 20:01:18 -返回值 : null
2019-06-12 20:01:24 -请求地址 : http://localhost:8081/login
2019-06-12 20:01:24 -HTTP METHOD : POST
2019-06-12 20:01:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 20:01:24 -参数 : [admin, 111111, 8251, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b1a5856]
2019-06-12 20:01:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 20:01:25 -==> Parameters: admin(String)
2019-06-12 20:01:25 -<==      Total: 1
2019-06-12 20:01:25 -耗时 : 101
2019-06-12 20:01:25 -返回值 : {msg=操作成功, code=0}
2019-06-12 20:01:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 20:01:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:01:25 -==> Parameters: 1(Long), admin(String), 登录(String), 101(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 20:01:25.161(Timestamp)
2019-06-12 20:01:25 -请求地址 : http://localhost:8081/index
2019-06-12 20:01:25 -HTTP METHOD : GET
2019-06-12 20:01:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 20:01:25 -参数 : [{}]
2019-06-12 20:01:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 20:01:25 -<==    Updates: 1
2019-06-12 20:01:25 -==> Parameters: 1(Long)
2019-06-12 20:01:25 -<==      Total: 51
2019-06-12 20:01:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 20:01:25 -==> Parameters: 138(Long)
2019-06-12 20:01:25 -<==      Total: 1
2019-06-12 20:01:25 -耗时 : 257
2019-06-12 20:01:25 -返回值 : index_v1
2019-06-12 20:01:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:01:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 257(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 20:01:25.551(Timestamp)
2019-06-12 20:01:25 -<==    Updates: 1
2019-06-12 20:01:25 -请求地址 : http://localhost:8081/main
2019-06-12 20:01:25 -HTTP METHOD : GET
2019-06-12 20:01:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:01:25 -参数 : []
2019-06-12 20:01:25 -耗时 : 0
2019-06-12 20:01:25 -返回值 : main
2019-06-12 20:01:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 20:01:26 -HTTP METHOD : GET
2019-06-12 20:01:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 20:01:26 -参数 : []
2019-06-12 20:01:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 20:01:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 20:01:26 -请求地址 : http://localhost:8081/main
2019-06-12 20:01:26 -HTTP METHOD : GET
2019-06-12 20:01:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:01:26 -参数 : []
2019-06-12 20:01:26 -耗时 : 0
2019-06-12 20:01:26 -返回值 : main
2019-06-12 20:01:26 -<==      Total: 0
2019-06-12 20:01:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 20:01:26 -==> Parameters: 1(Long), 0(String)
2019-06-12 20:01:26 -<==      Total: 1
2019-06-12 20:01:26 -耗时 : 326
2019-06-12 20:01:26 -返回值 : com.bootdo.common.utils.PageUtils@283070fb
2019-06-12 20:01:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 20:01:35 -==> Parameters: 1(Long)
2019-06-12 20:01:35 -<==      Total: 95
2019-06-12 20:01:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:01:36 -HTTP METHOD : GET
2019-06-12 20:01:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:01:36 -参数 : [userType]
2019-06-12 20:01:36 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 20:01:36 -HTTP METHOD : GET
2019-06-12 20:01:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:01:36 -参数 : [elecType]
2019-06-12 20:01:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:01:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:01:36 -==> Parameters: elecType(String)
2019-06-12 20:01:36 -==> Parameters: userType(String)
2019-06-12 20:01:36 -<==      Total: 4
2019-06-12 20:01:36 -耗时 : 153
2019-06-12 20:01:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:01:36 -<==      Total: 11
2019-06-12 20:01:36 -耗时 : 166
2019-06-12 20:01:36 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:01:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:01:37 -HTTP METHOD : GET
2019-06-12 20:01:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:01:37 -参数 : [userType]
2019-06-12 20:01:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:01:37 -==> Parameters: userType(String)
2019-06-12 20:01:37 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 20:01:37 -HTTP METHOD : GET
2019-06-12 20:01:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:01:37 -参数 : [waterType]
2019-06-12 20:01:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:01:37 -==> Parameters: waterType(String)
2019-06-12 20:01:37 -<==      Total: 4
2019-06-12 20:01:37 -耗时 : 10
2019-06-12 20:01:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:01:37 -<==      Total: 4
2019-06-12 20:01:37 -耗时 : 8
2019-06-12 20:01:37 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:01:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 20:01:48 -HTTP METHOD : GET
2019-06-12 20:01:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 20:01:48 -参数 : []
2019-06-12 20:01:48 -耗时 : 1
2019-06-12 20:01:48 -返回值 : system/dept/deptTree
2019-06-12 20:01:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 20:01:48 -HTTP METHOD : GET
2019-06-12 20:01:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 20:01:48 -参数 : []
2019-06-12 20:01:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 20:01:48 -==> Parameters: 
2019-06-12 20:01:48 -<==      Total: 3
2019-06-12 20:01:48 -耗时 : 89
2019-06-12 20:01:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 20:01:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:01:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 20:01:52.454(Timestamp)
2019-06-12 20:01:52 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 20:01:52 -<==    Updates: 1
2019-06-12 20:02:38 -请求地址 : http://localhost:8081/index
2019-06-12 20:02:38 -HTTP METHOD : GET
2019-06-12 20:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 20:02:38 -参数 : [{}]
2019-06-12 20:02:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 20:02:38 -==> Parameters: 1(Long)
2019-06-12 20:02:38 -<==      Total: 51
2019-06-12 20:02:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 20:02:38 -==> Parameters: 138(Long)
2019-06-12 20:02:38 -<==      Total: 1
2019-06-12 20:02:38 -耗时 : 45
2019-06-12 20:02:38 -返回值 : index_v1
2019-06-12 20:02:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:02:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 20:02:38.413(Timestamp)
2019-06-12 20:02:38 -<==    Updates: 1
2019-06-12 20:02:38 -请求地址 : http://localhost:8081/main
2019-06-12 20:02:38 -HTTP METHOD : GET
2019-06-12 20:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:02:38 -参数 : []
2019-06-12 20:02:38 -耗时 : 0
2019-06-12 20:02:38 -返回值 : main
2019-06-12 20:02:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 20:02:38 -HTTP METHOD : GET
2019-06-12 20:02:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 20:02:38 -参数 : []
2019-06-12 20:02:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 20:02:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 20:02:38 -<==      Total: 0
2019-06-12 20:02:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 20:02:38 -==> Parameters: 1(Long), 0(String)
2019-06-12 20:02:38 -<==      Total: 1
2019-06-12 20:02:38 -耗时 : 49
2019-06-12 20:02:38 -返回值 : com.bootdo.common.utils.PageUtils@456761c5
2019-06-12 20:02:38 -请求地址 : http://localhost:8081/main
2019-06-12 20:02:38 -HTTP METHOD : GET
2019-06-12 20:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:02:38 -参数 : []
2019-06-12 20:02:38 -耗时 : 1
2019-06-12 20:02:38 -返回值 : main
2019-06-12 20:02:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:02:42 -HTTP METHOD : GET
2019-06-12 20:02:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:02:42 -参数 : [userType]
2019-06-12 20:02:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:02:42 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 20:02:42 -HTTP METHOD : GET
2019-06-12 20:02:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:02:42 -==> Parameters: userType(String)
2019-06-12 20:02:42 -参数 : [elecType]
2019-06-12 20:02:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:02:42 -==> Parameters: elecType(String)
2019-06-12 20:02:42 -<==      Total: 4
2019-06-12 20:02:42 -耗时 : 5
2019-06-12 20:02:42 -<==      Total: 11
2019-06-12 20:02:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:02:42 -耗时 : 8
2019-06-12 20:02:42 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:02:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 20:02:51 -HTTP METHOD : GET
2019-06-12 20:02:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 20:02:51 -参数 : []
2019-06-12 20:02:51 -耗时 : 0
2019-06-12 20:02:51 -返回值 : system/dept/deptTree
2019-06-12 20:02:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 20:02:51 -HTTP METHOD : GET
2019-06-12 20:02:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 20:02:51 -参数 : []
2019-06-12 20:02:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 20:02:51 -==> Parameters: 
2019-06-12 20:02:51 -<==      Total: 3
2019-06-12 20:02:51 -耗时 : 126
2019-06-12 20:02:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 20:02:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:02:53 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 20:02:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/ElecLogUpLoad/importElecLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 20:02:53.685(Timestamp)
2019-06-12 20:02:53 -<==    Updates: 1
2019-06-12 20:02:58 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 20:02:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:02:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/ElecLogUpLoad/importElecLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 20:02:58.987(Timestamp)
2019-06-12 20:02:59 -<==    Updates: 1
2019-06-12 20:07:26 -Starting BootdoApplication on PC-201905091110 with PID 9044 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 20:07:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 20:07:26 -The following profiles are active: dev
2019-06-12 20:07:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Wed Jun 12 20:07:27 CST 2019]; root of context hierarchy
2019-06-12 20:07:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 20:07:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$565c39e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$48b56888] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 20:07:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 20:07:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 20:07:39 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 20:07:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 20:07:39 -Starting service [Tomcat]
2019-06-12 20:07:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 20:07:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 20:07:40 -Initializing Spring embedded WebApplicationContext
2019-06-12 20:07:40 -Root WebApplicationContext: initialization completed in 12966 ms
2019-06-12 20:07:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 20:07:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 20:07:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 20:07:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 20:07:41 -Filter xssFilter was not registered (disabled)
2019-06-12 20:07:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 20:07:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 20:07:41 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 20:07:41 -Servlet dispatcherServlet mapped to [/]
2019-06-12 20:07:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Wed Jun 12 20:07:27 CST 2019]; root of context hierarchy
2019-06-12 20:07:49 -Using default implementation for ThreadExecutor
2019-06-12 20:07:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 20:07:49 -Quartz Scheduler v.2.3.0 created.
2019-06-12 20:07:49 -RAMJobStore initialized.
2019-06-12 20:07:49 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 20:07:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 20:07:49 -Quartz scheduler version: 2.3.0
2019-06-12 20:07:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@215a329c
2019-06-12 20:07:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 20:07:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 20:07:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 20:07:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 20:07:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 20:07:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 20:07:53 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 20:07:53 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 20:07:53 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 20:07:53 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 20:07:53 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 20:07:53 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 20:07:53 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 20:07:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 20:07:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 20:07:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 20:07:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 20:07:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 20:07:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 20:07:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 20:07:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 20:07:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 20:07:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 20:07:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 20:07:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 20:07:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 20:07:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 20:07:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 20:07:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 20:07:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 20:07:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 20:07:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 20:07:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 20:07:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 20:07:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 20:07:53 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 20:07:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 20:07:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 20:07:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 20:07:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 20:07:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 20:07:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 20:07:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 20:07:53 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 20:07:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 20:07:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 20:07:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 20:07:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 20:07:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 20:07:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 20:07:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 20:07:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 20:07:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 20:07:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 20:07:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 20:07:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 20:07:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 20:07:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 20:07:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 20:07:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 20:07:54 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 20:07:54 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 20:07:54 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:54 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:54 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 20:07:54 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 20:07:54 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 20:07:54 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 20:07:54 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 20:07:54 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 20:07:54 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 20:07:54 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 20:07:54 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 20:07:54 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 20:07:54 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 20:07:54 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:54 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 20:07:54 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:54 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 20:07:54 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 20:07:54 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 20:07:54 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 20:07:54 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 20:07:54 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 20:07:54 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:54 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 20:07:54 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 20:07:54 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 20:07:54 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 20:07:54 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 20:07:54 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:54 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 20:07:54 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 20:07:54 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:54 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 20:07:54 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 20:07:54 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 20:07:54 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 20:07:54 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 20:07:54 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 20:07:54 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 20:07:54 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 20:07:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 20:07:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 20:07:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 20:07:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 20:07:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 20:07:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 20:07:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 20:07:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 20:07:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Wed Jun 12 20:07:27 CST 2019]; root of context hierarchy
2019-06-12 20:07:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 20:07:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 20:07:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 20:07:56 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 20:07:59 -Registering beans for JMX exposure on startup
2019-06-12 20:07:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 20:07:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 20:07:59 -Starting beans in phase 2147483647
2019-06-12 20:07:59 -Context refreshed
2019-06-12 20:07:59 -Found 1 custom documentation plugin(s)
2019-06-12 20:07:59 -Scanning for api listing references
2019-06-12 20:08:00 -Generating unique operation named: removeUsingPOST_1
2019-06-12 20:08:00 -Generating unique operation named: addUsingGET_1
2019-06-12 20:08:00 -Generating unique operation named: editUsingGET_1
2019-06-12 20:08:00 -Generating unique operation named: listUsingGET_1
2019-06-12 20:08:00 -Generating unique operation named: removeUsingPOST_2
2019-06-12 20:08:00 -Generating unique operation named: removeUsingPOST_3
2019-06-12 20:08:00 -Generating unique operation named: saveUsingPOST_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingGET_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingPOST_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingPUT_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 20:08:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 20:08:01 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 20:08:01 -Generating unique operation named: addUsingGET_2
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_2
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_2
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_4
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_5
2019-06-12 20:08:01 -Generating unique operation named: saveUsingPOST_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPOST_2
2019-06-12 20:08:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 20:08:01 -Generating unique operation named: addUsingGET_3
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_3
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_3
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_6
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_7
2019-06-12 20:08:01 -Generating unique operation named: saveUsingPOST_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingGET_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPOST_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPUT_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 20:08:01 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 20:08:01 -Generating unique operation named: addUsingGET_4
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_4
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_4
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_8
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_9
2019-06-12 20:08:01 -Generating unique operation named: saveUsingPOST_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingGET_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPOST_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPUT_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 20:08:01 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 20:08:01 -Generating unique operation named: ElecUsingGET_1
2019-06-12 20:08:01 -Generating unique operation named: addUsingGET_5
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_5
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_5
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_10
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_11
2019-06-12 20:08:01 -Generating unique operation named: saveUsingPOST_5
2019-06-12 20:08:01 -Generating unique operation named: updateUsingGET_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPOST_5
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPUT_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 20:08:01 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_6
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_6
2019-06-12 20:08:01 -Generating unique operation named: updateUsingPOST_6
2019-06-12 20:08:01 -Generating unique operation named: addUsingGET_6
2019-06-12 20:08:01 -Generating unique operation named: editUsingGET_7
2019-06-12 20:08:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 20:08:01 -Generating unique operation named: listUsingGET_7
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_12
2019-06-12 20:08:01 -Generating unique operation named: removeUsingPOST_13
2019-06-12 20:08:01 -Generating unique operation named: saveUsingPOST_6
2019-06-12 20:08:01 -Generating unique operation named: updateUsingGET_5
2019-06-12 20:08:01 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPUT_5
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 20:08:02 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 20:08:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 20:08:02 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 20:08:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_7
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_8
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_8
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_14
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_15
2019-06-12 20:08:02 -Generating unique operation named: saveUsingPOST_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingGET_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_8
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPUT_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 20:08:02 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_8
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_9
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_9
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_16
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_17
2019-06-12 20:08:02 -Generating unique operation named: saveUsingPOST_8
2019-06-12 20:08:02 -Generating unique operation named: updateUsingGET_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_9
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPUT_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 20:08:02 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_9
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_10
2019-06-12 20:08:02 -Generating unique operation named: infoUsingGET_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingPOST_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingPUT_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 20:08:02 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_10
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_18
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_19
2019-06-12 20:08:02 -Generating unique operation named: saveUsingPOST_9
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_10
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_11
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_20
2019-06-12 20:08:02 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_10
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_11
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_12
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_21
2019-06-12 20:08:02 -Generating unique operation named: saveUsingPOST_10
2019-06-12 20:08:02 -Generating unique operation named: treeUsingGET_1
2019-06-12 20:08:02 -Generating unique operation named: treeUsingGET_2
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_11
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_11
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_12
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_13
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_22
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_23
2019-06-12 20:08:02 -Generating unique operation named: updateUsingPOST_12
2019-06-12 20:08:02 -Generating unique operation named: addUsingGET_12
2019-06-12 20:08:02 -Generating unique operation named: editUsingGET_13
2019-06-12 20:08:02 -Generating unique operation named: listUsingGET_14
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_24
2019-06-12 20:08:02 -Generating unique operation named: removeUsingPOST_25
2019-06-12 20:08:02 -Generating unique operation named: saveUsingPOST_11
2019-06-12 20:08:02 -Generating unique operation named: updateUsingGET_8
2019-06-12 20:08:02 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPOST_13
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPUT_8
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 20:08:03 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 20:08:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 20:08:03 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 20:08:03 -Generating unique operation named: addUsingGET_13
2019-06-12 20:08:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 20:08:03 -Generating unique operation named: editUsingGET_14
2019-06-12 20:08:03 -Generating unique operation named: listUsingGET_15
2019-06-12 20:08:03 -Generating unique operation named: printEditUsingGET_1
2019-06-12 20:08:03 -Generating unique operation named: removeUsingPOST_26
2019-06-12 20:08:03 -Generating unique operation named: saveUsingPOST_12
2019-06-12 20:08:03 -Generating unique operation named: updateUsingGET_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPOST_14
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPUT_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 20:08:03 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 20:08:03 -Generating unique operation named: addUsingGET_14
2019-06-12 20:08:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 20:08:03 -Generating unique operation named: editUsingGET_15
2019-06-12 20:08:03 -Generating unique operation named: listUsingGET_16
2019-06-12 20:08:03 -Generating unique operation named: saveUsingPOST_13
2019-06-12 20:08:03 -Generating unique operation named: saveUsingPOST_14
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPOST_15
2019-06-12 20:08:03 -Generating unique operation named: listUsingGET_17
2019-06-12 20:08:03 -Generating unique operation named: listUsingHEAD_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingPOST_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingPUT_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingPATCH_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingDELETE_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 20:08:03 -Generating unique operation named: listUsingTRACE_1
2019-06-12 20:08:03 -Generating unique operation named: countDDUsingGET_1
2019-06-12 20:08:03 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 20:08:03 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 20:08:03 -Generating unique operation named: addUsingGET_15
2019-06-12 20:08:03 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 20:08:03 -Generating unique operation named: editUsingGET_16
2019-06-12 20:08:03 -Generating unique operation named: listUsingGET_18
2019-06-12 20:08:03 -Generating unique operation named: removeUsingPOST_27
2019-06-12 20:08:03 -Generating unique operation named: saveUsingPOST_15
2019-06-12 20:08:03 -Generating unique operation named: treeUsingGET_3
2019-06-12 20:08:03 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 20:08:03 -Generating unique operation named: updateUsingPOST_16
2019-06-12 20:08:03 -Generating unique operation named: addUsingGET_16
2019-06-12 20:08:03 -Generating unique operation named: editUsingGET_17
2019-06-12 20:08:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 20:08:03 -Generating unique operation named: listUsingGET_19
2019-06-12 20:08:03 -Generating unique operation named: removeUsingPOST_28
2019-06-12 20:08:03 -Generating unique operation named: removeUsingPOST_29
2019-06-12 20:08:04 -Generating unique operation named: saveUsingPOST_16
2019-06-12 20:08:04 -Generating unique operation named: updateUsingGET_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPOST_17
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPUT_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 20:08:04 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 20:08:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 20:08:04 -Generating unique operation named: addUsingGET_17
2019-06-12 20:08:04 -Generating unique operation named: editUsingGET_18
2019-06-12 20:08:04 -Generating unique operation named: listUsingGET_20
2019-06-12 20:08:04 -Generating unique operation named: removeUsingPOST_30
2019-06-12 20:08:04 -Generating unique operation named: removeUsingPOST_31
2019-06-12 20:08:04 -Generating unique operation named: saveUsingPOST_17
2019-06-12 20:08:04 -Generating unique operation named: updateUsingGET_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPOST_18
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPUT_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 20:08:04 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 20:08:04 -Generating unique operation named: addUsingGET_18
2019-06-12 20:08:04 -Generating unique operation named: editUsingGET_19
2019-06-12 20:08:04 -Generating unique operation named: listUsingGET_21
2019-06-12 20:08:04 -Generating unique operation named: removeUsingPOST_32
2019-06-12 20:08:04 -Generating unique operation named: removeUsingPOST_33
2019-06-12 20:08:04 -Generating unique operation named: saveUsingPOST_18
2019-06-12 20:08:04 -Generating unique operation named: updateUsingGET_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPOST_19
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPUT_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 20:08:04 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 20:08:05 -Starting Quartz Scheduler now
2019-06-12 20:08:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 20:08:05 -Starting...
2019-06-12 20:08:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 20:08:05 -Started.
2019-06-12 20:08:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 20:08:05 -Using a shared selector for servlet write/read
2019-06-12 20:08:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 20:08:05 -Started BootdoApplication in 41.064 seconds (JVM running for 42.681)
2019-06-12 20:08:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 20:08:05 -==> Parameters: 
2019-06-12 20:08:05 -<==      Total: 1
2019-06-12 20:08:54 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 20:11:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 20:11:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 20:11:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-06-12 20:11:02 -Enabling session validation scheduler...
2019-06-12 20:11:02 -请求地址 : http://localhost:8081/login;JSESSIONID=154c1a07-3271-4d99-9e5b-a002705f5fdb
2019-06-12 20:11:02 -HTTP METHOD : GET
2019-06-12 20:11:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 20:11:02 -参数 : [{}]
2019-06-12 20:11:02 -耗时 : 7
2019-06-12 20:11:02 -返回值 : login
2019-06-12 20:11:03 -请求地址 : http://localhost:8081/login;JSESSIONID=154c1a07-3271-4d99-9e5b-a002705f5fdb
2019-06-12 20:11:03 -HTTP METHOD : GET
2019-06-12 20:11:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 20:11:03 -参数 : [{}]
2019-06-12 20:11:03 -耗时 : 0
2019-06-12 20:11:03 -返回值 : login
2019-06-12 20:11:04 -请求地址 : http://localhost:8081/getVerify
2019-06-12 20:11:04 -HTTP METHOD : GET
2019-06-12 20:11:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 20:11:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7975c326, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c3cb8a4]
2019-06-12 20:11:08 -2427
2019-06-12 20:11:08 -耗时 : 4560
2019-06-12 20:11:08 -返回值 : null
2019-06-12 20:11:08 -请求地址 : http://localhost:8081/login
2019-06-12 20:11:08 -HTTP METHOD : GET
2019-06-12 20:11:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 20:11:08 -参数 : [{}]
2019-06-12 20:11:08 -耗时 : 0
2019-06-12 20:11:08 -返回值 : login
2019-06-12 20:11:14 -请求地址 : http://localhost:8081/login
2019-06-12 20:11:14 -HTTP METHOD : POST
2019-06-12 20:11:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 20:11:14 -参数 : [admin, 111111, 2427, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f100df0]
2019-06-12 20:11:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 20:11:14 -==> Parameters: admin(String)
2019-06-12 20:11:14 -<==      Total: 1
2019-06-12 20:11:14 -耗时 : 292
2019-06-12 20:11:14 -返回值 : {msg=操作成功, code=0}
2019-06-12 20:11:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 20:11:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:11:14 -==> Parameters: 1(Long), admin(String), 登录(String), 292(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 20:11:14.449(Timestamp)
2019-06-12 20:11:14 -请求地址 : http://localhost:8081/index
2019-06-12 20:11:14 -HTTP METHOD : GET
2019-06-12 20:11:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 20:11:14 -参数 : [{}]
2019-06-12 20:11:14 -<==    Updates: 1
2019-06-12 20:11:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 20:11:14 -==> Parameters: 1(Long)
2019-06-12 20:11:14 -<==      Total: 51
2019-06-12 20:11:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 20:11:14 -==> Parameters: 138(Long)
2019-06-12 20:11:15 -<==      Total: 1
2019-06-12 20:11:15 -耗时 : 346
2019-06-12 20:11:15 -返回值 : index_v1
2019-06-12 20:11:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:11:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 346(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 20:11:15.21(Timestamp)
2019-06-12 20:11:15 -<==    Updates: 1
2019-06-12 20:11:15 -请求地址 : http://localhost:8081/main
2019-06-12 20:11:15 -HTTP METHOD : GET
2019-06-12 20:11:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:11:15 -参数 : []
2019-06-12 20:11:15 -耗时 : 0
2019-06-12 20:11:15 -返回值 : main
2019-06-12 20:11:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 20:11:16 -HTTP METHOD : GET
2019-06-12 20:11:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 20:11:16 -参数 : []
2019-06-12 20:11:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 20:11:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 20:11:16 -请求地址 : http://localhost:8081/main
2019-06-12 20:11:16 -HTTP METHOD : GET
2019-06-12 20:11:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 20:11:16 -参数 : []
2019-06-12 20:11:16 -耗时 : 0
2019-06-12 20:11:16 -返回值 : main
2019-06-12 20:11:16 -<==      Total: 0
2019-06-12 20:11:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 20:11:16 -==> Parameters: 1(Long), 0(String)
2019-06-12 20:11:16 -<==      Total: 1
2019-06-12 20:11:16 -耗时 : 246
2019-06-12 20:11:16 -返回值 : com.bootdo.common.utils.PageUtils@5cd03e05
2019-06-12 20:11:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 20:11:35 -==> Parameters: 1(Long)
2019-06-12 20:11:35 -<==      Total: 95
2019-06-12 20:11:37 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 20:11:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:37 -HTTP METHOD : GET
2019-06-12 20:11:37 -HTTP METHOD : GET
2019-06-12 20:11:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:37 -参数 : [userType]
2019-06-12 20:11:37 -参数 : [elecType]
2019-06-12 20:11:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:37 -==> Parameters: elecType(String)
2019-06-12 20:11:37 -<==      Total: 11
2019-06-12 20:11:37 -耗时 : 48
2019-06-12 20:11:37 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:37 -==> Parameters: userType(String)
2019-06-12 20:11:37 -<==      Total: 4
2019-06-12 20:11:37 -耗时 : 82
2019-06-12 20:11:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 20:11:38 -HTTP METHOD : GET
2019-06-12 20:11:38 -HTTP METHOD : GET
2019-06-12 20:11:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:38 -参数 : [waterType]
2019-06-12 20:11:38 -参数 : [userType]
2019-06-12 20:11:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:38 -==> Parameters: userType(String)
2019-06-12 20:11:38 -==> Parameters: waterType(String)
2019-06-12 20:11:38 -<==      Total: 4
2019-06-12 20:11:38 -耗时 : 8
2019-06-12 20:11:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:38 -<==      Total: 4
2019-06-12 20:11:38 -耗时 : 91
2019-06-12 20:11:38 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:39 -HTTP METHOD : GET
2019-06-12 20:11:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:39 -参数 : [userType]
2019-06-12 20:11:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:39 -==> Parameters: userType(String)
2019-06-12 20:11:39 -<==      Total: 4
2019-06-12 20:11:39 -耗时 : 5
2019-06-12 20:11:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:39 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 20:11:39 -HTTP METHOD : GET
2019-06-12 20:11:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:39 -参数 : [waterType]
2019-06-12 20:11:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:39 -==> Parameters: waterType(String)
2019-06-12 20:11:39 -<==      Total: 4
2019-06-12 20:11:39 -耗时 : 8
2019-06-12 20:11:39 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:40 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 20:11:40 -HTTP METHOD : GET
2019-06-12 20:11:40 -HTTP METHOD : GET
2019-06-12 20:11:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:40 -参数 : [waterType]
2019-06-12 20:11:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:40 -参数 : [userType]
2019-06-12 20:11:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:40 -==> Parameters: waterType(String)
2019-06-12 20:11:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:40 -==> Parameters: userType(String)
2019-06-12 20:11:40 -<==      Total: 4
2019-06-12 20:11:40 -耗时 : 14
2019-06-12 20:11:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:40 -<==      Total: 4
2019-06-12 20:11:40 -耗时 : 20
2019-06-12 20:11:40 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -参数 : [userType]
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==> Parameters: userType(String)
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -参数 : [heatType]
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==> Parameters: heatType(String)
2019-06-12 20:11:41 -<==      Total: 4
2019-06-12 20:11:41 -耗时 : 11
2019-06-12 20:11:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:41 -<==      Total: 4
2019-06-12 20:11:41 -耗时 : 8
2019-06-12 20:11:41 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -参数 : [elecType]
2019-06-12 20:11:41 -参数 : [userType]
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==> Parameters: elecType(String)
2019-06-12 20:11:41 -==> Parameters: userType(String)
2019-06-12 20:11:41 -<==      Total: 4
2019-06-12 20:11:41 -<==      Total: 11
2019-06-12 20:11:41 -耗时 : 7
2019-06-12 20:11:41 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:41 -耗时 : 9
2019-06-12 20:11:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -参数 : [waterType]
2019-06-12 20:11:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 20:11:41 -HTTP METHOD : GET
2019-06-12 20:11:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 20:11:41 -参数 : [userType]
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 20:11:41 -==> Parameters: userType(String)
2019-06-12 20:11:41 -==> Parameters: waterType(String)
2019-06-12 20:11:41 -<==      Total: 4
2019-06-12 20:11:41 -耗时 : 4
2019-06-12 20:11:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:42 -<==      Total: 4
2019-06-12 20:11:42 -耗时 : 5
2019-06-12 20:11:42 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 20:11:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 20:11:49 -HTTP METHOD : GET
2019-06-12 20:11:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 20:11:49 -参数 : []
2019-06-12 20:11:49 -耗时 : 0
2019-06-12 20:11:49 -返回值 : system/dept/deptTree
2019-06-12 20:11:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 20:11:50 -HTTP METHOD : GET
2019-06-12 20:11:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 20:11:50 -参数 : []
2019-06-12 20:11:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 20:11:50 -==> Parameters: 
2019-06-12 20:11:50 -<==      Total: 3
2019-06-12 20:11:50 -耗时 : 34
2019-06-12 20:11:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 20:11:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 20:11:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 20:11:53.606(Timestamp)
2019-06-12 20:11:53 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 20:11:53 -<==    Updates: 1
2019-06-12 20:38:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 399]
2019-06-12 21:08:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 832]
2019-06-12 21:11:02 -Validating all active sessions...
2019-06-12 21:11:02 -Finished session validation.  No sessions were stopped.
2019-06-12 21:38:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1265]
2019-06-12 22:08:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1698]
2019-06-12 22:11:02 -Validating all active sessions...
2019-06-12 22:11:02 -Finished session validation.  [1] sessions were stopped.
2019-06-12 22:38:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2131]
2019-06-12 23:01:08 -请求地址 : http://localhost:8081/login;JSESSIONID=d38785a7-4551-44ff-8156-717be777c8e1
2019-06-12 23:01:08 -HTTP METHOD : GET
2019-06-12 23:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 23:01:08 -参数 : [{}]
2019-06-12 23:01:08 -耗时 : 1
2019-06-12 23:01:08 -返回值 : login
2019-06-12 23:01:11 -请求地址 : http://localhost:8081/getVerify
2019-06-12 23:01:11 -HTTP METHOD : GET
2019-06-12 23:01:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 23:01:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@289ec7b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@12419de0]
2019-06-12 23:01:11 -6682
2019-06-12 23:01:11 -耗时 : 206
2019-06-12 23:01:11 -返回值 : null
2019-06-12 23:01:17 -请求地址 : http://localhost:8081/login
2019-06-12 23:01:17 -HTTP METHOD : POST
2019-06-12 23:01:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 23:01:17 -参数 : [admin, 111111, 6682, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a286aea]
2019-06-12 23:01:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 23:01:17 -==> Parameters: admin(String)
2019-06-12 23:01:17 -<==      Total: 1
2019-06-12 23:01:17 -耗时 : 40
2019-06-12 23:01:17 -返回值 : {msg=操作成功, code=0}
2019-06-12 23:01:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:01:17 -==> Parameters: 1(Long), admin(String), 登录(String), 41(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 23:01:17.742(Timestamp)
2019-06-12 23:01:17 -请求地址 : http://localhost:8081/index
2019-06-12 23:01:17 -HTTP METHOD : GET
2019-06-12 23:01:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 23:01:17 -参数 : [{}]
2019-06-12 23:01:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 23:01:17 -==> Parameters: 1(Long)
2019-06-12 23:01:17 -<==    Updates: 1
2019-06-12 23:01:17 -<==      Total: 51
2019-06-12 23:01:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 23:01:17 -==> Parameters: 138(Long)
2019-06-12 23:01:17 -<==      Total: 1
2019-06-12 23:01:17 -耗时 : 161
2019-06-12 23:01:17 -返回值 : index_v1
2019-06-12 23:01:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:01:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 161(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 23:01:17.939(Timestamp)
2019-06-12 23:01:18 -请求地址 : http://localhost:8081/main
2019-06-12 23:01:18 -HTTP METHOD : GET
2019-06-12 23:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 23:01:18 -参数 : []
2019-06-12 23:01:18 -耗时 : 0
2019-06-12 23:01:18 -返回值 : main
2019-06-12 23:01:18 -<==    Updates: 1
2019-06-12 23:01:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 23:01:19 -HTTP METHOD : GET
2019-06-12 23:01:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 23:01:19 -参数 : []
2019-06-12 23:01:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 23:01:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 23:01:19 -请求地址 : http://localhost:8081/main
2019-06-12 23:01:19 -HTTP METHOD : GET
2019-06-12 23:01:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 23:01:19 -参数 : []
2019-06-12 23:01:19 -耗时 : 1
2019-06-12 23:01:19 -返回值 : main
2019-06-12 23:01:20 -<==      Total: 0
2019-06-12 23:01:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 23:01:20 -==> Parameters: 1(Long), 0(String)
2019-06-12 23:01:20 -<==      Total: 1
2019-06-12 23:01:20 -耗时 : 471
2019-06-12 23:01:20 -返回值 : com.bootdo.common.utils.PageUtils@5f24ed10
2019-06-12 23:01:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 23:01:22 -==> Parameters: 1(Long)
2019-06-12 23:01:22 -<==      Total: 95
2019-06-12 23:01:22 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-06-12 23:01:22 -HTTP METHOD : GET
2019-06-12 23:01:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-06-12 23:01:22 -参数 : []
2019-06-12 23:01:22 -耗时 : 9
2019-06-12 23:01:22 -返回值 : elec/elecUpLoad/elecUpLoad
2019-06-12 23:01:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 23:01:26 -HTTP METHOD : GET
2019-06-12 23:01:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:01:26 -参数 : [userType]
2019-06-12 23:01:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:01:26 -==> Parameters: userType(String)
2019-06-12 23:01:26 -<==      Total: 4
2019-06-12 23:01:26 -耗时 : 7
2019-06-12 23:01:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:01:26 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 23:01:26 -HTTP METHOD : GET
2019-06-12 23:01:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:01:26 -参数 : [elecType]
2019-06-12 23:01:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:01:26 -==> Parameters: elecType(String)
2019-06-12 23:01:26 -<==      Total: 11
2019-06-12 23:01:26 -耗时 : 11
2019-06-12 23:01:26 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:01:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 23:01:27 -HTTP METHOD : GET
2019-06-12 23:01:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:01:27 -参数 : [userType]
2019-06-12 23:01:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:01:27 -==> Parameters: userType(String)
2019-06-12 23:01:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-12 23:01:27 -HTTP METHOD : GET
2019-06-12 23:01:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:01:27 -参数 : [waterType]
2019-06-12 23:01:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:01:27 -==> Parameters: waterType(String)
2019-06-12 23:01:27 -<==      Total: 4
2019-06-12 23:01:27 -耗时 : 5
2019-06-12 23:01:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:01:27 -<==      Total: 4
2019-06-12 23:01:27 -耗时 : 7
2019-06-12 23:01:27 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:01:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 23:01:37 -HTTP METHOD : GET
2019-06-12 23:01:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 23:01:37 -参数 : []
2019-06-12 23:01:37 -耗时 : 1
2019-06-12 23:01:37 -返回值 : system/dept/deptTree
2019-06-12 23:01:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 23:01:38 -HTTP METHOD : GET
2019-06-12 23:01:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 23:01:38 -参数 : []
2019-06-12 23:01:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 23:01:38 -==> Parameters: 
2019-06-12 23:01:38 -<==      Total: 3
2019-06-12 23:01:38 -耗时 : 4
2019-06-12 23:01:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 23:01:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:01:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 23:01:44.892(Timestamp)
2019-06-12 23:01:44 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 23:01:44 -<==    Updates: 1
2019-06-12 23:02:47 -Starting BootdoApplication on PC-201905091110 with PID 10408 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-12 23:02:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-12 23:02:47 -The following profiles are active: dev
2019-06-12 23:02:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7db82169: startup date [Wed Jun 12 23:02:47 CST 2019]; root of context hierarchy
2019-06-12 23:03:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-12 23:03:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ceae5ff3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c1078e9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-12 23:03:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-12 23:03:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-12 23:03:16 -Tomcat initialized with port(s): 8081 (http)
2019-06-12 23:03:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-12 23:03:17 -Starting service [Tomcat]
2019-06-12 23:03:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-12 23:03:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-12 23:03:17 -Initializing Spring embedded WebApplicationContext
2019-06-12 23:03:17 -Root WebApplicationContext: initialization completed in 29864 ms
2019-06-12 23:03:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-12 23:03:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-12 23:03:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-12 23:03:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-12 23:03:18 -Filter xssFilter was not registered (disabled)
2019-06-12 23:03:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-12 23:03:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-12 23:03:18 -Servlet statViewServlet mapped to [/druid/*]
2019-06-12 23:03:18 -Servlet dispatcherServlet mapped to [/]
2019-06-12 23:03:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7db82169: startup date [Wed Jun 12 23:02:47 CST 2019]; root of context hierarchy
2019-06-12 23:03:27 -Using default implementation for ThreadExecutor
2019-06-12 23:03:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-12 23:03:28 -Quartz Scheduler v.2.3.0 created.
2019-06-12 23:03:28 -RAMJobStore initialized.
2019-06-12 23:03:28 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-12 23:03:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-12 23:03:28 -Quartz scheduler version: 2.3.0
2019-06-12 23:03:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@cb1c58c
2019-06-12 23:03:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-12 23:03:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-12 23:03:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-12 23:03:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-12 23:03:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-12 23:03:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-12 23:03:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-12 23:03:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-12 23:03:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-12 23:03:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-12 23:03:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-12 23:03:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-12 23:03:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-12 23:03:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-12 23:03:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-12 23:03:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-12 23:03:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-12 23:03:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-12 23:03:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-12 23:03:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-12 23:03:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 23:03:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-12 23:03:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-12 23:03:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-12 23:03:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-12 23:03:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-12 23:03:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-12 23:03:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-12 23:03:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-12 23:03:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-12 23:03:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-12 23:03:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-12 23:03:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-12 23:03:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-12 23:03:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-12 23:03:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-12 23:03:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-12 23:03:35 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-12 23:03:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-12 23:03:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-12 23:03:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-12 23:03:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-12 23:03:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-12 23:03:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-12 23:03:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-12 23:03:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-12 23:03:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-12 23:03:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:35 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-12 23:03:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-12 23:03:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-12 23:03:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-12 23:03:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-12 23:03:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-12 23:03:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-12 23:03:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-12 23:03:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-12 23:03:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-12 23:03:36 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-12 23:03:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-12 23:03:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-12 23:03:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-12 23:03:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-12 23:03:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-12 23:03:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-12 23:03:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-12 23:03:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-12 23:03:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-12 23:03:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-12 23:03:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-12 23:03:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-12 23:03:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-12 23:03:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-12 23:03:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-12 23:03:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-12 23:03:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-12 23:03:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-12 23:03:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 23:03:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-12 23:03:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-12 23:03:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-12 23:03:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-12 23:03:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-12 23:03:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-12 23:03:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-12 23:03:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-12 23:03:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-12 23:03:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-12 23:03:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-12 23:03:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-12 23:03:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-12 23:03:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-12 23:03:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-12 23:03:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-12 23:03:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-12 23:03:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-12 23:03:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-12 23:03:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-12 23:03:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-12 23:03:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 23:03:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7db82169: startup date [Wed Jun 12 23:02:47 CST 2019]; root of context hierarchy
2019-06-12 23:03:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 23:03:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-12 23:03:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-12 23:03:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-12 23:03:43 -Registering beans for JMX exposure on startup
2019-06-12 23:03:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-12 23:03:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-12 23:03:43 -Starting beans in phase 2147483647
2019-06-12 23:03:43 -Context refreshed
2019-06-12 23:03:45 -Found 1 custom documentation plugin(s)
2019-06-12 23:03:45 -Scanning for api listing references
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_1
2019-06-12 23:03:49 -Generating unique operation named: addUsingGET_1
2019-06-12 23:03:49 -Generating unique operation named: editUsingGET_1
2019-06-12 23:03:49 -Generating unique operation named: listUsingGET_1
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_2
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_3
2019-06-12 23:03:49 -Generating unique operation named: saveUsingPOST_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingGET_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingHEAD_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPOST_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPUT_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPATCH_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingDELETE_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-12 23:03:49 -Generating unique operation named: updateUsingTRACE_1
2019-06-12 23:03:49 -Generating unique operation named: addUsingGET_2
2019-06-12 23:03:49 -Generating unique operation named: editUsingGET_2
2019-06-12 23:03:49 -Generating unique operation named: listUsingGET_2
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_4
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_5
2019-06-12 23:03:49 -Generating unique operation named: saveUsingPOST_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPOST_2
2019-06-12 23:03:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-12 23:03:49 -Generating unique operation named: addUsingGET_3
2019-06-12 23:03:49 -Generating unique operation named: editUsingGET_3
2019-06-12 23:03:49 -Generating unique operation named: listUsingGET_3
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_6
2019-06-12 23:03:49 -Generating unique operation named: removeUsingPOST_7
2019-06-12 23:03:49 -Generating unique operation named: saveUsingPOST_3
2019-06-12 23:03:49 -Generating unique operation named: updateUsingGET_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingHEAD_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPOST_3
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPUT_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingPATCH_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingDELETE_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-12 23:03:49 -Generating unique operation named: updateUsingTRACE_2
2019-06-12 23:03:50 -Generating unique operation named: addUsingGET_4
2019-06-12 23:03:50 -Generating unique operation named: editUsingGET_4
2019-06-12 23:03:50 -Generating unique operation named: listUsingGET_4
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_8
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_9
2019-06-12 23:03:50 -Generating unique operation named: saveUsingPOST_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingGET_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingHEAD_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPOST_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPUT_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPATCH_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingDELETE_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-12 23:03:50 -Generating unique operation named: updateUsingTRACE_3
2019-06-12 23:03:50 -Generating unique operation named: ElecUsingGET_1
2019-06-12 23:03:50 -Generating unique operation named: addUsingGET_5
2019-06-12 23:03:50 -Generating unique operation named: editUsingGET_5
2019-06-12 23:03:50 -Generating unique operation named: listUsingGET_5
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_10
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_11
2019-06-12 23:03:50 -Generating unique operation named: saveUsingPOST_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingGET_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingHEAD_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPOST_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPUT_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPATCH_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingDELETE_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-12 23:03:50 -Generating unique operation named: updateUsingTRACE_4
2019-06-12 23:03:50 -Generating unique operation named: editUsingGET_6
2019-06-12 23:03:50 -Generating unique operation named: listUsingGET_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPOST_6
2019-06-12 23:03:50 -Generating unique operation named: addUsingGET_6
2019-06-12 23:03:50 -Generating unique operation named: editUsingGET_7
2019-06-12 23:03:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-12 23:03:50 -Generating unique operation named: listUsingGET_7
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_12
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_13
2019-06-12 23:03:50 -Generating unique operation named: saveUsingPOST_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingGET_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingHEAD_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPOST_7
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPUT_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPATCH_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingDELETE_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-12 23:03:50 -Generating unique operation named: updateUsingTRACE_5
2019-06-12 23:03:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-12 23:03:50 -Generating unique operation named: addUsingGET_7
2019-06-12 23:03:50 -Generating unique operation named: editUsingGET_8
2019-06-12 23:03:50 -Generating unique operation named: listUsingGET_8
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_14
2019-06-12 23:03:50 -Generating unique operation named: removeUsingPOST_15
2019-06-12 23:03:50 -Generating unique operation named: saveUsingPOST_7
2019-06-12 23:03:50 -Generating unique operation named: updateUsingGET_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingHEAD_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPOST_8
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPUT_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingPATCH_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingDELETE_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-12 23:03:50 -Generating unique operation named: updateUsingTRACE_6
2019-06-12 23:03:51 -Generating unique operation named: addUsingGET_8
2019-06-12 23:03:51 -Generating unique operation named: editUsingGET_9
2019-06-12 23:03:51 -Generating unique operation named: listUsingGET_9
2019-06-12 23:03:51 -Generating unique operation named: removeUsingPOST_16
2019-06-12 23:03:51 -Generating unique operation named: removeUsingPOST_17
2019-06-12 23:03:51 -Generating unique operation named: saveUsingPOST_8
2019-06-12 23:03:51 -Generating unique operation named: updateUsingGET_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingHEAD_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingPOST_9
2019-06-12 23:03:51 -Generating unique operation named: updateUsingPUT_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingPATCH_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingDELETE_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-12 23:03:51 -Generating unique operation named: updateUsingTRACE_7
2019-06-12 23:03:51 -Generating unique operation named: addUsingGET_9
2019-06-12 23:03:51 -Generating unique operation named: editUsingGET_10
2019-06-12 23:03:51 -Generating unique operation named: infoUsingGET_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingHEAD_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingPOST_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingPUT_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingPATCH_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingDELETE_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-12 23:03:51 -Generating unique operation named: infoUsingTRACE_1
2019-06-12 23:03:51 -Generating unique operation named: listUsingGET_10
2019-06-12 23:03:51 -Generating unique operation named: removeUsingPOST_18
2019-06-12 23:03:51 -Generating unique operation named: removeUsingPOST_19
2019-06-12 23:03:51 -Generating unique operation named: saveUsingPOST_9
2019-06-12 23:03:51 -Generating unique operation named: updateUsingPOST_10
2019-06-12 23:03:51 -Generating unique operation named: listUsingGET_11
2019-06-12 23:03:51 -Generating unique operation named: removeUsingPOST_20
2019-06-12 23:03:51 -Generating unique operation named: welcomeUsingGET_1
2019-06-12 23:03:51 -Generating unique operation named: addUsingGET_10
2019-06-12 23:03:51 -Generating unique operation named: editUsingGET_11
2019-06-12 23:03:51 -Generating unique operation named: listUsingGET_12
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_21
2019-06-12 23:03:52 -Generating unique operation named: saveUsingPOST_10
2019-06-12 23:03:52 -Generating unique operation named: treeUsingGET_1
2019-06-12 23:03:52 -Generating unique operation named: treeUsingGET_2
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPOST_11
2019-06-12 23:03:52 -Generating unique operation named: addUsingGET_11
2019-06-12 23:03:52 -Generating unique operation named: editUsingGET_12
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_13
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_22
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_23
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPOST_12
2019-06-12 23:03:52 -Generating unique operation named: addUsingGET_12
2019-06-12 23:03:52 -Generating unique operation named: editUsingGET_13
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_14
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_24
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_25
2019-06-12 23:03:52 -Generating unique operation named: saveUsingPOST_11
2019-06-12 23:03:52 -Generating unique operation named: updateUsingGET_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingHEAD_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPOST_13
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPUT_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPATCH_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingDELETE_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-12 23:03:52 -Generating unique operation named: updateUsingTRACE_8
2019-06-12 23:03:52 -Generating unique operation named: addUsingGET_13
2019-06-12 23:03:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-12 23:03:52 -Generating unique operation named: editUsingGET_14
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_15
2019-06-12 23:03:52 -Generating unique operation named: printEditUsingGET_1
2019-06-12 23:03:52 -Generating unique operation named: removeUsingPOST_26
2019-06-12 23:03:52 -Generating unique operation named: saveUsingPOST_12
2019-06-12 23:03:52 -Generating unique operation named: updateUsingGET_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingHEAD_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPOST_14
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPUT_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPATCH_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingDELETE_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-12 23:03:52 -Generating unique operation named: updateUsingTRACE_9
2019-06-12 23:03:52 -Generating unique operation named: addUsingGET_14
2019-06-12 23:03:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-12 23:03:52 -Generating unique operation named: editUsingGET_15
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_16
2019-06-12 23:03:52 -Generating unique operation named: saveUsingPOST_13
2019-06-12 23:03:52 -Generating unique operation named: saveUsingPOST_14
2019-06-12 23:03:52 -Generating unique operation named: updateUsingPOST_15
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_17
2019-06-12 23:03:52 -Generating unique operation named: listUsingHEAD_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingPOST_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingPUT_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingPATCH_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingDELETE_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingOPTIONS_1
2019-06-12 23:03:52 -Generating unique operation named: listUsingTRACE_1
2019-06-12 23:03:52 -Generating unique operation named: countDDUsingGET_1
2019-06-12 23:03:52 -Generating unique operation named: exportDDUsingGET_1
2019-06-12 23:03:52 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-12 23:03:52 -Generating unique operation named: addUsingGET_15
2019-06-12 23:03:52 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-12 23:03:52 -Generating unique operation named: editUsingGET_16
2019-06-12 23:03:52 -Generating unique operation named: listUsingGET_18
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_27
2019-06-12 23:03:53 -Generating unique operation named: saveUsingPOST_15
2019-06-12 23:03:53 -Generating unique operation named: treeUsingGET_3
2019-06-12 23:03:53 -Generating unique operation named: treeViewUsingGET_1
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPOST_16
2019-06-12 23:03:53 -Generating unique operation named: addUsingGET_16
2019-06-12 23:03:53 -Generating unique operation named: editUsingGET_17
2019-06-12 23:03:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-12 23:03:53 -Generating unique operation named: listUsingGET_19
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_28
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_29
2019-06-12 23:03:53 -Generating unique operation named: saveUsingPOST_16
2019-06-12 23:03:53 -Generating unique operation named: updateUsingGET_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingHEAD_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPOST_17
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPUT_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPATCH_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingDELETE_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-12 23:03:53 -Generating unique operation named: updateUsingTRACE_10
2019-06-12 23:03:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-12 23:03:53 -Generating unique operation named: addUsingGET_17
2019-06-12 23:03:53 -Generating unique operation named: editUsingGET_18
2019-06-12 23:03:53 -Generating unique operation named: listUsingGET_20
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_30
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_31
2019-06-12 23:03:53 -Generating unique operation named: saveUsingPOST_17
2019-06-12 23:03:53 -Generating unique operation named: updateUsingGET_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingHEAD_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPOST_18
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPUT_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPATCH_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingDELETE_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-12 23:03:53 -Generating unique operation named: updateUsingTRACE_11
2019-06-12 23:03:53 -Generating unique operation named: addUsingGET_18
2019-06-12 23:03:53 -Generating unique operation named: editUsingGET_19
2019-06-12 23:03:53 -Generating unique operation named: listUsingGET_21
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_32
2019-06-12 23:03:53 -Generating unique operation named: removeUsingPOST_33
2019-06-12 23:03:53 -Generating unique operation named: saveUsingPOST_18
2019-06-12 23:03:53 -Generating unique operation named: updateUsingGET_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingHEAD_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPOST_19
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPUT_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingPATCH_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingDELETE_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-12 23:03:53 -Generating unique operation named: updateUsingTRACE_12
2019-06-12 23:03:53 -Starting Quartz Scheduler now
2019-06-12 23:03:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-12 23:03:53 -Starting...
2019-06-12 23:03:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-12 23:03:53 -Started.
2019-06-12 23:03:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-12 23:03:53 -Using a shared selector for servlet write/read
2019-06-12 23:03:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-12 23:03:53 -Started BootdoApplication in 71.843 seconds (JVM running for 77.482)
2019-06-12 23:03:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-12 23:03:54 -==> Parameters: 
2019-06-12 23:03:54 -<==      Total: 1
2019-06-12 23:04:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-12 23:04:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-12 23:04:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 108 ms
2019-06-12 23:04:32 -Enabling session validation scheduler...
2019-06-12 23:04:32 -请求地址 : http://localhost:8081/login;JSESSIONID=53852d8e-df38-47bb-94e6-43b8f464f2ca
2019-06-12 23:04:32 -HTTP METHOD : GET
2019-06-12 23:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 23:04:32 -参数 : [{}]
2019-06-12 23:04:32 -耗时 : 5
2019-06-12 23:04:32 -返回值 : login
2019-06-12 23:04:34 -请求地址 : http://localhost:8081/getVerify
2019-06-12 23:04:34 -HTTP METHOD : GET
2019-06-12 23:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-12 23:04:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a73f5ed, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64b406d3]
2019-06-12 23:04:38 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-12 23:04:38 -7474
2019-06-12 23:04:39 -耗时 : 4907
2019-06-12 23:04:39 -返回值 : null
2019-06-12 23:04:39 -请求地址 : http://localhost:8081/login
2019-06-12 23:04:39 -HTTP METHOD : GET
2019-06-12 23:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-12 23:04:39 -参数 : [{}]
2019-06-12 23:04:39 -耗时 : 9
2019-06-12 23:04:39 -返回值 : login
2019-06-12 23:05:00 -请求地址 : http://localhost:8081/login
2019-06-12 23:05:00 -HTTP METHOD : POST
2019-06-12 23:05:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-12 23:05:00 -参数 : [admin, 111111, 7474, org.apache.shiro.web.servlet.ShiroHttpServletRequest@18b4ab82]
2019-06-12 23:05:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-12 23:05:01 -==> Parameters: admin(String)
2019-06-12 23:05:01 -<==      Total: 1
2019-06-12 23:05:01 -耗时 : 163
2019-06-12 23:05:01 -返回值 : {msg=操作成功, code=0}
2019-06-12 23:05:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-12 23:05:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:05:01 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-12 23:05:01.196(Timestamp)
2019-06-12 23:05:01 -请求地址 : http://localhost:8081/index
2019-06-12 23:05:01 -HTTP METHOD : GET
2019-06-12 23:05:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-12 23:05:01 -参数 : [{}]
2019-06-12 23:05:01 -<==    Updates: 1
2019-06-12 23:05:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-12 23:05:01 -==> Parameters: 1(Long)
2019-06-12 23:05:01 -<==      Total: 51
2019-06-12 23:05:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-12 23:05:01 -==> Parameters: 138(Long)
2019-06-12 23:05:01 -<==      Total: 1
2019-06-12 23:05:01 -耗时 : 230
2019-06-12 23:05:01 -返回值 : index_v1
2019-06-12 23:05:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:05:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 230(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-12 23:05:01.642(Timestamp)
2019-06-12 23:05:01 -请求地址 : http://localhost:8081/main
2019-06-12 23:05:01 -HTTP METHOD : GET
2019-06-12 23:05:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 23:05:01 -参数 : []
2019-06-12 23:05:01 -耗时 : 0
2019-06-12 23:05:01 -返回值 : main
2019-06-12 23:05:02 -<==    Updates: 1
2019-06-12 23:05:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-12 23:05:02 -HTTP METHOD : GET
2019-06-12 23:05:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-12 23:05:02 -参数 : []
2019-06-12 23:05:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-12 23:05:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-12 23:05:02 -<==      Total: 0
2019-06-12 23:05:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-12 23:05:02 -==> Parameters: 1(Long), 0(String)
2019-06-12 23:05:02 -<==      Total: 1
2019-06-12 23:05:02 -耗时 : 93
2019-06-12 23:05:02 -返回值 : com.bootdo.common.utils.PageUtils@66fc66e2
2019-06-12 23:05:02 -请求地址 : http://localhost:8081/main
2019-06-12 23:05:02 -HTTP METHOD : GET
2019-06-12 23:05:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-12 23:05:02 -参数 : []
2019-06-12 23:05:02 -耗时 : 0
2019-06-12 23:05:02 -返回值 : main
2019-06-12 23:05:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-12 23:05:04 -==> Parameters: 1(Long)
2019-06-12 23:05:04 -<==      Total: 95
2019-06-12 23:05:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-12 23:05:06 -HTTP METHOD : GET
2019-06-12 23:05:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:05:06 -参数 : [userType]
2019-06-12 23:05:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-12 23:05:06 -HTTP METHOD : GET
2019-06-12 23:05:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-12 23:05:06 -参数 : [elecType]
2019-06-12 23:05:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:05:06 -==> Parameters: elecType(String)
2019-06-12 23:05:06 -<==      Total: 11
2019-06-12 23:05:06 -耗时 : 53
2019-06-12 23:05:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:05:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-12 23:05:06 -==> Parameters: userType(String)
2019-06-12 23:05:06 -<==      Total: 4
2019-06-12 23:05:06 -耗时 : 104
2019-06-12 23:05:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-12 23:05:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-12 23:05:12 -HTTP METHOD : GET
2019-06-12 23:05:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-12 23:05:12 -参数 : []
2019-06-12 23:05:12 -耗时 : 0
2019-06-12 23:05:12 -返回值 : system/dept/deptTree
2019-06-12 23:05:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-12 23:05:13 -HTTP METHOD : GET
2019-06-12 23:05:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-12 23:05:13 -参数 : []
2019-06-12 23:05:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-12 23:05:13 -==> Parameters: 
2019-06-12 23:05:13 -<==      Total: 3
2019-06-12 23:05:13 -耗时 : 56
2019-06-12 23:05:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-12 23:05:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:05:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/ElecLogUpLoad/importElecLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 23:05:16.375(Timestamp)
2019-06-12 23:05:16 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 23:05:16 -<==    Updates: 1
2019-06-12 23:05:43 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-12 23:05:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-12 23:05:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyUpLoad/ElecLogUpLoad/importElecLogExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-06-12 23:05:43.385(Timestamp)
2019-06-12 23:05:43 -<==    Updates: 1

2019-05-05 09:05:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 17648 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 09:05:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 09:05:03 -The following profiles are active: dev
2019-05-05 09:05:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 09:05:04 CST 2019]; root of context hierarchy
2019-05-05 09:05:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 09:05:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 09:05:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 09:05:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:05:27 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 09:05:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 09:05:28 -Starting service [Tomcat]
2019-05-05 09:05:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 09:05:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 09:05:29 -Initializing Spring embedded WebApplicationContext
2019-05-05 09:05:29 -Root WebApplicationContext: initialization completed in 25025 ms
2019-05-05 09:05:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 09:05:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 09:05:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 09:05:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 09:05:30 -Filter xssFilter was not registered (disabled)
2019-05-05 09:05:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 09:05:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 09:05:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 09:05:30 -Servlet dispatcherServlet mapped to [/]
2019-05-05 09:05:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 09:05:04 CST 2019]; root of context hierarchy
2019-05-05 09:05:46 -Using default implementation for ThreadExecutor
2019-05-05 09:05:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 09:05:46 -Quartz Scheduler v.2.2.1 created.
2019-05-05 09:05:46 -RAMJobStore initialized.
2019-05-05 09:05:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 09:05:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 09:05:46 -Quartz scheduler version: 2.2.1
2019-05-05 09:05:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2755617b
2019-05-05 09:05:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 09:05:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 09:05:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 09:05:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 09:05:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 09:05:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 09:05:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 09:05:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 09:05:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 09:05:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:05:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 09:05:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 09:05:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 09:05:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 09:05:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 09:05:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 09:05:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 09:05:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 09:05:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 09:05:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 09:05:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 09:05:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 09:05:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 09:05:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 09:05:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 09:05:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 09:05:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 09:05:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 09:05:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 09:05:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 09:05:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 09:05:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 09:05:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 09:05:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 09:05:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 09:05:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 09:05:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 09:05:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 09:05:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 09:05:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 09:05:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 09:05:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 09:05:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 09:05:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 09:05:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 09:05:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 09:05:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:05:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:05:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 09:05:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 09:05:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 09:05:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 09:05:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 09:05:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 09:05:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 09:05:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 09:05:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 09:05:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 09:05:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 09:05:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 09:05:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 09:05:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 09:05:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 09:05:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 09:05:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 09:05:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 09:05:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 09:05:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 09:05:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 09:05:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 09:05:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 09:05:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 09:05:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 09:05:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 09:05:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 09:05:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 09:05:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 09:05:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 09:05:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 09:05:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 09:05:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 09:05:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 09:05:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 09:05:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 09:05:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 09:05:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:05:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 09:05:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 09:05:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 09:05:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 09:05:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:05:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:05:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 09:05:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 09:05:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 09:05:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 09:05:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 09:05:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 09:05:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:05:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 09:05:04 CST 2019]; root of context hierarchy
2019-05-05 09:05:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:05:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:05:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:05:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 09:05:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 09:06:00 -Registering beans for JMX exposure on startup
2019-05-05 09:06:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 09:06:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 09:06:01 -Starting beans in phase 2147483647
2019-05-05 09:06:01 -Context refreshed
2019-05-05 09:06:01 -Found 1 custom documentation plugin(s)
2019-05-05 09:06:01 -Scanning for api listing references
2019-05-05 09:06:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_1
2019-05-05 09:06:03 -Generating unique operation named: addUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: editUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: listUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_2
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_3
2019-05-05 09:06:03 -Generating unique operation named: saveUsingPOST_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPOST_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPUT_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 09:06:03 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 09:06:03 -Generating unique operation named: addUsingGET_2
2019-05-05 09:06:03 -Generating unique operation named: editUsingGET_2
2019-05-05 09:06:03 -Generating unique operation named: listUsingGET_2
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_4
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_5
2019-05-05 09:06:03 -Generating unique operation named: saveUsingPOST_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPOST_2
2019-05-05 09:06:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: addUsingGET_3
2019-05-05 09:06:03 -Generating unique operation named: editUsingGET_3
2019-05-05 09:06:03 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 09:06:03 -Generating unique operation named: listUsingGET_3
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_6
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_7
2019-05-05 09:06:03 -Generating unique operation named: saveUsingPOST_3
2019-05-05 09:06:03 -Generating unique operation named: updateUsingGET_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPOST_3
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPUT_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 09:06:03 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 09:06:03 -Generating unique operation named: addUsingGET_4
2019-05-05 09:06:03 -Generating unique operation named: editUsingGET_4
2019-05-05 09:06:03 -Generating unique operation named: listUsingGET_4
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_8
2019-05-05 09:06:03 -Generating unique operation named: removeUsingPOST_9
2019-05-05 09:06:03 -Generating unique operation named: saveUsingPOST_4
2019-05-05 09:06:03 -Generating unique operation named: updateUsingGET_3
2019-05-05 09:06:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPOST_4
2019-05-05 09:06:03 -Generating unique operation named: updateUsingPUT_3
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 09:06:04 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 09:06:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 09:06:04 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 09:06:04 -Generating unique operation named: ElecUsingGET_1
2019-05-05 09:06:04 -Generating unique operation named: addUsingGET_5
2019-05-05 09:06:04 -Generating unique operation named: editUsingGET_5
2019-05-05 09:06:04 -Generating unique operation named: listUsingGET_5
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_10
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_11
2019-05-05 09:06:04 -Generating unique operation named: saveUsingPOST_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingGET_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPOST_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPUT_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 09:06:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 09:06:04 -Generating unique operation named: editUsingGET_6
2019-05-05 09:06:04 -Generating unique operation named: listUsingGET_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPOST_6
2019-05-05 09:06:04 -Generating unique operation named: addUsingGET_6
2019-05-05 09:06:04 -Generating unique operation named: editUsingGET_7
2019-05-05 09:06:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 09:06:04 -Generating unique operation named: listUsingGET_7
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_12
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_13
2019-05-05 09:06:04 -Generating unique operation named: saveUsingPOST_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingGET_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPOST_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPUT_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 09:06:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 09:06:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 09:06:04 -Generating unique operation named: addUsingGET_7
2019-05-05 09:06:04 -Generating unique operation named: editUsingGET_8
2019-05-05 09:06:04 -Generating unique operation named: listUsingGET_8
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_14
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_15
2019-05-05 09:06:04 -Generating unique operation named: saveUsingPOST_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingGET_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPOST_8
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPUT_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 09:06:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 09:06:04 -Generating unique operation named: addUsingGET_8
2019-05-05 09:06:04 -Generating unique operation named: editUsingGET_9
2019-05-05 09:06:04 -Generating unique operation named: listUsingGET_9
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_16
2019-05-05 09:06:04 -Generating unique operation named: removeUsingPOST_17
2019-05-05 09:06:04 -Generating unique operation named: saveUsingPOST_8
2019-05-05 09:06:04 -Generating unique operation named: updateUsingGET_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPOST_9
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPUT_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 09:06:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 09:06:05 -Generating unique operation named: addUsingGET_9
2019-05-05 09:06:05 -Generating unique operation named: editUsingGET_10
2019-05-05 09:06:05 -Generating unique operation named: infoUsingGET_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingPOST_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingPUT_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 09:06:05 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 09:06:05 -Generating unique operation named: listUsingGET_10
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_18
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_19
2019-05-05 09:06:05 -Generating unique operation named: saveUsingPOST_9
2019-05-05 09:06:05 -Generating unique operation named: updateUsingPOST_10
2019-05-05 09:06:05 -Generating unique operation named: listUsingGET_11
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_20
2019-05-05 09:06:05 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 09:06:05 -Generating unique operation named: addUsingGET_10
2019-05-05 09:06:05 -Generating unique operation named: editUsingGET_11
2019-05-05 09:06:05 -Generating unique operation named: listUsingGET_12
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_21
2019-05-05 09:06:05 -Generating unique operation named: saveUsingPOST_10
2019-05-05 09:06:05 -Generating unique operation named: treeUsingGET_1
2019-05-05 09:06:05 -Generating unique operation named: treeUsingGET_2
2019-05-05 09:06:05 -Generating unique operation named: updateUsingPOST_11
2019-05-05 09:06:05 -Generating unique operation named: addUsingGET_11
2019-05-05 09:06:05 -Generating unique operation named: editUsingGET_12
2019-05-05 09:06:05 -Generating unique operation named: listUsingGET_13
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_22
2019-05-05 09:06:05 -Generating unique operation named: removeUsingPOST_23
2019-05-05 09:06:05 -Generating unique operation named: saveUsingPOST_11
2019-05-05 09:06:05 -Generating unique operation named: updateUsingGET_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingPOST_12
2019-05-05 09:06:05 -Generating unique operation named: updateUsingPUT_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 09:06:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 09:06:05 -Generating unique operation named: addUsingGET_12
2019-05-05 09:06:05 -Generating unique operation named: editUsingGET_13
2019-05-05 09:06:06 -Generating unique operation named: listUsingGET_14
2019-05-05 09:06:06 -Generating unique operation named: removeUsingPOST_24
2019-05-05 09:06:06 -Generating unique operation named: removeUsingPOST_25
2019-05-05 09:06:06 -Generating unique operation named: saveUsingPOST_12
2019-05-05 09:06:06 -Generating unique operation named: updateUsingGET_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingPOST_13
2019-05-05 09:06:06 -Generating unique operation named: updateUsingPUT_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 09:06:06 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 09:06:06 -Generating unique operation named: addUsingGET_13
2019-05-05 09:06:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 09:06:06 -Generating unique operation named: editUsingGET_14
2019-05-05 09:06:06 -Generating unique operation named: listUsingGET_15
2019-05-05 09:06:06 -Generating unique operation named: saveUsingPOST_13
2019-05-05 09:06:06 -Generating unique operation named: saveUsingPOST_14
2019-05-05 09:06:06 -Generating unique operation named: updateUsingPOST_14
2019-05-05 09:06:07 -Generating unique operation named: listUsingGET_16
2019-05-05 09:06:07 -Generating unique operation named: listUsingHEAD_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingPOST_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingPUT_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingPATCH_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingDELETE_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 09:06:07 -Generating unique operation named: listUsingTRACE_1
2019-05-05 09:06:07 -Generating unique operation named: countDDUsingGET_1
2019-05-05 09:06:07 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 09:06:07 -Generating unique operation named: exprotElecLogUsingGET_2
2019-05-05 09:06:07 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 09:06:07 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 09:06:07 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 09:06:07 -Generating unique operation named: addUsingGET_14
2019-05-05 09:06:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 09:06:07 -Generating unique operation named: editUsingGET_15
2019-05-05 09:06:07 -Generating unique operation named: listUsingGET_17
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_26
2019-05-05 09:06:07 -Generating unique operation named: saveUsingPOST_15
2019-05-05 09:06:07 -Generating unique operation named: treeUsingGET_3
2019-05-05 09:06:07 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPOST_15
2019-05-05 09:06:07 -Generating unique operation named: addUsingGET_15
2019-05-05 09:06:07 -Generating unique operation named: editUsingGET_16
2019-05-05 09:06:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 09:06:07 -Generating unique operation named: listUsingGET_18
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_27
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_28
2019-05-05 09:06:07 -Generating unique operation named: saveUsingPOST_16
2019-05-05 09:06:07 -Generating unique operation named: updateUsingGET_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPOST_16
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPUT_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 09:06:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 09:06:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 09:06:07 -Generating unique operation named: addUsingGET_16
2019-05-05 09:06:07 -Generating unique operation named: editUsingGET_17
2019-05-05 09:06:07 -Generating unique operation named: listUsingGET_19
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_29
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_30
2019-05-05 09:06:07 -Generating unique operation named: saveUsingPOST_17
2019-05-05 09:06:07 -Generating unique operation named: updateUsingGET_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPOST_17
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPUT_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 09:06:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 09:06:07 -Generating unique operation named: addUsingGET_17
2019-05-05 09:06:07 -Generating unique operation named: editUsingGET_18
2019-05-05 09:06:07 -Generating unique operation named: listUsingGET_20
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_31
2019-05-05 09:06:07 -Generating unique operation named: removeUsingPOST_32
2019-05-05 09:06:07 -Generating unique operation named: saveUsingPOST_18
2019-05-05 09:06:07 -Generating unique operation named: updateUsingGET_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPOST_18
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPUT_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 09:06:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 09:06:08 -Starting Quartz Scheduler now
2019-05-05 09:06:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 09:06:08 -Starting...
2019-05-05 09:06:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 09:06:08 -Started.
2019-05-05 09:06:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 09:06:08 -Using a shared selector for servlet write/read
2019-05-05 09:06:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 09:06:08 -Started BootdoApplication in 70.297 seconds (JVM running for 74.088)
2019-05-05 09:06:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 09:06:10 -==> Parameters: 
2019-05-05 09:06:11 -<==      Total: 1
2019-05-05 09:06:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 09:07:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 09:07:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 09:07:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 128 ms
2019-05-05 09:07:20 -Enabling session validation scheduler...
2019-05-05 09:07:21 -请求地址 : http://localhost:8081/login;JSESSIONID=0f0d5e9f-efe3-4e98-bb00-a32cc3c1dd12
2019-05-05 09:07:21 -HTTP METHOD : GET
2019-05-05 09:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 09:07:21 -参数 : [{}]
2019-05-05 09:07:21 -耗时 : 4
2019-05-05 09:07:21 -返回值 : login
2019-05-05 09:07:43 -请求地址 : http://localhost:8081/getVerify
2019-05-05 09:07:43 -HTTP METHOD : GET
2019-05-05 09:07:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 09:07:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e23808c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b21012c]
2019-05-05 09:08:04 -7272
2019-05-05 09:08:06 -耗时 : 22894
2019-05-05 09:08:06 -返回值 : null
2019-05-05 09:09:05 -请求地址 : http://localhost:8081/login
2019-05-05 09:09:05 -HTTP METHOD : POST
2019-05-05 09:09:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 09:09:05 -参数 : [admin, 111111, 7272, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d6cbb05]
2019-05-05 09:09:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 09:09:05 -==> Parameters: admin(String)
2019-05-05 09:09:06 -<==      Total: 1
2019-05-05 09:09:06 -耗时 : 1236
2019-05-05 09:09:06 -返回值 : {msg=操作成功, code=0}
2019-05-05 09:09:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 09:09:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:09:06 -==> Parameters: 1(Long), admin(String), 登录(String), 1237(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 09:09:06.79(Timestamp)
2019-05-05 09:09:07 -请求地址 : http://localhost:8081/index
2019-05-05 09:09:07 -HTTP METHOD : GET
2019-05-05 09:09:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 09:09:07 -参数 : [{}]
2019-05-05 09:09:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 09:09:08 -<==    Updates: 1
2019-05-05 09:09:08 -==> Parameters: 1(Long)
2019-05-05 09:09:09 -<==      Total: 49
2019-05-05 09:09:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 09:09:09 -==> Parameters: 138(Long)
2019-05-05 09:09:09 -<==      Total: 1
2019-05-05 09:09:09 -耗时 : 2489
2019-05-05 09:09:09 -返回值 : index_v1
2019-05-05 09:09:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:09:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2490(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 09:09:09.803(Timestamp)
2019-05-05 09:09:10 -请求地址 : http://localhost:8081/main
2019-05-05 09:09:10 -HTTP METHOD : GET
2019-05-05 09:09:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:09:10 -参数 : []
2019-05-05 09:09:10 -耗时 : 1
2019-05-05 09:09:10 -返回值 : main
2019-05-05 09:09:11 -<==    Updates: 1
2019-05-05 09:09:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 09:09:12 -HTTP METHOD : GET
2019-05-05 09:09:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 09:09:12 -参数 : []
2019-05-05 09:09:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 09:09:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 09:09:12 -请求地址 : http://localhost:8081/main
2019-05-05 09:09:12 -HTTP METHOD : GET
2019-05-05 09:09:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:09:12 -参数 : []
2019-05-05 09:09:12 -耗时 : 0
2019-05-05 09:09:12 -返回值 : main
2019-05-05 09:09:13 -<==      Total: 0
2019-05-05 09:09:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 09:09:13 -==> Parameters: 1(Long), 0(String)
2019-05-05 09:09:13 -<==      Total: 1
2019-05-05 09:09:13 -耗时 : 976
2019-05-05 09:09:13 -返回值 : com.bootdo.common.utils.PageUtils@4888f12c
2019-05-05 09:09:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 09:09:19 -==> Parameters: 1(Long)
2019-05-05 09:09:20 -<==      Total: 93
2019-05-05 09:09:20 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 09:09:20 -HTTP METHOD : GET
2019-05-05 09:09:20 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 09:09:20 -参数 : []
2019-05-05 09:09:20 -耗时 : 1
2019-05-05 09:09:20 -返回值 : charts/countYY
2019-05-05 09:09:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 09:09:21 -HTTP METHOD : GET
2019-05-05 09:09:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 09:09:21 -参数 : [userType]
2019-05-05 09:09:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 09:09:21 -==> Parameters: userType(String)
2019-05-05 09:09:22 -<==      Total: 4
2019-05-05 09:09:22 -耗时 : 415
2019-05-05 09:09:22 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 09:09:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 09:09:28 -HTTP METHOD : GET
2019-05-05 09:09:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 09:09:28 -参数 : []
2019-05-05 09:09:28 -耗时 : 0
2019-05-05 09:09:28 -返回值 : system/dept/deptTree
2019-05-05 09:09:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 09:09:28 -HTTP METHOD : GET
2019-05-05 09:09:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 09:09:28 -参数 : []
2019-05-05 09:09:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 09:09:28 -==> Parameters: 
2019-05-05 09:09:28 -<==      Total: 3
2019-05-05 09:09:28 -耗时 : 59
2019-05-05 09:09:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 09:09:38 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 09:09:38 -HTTP METHOD : POST
2019-05-05 09:09:38 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 09:09:38 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@69ea60a8, com.bootdo.moneyLog.vo.WaterLogVo@404312a0, com.bootdo.moneyLog.vo.HeatLogVo@5df3516f]
2019-05-05 09:09:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:38 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:09:39 -==> Parameters: 
2019-05-05 09:09:39 -<==      Total: 1
2019-05-05 09:09:39 -耗时 : 1324
2019-05-05 09:09:39 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 09:10:35 -请求地址 : http://localhost:8081/index
2019-05-05 09:10:35 -HTTP METHOD : GET
2019-05-05 09:10:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 09:10:35 -参数 : [{}]
2019-05-05 09:10:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 09:10:35 -==> Parameters: 1(Long)
2019-05-05 09:10:35 -<==      Total: 49
2019-05-05 09:10:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 09:10:35 -==> Parameters: 138(Long)
2019-05-05 09:10:35 -<==      Total: 1
2019-05-05 09:10:35 -耗时 : 85
2019-05-05 09:10:35 -返回值 : index_v1
2019-05-05 09:10:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:10:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 85(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 09:10:35.107(Timestamp)
2019-05-05 09:10:35 -请求地址 : http://localhost:8081/main
2019-05-05 09:10:35 -HTTP METHOD : GET
2019-05-05 09:10:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:10:35 -参数 : []
2019-05-05 09:10:35 -耗时 : 0
2019-05-05 09:10:35 -返回值 : main
2019-05-05 09:10:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 09:10:35 -HTTP METHOD : GET
2019-05-05 09:10:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 09:10:35 -参数 : []
2019-05-05 09:10:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 09:10:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 09:10:35 -请求地址 : http://localhost:8081/main
2019-05-05 09:10:35 -HTTP METHOD : GET
2019-05-05 09:10:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:10:35 -参数 : []
2019-05-05 09:10:35 -耗时 : 2
2019-05-05 09:10:35 -返回值 : main
2019-05-05 09:10:35 -<==    Updates: 1
2019-05-05 09:10:35 -<==      Total: 0
2019-05-05 09:10:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 09:10:35 -==> Parameters: 1(Long), 0(String)
2019-05-05 09:10:35 -<==      Total: 1
2019-05-05 09:10:35 -耗时 : 545
2019-05-05 09:10:35 -返回值 : com.bootdo.common.utils.PageUtils@1adb7940
2019-05-05 09:10:39 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 09:10:39 -HTTP METHOD : GET
2019-05-05 09:10:39 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 09:10:39 -参数 : []
2019-05-05 09:10:39 -耗时 : 1
2019-05-05 09:10:39 -返回值 : charts/countYY
2019-05-05 09:10:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 09:10:39 -HTTP METHOD : GET
2019-05-05 09:10:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 09:10:39 -参数 : [userType]
2019-05-05 09:10:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 09:10:39 -==> Parameters: userType(String)
2019-05-05 09:10:39 -<==      Total: 4
2019-05-05 09:10:39 -耗时 : 177
2019-05-05 09:10:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 09:10:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 09:10:54 -HTTP METHOD : GET
2019-05-05 09:10:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 09:10:54 -参数 : []
2019-05-05 09:10:54 -耗时 : 1
2019-05-05 09:10:54 -返回值 : system/dept/deptTree
2019-05-05 09:10:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 09:10:54 -HTTP METHOD : GET
2019-05-05 09:10:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 09:10:54 -参数 : []
2019-05-05 09:10:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 09:10:54 -==> Parameters: 
2019-05-05 09:10:54 -<==      Total: 3
2019-05-05 09:10:54 -耗时 : 44
2019-05-05 09:10:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 09:10:57 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 09:10:57 -HTTP METHOD : POST
2019-05-05 09:10:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 09:10:57 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@702ed5b9, com.bootdo.moneyLog.vo.WaterLogVo@432fad8d, com.bootdo.moneyLog.vo.HeatLogVo@3df51561]
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:57 -<==      Total: 1
2019-05-05 09:10:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:57 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:10:58 -==> Parameters: 
2019-05-05 09:10:58 -<==      Total: 1
2019-05-05 09:10:58 -耗时 : 922
2019-05-05 09:10:58 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 09:11:20 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 09:36:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 401]
2019-05-05 09:53:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 10092 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 09:53:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 09:53:45 -The following profiles are active: dev
2019-05-05 09:53:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 09:53:45 CST 2019]; root of context hierarchy
2019-05-05 09:53:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 09:53:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f27e339] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$818111e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 09:53:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 09:53:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 09:53:55 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 09:53:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 09:53:55 -Starting service [Tomcat]
2019-05-05 09:53:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 09:53:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 09:53:56 -Initializing Spring embedded WebApplicationContext
2019-05-05 09:53:56 -Root WebApplicationContext: initialization completed in 11154 ms
2019-05-05 09:53:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 09:53:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 09:53:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 09:53:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 09:53:57 -Filter xssFilter was not registered (disabled)
2019-05-05 09:53:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 09:53:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 09:53:57 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 09:53:57 -Servlet dispatcherServlet mapped to [/]
2019-05-05 09:54:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 09:53:45 CST 2019]; root of context hierarchy
2019-05-05 09:54:11 -Using default implementation for ThreadExecutor
2019-05-05 09:54:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 09:54:11 -Quartz Scheduler v.2.2.1 created.
2019-05-05 09:54:11 -RAMJobStore initialized.
2019-05-05 09:54:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 09:54:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 09:54:11 -Quartz scheduler version: 2.2.1
2019-05-05 09:54:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@640c216b
2019-05-05 09:54:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 09:54:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 09:54:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 09:54:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 09:54:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 09:54:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 09:54:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 09:54:15 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 09:54:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 09:54:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 09:54:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 09:54:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 09:54:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 09:54:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 09:54:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 09:54:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 09:54:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 09:54:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 09:54:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 09:54:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 09:54:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 09:54:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 09:54:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 09:54:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 09:54:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 09:54:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 09:54:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 09:54:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 09:54:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 09:54:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 09:54:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 09:54:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 09:54:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 09:54:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:54:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 09:54:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 09:54:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 09:54:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 09:54:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 09:54:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 09:54:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 09:54:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 09:54:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 09:54:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:54:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 09:54:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 09:54:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 09:54:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 09:54:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 09:54:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:54:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:54:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 09:54:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 09:54:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 09:54:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 09:54:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 09:54:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 09:54:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 09:54:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 09:54:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 09:54:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 09:54:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 09:54:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 09:54:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 09:54:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 09:54:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 09:54:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 09:54:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 09:54:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 09:54:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 09:54:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 09:54:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 09:54:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 09:54:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 09:54:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 09:54:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 09:54:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 09:54:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 09:54:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 09:54:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 09:54:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 09:54:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 09:54:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 09:54:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 09:54:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 09:54:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 09:54:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 09:54:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 09:54:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 09:54:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 09:54:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 09:54:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 09:54:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 09:54:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 09:54:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 09:54:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 09:54:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 09:54:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 09:54:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 09:54:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 09:54:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 09:54:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 09:54:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 09:54:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:54:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 09:53:45 CST 2019]; root of context hierarchy
2019-05-05 09:54:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:54:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:54:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 09:54:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 09:54:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 09:54:20 -Registering beans for JMX exposure on startup
2019-05-05 09:54:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 09:54:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 09:54:20 -Starting beans in phase 2147483647
2019-05-05 09:54:20 -Context refreshed
2019-05-05 09:54:20 -Found 1 custom documentation plugin(s)
2019-05-05 09:54:20 -Scanning for api listing references
2019-05-05 09:54:20 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 09:54:20 -Generating unique operation named: removeUsingPOST_1
2019-05-05 09:54:20 -Generating unique operation named: addUsingGET_1
2019-05-05 09:54:20 -Generating unique operation named: editUsingGET_1
2019-05-05 09:54:20 -Generating unique operation named: listUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_2
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_3
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_2
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_2
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_2
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_4
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_5
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_2
2019-05-05 09:54:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_3
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_3
2019-05-05 09:54:21 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_3
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_6
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_7
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_4
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_4
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_4
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_8
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_9
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 09:54:21 -Generating unique operation named: ElecUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_5
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_5
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_5
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_10
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_11
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_6
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_6
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_6
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_7
2019-05-05 09:54:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_7
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_12
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_13
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 09:54:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_7
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_8
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_8
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_14
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_15
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_8
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_8
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_9
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_9
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_16
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_17
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_8
2019-05-05 09:54:21 -Generating unique operation named: updateUsingGET_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_9
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPUT_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 09:54:21 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 09:54:21 -Generating unique operation named: addUsingGET_9
2019-05-05 09:54:21 -Generating unique operation named: editUsingGET_10
2019-05-05 09:54:21 -Generating unique operation named: infoUsingGET_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingPOST_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingPUT_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 09:54:21 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 09:54:21 -Generating unique operation named: listUsingGET_10
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_18
2019-05-05 09:54:21 -Generating unique operation named: removeUsingPOST_19
2019-05-05 09:54:21 -Generating unique operation named: saveUsingPOST_9
2019-05-05 09:54:21 -Generating unique operation named: updateUsingPOST_10
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_11
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_20
2019-05-05 09:54:22 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_10
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_11
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_12
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_21
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_10
2019-05-05 09:54:22 -Generating unique operation named: treeUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: treeUsingGET_2
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_11
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_11
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_12
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_13
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_22
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_23
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingGET_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPUT_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 09:54:22 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_12
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_13
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_14
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_24
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_25
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingGET_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_13
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPUT_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 09:54:22 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_13
2019-05-05 09:54:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_14
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_15
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_13
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_14
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_14
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_16
2019-05-05 09:54:22 -Generating unique operation named: listUsingHEAD_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingPOST_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingPUT_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingPATCH_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingDELETE_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 09:54:22 -Generating unique operation named: listUsingTRACE_1
2019-05-05 09:54:22 -Generating unique operation named: countDDUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: exprotElecLogUsingGET_2
2019-05-05 09:54:22 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 09:54:22 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_14
2019-05-05 09:54:22 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_15
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_17
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_26
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_15
2019-05-05 09:54:22 -Generating unique operation named: treeUsingGET_3
2019-05-05 09:54:22 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_15
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_15
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_16
2019-05-05 09:54:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_18
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_27
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_28
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_16
2019-05-05 09:54:22 -Generating unique operation named: updateUsingGET_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_16
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPUT_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 09:54:22 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 09:54:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_16
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_17
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_19
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_29
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_30
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_17
2019-05-05 09:54:22 -Generating unique operation named: updateUsingGET_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_17
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPUT_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 09:54:22 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 09:54:22 -Generating unique operation named: addUsingGET_17
2019-05-05 09:54:22 -Generating unique operation named: editUsingGET_18
2019-05-05 09:54:22 -Generating unique operation named: listUsingGET_20
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_31
2019-05-05 09:54:22 -Generating unique operation named: removeUsingPOST_32
2019-05-05 09:54:22 -Generating unique operation named: saveUsingPOST_18
2019-05-05 09:54:22 -Generating unique operation named: updateUsingGET_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPOST_18
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPUT_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 09:54:22 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 09:54:22 -Starting Quartz Scheduler now
2019-05-05 09:54:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 09:54:22 -Starting...
2019-05-05 09:54:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 09:54:22 -Started.
2019-05-05 09:54:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 09:54:23 -Using a shared selector for servlet write/read
2019-05-05 09:54:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 09:54:23 -Started BootdoApplication in 39.303 seconds (JVM running for 40.174)
2019-05-05 09:54:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 09:54:23 -==> Parameters: 
2019-05-05 09:54:24 -<==      Total: 1
2019-05-05 09:55:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 09:55:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 09:55:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 09:55:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-05-05 09:55:38 -Enabling session validation scheduler...
2019-05-05 09:55:39 -请求地址 : http://localhost:8081/login;JSESSIONID=ec77e988-33bf-4ee5-ae41-0dec6d473439
2019-05-05 09:55:39 -HTTP METHOD : GET
2019-05-05 09:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 09:55:39 -参数 : [{}]
2019-05-05 09:55:39 -耗时 : 4
2019-05-05 09:55:39 -返回值 : login
2019-05-05 09:55:40 -请求地址 : http://localhost:8081/getVerify
2019-05-05 09:55:40 -HTTP METHOD : GET
2019-05-05 09:55:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 09:55:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@14d3edcd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@518c6a34]
2019-05-05 09:55:45 -4013
2019-05-05 09:55:46 -耗时 : 5583
2019-05-05 09:55:46 -返回值 : null
2019-05-05 09:55:54 -请求地址 : http://localhost:8081/login
2019-05-05 09:55:54 -HTTP METHOD : POST
2019-05-05 09:55:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 09:55:54 -参数 : [admin, 111111, 4013, org.apache.shiro.web.servlet.ShiroHttpServletRequest@a0d7a05]
2019-05-05 09:55:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 09:55:55 -==> Parameters: admin(String)
2019-05-05 09:55:55 -<==      Total: 1
2019-05-05 09:55:55 -耗时 : 420
2019-05-05 09:55:55 -返回值 : {msg=操作成功, code=0}
2019-05-05 09:55:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 09:55:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:55:55 -==> Parameters: 1(Long), admin(String), 登录(String), 420(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 09:55:55.691(Timestamp)
2019-05-05 09:55:55 -请求地址 : http://localhost:8081/index
2019-05-05 09:55:55 -HTTP METHOD : GET
2019-05-05 09:55:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 09:55:55 -参数 : [{}]
2019-05-05 09:55:56 -<==    Updates: 1
2019-05-05 09:55:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 09:55:56 -==> Parameters: 1(Long)
2019-05-05 09:55:57 -<==      Total: 49
2019-05-05 09:55:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 09:55:57 -==> Parameters: 138(Long)
2019-05-05 09:55:57 -<==      Total: 1
2019-05-05 09:55:57 -耗时 : 1394
2019-05-05 09:55:57 -返回值 : index_v1
2019-05-05 09:55:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:55:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1394(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 09:55:57.418(Timestamp)
2019-05-05 09:55:57 -<==    Updates: 1
2019-05-05 09:55:57 -请求地址 : http://localhost:8081/main
2019-05-05 09:55:57 -HTTP METHOD : GET
2019-05-05 09:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:55:57 -参数 : []
2019-05-05 09:55:57 -耗时 : 1
2019-05-05 09:55:57 -返回值 : main
2019-05-05 09:55:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 09:55:58 -HTTP METHOD : GET
2019-05-05 09:55:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 09:55:58 -参数 : []
2019-05-05 09:55:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 09:55:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 09:55:58 -请求地址 : http://localhost:8081/main
2019-05-05 09:55:58 -HTTP METHOD : GET
2019-05-05 09:55:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 09:55:58 -参数 : []
2019-05-05 09:55:58 -耗时 : 0
2019-05-05 09:55:58 -返回值 : main
2019-05-05 09:55:58 -<==      Total: 0
2019-05-05 09:55:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 09:55:58 -==> Parameters: 1(Long), 0(String)
2019-05-05 09:55:58 -<==      Total: 1
2019-05-05 09:55:58 -耗时 : 488
2019-05-05 09:55:58 -返回值 : com.bootdo.common.utils.PageUtils@7bae0116
2019-05-05 09:56:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 09:56:11 -==> Parameters: 1(Long)
2019-05-05 09:56:11 -<==      Total: 93
2019-05-05 09:56:11 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 09:56:11 -HTTP METHOD : GET
2019-05-05 09:56:11 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 09:56:11 -参数 : []
2019-05-05 09:56:11 -耗时 : 1
2019-05-05 09:56:11 -返回值 : charts/countYY
2019-05-05 09:56:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 09:56:12 -HTTP METHOD : GET
2019-05-05 09:56:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 09:56:12 -参数 : [userType]
2019-05-05 09:56:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 09:56:12 -==> Parameters: userType(String)
2019-05-05 09:56:12 -<==      Total: 4
2019-05-05 09:56:12 -耗时 : 171
2019-05-05 09:56:12 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 09:56:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 09:56:24 -HTTP METHOD : GET
2019-05-05 09:56:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 09:56:24 -参数 : []
2019-05-05 09:56:24 -耗时 : 0
2019-05-05 09:56:24 -返回值 : system/dept/deptTree
2019-05-05 09:56:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 09:56:24 -HTTP METHOD : GET
2019-05-05 09:56:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 09:56:24 -参数 : []
2019-05-05 09:56:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 09:56:24 -==> Parameters: 
2019-05-05 09:56:24 -<==      Total: 3
2019-05-05 09:56:24 -耗时 : 44
2019-05-05 09:56:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 09:56:26 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 09:56:26 -HTTP METHOD : POST
2019-05-05 09:56:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 09:56:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4b2458, com.bootdo.moneyLog.vo.WaterLogVo@5afa044d, com.bootdo.moneyLog.vo.HeatLogVo@5f437040]
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:26 -<==      Total: 1
2019-05-05 09:56:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:26 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -耗时 : 741
2019-05-05 09:56:27 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 09:56:27 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 09:56:27 -HTTP METHOD : POST
2019-05-05 09:56:27 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 09:56:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5ffe0ee5, com.bootdo.moneyLog.vo.WaterLogVo@20ef301a, com.bootdo.moneyLog.vo.HeatLogVo@5c36ec6b]
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:56:27 -==> Parameters: 
2019-05-05 09:56:27 -<==      Total: 1
2019-05-05 09:56:27 -耗时 : 164
2019-05-05 09:56:27 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 09:58:24 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 09:58:24 -HTTP METHOD : POST
2019-05-05 09:58:24 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 09:58:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7fa0b7a, com.bootdo.moneyLog.vo.WaterLogVo@698b7f6c, com.bootdo.moneyLog.vo.HeatLogVo@2b698560]
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 09:58:24 -==> Parameters: 
2019-05-05 09:58:24 -<==      Total: 1
2019-05-05 09:58:24 -耗时 : 135
2019-05-05 09:58:24 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 09:58:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 09:58:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countYY/getCountYY(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-05-05 09:58:27.808(Timestamp)
2019-05-05 09:58:28 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 09:58:28 -<==    Updates: 1
2019-05-05 10:19:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 16540 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 10:19:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 10:19:03 -The following profiles are active: dev
2019-05-05 10:19:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 10:19:03 CST 2019]; root of context hierarchy
2019-05-05 10:19:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 10:19:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$46071d01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$38604ba8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 10:19:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 10:19:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 10:19:17 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 10:19:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 10:19:17 -Starting service [Tomcat]
2019-05-05 10:19:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 10:19:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 10:19:18 -Initializing Spring embedded WebApplicationContext
2019-05-05 10:19:18 -Root WebApplicationContext: initialization completed in 15169 ms
2019-05-05 10:19:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 10:19:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 10:19:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 10:19:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 10:19:19 -Filter xssFilter was not registered (disabled)
2019-05-05 10:19:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 10:19:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 10:19:19 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 10:19:19 -Servlet dispatcherServlet mapped to [/]
2019-05-05 10:19:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 10:19:03 CST 2019]; root of context hierarchy
2019-05-05 10:19:32 -Using default implementation for ThreadExecutor
2019-05-05 10:19:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 10:19:32 -Quartz Scheduler v.2.2.1 created.
2019-05-05 10:19:32 -RAMJobStore initialized.
2019-05-05 10:19:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 10:19:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 10:19:32 -Quartz scheduler version: 2.2.1
2019-05-05 10:19:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@baa9ce4
2019-05-05 10:19:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 10:19:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 10:19:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 10:19:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 10:19:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 10:19:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 10:19:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 10:19:37 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 10:19:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 10:19:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 10:19:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 10:19:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 10:19:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 10:19:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 10:19:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 10:19:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 10:19:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 10:19:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 10:19:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 10:19:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 10:19:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 10:19:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 10:19:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 10:19:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 10:19:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 10:19:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 10:19:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 10:19:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 10:19:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 10:19:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 10:19:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 10:19:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 10:19:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 10:19:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 10:19:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 10:19:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 10:19:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 10:19:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 10:19:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 10:19:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 10:19:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 10:19:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 10:19:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 10:19:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 10:19:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 10:19:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 10:19:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 10:19:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 10:19:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 10:19:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 10:19:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 10:19:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 10:19:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 10:19:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 10:19:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 10:19:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 10:19:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 10:19:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 10:19:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 10:19:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 10:19:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 10:19:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 10:19:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 10:19:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 10:19:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 10:19:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 10:19:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 10:19:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 10:19:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 10:19:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 10:19:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 10:19:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 10:19:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 10:19:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 10:19:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 10:19:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 10:19:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 10:19:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 10:19:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 10:19:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 10:19:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 10:19:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 10:19:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 10:19:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 10:19:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 10:19:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 10:19:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 10:19:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 10:19:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 10:19:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 10:19:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 10:19:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 10:19:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 10:19:03 CST 2019]; root of context hierarchy
2019-05-05 10:19:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 10:19:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 10:19:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 10:19:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 10:19:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 10:19:43 -Registering beans for JMX exposure on startup
2019-05-05 10:19:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 10:19:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 10:19:43 -Starting beans in phase 2147483647
2019-05-05 10:19:43 -Context refreshed
2019-05-05 10:19:44 -Found 1 custom documentation plugin(s)
2019-05-05 10:19:44 -Scanning for api listing references
2019-05-05 10:19:44 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 10:19:44 -Generating unique operation named: removeUsingPOST_1
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_2
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_3
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_2
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_2
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_2
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_4
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_5
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_2
2019-05-05 10:19:45 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_3
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_3
2019-05-05 10:19:45 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_3
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_6
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_7
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_4
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_4
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_4
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_8
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_9
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 10:19:45 -Generating unique operation named: ElecUsingGET_1
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_5
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_5
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_5
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_10
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_11
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_6
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_6
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_6
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_7
2019-05-05 10:19:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_7
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_12
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_13
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 10:19:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_7
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_8
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_8
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_14
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_15
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_8
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 10:19:45 -Generating unique operation named: addUsingGET_8
2019-05-05 10:19:45 -Generating unique operation named: editUsingGET_9
2019-05-05 10:19:45 -Generating unique operation named: listUsingGET_9
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_16
2019-05-05 10:19:45 -Generating unique operation named: removeUsingPOST_17
2019-05-05 10:19:45 -Generating unique operation named: saveUsingPOST_8
2019-05-05 10:19:45 -Generating unique operation named: updateUsingGET_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPOST_9
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPUT_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 10:19:45 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_9
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_10
2019-05-05 10:19:46 -Generating unique operation named: infoUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingPOST_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingPUT_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 10:19:46 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_10
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_18
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_19
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPOST_10
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_11
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_20
2019-05-05 10:19:46 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_10
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_11
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_12
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_21
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_10
2019-05-05 10:19:46 -Generating unique operation named: treeUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: treeUsingGET_2
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPOST_11
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_11
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_12
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_13
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_22
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_23
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_11
2019-05-05 10:19:46 -Generating unique operation named: updateUsingGET_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPOST_12
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPUT_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 10:19:46 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_12
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_13
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_14
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_24
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_25
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_12
2019-05-05 10:19:46 -Generating unique operation named: updateUsingGET_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPOST_13
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPUT_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 10:19:46 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_13
2019-05-05 10:19:46 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_14
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_15
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_13
2019-05-05 10:19:46 -Generating unique operation named: saveUsingPOST_14
2019-05-05 10:19:46 -Generating unique operation named: updateUsingPOST_14
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_16
2019-05-05 10:19:46 -Generating unique operation named: listUsingHEAD_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingPOST_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingPUT_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingPATCH_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingDELETE_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 10:19:46 -Generating unique operation named: listUsingTRACE_1
2019-05-05 10:19:46 -Generating unique operation named: countDDUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: exprotElecLogUsingGET_2
2019-05-05 10:19:46 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 10:19:46 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 10:19:46 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 10:19:46 -Generating unique operation named: addUsingGET_14
2019-05-05 10:19:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 10:19:46 -Generating unique operation named: editUsingGET_15
2019-05-05 10:19:46 -Generating unique operation named: listUsingGET_17
2019-05-05 10:19:46 -Generating unique operation named: removeUsingPOST_26
2019-05-05 10:19:47 -Generating unique operation named: saveUsingPOST_15
2019-05-05 10:19:47 -Generating unique operation named: treeUsingGET_3
2019-05-05 10:19:47 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPOST_15
2019-05-05 10:19:47 -Generating unique operation named: addUsingGET_15
2019-05-05 10:19:47 -Generating unique operation named: editUsingGET_16
2019-05-05 10:19:47 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 10:19:47 -Generating unique operation named: listUsingGET_18
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_27
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_28
2019-05-05 10:19:47 -Generating unique operation named: saveUsingPOST_16
2019-05-05 10:19:47 -Generating unique operation named: updateUsingGET_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPOST_16
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPUT_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 10:19:47 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 10:19:47 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 10:19:47 -Generating unique operation named: addUsingGET_16
2019-05-05 10:19:47 -Generating unique operation named: editUsingGET_17
2019-05-05 10:19:47 -Generating unique operation named: listUsingGET_19
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_29
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_30
2019-05-05 10:19:47 -Generating unique operation named: saveUsingPOST_17
2019-05-05 10:19:47 -Generating unique operation named: updateUsingGET_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPOST_17
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPUT_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 10:19:47 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 10:19:47 -Generating unique operation named: addUsingGET_17
2019-05-05 10:19:47 -Generating unique operation named: editUsingGET_18
2019-05-05 10:19:47 -Generating unique operation named: listUsingGET_20
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_31
2019-05-05 10:19:47 -Generating unique operation named: removeUsingPOST_32
2019-05-05 10:19:47 -Generating unique operation named: saveUsingPOST_18
2019-05-05 10:19:47 -Generating unique operation named: updateUsingGET_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPOST_18
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPUT_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 10:19:47 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 10:19:47 -Starting Quartz Scheduler now
2019-05-05 10:19:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 10:19:47 -Starting...
2019-05-05 10:19:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 10:19:47 -Started.
2019-05-05 10:19:47 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 10:19:47 -Using a shared selector for servlet write/read
2019-05-05 10:19:47 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 10:19:47 -Started BootdoApplication in 45.678 seconds (JVM running for 46.557)
2019-05-05 10:19:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 10:19:48 -==> Parameters: 
2019-05-05 10:19:48 -<==      Total: 1
2019-05-05 10:19:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 10:19:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 10:19:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2019-05-05 10:19:59 -Enabling session validation scheduler...
2019-05-05 10:19:59 -请求地址 : http://localhost:8081/login;JSESSIONID=3b5db3d2-ce64-4f1e-ac00-e658b11b0c46
2019-05-05 10:19:59 -HTTP METHOD : GET
2019-05-05 10:19:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 10:19:59 -参数 : [{}]
2019-05-05 10:19:59 -耗时 : 3
2019-05-05 10:19:59 -返回值 : login
2019-05-05 10:20:03 -请求地址 : http://localhost:8081/getVerify
2019-05-05 10:20:03 -HTTP METHOD : GET
2019-05-05 10:20:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 10:20:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c14b300, org.apache.shiro.web.servlet.ShiroHttpServletResponse@436cd628]
2019-05-05 10:20:11 -6650
2019-05-05 10:20:11 -耗时 : 8028
2019-05-05 10:20:11 -返回值 : null
2019-05-05 10:20:11 -请求地址 : http://localhost:8081/login
2019-05-05 10:20:11 -HTTP METHOD : GET
2019-05-05 10:20:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 10:20:11 -参数 : [{}]
2019-05-05 10:20:11 -耗时 : 1
2019-05-05 10:20:11 -返回值 : login
2019-05-05 10:20:25 -请求地址 : http://localhost:8081/login
2019-05-05 10:20:25 -HTTP METHOD : POST
2019-05-05 10:20:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 10:20:25 -参数 : [admin, 111111, 6650, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ee13b51]
2019-05-05 10:20:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 10:20:25 -==> Parameters: admin(String)
2019-05-05 10:20:26 -<==      Total: 1
2019-05-05 10:20:26 -耗时 : 564
2019-05-05 10:20:26 -返回值 : {msg=操作成功, code=0}
2019-05-05 10:20:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 10:20:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 10:20:26 -==> Parameters: 1(Long), admin(String), 登录(String), 565(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 10:20:26.485(Timestamp)
2019-05-05 10:20:26 -请求地址 : http://localhost:8081/index
2019-05-05 10:20:26 -HTTP METHOD : GET
2019-05-05 10:20:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 10:20:26 -参数 : [{}]
2019-05-05 10:20:27 -<==    Updates: 1
2019-05-05 10:20:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 10:20:27 -==> Parameters: 1(Long)
2019-05-05 10:20:27 -<==      Total: 49
2019-05-05 10:20:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 10:20:27 -==> Parameters: 138(Long)
2019-05-05 10:20:27 -<==      Total: 1
2019-05-05 10:20:27 -耗时 : 919
2019-05-05 10:20:27 -返回值 : index_v1
2019-05-05 10:20:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 10:20:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 919(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 10:20:27.912(Timestamp)
2019-05-05 10:20:28 -<==    Updates: 1
2019-05-05 10:20:28 -请求地址 : http://localhost:8081/main
2019-05-05 10:20:28 -HTTP METHOD : GET
2019-05-05 10:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:20:28 -参数 : []
2019-05-05 10:20:28 -耗时 : 0
2019-05-05 10:20:28 -返回值 : main
2019-05-05 10:20:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 10:20:30 -HTTP METHOD : GET
2019-05-05 10:20:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 10:20:30 -参数 : []
2019-05-05 10:20:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 10:20:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 10:20:32 -请求地址 : http://localhost:8081/main
2019-05-05 10:20:32 -HTTP METHOD : GET
2019-05-05 10:20:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:20:32 -参数 : []
2019-05-05 10:20:32 -耗时 : 1
2019-05-05 10:20:32 -返回值 : main
2019-05-05 10:20:32 -<==      Total: 0
2019-05-05 10:20:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 10:20:32 -==> Parameters: 1(Long), 0(String)
2019-05-05 10:20:32 -<==      Total: 1
2019-05-05 10:20:32 -耗时 : 1545
2019-05-05 10:20:32 -返回值 : com.bootdo.common.utils.PageUtils@166135b9
2019-05-05 10:20:38 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-05 10:20:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 10:20:43 -==> Parameters: 1(Long)
2019-05-05 10:20:43 -<==      Total: 93
2019-05-05 10:20:43 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 10:20:43 -HTTP METHOD : GET
2019-05-05 10:20:43 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 10:20:43 -参数 : []
2019-05-05 10:20:43 -耗时 : 1
2019-05-05 10:20:43 -返回值 : charts/countYY
2019-05-05 10:20:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 10:20:45 -HTTP METHOD : GET
2019-05-05 10:20:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 10:20:45 -参数 : [userType]
2019-05-05 10:20:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 10:20:45 -==> Parameters: userType(String)
2019-05-05 10:20:45 -<==      Total: 4
2019-05-05 10:20:45 -耗时 : 159
2019-05-05 10:20:45 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 10:20:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 10:20:54 -HTTP METHOD : GET
2019-05-05 10:20:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 10:20:54 -参数 : []
2019-05-05 10:20:54 -耗时 : 1
2019-05-05 10:20:54 -返回值 : system/dept/deptTree
2019-05-05 10:20:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 10:20:54 -HTTP METHOD : GET
2019-05-05 10:20:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 10:20:54 -参数 : []
2019-05-05 10:20:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 10:20:55 -==> Parameters: 
2019-05-05 10:20:55 -<==      Total: 3
2019-05-05 10:20:55 -耗时 : 39
2019-05-05 10:20:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 10:20:57 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-05 10:20:57 -HTTP METHOD : POST
2019-05-05 10:20:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-05 10:20:57 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4496257e, com.bootdo.moneyLog.vo.WaterLogVo@20502d58, com.bootdo.moneyLog.vo.HeatLogVo@50bd15f5]
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG 
2019-05-05 10:20:57 -==> Parameters: 
2019-05-05 10:20:57 -<==      Total: 1
2019-05-05 10:20:57 -耗时 : 532
2019-05-05 10:20:57 -返回值 : {waterLogSum9=292, elecLogSum1=504, waterLogSum8=292, elecLogSum2=504, waterLogSum7=292, elecLogSum3=504, waterLogSum6=292, elecLogSum4=504, waterLogSum5=292, elecLogSum5=504, waterLogSum4=292, elecLogSum6=504, waterLogSum3=292, elecLogSum7=504, waterLogSum2=292, elecLogSum8=504, waterLogSum1=292, totalCount=312, elecLogSum9=504, heatLogSum9=261, heatLogSum8=261, heatLogSum7=261, elecLogSum10=504, elecLogSum11=504, elecLogSum12=504, heatLogSum10=261, heatLogSum11=261, heatLogSum12=261, heatLogSum6=261, totalSum=12684, heatLogSum5=261, heatLogSum4=261, heatLogSum3=261, heatLogSum2=261, heatLogSum1=261, waterLogSum10=292, waterLogSum11=292, waterLogSum12=292}
2019-05-05 10:25:16 -请求地址 : http://localhost:8081/charts/countYY/exportYY
2019-05-05 10:25:16 -HTTP METHOD : GET
2019-05-05 10:25:16 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.exportYY
2019-05-05 10:25:16 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@b6e8006, com.bootdo.moneyLog.vo.HeatLogVo@7c2c20e7, com.bootdo.moneyLog.vo.WaterLogVo@9ce66c0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@16919fc7]
2019-05-05 10:25:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? 
2019-05-05 10:25:16 -==> Parameters: 2(String)
2019-05-05 10:25:16 -<==      Total: 14
2019-05-05 10:25:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_org = ? 
2019-05-05 10:25:16 -==> Parameters: 2(String)
2019-05-05 10:25:17 -<==      Total: 5
2019-05-05 10:25:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? 
2019-05-05 10:25:17 -==> Parameters: 2(String)
2019-05-05 10:25:17 -<==      Total: 5
2019-05-05 10:25:17 -耗时 : 1365
2019-05-05 10:25:17 -返回值 : null
2019-05-05 10:27:40 -请求地址 : http://localhost:8081/index
2019-05-05 10:27:40 -HTTP METHOD : GET
2019-05-05 10:27:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 10:27:40 -参数 : [{}]
2019-05-05 10:27:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 10:27:40 -==> Parameters: 1(Long)
2019-05-05 10:27:40 -<==      Total: 49
2019-05-05 10:27:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 10:27:40 -==> Parameters: 138(Long)
2019-05-05 10:27:40 -<==      Total: 1
2019-05-05 10:27:40 -耗时 : 36
2019-05-05 10:27:40 -返回值 : index_v1
2019-05-05 10:27:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 10:27:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 10:27:40.615(Timestamp)
2019-05-05 10:27:40 -<==    Updates: 1
2019-05-05 10:27:40 -请求地址 : http://localhost:8081/main
2019-05-05 10:27:40 -HTTP METHOD : GET
2019-05-05 10:27:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:27:40 -参数 : []
2019-05-05 10:27:40 -耗时 : 1
2019-05-05 10:27:40 -返回值 : main
2019-05-05 10:27:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 10:27:41 -HTTP METHOD : GET
2019-05-05 10:27:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 10:27:41 -参数 : []
2019-05-05 10:27:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 10:27:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 10:27:41 -请求地址 : http://localhost:8081/main
2019-05-05 10:27:41 -HTTP METHOD : GET
2019-05-05 10:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:27:41 -参数 : []
2019-05-05 10:27:41 -耗时 : 0
2019-05-05 10:27:41 -返回值 : main
2019-05-05 10:27:41 -<==      Total: 0
2019-05-05 10:27:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 10:27:41 -==> Parameters: 1(Long), 0(String)
2019-05-05 10:27:41 -<==      Total: 1
2019-05-05 10:27:41 -耗时 : 141
2019-05-05 10:27:41 -返回值 : com.bootdo.common.utils.PageUtils@5f03c5d2
2019-05-05 10:28:07 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 10:34:58 -请求地址 : http://localhost:8081/index
2019-05-05 10:34:58 -HTTP METHOD : GET
2019-05-05 10:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 10:34:58 -参数 : [{}]
2019-05-05 10:34:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 10:34:58 -==> Parameters: 1(Long)
2019-05-05 10:34:58 -<==      Total: 49
2019-05-05 10:34:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 10:34:58 -==> Parameters: 138(Long)
2019-05-05 10:34:58 -<==      Total: 1
2019-05-05 10:34:58 -耗时 : 308
2019-05-05 10:34:58 -返回值 : index_v1
2019-05-05 10:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 10:34:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 308(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 10:34:58.724(Timestamp)
2019-05-05 10:34:59 -<==    Updates: 1
2019-05-05 10:34:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 10:34:59 -HTTP METHOD : GET
2019-05-05 10:34:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 10:34:59 -参数 : []
2019-05-05 10:34:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 10:34:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 10:34:59 -<==      Total: 0
2019-05-05 10:34:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 10:34:59 -==> Parameters: 1(Long), 0(String)
2019-05-05 10:34:59 -<==      Total: 1
2019-05-05 10:34:59 -耗时 : 7
2019-05-05 10:34:59 -返回值 : com.bootdo.common.utils.PageUtils@c4e95ba
2019-05-05 10:35:01 -请求地址 : http://localhost:8081/main
2019-05-05 10:35:01 -HTTP METHOD : GET
2019-05-05 10:35:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:35:01 -参数 : []
2019-05-05 10:35:01 -耗时 : 1
2019-05-05 10:35:01 -返回值 : main
2019-05-05 10:35:01 -请求地址 : http://localhost:8081/main
2019-05-05 10:35:01 -HTTP METHOD : GET
2019-05-05 10:35:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:35:01 -参数 : []
2019-05-05 10:35:01 -耗时 : 1
2019-05-05 10:35:01 -返回值 : main
2019-05-05 10:35:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 10:35:31 -==> Parameters: 1(Long)
2019-05-05 10:35:31 -<==      Total: 93
2019-05-05 10:35:31 -请求地址 : http://localhost:8081/charts/countOwe
2019-05-05 10:35:31 -HTTP METHOD : GET
2019-05-05 10:35:31 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-05-05 10:35:31 -参数 : []
2019-05-05 10:35:31 -耗时 : 10
2019-05-05 10:35:31 -返回值 : charts/countOwe
2019-05-05 10:35:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 10:35:32 -HTTP METHOD : GET
2019-05-05 10:35:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 10:35:32 -参数 : [userType]
2019-05-05 10:35:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 10:35:32 -==> Parameters: userType(String)
2019-05-05 10:35:32 -<==      Total: 4
2019-05-05 10:35:32 -耗时 : 25
2019-05-05 10:35:32 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 10:35:36 -请求地址 : http://localhost:8081/charts/countRun
2019-05-05 10:35:36 -HTTP METHOD : GET
2019-05-05 10:35:36 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-05 10:35:36 -参数 : []
2019-05-05 10:35:36 -耗时 : 33
2019-05-05 10:35:36 -返回值 : charts/countRun
2019-05-05 10:35:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 10:35:36 -HTTP METHOD : GET
2019-05-05 10:35:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 10:35:36 -参数 : [userType]
2019-05-05 10:35:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 10:35:36 -==> Parameters: userType(String)
2019-05-05 10:35:36 -<==      Total: 4
2019-05-05 10:35:36 -耗时 : 6
2019-05-05 10:35:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 10:50:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-05-05 10:51:10 -请求地址 : http://localhost:8081/index
2019-05-05 10:51:10 -HTTP METHOD : GET
2019-05-05 10:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 10:51:10 -参数 : [{}]
2019-05-05 10:51:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 10:51:10 -==> Parameters: 1(Long)
2019-05-05 10:51:10 -<==      Total: 49
2019-05-05 10:51:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 10:51:10 -==> Parameters: 138(Long)
2019-05-05 10:51:10 -<==      Total: 1
2019-05-05 10:51:10 -耗时 : 28
2019-05-05 10:51:10 -返回值 : index_v1
2019-05-05 10:51:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 10:51:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 10:51:10.645(Timestamp)
2019-05-05 10:51:10 -<==    Updates: 1
2019-05-05 10:51:10 -请求地址 : http://localhost:8081/main
2019-05-05 10:51:10 -HTTP METHOD : GET
2019-05-05 10:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:51:10 -参数 : []
2019-05-05 10:51:10 -耗时 : 0
2019-05-05 10:51:10 -返回值 : main
2019-05-05 10:51:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 10:51:11 -HTTP METHOD : GET
2019-05-05 10:51:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 10:51:11 -参数 : []
2019-05-05 10:51:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 10:51:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 10:51:11 -<==      Total: 0
2019-05-05 10:51:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 10:51:11 -==> Parameters: 1(Long), 0(String)
2019-05-05 10:51:11 -<==      Total: 1
2019-05-05 10:51:11 -耗时 : 10
2019-05-05 10:51:11 -返回值 : com.bootdo.common.utils.PageUtils@2d9e32a4
2019-05-05 10:51:11 -请求地址 : http://localhost:8081/main
2019-05-05 10:51:11 -HTTP METHOD : GET
2019-05-05 10:51:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 10:51:11 -参数 : []
2019-05-05 10:51:11 -耗时 : 1
2019-05-05 10:51:11 -返回值 : main
2019-05-05 10:51:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 10:51:19 -==> Parameters: 1(Long)
2019-05-05 10:51:19 -<==      Total: 93
2019-05-05 10:51:19 -请求地址 : http://localhost:8081/charts/countRun
2019-05-05 10:51:19 -HTTP METHOD : GET
2019-05-05 10:51:19 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-05 10:51:19 -参数 : []
2019-05-05 10:51:19 -耗时 : 0
2019-05-05 10:51:19 -返回值 : charts/countRun
2019-05-05 10:51:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 10:51:20 -HTTP METHOD : GET
2019-05-05 10:51:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 10:51:20 -参数 : [userType]
2019-05-05 10:51:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 10:51:20 -==> Parameters: userType(String)
2019-05-05 10:51:20 -<==      Total: 4
2019-05-05 10:51:20 -耗时 : 45
2019-05-05 10:51:20 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 11:19:59 -Validating all active sessions...
2019-05-05 11:19:59 -Finished session validation.  No sessions were stopped.
2019-05-05 11:20:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-05-05 11:50:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1300]
2019-05-05 12:22:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 1676]
2019-05-05 12:47:54 -Validating all active sessions...
2019-05-05 12:47:55 -Finished session validation.  [1] sessions were stopped.
2019-05-05 12:50:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2099]
2019-05-05 13:35:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 0, completed tasks = 2154]
2019-05-05 13:50:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2866]
2019-05-05 14:01:19 -Validating all active sessions...
2019-05-05 14:01:20 -Finished session validation.  No sessions were stopped.
2019-05-05 14:19:59 -Validating all active sessions...
2019-05-05 14:19:59 -Finished session validation.  No sessions were stopped.
2019-05-05 14:20:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3299]
2019-05-05 14:32:22 -请求地址 : http://localhost:8081/login;JSESSIONID=cbc9e7c0-ae92-4ef5-944d-925d94d31809
2019-05-05 14:32:22 -HTTP METHOD : GET
2019-05-05 14:32:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 14:32:22 -参数 : [{}]
2019-05-05 14:32:22 -耗时 : 3
2019-05-05 14:32:22 -返回值 : login
2019-05-05 14:32:24 -请求地址 : http://localhost:8081/login;JSESSIONID=cbc9e7c0-ae92-4ef5-944d-925d94d31809
2019-05-05 14:32:24 -HTTP METHOD : GET
2019-05-05 14:32:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 14:32:24 -参数 : [{}]
2019-05-05 14:32:24 -请求地址 : http://localhost:8081/getVerify
2019-05-05 14:32:24 -HTTP METHOD : GET
2019-05-05 14:32:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 14:32:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b1c9d2a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f13fdf5]
2019-05-05 14:32:24 -耗时 : 115
2019-05-05 14:32:24 -返回值 : login
2019-05-05 14:32:26 -请求地址 : http://localhost:8081/getVerify
2019-05-05 14:32:26 -HTTP METHOD : GET
2019-05-05 14:32:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 14:32:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@eab7071, org.apache.shiro.web.servlet.ShiroHttpServletResponse@475bb3b6]
2019-05-05 14:32:29 -8514
2019-05-05 14:32:29 -4011
2019-05-05 14:32:29 -耗时 : 4963
2019-05-05 14:32:29 -返回值 : null
2019-05-05 14:32:29 -耗时 : 2894
2019-05-05 14:32:29 -返回值 : null
2019-05-05 14:32:42 -请求地址 : http://localhost:8081/login
2019-05-05 14:32:42 -HTTP METHOD : POST
2019-05-05 14:32:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 14:32:42 -参数 : [admin, 111111, 4011, org.apache.shiro.web.servlet.ShiroHttpServletRequest@701b373]
2019-05-05 14:32:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 14:32:43 -==> Parameters: admin(String)
2019-05-05 14:32:43 -<==      Total: 1
2019-05-05 14:32:43 -耗时 : 1733
2019-05-05 14:32:43 -返回值 : {msg=操作成功, code=0}
2019-05-05 14:32:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:32:44 -==> Parameters: 1(Long), admin(String), 登录(String), 1733(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 14:32:43.93(Timestamp)
2019-05-05 14:32:44 -<==    Updates: 1
2019-05-05 14:32:44 -请求地址 : http://localhost:8081/index
2019-05-05 14:32:44 -HTTP METHOD : GET
2019-05-05 14:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:32:44 -参数 : [{}]
2019-05-05 14:32:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:32:45 -==> Parameters: 1(Long)
2019-05-05 14:32:45 -<==      Total: 49
2019-05-05 14:32:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:32:45 -==> Parameters: 138(Long)
2019-05-05 14:32:45 -<==      Total: 1
2019-05-05 14:32:45 -耗时 : 326
2019-05-05 14:32:45 -返回值 : index_v1
2019-05-05 14:32:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:32:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 326(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:32:45.353(Timestamp)
2019-05-05 14:32:45 -<==    Updates: 1
2019-05-05 14:32:46 -请求地址 : http://localhost:8081/main
2019-05-05 14:32:46 -HTTP METHOD : GET
2019-05-05 14:32:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:32:46 -参数 : []
2019-05-05 14:32:46 -耗时 : 1
2019-05-05 14:32:46 -返回值 : main
2019-05-05 14:32:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:32:46 -HTTP METHOD : GET
2019-05-05 14:32:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:32:46 -参数 : []
2019-05-05 14:32:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:32:46 -请求地址 : http://localhost:8081/main
2019-05-05 14:32:46 -HTTP METHOD : GET
2019-05-05 14:32:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:32:46 -参数 : []
2019-05-05 14:32:46 -耗时 : 2
2019-05-05 14:32:46 -返回值 : main
2019-05-05 14:32:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:32:47 -<==      Total: 0
2019-05-05 14:32:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:32:47 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:32:47 -<==      Total: 1
2019-05-05 14:32:47 -耗时 : 1257
2019-05-05 14:32:47 -返回值 : com.bootdo.common.utils.PageUtils@18a760ae
2019-05-05 14:32:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 14:32:56 -==> Parameters: 1(Long)
2019-05-05 14:32:56 -<==      Total: 93
2019-05-05 14:32:57 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 14:32:57 -HTTP METHOD : GET
2019-05-05 14:32:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 14:32:57 -参数 : []
2019-05-05 14:32:58 -耗时 : 1007
2019-05-05 14:32:58 -返回值 : charts/tableElecMM
2019-05-05 14:33:01 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 14:33:01 -HTTP METHOD : GET
2019-05-05 14:33:01 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 14:33:01 -参数 : []
2019-05-05 14:33:01 -耗时 : 1
2019-05-05 14:33:01 -返回值 : charts/countYY
2019-05-05 14:33:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 14:33:02 -HTTP METHOD : GET
2019-05-05 14:33:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 14:33:02 -参数 : [userType]
2019-05-05 14:33:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 14:33:02 -==> Parameters: userType(String)
2019-05-05 14:33:02 -<==      Total: 4
2019-05-05 14:33:02 -耗时 : 201
2019-05-05 14:33:02 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 14:33:04 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 14:33:04 -HTTP METHOD : GET
2019-05-05 14:33:04 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 14:33:04 -参数 : []
2019-05-05 14:33:04 -耗时 : 319
2019-05-05 14:33:04 -返回值 : charts/countMM
2019-05-05 14:35:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 15212 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 14:35:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 14:35:44 -The following profiles are active: dev
2019-05-05 14:35:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:35:44 CST 2019]; root of context hierarchy
2019-05-05 14:35:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 14:36:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$225aa5a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$14b3d447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 14:36:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 14:36:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:36:05 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 14:36:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 14:36:06 -Starting service [Tomcat]
2019-05-05 14:36:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 14:36:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 14:36:06 -Initializing Spring embedded WebApplicationContext
2019-05-05 14:36:06 -Root WebApplicationContext: initialization completed in 22061 ms
2019-05-05 14:36:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 14:36:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 14:36:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 14:36:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 14:36:07 -Filter xssFilter was not registered (disabled)
2019-05-05 14:36:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 14:36:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 14:36:07 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 14:36:07 -Servlet dispatcherServlet mapped to [/]
2019-05-05 14:36:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:35:44 CST 2019]; root of context hierarchy
2019-05-05 14:36:17 -Using default implementation for ThreadExecutor
2019-05-05 14:36:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 14:36:17 -Quartz Scheduler v.2.2.1 created.
2019-05-05 14:36:17 -RAMJobStore initialized.
2019-05-05 14:36:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 14:36:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 14:36:17 -Quartz scheduler version: 2.2.1
2019-05-05 14:36:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3ef3f661
2019-05-05 14:36:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 14:36:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 14:36:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 14:36:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 14:36:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 14:36:22 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 14:36:22 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 14:36:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 14:36:22 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 14:36:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:36:22 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 14:36:22 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 14:36:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 14:36:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 14:36:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 14:36:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 14:36:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 14:36:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 14:36:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 14:36:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 14:36:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 14:36:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 14:36:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 14:36:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 14:36:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 14:36:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 14:36:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 14:36:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 14:36:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 14:36:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 14:36:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 14:36:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 14:36:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 14:36:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 14:36:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 14:36:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 14:36:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 14:36:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:36:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:36:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 14:36:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 14:36:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 14:36:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 14:36:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 14:36:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 14:36:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 14:36:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 14:36:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 14:36:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 14:36:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 14:36:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 14:36:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 14:36:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 14:36:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 14:36:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 14:36:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 14:36:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 14:36:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 14:36:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 14:36:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 14:36:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 14:36:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 14:36:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 14:36:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 14:36:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 14:36:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 14:36:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 14:36:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 14:36:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 14:36:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 14:36:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 14:36:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 14:36:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 14:36:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 14:36:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 14:36:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:36:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 14:36:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 14:36:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 14:36:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:36:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:36:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 14:36:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 14:36:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 14:36:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 14:36:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 14:36:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 14:36:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:36:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:35:44 CST 2019]; root of context hierarchy
2019-05-05 14:36:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:36:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:36:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:36:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 14:36:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 14:36:29 -Registering beans for JMX exposure on startup
2019-05-05 14:36:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 14:36:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 14:36:30 -Starting beans in phase 2147483647
2019-05-05 14:36:30 -Context refreshed
2019-05-05 14:36:30 -Found 1 custom documentation plugin(s)
2019-05-05 14:36:30 -Scanning for api listing references
2019-05-05 14:36:30 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_1
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_2
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_3
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_2
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_2
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_2
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_4
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_5
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_2
2019-05-05 14:36:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_3
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_3
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_3
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_6
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_7
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_4
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_4
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_4
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_8
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_9
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 14:36:31 -Generating unique operation named: ElecUsingGET_1
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_5
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_5
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_5
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_10
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_11
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_6
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_6
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_6
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_7
2019-05-05 14:36:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_7
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_12
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_13
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 14:36:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_7
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_8
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_8
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_14
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_15
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_8
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 14:36:31 -Generating unique operation named: addUsingGET_8
2019-05-05 14:36:31 -Generating unique operation named: editUsingGET_9
2019-05-05 14:36:31 -Generating unique operation named: listUsingGET_9
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_16
2019-05-05 14:36:31 -Generating unique operation named: removeUsingPOST_17
2019-05-05 14:36:31 -Generating unique operation named: saveUsingPOST_8
2019-05-05 14:36:31 -Generating unique operation named: updateUsingGET_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPOST_9
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPUT_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 14:36:31 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_9
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_10
2019-05-05 14:36:32 -Generating unique operation named: infoUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingPOST_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingPUT_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 14:36:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_10
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_18
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_19
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_10
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_11
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_20
2019-05-05 14:36:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_10
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_11
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_12
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_21
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_10
2019-05-05 14:36:32 -Generating unique operation named: treeUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: treeUsingGET_2
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_11
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_11
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_12
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_13
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_22
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_23
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingGET_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_12
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPUT_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 14:36:32 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_12
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_13
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_14
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_24
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_25
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_12
2019-05-05 14:36:32 -Generating unique operation named: updateUsingGET_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_13
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPUT_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 14:36:32 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_13
2019-05-05 14:36:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_14
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_15
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_13
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_14
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_14
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_16
2019-05-05 14:36:32 -Generating unique operation named: listUsingHEAD_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingPOST_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingPUT_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingPATCH_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingDELETE_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 14:36:32 -Generating unique operation named: listUsingTRACE_1
2019-05-05 14:36:32 -Generating unique operation named: countDDUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 14:36:32 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_14
2019-05-05 14:36:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_15
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_17
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_26
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_15
2019-05-05 14:36:32 -Generating unique operation named: treeUsingGET_3
2019-05-05 14:36:32 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_15
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_15
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_16
2019-05-05 14:36:32 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_18
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_27
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_28
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_16
2019-05-05 14:36:32 -Generating unique operation named: updateUsingGET_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_16
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPUT_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 14:36:32 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 14:36:32 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_16
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_17
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_19
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_29
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_30
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_17
2019-05-05 14:36:32 -Generating unique operation named: updateUsingGET_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_17
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPUT_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 14:36:32 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 14:36:32 -Generating unique operation named: addUsingGET_17
2019-05-05 14:36:32 -Generating unique operation named: editUsingGET_18
2019-05-05 14:36:32 -Generating unique operation named: listUsingGET_20
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_31
2019-05-05 14:36:32 -Generating unique operation named: removeUsingPOST_32
2019-05-05 14:36:32 -Generating unique operation named: saveUsingPOST_18
2019-05-05 14:36:32 -Generating unique operation named: updateUsingGET_12
2019-05-05 14:36:32 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 14:36:32 -Generating unique operation named: updateUsingPOST_18
2019-05-05 14:36:33 -Generating unique operation named: updateUsingPUT_12
2019-05-05 14:36:33 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 14:36:33 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 14:36:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 14:36:33 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 14:36:33 -Starting Quartz Scheduler now
2019-05-05 14:36:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 14:36:33 -Starting...
2019-05-05 14:36:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 14:36:33 -Started.
2019-05-05 14:36:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 14:36:33 -Using a shared selector for servlet write/read
2019-05-05 14:36:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 14:36:33 -Started BootdoApplication in 50.435 seconds (JVM running for 51.284)
2019-05-05 14:36:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 14:36:34 -==> Parameters: 
2019-05-05 14:36:35 -<==      Total: 1
2019-05-05 14:36:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 14:36:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 14:36:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-05-05 14:36:43 -Enabling session validation scheduler...
2019-05-05 14:36:44 -请求地址 : http://localhost:8081/login;JSESSIONID=d709be89-e558-4b9d-b1bf-8e2aad5d33ef
2019-05-05 14:36:44 -HTTP METHOD : GET
2019-05-05 14:36:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 14:36:44 -参数 : [{}]
2019-05-05 14:36:44 -耗时 : 2
2019-05-05 14:36:44 -返回值 : login
2019-05-05 14:36:45 -请求地址 : http://localhost:8081/getVerify
2019-05-05 14:36:45 -HTTP METHOD : GET
2019-05-05 14:36:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 14:36:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d04e576, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c30aa6]
2019-05-05 14:36:51 -0177
2019-05-05 14:36:52 -耗时 : 6198
2019-05-05 14:36:52 -返回值 : null
2019-05-05 14:36:57 -请求地址 : http://localhost:8081/login
2019-05-05 14:36:57 -HTTP METHOD : POST
2019-05-05 14:36:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 14:36:57 -参数 : [admin, 111111, 0177, org.apache.shiro.web.servlet.ShiroHttpServletRequest@621b8fd3]
2019-05-05 14:36:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 14:36:57 -==> Parameters: admin(String)
2019-05-05 14:36:57 -<==      Total: 1
2019-05-05 14:36:57 -耗时 : 406
2019-05-05 14:36:57 -返回值 : {msg=操作成功, code=0}
2019-05-05 14:36:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 14:36:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:36:57 -==> Parameters: 1(Long), admin(String), 登录(String), 406(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 14:36:57.899(Timestamp)
2019-05-05 14:36:58 -请求地址 : http://localhost:8081/index
2019-05-05 14:36:58 -HTTP METHOD : GET
2019-05-05 14:36:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:36:58 -参数 : [{}]
2019-05-05 14:36:58 -<==    Updates: 1
2019-05-05 14:36:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:36:58 -==> Parameters: 1(Long)
2019-05-05 14:36:59 -<==      Total: 49
2019-05-05 14:36:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:36:59 -==> Parameters: 138(Long)
2019-05-05 14:36:59 -<==      Total: 1
2019-05-05 14:36:59 -耗时 : 1019
2019-05-05 14:36:59 -返回值 : index_v1
2019-05-05 14:36:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:36:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1019(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:36:59.416(Timestamp)
2019-05-05 14:36:59 -请求地址 : http://localhost:8081/main
2019-05-05 14:36:59 -HTTP METHOD : GET
2019-05-05 14:36:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:36:59 -参数 : []
2019-05-05 14:36:59 -耗时 : 1
2019-05-05 14:36:59 -返回值 : main
2019-05-05 14:36:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:36:59 -<==    Updates: 1
2019-05-05 14:36:59 -HTTP METHOD : GET
2019-05-05 14:36:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:36:59 -参数 : []
2019-05-05 14:36:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:36:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:37:00 -请求地址 : http://localhost:8081/main
2019-05-05 14:37:00 -HTTP METHOD : GET
2019-05-05 14:37:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:37:00 -参数 : []
2019-05-05 14:37:00 -耗时 : 1
2019-05-05 14:37:00 -返回值 : main
2019-05-05 14:37:00 -<==      Total: 0
2019-05-05 14:37:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:37:00 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:37:00 -<==      Total: 1
2019-05-05 14:37:00 -耗时 : 923
2019-05-05 14:37:00 -返回值 : com.bootdo.common.utils.PageUtils@7f8ffe92
2019-05-05 14:37:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 14:37:11 -==> Parameters: 1(Long)
2019-05-05 14:37:11 -<==      Total: 93
2019-05-05 14:37:11 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 14:37:11 -HTTP METHOD : GET
2019-05-05 14:37:11 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 14:37:11 -参数 : []
2019-05-05 14:37:11 -耗时 : 9
2019-05-05 14:37:11 -返回值 : charts/countMM
2019-05-05 14:37:23 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-05 14:41:35 -请求地址 : http://localhost:8081/index
2019-05-05 14:41:35 -HTTP METHOD : GET
2019-05-05 14:41:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:41:35 -参数 : [{}]
2019-05-05 14:41:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:41:35 -==> Parameters: 1(Long)
2019-05-05 14:41:35 -<==      Total: 49
2019-05-05 14:41:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:41:35 -==> Parameters: 138(Long)
2019-05-05 14:41:36 -<==      Total: 1
2019-05-05 14:41:36 -耗时 : 177
2019-05-05 14:41:36 -返回值 : index_v1
2019-05-05 14:41:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:41:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 177(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:41:36.057(Timestamp)
2019-05-05 14:41:36 -<==    Updates: 1
2019-05-05 14:41:36 -请求地址 : http://localhost:8081/main
2019-05-05 14:41:36 -HTTP METHOD : GET
2019-05-05 14:41:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:41:36 -参数 : []
2019-05-05 14:41:36 -耗时 : 0
2019-05-05 14:41:36 -返回值 : main
2019-05-05 14:41:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:41:36 -HTTP METHOD : GET
2019-05-05 14:41:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:41:36 -参数 : []
2019-05-05 14:41:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:41:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:41:36 -<==      Total: 0
2019-05-05 14:41:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:41:36 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:41:36 -<==      Total: 1
2019-05-05 14:41:36 -耗时 : 8
2019-05-05 14:41:36 -返回值 : com.bootdo.common.utils.PageUtils@53a0fb63
2019-05-05 14:41:36 -请求地址 : http://localhost:8081/main
2019-05-05 14:41:36 -HTTP METHOD : GET
2019-05-05 14:41:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:41:36 -参数 : []
2019-05-05 14:41:36 -耗时 : 0
2019-05-05 14:41:36 -返回值 : main
2019-05-05 14:41:39 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 14:41:39 -HTTP METHOD : GET
2019-05-05 14:41:39 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 14:41:39 -参数 : []
2019-05-05 14:41:39 -耗时 : 0
2019-05-05 14:41:39 -返回值 : charts/countMM
2019-05-05 14:42:07 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 14:43:39 -请求地址 : http://localhost:8081/index
2019-05-05 14:43:39 -HTTP METHOD : GET
2019-05-05 14:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:43:39 -参数 : [{}]
2019-05-05 14:43:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:43:39 -==> Parameters: 1(Long)
2019-05-05 14:43:39 -<==      Total: 49
2019-05-05 14:43:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:43:39 -==> Parameters: 138(Long)
2019-05-05 14:43:39 -<==      Total: 1
2019-05-05 14:43:39 -耗时 : 114
2019-05-05 14:43:39 -返回值 : index_v1
2019-05-05 14:43:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:43:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 115(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:43:39.459(Timestamp)
2019-05-05 14:43:39 -<==    Updates: 1
2019-05-05 14:43:39 -请求地址 : http://localhost:8081/main
2019-05-05 14:43:39 -HTTP METHOD : GET
2019-05-05 14:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:43:39 -参数 : []
2019-05-05 14:43:39 -耗时 : 1
2019-05-05 14:43:39 -返回值 : main
2019-05-05 14:43:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:43:39 -HTTP METHOD : GET
2019-05-05 14:43:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:43:39 -参数 : []
2019-05-05 14:43:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:43:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:43:39 -<==      Total: 0
2019-05-05 14:43:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:43:39 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:43:39 -<==      Total: 1
2019-05-05 14:43:39 -耗时 : 86
2019-05-05 14:43:39 -返回值 : com.bootdo.common.utils.PageUtils@2ac04a2c
2019-05-05 14:43:40 -请求地址 : http://localhost:8081/main
2019-05-05 14:43:40 -HTTP METHOD : GET
2019-05-05 14:43:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:43:40 -参数 : []
2019-05-05 14:43:40 -耗时 : 1
2019-05-05 14:43:40 -返回值 : main
2019-05-05 14:43:46 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 14:43:46 -HTTP METHOD : GET
2019-05-05 14:43:46 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 14:43:46 -参数 : []
2019-05-05 14:43:46 -耗时 : 1
2019-05-05 14:43:46 -返回值 : charts/countMM
2019-05-05 14:43:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 14:43:47 -HTTP METHOD : GET
2019-05-05 14:43:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 14:43:47 -参数 : [userType]
2019-05-05 14:43:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 14:43:47 -==> Parameters: userType(String)
2019-05-05 14:43:47 -<==      Total: 4
2019-05-05 14:43:47 -耗时 : 146
2019-05-05 14:43:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 14:55:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 15192 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 14:55:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 14:55:31 -The following profiles are active: dev
2019-05-05 14:55:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:55:32 CST 2019]; root of context hierarchy
2019-05-05 14:55:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 14:55:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 14:55:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 14:55:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 14:55:50 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 14:55:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 14:55:50 -Starting service [Tomcat]
2019-05-05 14:55:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 14:55:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 14:55:51 -Initializing Spring embedded WebApplicationContext
2019-05-05 14:55:51 -Root WebApplicationContext: initialization completed in 19135 ms
2019-05-05 14:55:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 14:55:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 14:55:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 14:55:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 14:55:52 -Filter xssFilter was not registered (disabled)
2019-05-05 14:55:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 14:55:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 14:55:52 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 14:55:52 -Servlet dispatcherServlet mapped to [/]
2019-05-05 14:56:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:55:32 CST 2019]; root of context hierarchy
2019-05-05 14:56:05 -Using default implementation for ThreadExecutor
2019-05-05 14:56:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 14:56:05 -Quartz Scheduler v.2.2.1 created.
2019-05-05 14:56:05 -RAMJobStore initialized.
2019-05-05 14:56:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 14:56:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 14:56:05 -Quartz scheduler version: 2.2.1
2019-05-05 14:56:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@78479f2b
2019-05-05 14:56:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 14:56:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 14:56:11 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 14:56:11 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 14:56:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 14:56:11 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 14:56:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 14:56:11 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 14:56:11 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 14:56:11 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:11 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:11 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 14:56:11 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 14:56:11 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 14:56:11 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 14:56:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 14:56:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 14:56:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 14:56:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 14:56:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 14:56:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 14:56:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 14:56:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 14:56:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 14:56:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 14:56:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 14:56:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 14:56:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 14:56:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 14:56:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 14:56:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 14:56:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 14:56:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 14:56:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 14:56:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 14:56:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 14:56:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 14:56:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 14:56:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 14:56:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 14:56:12 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:12 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 14:56:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 14:56:12 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 14:56:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 14:56:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 14:56:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 14:56:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 14:56:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 14:56:12 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 14:56:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 14:56:12 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 14:56:12 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 14:56:12 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:56:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:56:12 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 14:56:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 14:56:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 14:56:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 14:56:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 14:56:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 14:56:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 14:56:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 14:56:12 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 14:56:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 14:56:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 14:56:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 14:56:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 14:56:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 14:56:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 14:56:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 14:56:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 14:56:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 14:56:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 14:56:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 14:56:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 14:56:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 14:56:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 14:56:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 14:56:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 14:56:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 14:56:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 14:56:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 14:56:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 14:56:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 14:56:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 14:56:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 14:56:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 14:56:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 14:56:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 14:56:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 14:56:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 14:56:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 14:56:12 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 14:56:12 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 14:56:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 14:56:12 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 14:56:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 14:56:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 14:56:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 14:56:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 14:56:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 14:56:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 14:56:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 14:56:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:56:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 14:55:32 CST 2019]; root of context hierarchy
2019-05-05 14:56:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:56:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:56:15 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 14:56:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 14:56:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 14:56:19 -Registering beans for JMX exposure on startup
2019-05-05 14:56:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 14:56:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 14:56:19 -Starting beans in phase 2147483647
2019-05-05 14:56:19 -Context refreshed
2019-05-05 14:56:19 -Found 1 custom documentation plugin(s)
2019-05-05 14:56:19 -Scanning for api listing references
2019-05-05 14:56:20 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_1
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_2
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_3
2019-05-05 14:56:20 -Generating unique operation named: saveUsingPOST_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPUT_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 14:56:20 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_2
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_2
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_2
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_4
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_5
2019-05-05 14:56:20 -Generating unique operation named: saveUsingPOST_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_2
2019-05-05 14:56:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_3
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_3
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_3
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_6
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_7
2019-05-05 14:56:20 -Generating unique operation named: saveUsingPOST_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingGET_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPUT_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 14:56:20 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_4
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_4
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_4
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_8
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_9
2019-05-05 14:56:20 -Generating unique operation named: saveUsingPOST_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingGET_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPUT_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 14:56:20 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 14:56:20 -Generating unique operation named: ElecUsingGET_1
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_5
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_5
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_5
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_10
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_11
2019-05-05 14:56:20 -Generating unique operation named: saveUsingPOST_5
2019-05-05 14:56:20 -Generating unique operation named: updateUsingGET_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_5
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPUT_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 14:56:20 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_6
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_6
2019-05-05 14:56:20 -Generating unique operation named: updateUsingPOST_6
2019-05-05 14:56:20 -Generating unique operation named: addUsingGET_6
2019-05-05 14:56:20 -Generating unique operation named: editUsingGET_7
2019-05-05 14:56:20 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 14:56:20 -Generating unique operation named: listUsingGET_7
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_12
2019-05-05 14:56:20 -Generating unique operation named: removeUsingPOST_13
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingGET_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPUT_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 14:56:21 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 14:56:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_7
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_8
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_8
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_14
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_15
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingGET_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPUT_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 14:56:21 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_8
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_9
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_9
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_16
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_17
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingGET_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPUT_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 14:56:21 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_9
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_10
2019-05-05 14:56:21 -Generating unique operation named: infoUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingPOST_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingPUT_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 14:56:21 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_10
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_18
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_19
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_10
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_11
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_20
2019-05-05 14:56:21 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_10
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_11
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_12
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_21
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_10
2019-05-05 14:56:21 -Generating unique operation named: treeUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: treeUsingGET_2
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_11
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_11
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_12
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_13
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_22
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_23
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_11
2019-05-05 14:56:21 -Generating unique operation named: updateUsingGET_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_12
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPUT_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 14:56:21 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_12
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_13
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_14
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_24
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_25
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_12
2019-05-05 14:56:21 -Generating unique operation named: updateUsingGET_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_13
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPUT_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 14:56:21 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_13
2019-05-05 14:56:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_14
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_15
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_13
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_14
2019-05-05 14:56:21 -Generating unique operation named: updateUsingPOST_14
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_16
2019-05-05 14:56:21 -Generating unique operation named: listUsingHEAD_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingPOST_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingPUT_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingPATCH_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingDELETE_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 14:56:21 -Generating unique operation named: listUsingTRACE_1
2019-05-05 14:56:21 -Generating unique operation named: countDDUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 14:56:21 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 14:56:21 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 14:56:21 -Generating unique operation named: addUsingGET_14
2019-05-05 14:56:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 14:56:21 -Generating unique operation named: editUsingGET_15
2019-05-05 14:56:21 -Generating unique operation named: listUsingGET_17
2019-05-05 14:56:21 -Generating unique operation named: removeUsingPOST_26
2019-05-05 14:56:21 -Generating unique operation named: saveUsingPOST_15
2019-05-05 14:56:21 -Generating unique operation named: treeUsingGET_3
2019-05-05 14:56:21 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPOST_15
2019-05-05 14:56:22 -Generating unique operation named: addUsingGET_15
2019-05-05 14:56:22 -Generating unique operation named: editUsingGET_16
2019-05-05 14:56:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 14:56:22 -Generating unique operation named: listUsingGET_18
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_27
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_28
2019-05-05 14:56:22 -Generating unique operation named: saveUsingPOST_16
2019-05-05 14:56:22 -Generating unique operation named: updateUsingGET_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPOST_16
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPUT_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 14:56:22 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 14:56:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 14:56:22 -Generating unique operation named: addUsingGET_16
2019-05-05 14:56:22 -Generating unique operation named: editUsingGET_17
2019-05-05 14:56:22 -Generating unique operation named: listUsingGET_19
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_29
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_30
2019-05-05 14:56:22 -Generating unique operation named: saveUsingPOST_17
2019-05-05 14:56:22 -Generating unique operation named: updateUsingGET_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPOST_17
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPUT_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 14:56:22 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 14:56:22 -Generating unique operation named: addUsingGET_17
2019-05-05 14:56:22 -Generating unique operation named: editUsingGET_18
2019-05-05 14:56:22 -Generating unique operation named: listUsingGET_20
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_31
2019-05-05 14:56:22 -Generating unique operation named: removeUsingPOST_32
2019-05-05 14:56:22 -Generating unique operation named: saveUsingPOST_18
2019-05-05 14:56:22 -Generating unique operation named: updateUsingGET_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPOST_18
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPUT_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 14:56:22 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 14:56:22 -Starting Quartz Scheduler now
2019-05-05 14:56:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 14:56:22 -Starting...
2019-05-05 14:56:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 14:56:22 -Started.
2019-05-05 14:56:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 14:56:22 -Using a shared selector for servlet write/read
2019-05-05 14:56:22 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 14:56:22 -Started BootdoApplication in 52.331 seconds (JVM running for 53.694)
2019-05-05 14:56:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 14:56:23 -==> Parameters: 
2019-05-05 14:56:23 -<==      Total: 1
2019-05-05 14:56:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 14:56:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 14:56:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 181 ms
2019-05-05 14:56:42 -Enabling session validation scheduler...
2019-05-05 14:56:42 -请求地址 : http://localhost:8081/login;JSESSIONID=5b369f27-35f4-43ba-9023-42e5af2e9d64
2019-05-05 14:56:42 -HTTP METHOD : GET
2019-05-05 14:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 14:56:42 -参数 : [{}]
2019-05-05 14:56:42 -耗时 : 8
2019-05-05 14:56:42 -返回值 : login
2019-05-05 14:56:44 -请求地址 : http://localhost:8081/getVerify
2019-05-05 14:56:44 -HTTP METHOD : GET
2019-05-05 14:56:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 14:56:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f9f2457, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10eb249e]
2019-05-05 14:56:58 -0413
2019-05-05 14:56:59 -耗时 : 14483
2019-05-05 14:56:59 -返回值 : null
2019-05-05 14:57:04 -请求地址 : http://localhost:8081/login
2019-05-05 14:57:04 -HTTP METHOD : POST
2019-05-05 14:57:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 14:57:04 -参数 : [admin, 111111, 0413, org.apache.shiro.web.servlet.ShiroHttpServletRequest@755fd0a9]
2019-05-05 14:57:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 14:57:04 -==> Parameters: admin(String)
2019-05-05 14:57:05 -<==      Total: 1
2019-05-05 14:57:05 -耗时 : 692
2019-05-05 14:57:05 -返回值 : {msg=操作成功, code=0}
2019-05-05 14:57:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 14:57:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:57:05 -==> Parameters: 1(Long), admin(String), 登录(String), 692(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 14:57:05.712(Timestamp)
2019-05-05 14:57:06 -<==    Updates: 1
2019-05-05 14:57:06 -请求地址 : http://localhost:8081/index
2019-05-05 14:57:06 -HTTP METHOD : GET
2019-05-05 14:57:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:57:06 -参数 : [{}]
2019-05-05 14:57:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:57:06 -==> Parameters: 1(Long)
2019-05-05 14:57:06 -<==      Total: 49
2019-05-05 14:57:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:57:06 -==> Parameters: 138(Long)
2019-05-05 14:57:07 -<==      Total: 1
2019-05-05 14:57:07 -耗时 : 608
2019-05-05 14:57:07 -返回值 : index_v1
2019-05-05 14:57:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:57:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 608(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:57:07.138(Timestamp)
2019-05-05 14:57:07 -<==    Updates: 1
2019-05-05 14:57:07 -请求地址 : http://localhost:8081/main
2019-05-05 14:57:07 -HTTP METHOD : GET
2019-05-05 14:57:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:57:07 -参数 : []
2019-05-05 14:57:07 -耗时 : 1
2019-05-05 14:57:07 -返回值 : main
2019-05-05 14:57:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:57:08 -HTTP METHOD : GET
2019-05-05 14:57:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:57:08 -参数 : []
2019-05-05 14:57:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:57:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:57:08 -请求地址 : http://localhost:8081/main
2019-05-05 14:57:08 -HTTP METHOD : GET
2019-05-05 14:57:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:57:08 -参数 : []
2019-05-05 14:57:08 -耗时 : 1
2019-05-05 14:57:08 -返回值 : main
2019-05-05 14:57:08 -<==      Total: 0
2019-05-05 14:57:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:57:08 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:57:08 -<==      Total: 1
2019-05-05 14:57:08 -耗时 : 278
2019-05-05 14:57:08 -返回值 : com.bootdo.common.utils.PageUtils@101ea039
2019-05-05 14:57:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 14:57:12 -==> Parameters: 1(Long)
2019-05-05 14:57:12 -<==      Total: 93
2019-05-05 14:57:12 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 14:57:12 -HTTP METHOD : GET
2019-05-05 14:57:12 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 14:57:12 -参数 : []
2019-05-05 14:57:12 -耗时 : 11
2019-05-05 14:57:12 -返回值 : charts/countMM
2019-05-05 14:57:13 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-05-05 14:57:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 14:57:14 -HTTP METHOD : GET
2019-05-05 14:57:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 14:57:14 -参数 : [userType]
2019-05-05 14:57:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 14:57:14 -==> Parameters: userType(String)
2019-05-05 14:57:14 -<==      Total: 4
2019-05-05 14:57:14 -耗时 : 239
2019-05-05 14:57:14 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 14:57:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 14:57:20 -HTTP METHOD : GET
2019-05-05 14:57:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 14:57:20 -参数 : []
2019-05-05 14:57:20 -耗时 : 0
2019-05-05 14:57:20 -返回值 : system/dept/deptTree
2019-05-05 14:57:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 14:57:21 -HTTP METHOD : GET
2019-05-05 14:57:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 14:57:21 -参数 : []
2019-05-05 14:57:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 14:57:21 -==> Parameters: 
2019-05-05 14:57:21 -<==      Total: 3
2019-05-05 14:57:21 -耗时 : 207
2019-05-05 14:57:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 14:57:27 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 14:57:27 -HTTP METHOD : POST
2019-05-05 14:57:27 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 14:57:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@720e7ad8, com.bootdo.moneyLog.vo.WaterLogVo@1bb324cc, com.bootdo.moneyLog.vo.HeatLogVo@57f89eb]
2019-05-05 14:57:27 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:27 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:27 -<==      Total: 1
2019-05-05 14:57:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:27 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:27 -<==      Total: 1
2019-05-05 14:57:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:27 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:28 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:28 -<==      Total: 1
2019-05-05 14:57:28 -耗时 : 1038
2019-05-05 14:57:28 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 14:57:28 -[THYMELEAF][http-nio-8081-exec-5] Exception processing template "charts/countMM/getCountMM": Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 14:57:28 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 14:57:29 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 14:57:29 -HTTP METHOD : POST
2019-05-05 14:57:29 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 14:57:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@87bd850, com.bootdo.moneyLog.vo.WaterLogVo@1b413a5, com.bootdo.moneyLog.vo.HeatLogVo@3d07e68c]
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 14:57:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 14:57:29 -<==      Total: 1
2019-05-05 14:57:29 -耗时 : 121
2019-05-05 14:57:29 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 14:57:29 -[THYMELEAF][http-nio-8081-exec-8] Exception processing template "charts/countMM/getCountMM": Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 14:57:29 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/countMM/getCountMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 14:59:05 -请求地址 : http://localhost:8081/index
2019-05-05 14:59:05 -HTTP METHOD : GET
2019-05-05 14:59:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 14:59:05 -参数 : [{}]
2019-05-05 14:59:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 14:59:05 -==> Parameters: 1(Long)
2019-05-05 14:59:05 -<==      Total: 49
2019-05-05 14:59:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 14:59:05 -==> Parameters: 138(Long)
2019-05-05 14:59:05 -<==      Total: 1
2019-05-05 14:59:05 -耗时 : 774
2019-05-05 14:59:05 -返回值 : index_v1
2019-05-05 14:59:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 14:59:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 775(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 14:59:05.849(Timestamp)
2019-05-05 14:59:06 -请求地址 : http://localhost:8081/main
2019-05-05 14:59:06 -HTTP METHOD : GET
2019-05-05 14:59:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:59:06 -参数 : []
2019-05-05 14:59:06 -耗时 : 0
2019-05-05 14:59:06 -返回值 : main
2019-05-05 14:59:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 14:59:06 -HTTP METHOD : GET
2019-05-05 14:59:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 14:59:06 -参数 : []
2019-05-05 14:59:06 -请求地址 : http://localhost:8081/main
2019-05-05 14:59:06 -HTTP METHOD : GET
2019-05-05 14:59:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 14:59:06 -参数 : []
2019-05-05 14:59:06 -耗时 : 1
2019-05-05 14:59:06 -返回值 : main
2019-05-05 14:59:07 -<==    Updates: 1
2019-05-05 14:59:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 14:59:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 14:59:08 -<==      Total: 0
2019-05-05 14:59:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 14:59:08 -==> Parameters: 1(Long), 0(String)
2019-05-05 14:59:08 -<==      Total: 1
2019-05-05 14:59:08 -耗时 : 2015
2019-05-05 14:59:08 -返回值 : com.bootdo.common.utils.PageUtils@40d0c15a
2019-05-05 14:59:43 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 15:00:48 -Starting BootdoApplication on ZJZL-20180906VX with PID 9116 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 15:00:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 15:00:48 -The following profiles are active: dev
2019-05-05 15:00:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 15:00:48 CST 2019]; root of context hierarchy
2019-05-05 15:00:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 15:00:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 15:00:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 15:00:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:00:59 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 15:00:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 15:00:59 -Starting service [Tomcat]
2019-05-05 15:00:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 15:00:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 15:00:59 -Initializing Spring embedded WebApplicationContext
2019-05-05 15:00:59 -Root WebApplicationContext: initialization completed in 10667 ms
2019-05-05 15:01:00 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 15:01:00 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 15:01:00 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 15:01:00 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 15:01:00 -Filter xssFilter was not registered (disabled)
2019-05-05 15:01:00 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 15:01:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 15:01:00 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 15:01:00 -Servlet dispatcherServlet mapped to [/]
2019-05-05 15:01:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 15:00:48 CST 2019]; root of context hierarchy
2019-05-05 15:01:13 -Using default implementation for ThreadExecutor
2019-05-05 15:01:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 15:01:13 -Quartz Scheduler v.2.2.1 created.
2019-05-05 15:01:13 -RAMJobStore initialized.
2019-05-05 15:01:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 15:01:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 15:01:13 -Quartz scheduler version: 2.2.1
2019-05-05 15:01:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-05 15:01:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 15:01:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 15:01:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 15:01:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 15:01:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 15:01:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 15:01:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 15:01:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 15:01:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 15:01:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 15:01:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 15:01:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 15:01:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 15:01:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 15:01:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 15:01:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 15:01:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 15:01:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 15:01:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 15:01:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:01:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 15:01:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:01:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 15:01:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 15:01:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 15:01:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 15:01:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 15:01:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 15:01:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 15:01:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 15:01:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 15:01:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 15:01:17 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:01:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 15:01:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 15:01:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 15:01:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 15:01:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 15:01:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 15:01:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:01:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:01:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 15:01:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:01:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 15:01:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 15:01:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:01:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 15:01:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:01:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:01:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:01:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 15:01:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 15:01:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 15:01:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 15:01:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 15:01:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 15:01:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 15:01:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 15:01:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 15:01:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 15:01:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 15:01:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 15:01:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 15:01:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 15:01:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 15:01:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 15:01:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 15:01:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 15:01:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 15:01:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 15:01:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 15:01:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 15:01:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 15:01:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 15:01:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 15:01:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 15:01:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 15:01:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 15:01:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 15:01:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:01:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:01:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 15:01:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 15:01:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 15:01:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 15:01:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 15:01:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:01:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:01:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 15:01:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 15:01:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:01:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:01:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 15:01:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:01:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 15:01:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 15:01:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 15:01:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 15:01:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 15:01:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 15:01:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:01:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 15:00:48 CST 2019]; root of context hierarchy
2019-05-05 15:01:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:01:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:01:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:01:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 15:01:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 15:01:22 -Registering beans for JMX exposure on startup
2019-05-05 15:01:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 15:01:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 15:01:22 -Starting beans in phase 2147483647
2019-05-05 15:01:22 -Context refreshed
2019-05-05 15:01:22 -Found 1 custom documentation plugin(s)
2019-05-05 15:01:22 -Scanning for api listing references
2019-05-05 15:01:23 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 15:01:23 -Generating unique operation named: removeUsingPOST_1
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_2
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_3
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPUT_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 15:01:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_2
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_2
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_2
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_4
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_5
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_2
2019-05-05 15:01:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_3
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_3
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_3
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_6
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_7
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingGET_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPUT_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 15:01:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_4
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_4
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_4
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_8
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_9
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingGET_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPUT_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 15:01:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 15:01:24 -Generating unique operation named: ElecUsingGET_1
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_5
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_5
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_5
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_10
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_11
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingGET_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPUT_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 15:01:24 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_6
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_6
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_6
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_6
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_7
2019-05-05 15:01:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_7
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_12
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_13
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_6
2019-05-05 15:01:24 -Generating unique operation named: updateUsingGET_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPOST_7
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPUT_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 15:01:24 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 15:01:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 15:01:24 -Generating unique operation named: addUsingGET_7
2019-05-05 15:01:24 -Generating unique operation named: editUsingGET_8
2019-05-05 15:01:24 -Generating unique operation named: listUsingGET_8
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_14
2019-05-05 15:01:24 -Generating unique operation named: removeUsingPOST_15
2019-05-05 15:01:24 -Generating unique operation named: saveUsingPOST_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingGET_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPUT_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 15:01:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_8
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_9
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_9
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_16
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_17
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingGET_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPUT_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 15:01:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_9
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_10
2019-05-05 15:01:25 -Generating unique operation named: infoUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingPOST_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingPUT_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 15:01:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_10
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_18
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_19
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_10
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_11
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_20
2019-05-05 15:01:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_10
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_11
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_12
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_21
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_10
2019-05-05 15:01:25 -Generating unique operation named: treeUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: treeUsingGET_2
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_11
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_11
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_12
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_13
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_22
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_23
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_11
2019-05-05 15:01:25 -Generating unique operation named: updateUsingGET_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_12
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPUT_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 15:01:25 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_12
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_13
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_14
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_24
2019-05-05 15:01:25 -Generating unique operation named: removeUsingPOST_25
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_12
2019-05-05 15:01:25 -Generating unique operation named: updateUsingGET_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_13
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPUT_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 15:01:25 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_13
2019-05-05 15:01:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 15:01:25 -Generating unique operation named: editUsingGET_14
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_15
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_13
2019-05-05 15:01:25 -Generating unique operation named: saveUsingPOST_14
2019-05-05 15:01:25 -Generating unique operation named: updateUsingPOST_14
2019-05-05 15:01:25 -Generating unique operation named: listUsingGET_16
2019-05-05 15:01:25 -Generating unique operation named: listUsingHEAD_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingPOST_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingPUT_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingPATCH_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingDELETE_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 15:01:25 -Generating unique operation named: listUsingTRACE_1
2019-05-05 15:01:25 -Generating unique operation named: countDDUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 15:01:25 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 15:01:25 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 15:01:25 -Generating unique operation named: addUsingGET_14
2019-05-05 15:01:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 15:01:26 -Generating unique operation named: editUsingGET_15
2019-05-05 15:01:26 -Generating unique operation named: listUsingGET_17
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_26
2019-05-05 15:01:26 -Generating unique operation named: saveUsingPOST_15
2019-05-05 15:01:26 -Generating unique operation named: treeUsingGET_3
2019-05-05 15:01:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPOST_15
2019-05-05 15:01:26 -Generating unique operation named: addUsingGET_15
2019-05-05 15:01:26 -Generating unique operation named: editUsingGET_16
2019-05-05 15:01:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 15:01:26 -Generating unique operation named: listUsingGET_18
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_27
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_28
2019-05-05 15:01:26 -Generating unique operation named: saveUsingPOST_16
2019-05-05 15:01:26 -Generating unique operation named: updateUsingGET_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPOST_16
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPUT_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 15:01:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 15:01:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 15:01:26 -Generating unique operation named: addUsingGET_16
2019-05-05 15:01:26 -Generating unique operation named: editUsingGET_17
2019-05-05 15:01:26 -Generating unique operation named: listUsingGET_19
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_29
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_30
2019-05-05 15:01:26 -Generating unique operation named: saveUsingPOST_17
2019-05-05 15:01:26 -Generating unique operation named: updateUsingGET_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPOST_17
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPUT_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 15:01:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 15:01:26 -Generating unique operation named: addUsingGET_17
2019-05-05 15:01:26 -Generating unique operation named: editUsingGET_18
2019-05-05 15:01:26 -Generating unique operation named: listUsingGET_20
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_31
2019-05-05 15:01:26 -Generating unique operation named: removeUsingPOST_32
2019-05-05 15:01:26 -Generating unique operation named: saveUsingPOST_18
2019-05-05 15:01:26 -Generating unique operation named: updateUsingGET_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPOST_18
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPUT_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 15:01:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 15:01:26 -Starting Quartz Scheduler now
2019-05-05 15:01:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 15:01:26 -Starting...
2019-05-05 15:01:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 15:01:26 -Started.
2019-05-05 15:01:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 15:01:26 -Using a shared selector for servlet write/read
2019-05-05 15:01:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 15:01:26 -Started BootdoApplication in 39.637 seconds (JVM running for 40.781)
2019-05-05 15:01:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 15:01:27 -==> Parameters: 
2019-05-05 15:01:27 -<==      Total: 1
2019-05-05 15:02:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 15:02:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 15:02:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 15:02:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-05-05 15:02:27 -Enabling session validation scheduler...
2019-05-05 15:02:27 -请求地址 : http://localhost:8081/login;JSESSIONID=2bfdbbaa-3cbf-484b-9fe7-6fe1dde9d692
2019-05-05 15:02:27 -HTTP METHOD : GET
2019-05-05 15:02:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 15:02:27 -参数 : [{}]
2019-05-05 15:02:27 -耗时 : 5
2019-05-05 15:02:27 -返回值 : login
2019-05-05 15:02:30 -请求地址 : http://localhost:8081/getVerify
2019-05-05 15:02:30 -HTTP METHOD : GET
2019-05-05 15:02:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 15:02:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@8abc08f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4da94ffe]
2019-05-05 15:02:34 -8297
2019-05-05 15:02:34 -耗时 : 4881
2019-05-05 15:02:34 -返回值 : null
2019-05-05 15:02:44 -请求地址 : http://localhost:8081/login
2019-05-05 15:02:44 -HTTP METHOD : POST
2019-05-05 15:02:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 15:02:44 -参数 : [admin, 111111, 8297, org.apache.shiro.web.servlet.ShiroHttpServletRequest@103995ce]
2019-05-05 15:02:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 15:02:44 -==> Parameters: admin(String)
2019-05-05 15:02:44 -<==      Total: 1
2019-05-05 15:02:44 -耗时 : 267
2019-05-05 15:02:44 -返回值 : {msg=操作成功, code=0}
2019-05-05 15:02:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 15:02:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:02:44 -==> Parameters: 1(Long), admin(String), 登录(String), 268(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 15:02:44.479(Timestamp)
2019-05-05 15:02:44 -<==    Updates: 1
2019-05-05 15:02:44 -请求地址 : http://localhost:8081/index
2019-05-05 15:02:44 -HTTP METHOD : GET
2019-05-05 15:02:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:02:44 -参数 : [{}]
2019-05-05 15:02:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:02:45 -==> Parameters: 1(Long)
2019-05-05 15:02:45 -<==      Total: 49
2019-05-05 15:02:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:02:45 -==> Parameters: 138(Long)
2019-05-05 15:02:45 -<==      Total: 1
2019-05-05 15:02:45 -耗时 : 655
2019-05-05 15:02:45 -返回值 : index_v1
2019-05-05 15:02:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:02:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 655(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:02:45.517(Timestamp)
2019-05-05 15:02:45 -<==    Updates: 1
2019-05-05 15:02:45 -请求地址 : http://localhost:8081/main
2019-05-05 15:02:45 -HTTP METHOD : GET
2019-05-05 15:02:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:02:45 -参数 : []
2019-05-05 15:02:45 -耗时 : 2
2019-05-05 15:02:45 -返回值 : main
2019-05-05 15:02:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:02:46 -HTTP METHOD : GET
2019-05-05 15:02:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:02:46 -参数 : []
2019-05-05 15:02:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:02:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:02:46 -请求地址 : http://localhost:8081/main
2019-05-05 15:02:46 -HTTP METHOD : GET
2019-05-05 15:02:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:02:46 -参数 : []
2019-05-05 15:02:46 -耗时 : 1
2019-05-05 15:02:46 -返回值 : main
2019-05-05 15:02:46 -<==      Total: 0
2019-05-05 15:02:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:02:46 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:02:46 -<==      Total: 1
2019-05-05 15:02:46 -耗时 : 314
2019-05-05 15:02:46 -返回值 : com.bootdo.common.utils.PageUtils@31c23927
2019-05-05 15:02:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 15:02:57 -==> Parameters: 1(Long)
2019-05-05 15:02:57 -<==      Total: 93
2019-05-05 15:02:57 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:02:57 -HTTP METHOD : GET
2019-05-05 15:02:57 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:02:57 -参数 : []
2019-05-05 15:02:57 -耗时 : 11
2019-05-05 15:02:57 -返回值 : charts/countMM
2019-05-05 15:02:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:02:58 -HTTP METHOD : GET
2019-05-05 15:02:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:02:58 -参数 : [userType]
2019-05-05 15:02:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:02:58 -==> Parameters: userType(String)
2019-05-05 15:02:58 -<==      Total: 4
2019-05-05 15:02:58 -耗时 : 210
2019-05-05 15:02:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:03:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:03:07 -HTTP METHOD : GET
2019-05-05 15:03:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:03:07 -参数 : []
2019-05-05 15:03:07 -耗时 : 0
2019-05-05 15:03:07 -返回值 : system/dept/deptTree
2019-05-05 15:03:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:03:07 -HTTP METHOD : GET
2019-05-05 15:03:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:03:07 -参数 : []
2019-05-05 15:03:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:03:07 -==> Parameters: 
2019-05-05 15:03:07 -<==      Total: 3
2019-05-05 15:03:07 -耗时 : 80
2019-05-05 15:03:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:03:10 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:03:10 -HTTP METHOD : POST
2019-05-05 15:03:10 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:03:10 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@f04295c, com.bootdo.moneyLog.vo.WaterLogVo@2ed2e56a, com.bootdo.moneyLog.vo.HeatLogVo@9c90ff5]
2019-05-05 15:03:10 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:10 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:03:11 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:03:11 -<==      Total: 1
2019-05-05 15:03:11 -耗时 : 1548
2019-05-05 15:03:11 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:04:32 -请求地址 : http://localhost:8081/index
2019-05-05 15:04:32 -HTTP METHOD : GET
2019-05-05 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:04:32 -参数 : [{}]
2019-05-05 15:04:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:04:32 -==> Parameters: 1(Long)
2019-05-05 15:04:32 -<==      Total: 49
2019-05-05 15:04:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:04:32 -==> Parameters: 138(Long)
2019-05-05 15:04:32 -<==      Total: 1
2019-05-05 15:04:32 -耗时 : 31
2019-05-05 15:04:32 -返回值 : index_v1
2019-05-05 15:04:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:04:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:04:32.168(Timestamp)
2019-05-05 15:04:32 -<==    Updates: 1
2019-05-05 15:04:32 -请求地址 : http://localhost:8081/main
2019-05-05 15:04:32 -HTTP METHOD : GET
2019-05-05 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:04:32 -参数 : []
2019-05-05 15:04:32 -耗时 : 0
2019-05-05 15:04:32 -返回值 : main
2019-05-05 15:04:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:04:32 -HTTP METHOD : GET
2019-05-05 15:04:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:04:32 -参数 : []
2019-05-05 15:04:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:04:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:04:32 -<==      Total: 0
2019-05-05 15:04:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:04:32 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:04:32 -<==      Total: 1
2019-05-05 15:04:32 -耗时 : 107
2019-05-05 15:04:32 -返回值 : com.bootdo.common.utils.PageUtils@7583727f
2019-05-05 15:04:32 -请求地址 : http://localhost:8081/main
2019-05-05 15:04:32 -HTTP METHOD : GET
2019-05-05 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:04:32 -参数 : []
2019-05-05 15:04:32 -耗时 : 1
2019-05-05 15:04:32 -返回值 : main
2019-05-05 15:04:37 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:04:37 -HTTP METHOD : GET
2019-05-05 15:04:37 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:04:37 -参数 : []
2019-05-05 15:04:37 -耗时 : 0
2019-05-05 15:04:37 -返回值 : charts/countMM
2019-05-05 15:04:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:04:38 -HTTP METHOD : GET
2019-05-05 15:04:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:04:38 -参数 : [userType]
2019-05-05 15:04:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:04:38 -==> Parameters: userType(String)
2019-05-05 15:04:38 -<==      Total: 4
2019-05-05 15:04:38 -耗时 : 7
2019-05-05 15:04:38 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:04:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:04:43 -HTTP METHOD : GET
2019-05-05 15:04:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:04:43 -参数 : []
2019-05-05 15:04:43 -耗时 : 1
2019-05-05 15:04:43 -返回值 : system/dept/deptTree
2019-05-05 15:04:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:04:44 -HTTP METHOD : GET
2019-05-05 15:04:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:04:44 -参数 : []
2019-05-05 15:04:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:04:44 -==> Parameters: 
2019-05-05 15:04:44 -<==      Total: 3
2019-05-05 15:04:44 -耗时 : 3
2019-05-05 15:04:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:04:46 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:04:46 -HTTP METHOD : POST
2019-05-05 15:04:46 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:04:46 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1edf0750, com.bootdo.moneyLog.vo.WaterLogVo@411d7026, com.bootdo.moneyLog.vo.HeatLogVo@76cfb6e4]
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:04:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:04:46 -<==      Total: 1
2019-05-05 15:04:46 -耗时 : 105
2019-05-05 15:04:46 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:05:20 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 15:07:15 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 15:07:15 -HTTP METHOD : GET
2019-05-05 15:07:15 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 15:07:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7a353409, com.bootdo.moneyLog.vo.HeatLogVo@4cbc59b6, com.bootdo.moneyLog.vo.WaterLogVo@35faf4f6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2f0fe5c3]
2019-05-05 15:07:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? and user_id = ? 
2019-05-05 15:07:16 -==> Parameters: 2(String), undefined(String)
2019-05-05 15:07:16 -<==      Total: 0
2019-05-05 15:07:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_org = ? and user_id = ? 
2019-05-05 15:07:16 -==> Parameters: 2(String), undefined(String)
2019-05-05 15:07:16 -<==      Total: 0
2019-05-05 15:07:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? and user_id = ? 
2019-05-05 15:07:16 -==> Parameters: 2(String), undefined(String)
2019-05-05 15:07:16 -<==      Total: 0
2019-05-05 15:07:16 -耗时 : 1140
2019-05-05 15:07:16 -返回值 : null
2019-05-05 15:23:32 -Starting BootdoApplication on ZJZL-20180906VX with PID 12360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 15:23:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 15:23:32 -The following profiles are active: dev
2019-05-05 15:23:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:23:33 CST 2019]; root of context hierarchy
2019-05-05 15:23:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 15:23:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84ee3cb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$77476b60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 15:23:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 15:23:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:23:45 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 15:23:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 15:23:45 -Starting service [Tomcat]
2019-05-05 15:23:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 15:23:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 15:23:46 -Initializing Spring embedded WebApplicationContext
2019-05-05 15:23:46 -Root WebApplicationContext: initialization completed in 13141 ms
2019-05-05 15:23:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 15:23:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 15:23:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 15:23:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 15:23:47 -Filter xssFilter was not registered (disabled)
2019-05-05 15:23:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 15:23:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 15:23:47 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 15:23:47 -Servlet dispatcherServlet mapped to [/]
2019-05-05 15:23:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:23:33 CST 2019]; root of context hierarchy
2019-05-05 15:23:58 -Using default implementation for ThreadExecutor
2019-05-05 15:23:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 15:23:59 -Quartz Scheduler v.2.2.1 created.
2019-05-05 15:23:59 -RAMJobStore initialized.
2019-05-05 15:23:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 15:23:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 15:23:59 -Quartz scheduler version: 2.2.1
2019-05-05 15:23:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@59262a90
2019-05-05 15:23:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 15:24:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 15:24:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 15:24:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 15:24:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 15:24:07 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 15:24:07 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 15:24:07 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 15:24:07 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 15:24:07 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:24:07 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 15:24:07 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 15:24:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 15:24:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 15:24:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 15:24:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 15:24:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 15:24:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 15:24:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 15:24:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:24:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 15:24:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:24:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 15:24:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 15:24:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 15:24:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 15:24:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 15:24:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 15:24:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 15:24:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 15:24:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 15:24:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 15:24:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:24:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 15:24:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 15:24:07 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 15:24:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 15:24:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 15:24:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 15:24:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:24:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:24:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 15:24:07 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:24:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 15:24:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 15:24:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:24:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 15:24:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:24:07 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:24:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 15:24:07 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 15:24:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 15:24:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 15:24:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 15:24:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 15:24:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 15:24:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 15:24:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 15:24:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 15:24:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 15:24:08 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 15:24:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 15:24:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 15:24:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 15:24:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 15:24:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 15:24:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 15:24:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 15:24:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 15:24:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 15:24:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 15:24:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 15:24:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 15:24:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 15:24:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 15:24:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 15:24:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 15:24:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 15:24:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 15:24:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 15:24:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:24:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:24:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 15:24:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 15:24:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 15:24:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 15:24:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 15:24:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 15:24:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:08 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 15:24:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:24:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:24:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:24:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 15:24:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 15:24:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:24:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 15:24:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 15:24:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 15:24:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 15:24:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 15:24:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 15:24:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:24:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:23:33 CST 2019]; root of context hierarchy
2019-05-05 15:24:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:24:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:24:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:24:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 15:24:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 15:24:19 -Registering beans for JMX exposure on startup
2019-05-05 15:24:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 15:24:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 15:24:19 -Starting beans in phase 2147483647
2019-05-05 15:24:19 -Context refreshed
2019-05-05 15:24:19 -Found 1 custom documentation plugin(s)
2019-05-05 15:24:19 -Scanning for api listing references
2019-05-05 15:24:20 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 15:24:20 -Generating unique operation named: removeUsingPOST_1
2019-05-05 15:24:20 -Generating unique operation named: addUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_2
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_3
2019-05-05 15:24:21 -Generating unique operation named: saveUsingPOST_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPUT_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 15:24:21 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 15:24:21 -Generating unique operation named: addUsingGET_2
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_2
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_2
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_4
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_5
2019-05-05 15:24:21 -Generating unique operation named: saveUsingPOST_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_2
2019-05-05 15:24:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: addUsingGET_3
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_3
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_3
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_6
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_7
2019-05-05 15:24:21 -Generating unique operation named: saveUsingPOST_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingGET_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPUT_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 15:24:21 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 15:24:21 -Generating unique operation named: addUsingGET_4
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_4
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_4
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_8
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_9
2019-05-05 15:24:21 -Generating unique operation named: saveUsingPOST_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingGET_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPUT_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 15:24:21 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 15:24:21 -Generating unique operation named: ElecUsingGET_1
2019-05-05 15:24:21 -Generating unique operation named: addUsingGET_5
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_5
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_5
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_10
2019-05-05 15:24:21 -Generating unique operation named: removeUsingPOST_11
2019-05-05 15:24:21 -Generating unique operation named: saveUsingPOST_5
2019-05-05 15:24:21 -Generating unique operation named: updateUsingGET_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_5
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPUT_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 15:24:21 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_6
2019-05-05 15:24:21 -Generating unique operation named: listUsingGET_6
2019-05-05 15:24:21 -Generating unique operation named: updateUsingPOST_6
2019-05-05 15:24:21 -Generating unique operation named: addUsingGET_6
2019-05-05 15:24:21 -Generating unique operation named: editUsingGET_7
2019-05-05 15:24:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_7
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_12
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_13
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingGET_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPUT_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 15:24:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 15:24:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_7
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_8
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_8
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_14
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_15
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingGET_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPUT_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 15:24:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_8
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_9
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_9
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_16
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_17
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingGET_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_9
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPUT_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 15:24:22 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_9
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_10
2019-05-05 15:24:22 -Generating unique operation named: infoUsingGET_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingPOST_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingPUT_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 15:24:22 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_10
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_18
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_19
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_9
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_10
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_11
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_20
2019-05-05 15:24:22 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_10
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_11
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_12
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_21
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_10
2019-05-05 15:24:22 -Generating unique operation named: treeUsingGET_1
2019-05-05 15:24:22 -Generating unique operation named: treeUsingGET_2
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_11
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_11
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_12
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_13
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_22
2019-05-05 15:24:22 -Generating unique operation named: removeUsingPOST_23
2019-05-05 15:24:22 -Generating unique operation named: saveUsingPOST_11
2019-05-05 15:24:22 -Generating unique operation named: updateUsingGET_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPOST_12
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPUT_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 15:24:22 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 15:24:22 -Generating unique operation named: addUsingGET_12
2019-05-05 15:24:22 -Generating unique operation named: editUsingGET_13
2019-05-05 15:24:22 -Generating unique operation named: listUsingGET_14
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_24
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_25
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingGET_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_13
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPUT_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 15:24:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 15:24:23 -Generating unique operation named: addUsingGET_13
2019-05-05 15:24:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 15:24:23 -Generating unique operation named: editUsingGET_14
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_15
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_13
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_14
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_14
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_16
2019-05-05 15:24:23 -Generating unique operation named: listUsingHEAD_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingPOST_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingPUT_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingPATCH_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingDELETE_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 15:24:23 -Generating unique operation named: listUsingTRACE_1
2019-05-05 15:24:23 -Generating unique operation named: countDDUsingGET_1
2019-05-05 15:24:23 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 15:24:23 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 15:24:23 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 15:24:23 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 15:24:23 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 15:24:23 -Generating unique operation named: addUsingGET_14
2019-05-05 15:24:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 15:24:23 -Generating unique operation named: editUsingGET_15
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_17
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_26
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_15
2019-05-05 15:24:23 -Generating unique operation named: treeUsingGET_3
2019-05-05 15:24:23 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_15
2019-05-05 15:24:23 -Generating unique operation named: addUsingGET_15
2019-05-05 15:24:23 -Generating unique operation named: editUsingGET_16
2019-05-05 15:24:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_18
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_27
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_28
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_16
2019-05-05 15:24:23 -Generating unique operation named: updateUsingGET_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_16
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPUT_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 15:24:23 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 15:24:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 15:24:23 -Generating unique operation named: addUsingGET_16
2019-05-05 15:24:23 -Generating unique operation named: editUsingGET_17
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_19
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_29
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_30
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_17
2019-05-05 15:24:23 -Generating unique operation named: updateUsingGET_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_17
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPUT_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 15:24:23 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 15:24:23 -Generating unique operation named: addUsingGET_17
2019-05-05 15:24:23 -Generating unique operation named: editUsingGET_18
2019-05-05 15:24:23 -Generating unique operation named: listUsingGET_20
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_31
2019-05-05 15:24:23 -Generating unique operation named: removeUsingPOST_32
2019-05-05 15:24:23 -Generating unique operation named: saveUsingPOST_18
2019-05-05 15:24:23 -Generating unique operation named: updateUsingGET_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPOST_18
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPUT_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 15:24:23 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 15:24:23 -Starting Quartz Scheduler now
2019-05-05 15:24:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 15:24:23 -Starting...
2019-05-05 15:24:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 15:24:23 -Started.
2019-05-05 15:24:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 15:24:24 -Using a shared selector for servlet write/read
2019-05-05 15:24:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 15:24:24 -Started BootdoApplication in 52.753 seconds (JVM running for 53.936)
2019-05-05 15:24:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 15:24:24 -==> Parameters: 
2019-05-05 15:24:25 -<==      Total: 1
2019-05-05 15:24:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 15:24:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 15:24:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 101 ms
2019-05-05 15:24:33 -Enabling session validation scheduler...
2019-05-05 15:24:33 -请求地址 : http://localhost:8081/login;JSESSIONID=37d8182d-61e3-4145-80fc-6c69617e0596
2019-05-05 15:24:33 -HTTP METHOD : GET
2019-05-05 15:24:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 15:24:33 -参数 : [{}]
2019-05-05 15:24:33 -耗时 : 6
2019-05-05 15:24:33 -返回值 : login
2019-05-05 15:24:35 -请求地址 : http://localhost:8081/getVerify
2019-05-05 15:24:35 -HTTP METHOD : GET
2019-05-05 15:24:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 15:24:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@25a67f0f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b6195cb]
2019-05-05 15:24:39 -1908
2019-05-05 15:24:39 -耗时 : 4347
2019-05-05 15:24:39 -返回值 : null
2019-05-05 15:24:47 -请求地址 : http://localhost:8081/login
2019-05-05 15:24:47 -HTTP METHOD : POST
2019-05-05 15:24:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 15:24:47 -参数 : [admin, 111111, 1908, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3dbb154e]
2019-05-05 15:24:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 15:24:47 -==> Parameters: admin(String)
2019-05-05 15:24:47 -<==      Total: 1
2019-05-05 15:24:47 -耗时 : 271
2019-05-05 15:24:47 -返回值 : {msg=操作成功, code=0}
2019-05-05 15:24:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 15:24:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:24:48 -==> Parameters: 1(Long), admin(String), 登录(String), 271(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 15:24:48.269(Timestamp)
2019-05-05 15:24:48 -<==    Updates: 1
2019-05-05 15:24:48 -请求地址 : http://localhost:8081/index
2019-05-05 15:24:48 -HTTP METHOD : GET
2019-05-05 15:24:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:24:48 -参数 : [{}]
2019-05-05 15:24:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:24:48 -==> Parameters: 1(Long)
2019-05-05 15:24:48 -<==      Total: 49
2019-05-05 15:24:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:24:48 -==> Parameters: 138(Long)
2019-05-05 15:24:49 -<==      Total: 1
2019-05-05 15:24:49 -耗时 : 463
2019-05-05 15:24:49 -返回值 : index_v1
2019-05-05 15:24:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:24:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 463(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:24:49.09(Timestamp)
2019-05-05 15:24:49 -<==    Updates: 1
2019-05-05 15:24:49 -请求地址 : http://localhost:8081/main
2019-05-05 15:24:49 -HTTP METHOD : GET
2019-05-05 15:24:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:24:49 -参数 : []
2019-05-05 15:24:49 -耗时 : 0
2019-05-05 15:24:49 -返回值 : main
2019-05-05 15:24:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:24:49 -HTTP METHOD : GET
2019-05-05 15:24:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:24:49 -参数 : []
2019-05-05 15:24:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:24:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:24:49 -<==      Total: 0
2019-05-05 15:24:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:24:49 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:24:49 -<==      Total: 1
2019-05-05 15:24:49 -耗时 : 71
2019-05-05 15:24:49 -返回值 : com.bootdo.common.utils.PageUtils@72ec6642
2019-05-05 15:24:49 -请求地址 : http://localhost:8081/main
2019-05-05 15:24:49 -HTTP METHOD : GET
2019-05-05 15:24:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:24:49 -参数 : []
2019-05-05 15:24:49 -耗时 : 0
2019-05-05 15:24:49 -返回值 : main
2019-05-05 15:24:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 15:24:56 -==> Parameters: 1(Long)
2019-05-05 15:24:56 -<==      Total: 93
2019-05-05 15:24:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 15:24:56 -HTTP METHOD : GET
2019-05-05 15:24:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 15:24:56 -参数 : []
2019-05-05 15:24:56 -耗时 : 10
2019-05-05 15:24:56 -返回值 : charts/tableElecMM
2019-05-05 15:24:58 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:24:58 -HTTP METHOD : GET
2019-05-05 15:24:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:24:58 -参数 : []
2019-05-05 15:24:58 -耗时 : 13
2019-05-05 15:24:58 -返回值 : charts/countMM
2019-05-05 15:24:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:24:58 -HTTP METHOD : GET
2019-05-05 15:24:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:24:58 -参数 : [userType]
2019-05-05 15:24:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:24:58 -==> Parameters: userType(String)
2019-05-05 15:24:58 -<==      Total: 4
2019-05-05 15:24:58 -耗时 : 140
2019-05-05 15:24:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:25:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:25:04 -HTTP METHOD : GET
2019-05-05 15:25:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:25:04 -参数 : []
2019-05-05 15:25:04 -耗时 : 1
2019-05-05 15:25:04 -返回值 : system/dept/deptTree
2019-05-05 15:25:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:25:04 -HTTP METHOD : GET
2019-05-05 15:25:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:25:04 -参数 : []
2019-05-05 15:25:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:25:04 -==> Parameters: 
2019-05-05 15:25:04 -<==      Total: 3
2019-05-05 15:25:04 -耗时 : 20
2019-05-05 15:25:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:25:06 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:25:06 -HTTP METHOD : POST
2019-05-05 15:25:06 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:25:06 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3a583f22, com.bootdo.moneyLog.vo.WaterLogVo@5bcbf2d3, com.bootdo.moneyLog.vo.HeatLogVo@701babfc]
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:06 -<==      Total: 1
2019-05-05 15:25:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:06 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:25:07 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:25:07 -<==      Total: 1
2019-05-05 15:25:07 -耗时 : 392
2019-05-05 15:25:07 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:25:14 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-05 15:26:59 -请求地址 : http://localhost:8081/index
2019-05-05 15:26:59 -HTTP METHOD : GET
2019-05-05 15:26:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:26:59 -参数 : [{}]
2019-05-05 15:26:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:26:59 -==> Parameters: 1(Long)
2019-05-05 15:26:59 -<==      Total: 49
2019-05-05 15:26:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:26:59 -==> Parameters: 138(Long)
2019-05-05 15:26:59 -<==      Total: 1
2019-05-05 15:26:59 -耗时 : 123
2019-05-05 15:26:59 -返回值 : index_v1
2019-05-05 15:26:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:26:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 123(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:26:59.285(Timestamp)
2019-05-05 15:26:59 -请求地址 : http://localhost:8081/main
2019-05-05 15:26:59 -HTTP METHOD : GET
2019-05-05 15:26:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:26:59 -参数 : []
2019-05-05 15:26:59 -耗时 : 0
2019-05-05 15:26:59 -返回值 : main
2019-05-05 15:26:59 -<==    Updates: 1
2019-05-05 15:26:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:26:59 -HTTP METHOD : GET
2019-05-05 15:26:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:26:59 -参数 : []
2019-05-05 15:26:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:26:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:26:59 -<==      Total: 0
2019-05-05 15:26:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:26:59 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:26:59 -<==      Total: 1
2019-05-05 15:26:59 -耗时 : 8
2019-05-05 15:26:59 -返回值 : com.bootdo.common.utils.PageUtils@3b231929
2019-05-05 15:26:59 -请求地址 : http://localhost:8081/main
2019-05-05 15:26:59 -HTTP METHOD : GET
2019-05-05 15:26:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:26:59 -参数 : []
2019-05-05 15:26:59 -耗时 : 0
2019-05-05 15:26:59 -返回值 : main
2019-05-05 15:27:03 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:27:03 -HTTP METHOD : GET
2019-05-05 15:27:03 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:27:03 -参数 : []
2019-05-05 15:27:03 -耗时 : 3
2019-05-05 15:27:03 -返回值 : charts/countMM
2019-05-05 15:27:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:27:03 -HTTP METHOD : GET
2019-05-05 15:27:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:27:03 -参数 : [userType]
2019-05-05 15:27:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:27:03 -==> Parameters: userType(String)
2019-05-05 15:27:03 -<==      Total: 4
2019-05-05 15:27:03 -耗时 : 4
2019-05-05 15:27:03 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:27:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:27:10 -HTTP METHOD : GET
2019-05-05 15:27:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:27:10 -参数 : []
2019-05-05 15:27:10 -耗时 : 1
2019-05-05 15:27:10 -返回值 : system/dept/deptTree
2019-05-05 15:27:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:27:10 -HTTP METHOD : GET
2019-05-05 15:27:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:27:10 -参数 : []
2019-05-05 15:27:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:27:10 -==> Parameters: 
2019-05-05 15:27:10 -<==      Total: 3
2019-05-05 15:27:10 -耗时 : 4
2019-05-05 15:27:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:27:12 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:27:12 -HTTP METHOD : POST
2019-05-05 15:27:12 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:27:12 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6827c08, com.bootdo.moneyLog.vo.WaterLogVo@53c0c17a, com.bootdo.moneyLog.vo.HeatLogVo@78fa9592]
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:27:12 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:27:12 -<==      Total: 1
2019-05-05 15:27:12 -耗时 : 109
2019-05-05 15:27:12 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:27:47 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 15:29:00 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 15:29:00 -HTTP METHOD : GET
2019-05-05 15:29:00 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 15:29:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4967cb80, com.bootdo.moneyLog.vo.HeatLogVo@26ed484b, com.bootdo.moneyLog.vo.WaterLogVo@78e40234, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e84df54]
2019-05-05 15:29:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? and user_id = ? order by create_time asc 
2019-05-05 15:29:01 -耗时 : 775
2019-05-05 15:29:01 -返回值 : null
2019-05-05 15:33:30 -Starting BootdoApplication on ZJZL-20180906VX with PID 8668 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 15:33:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 15:33:30 -The following profiles are active: dev
2019-05-05 15:33:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:33:30 CST 2019]; root of context hierarchy
2019-05-05 15:33:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 15:33:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 15:33:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 15:33:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 15:33:40 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 15:33:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 15:33:40 -Starting service [Tomcat]
2019-05-05 15:33:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 15:33:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 15:33:40 -Initializing Spring embedded WebApplicationContext
2019-05-05 15:33:40 -Root WebApplicationContext: initialization completed in 10162 ms
2019-05-05 15:33:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 15:33:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 15:33:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 15:33:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 15:33:41 -Filter xssFilter was not registered (disabled)
2019-05-05 15:33:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 15:33:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 15:33:41 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 15:33:41 -Servlet dispatcherServlet mapped to [/]
2019-05-05 15:33:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:33:30 CST 2019]; root of context hierarchy
2019-05-05 15:33:52 -Using default implementation for ThreadExecutor
2019-05-05 15:33:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 15:33:52 -Quartz Scheduler v.2.2.1 created.
2019-05-05 15:33:52 -RAMJobStore initialized.
2019-05-05 15:33:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 15:33:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 15:33:52 -Quartz scheduler version: 2.2.1
2019-05-05 15:33:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-05-05 15:33:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 15:33:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 15:33:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 15:33:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 15:33:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 15:33:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 15:33:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 15:33:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 15:33:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 15:33:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 15:33:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 15:33:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 15:33:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 15:33:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 15:33:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 15:33:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 15:33:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 15:33:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 15:33:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 15:33:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 15:33:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:33:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 15:33:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 15:33:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 15:33:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 15:33:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 15:33:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 15:33:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 15:33:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 15:33:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 15:33:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 15:33:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 15:33:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 15:33:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 15:33:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 15:33:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 15:33:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 15:33:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 15:33:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 15:33:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 15:33:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 15:33:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 15:33:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:33:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 15:33:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 15:33:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:33:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:33:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 15:33:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 15:33:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 15:33:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 15:33:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 15:33:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 15:33:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 15:33:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 15:33:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 15:33:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 15:33:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 15:33:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 15:33:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 15:33:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 15:33:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 15:33:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 15:33:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 15:33:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 15:33:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 15:33:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 15:33:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 15:33:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 15:33:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 15:33:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 15:33:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 15:33:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 15:33:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 15:33:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 15:33:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 15:33:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 15:33:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 15:33:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:33:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 15:33:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 15:33:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 15:33:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 15:33:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 15:33:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 15:33:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 15:33:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 15:33:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 15:33:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 15:33:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 15:33:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 15:33:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 15:33:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 15:33:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 15:33:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 15:33:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 15:33:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 15:33:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 15:33:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 15:33:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:33:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 15:33:30 CST 2019]; root of context hierarchy
2019-05-05 15:33:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:33:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:33:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 15:33:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 15:33:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 15:34:00 -Registering beans for JMX exposure on startup
2019-05-05 15:34:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 15:34:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 15:34:00 -Starting beans in phase 2147483647
2019-05-05 15:34:00 -Context refreshed
2019-05-05 15:34:00 -Found 1 custom documentation plugin(s)
2019-05-05 15:34:00 -Scanning for api listing references
2019-05-05 15:34:00 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 15:34:00 -Generating unique operation named: removeUsingPOST_1
2019-05-05 15:34:00 -Generating unique operation named: addUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_2
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_3
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_2
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_2
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_2
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_4
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_5
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_2
2019-05-05 15:34:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_3
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_3
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_3
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_6
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_7
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_4
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_4
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_4
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_8
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_9
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 15:34:01 -Generating unique operation named: ElecUsingGET_1
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_5
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_5
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_5
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_10
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_11
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_6
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_6
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_6
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_7
2019-05-05 15:34:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_7
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_12
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_13
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 15:34:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_7
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_8
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_8
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_14
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_15
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_8
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 15:34:01 -Generating unique operation named: addUsingGET_8
2019-05-05 15:34:01 -Generating unique operation named: editUsingGET_9
2019-05-05 15:34:01 -Generating unique operation named: listUsingGET_9
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_16
2019-05-05 15:34:01 -Generating unique operation named: removeUsingPOST_17
2019-05-05 15:34:01 -Generating unique operation named: saveUsingPOST_8
2019-05-05 15:34:01 -Generating unique operation named: updateUsingGET_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPOST_9
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPUT_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 15:34:01 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_9
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_10
2019-05-05 15:34:02 -Generating unique operation named: infoUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingPOST_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingPUT_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 15:34:02 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_10
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_18
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_19
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_10
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_11
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_20
2019-05-05 15:34:02 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_10
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_11
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_12
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_21
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_10
2019-05-05 15:34:02 -Generating unique operation named: treeUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: treeUsingGET_2
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_11
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_11
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_12
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_13
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_22
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_23
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_11
2019-05-05 15:34:02 -Generating unique operation named: updateUsingGET_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_12
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPUT_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 15:34:02 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_12
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_13
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_14
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_24
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_25
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_12
2019-05-05 15:34:02 -Generating unique operation named: updateUsingGET_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_13
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPUT_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 15:34:02 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_13
2019-05-05 15:34:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_14
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_15
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_13
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_14
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_14
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_16
2019-05-05 15:34:02 -Generating unique operation named: listUsingHEAD_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingPOST_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingPUT_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingPATCH_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingDELETE_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 15:34:02 -Generating unique operation named: listUsingTRACE_1
2019-05-05 15:34:02 -Generating unique operation named: countDDUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 15:34:02 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_14
2019-05-05 15:34:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_15
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_17
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_26
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_15
2019-05-05 15:34:02 -Generating unique operation named: treeUsingGET_3
2019-05-05 15:34:02 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_15
2019-05-05 15:34:02 -Generating unique operation named: addUsingGET_15
2019-05-05 15:34:02 -Generating unique operation named: editUsingGET_16
2019-05-05 15:34:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 15:34:02 -Generating unique operation named: listUsingGET_18
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_27
2019-05-05 15:34:02 -Generating unique operation named: removeUsingPOST_28
2019-05-05 15:34:02 -Generating unique operation named: saveUsingPOST_16
2019-05-05 15:34:02 -Generating unique operation named: updateUsingGET_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPOST_16
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPUT_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 15:34:02 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 15:34:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 15:34:03 -Generating unique operation named: addUsingGET_16
2019-05-05 15:34:03 -Generating unique operation named: editUsingGET_17
2019-05-05 15:34:03 -Generating unique operation named: listUsingGET_19
2019-05-05 15:34:03 -Generating unique operation named: removeUsingPOST_29
2019-05-05 15:34:03 -Generating unique operation named: removeUsingPOST_30
2019-05-05 15:34:03 -Generating unique operation named: saveUsingPOST_17
2019-05-05 15:34:03 -Generating unique operation named: updateUsingGET_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPOST_17
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPUT_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 15:34:03 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 15:34:03 -Generating unique operation named: addUsingGET_17
2019-05-05 15:34:03 -Generating unique operation named: editUsingGET_18
2019-05-05 15:34:03 -Generating unique operation named: listUsingGET_20
2019-05-05 15:34:03 -Generating unique operation named: removeUsingPOST_31
2019-05-05 15:34:03 -Generating unique operation named: removeUsingPOST_32
2019-05-05 15:34:03 -Generating unique operation named: saveUsingPOST_18
2019-05-05 15:34:03 -Generating unique operation named: updateUsingGET_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPOST_18
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPUT_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 15:34:03 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 15:34:03 -Starting Quartz Scheduler now
2019-05-05 15:34:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 15:34:03 -Starting...
2019-05-05 15:34:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 15:34:03 -Started.
2019-05-05 15:34:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 15:34:03 -Using a shared selector for servlet write/read
2019-05-05 15:34:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 15:34:03 -Started BootdoApplication in 34.1 seconds (JVM running for 35.044)
2019-05-05 15:34:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 15:34:03 -==> Parameters: 
2019-05-05 15:34:03 -<==      Total: 1
2019-05-05 15:34:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 15:34:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 15:34:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 130 ms
2019-05-05 15:34:30 -Enabling session validation scheduler...
2019-05-05 15:34:30 -请求地址 : http://localhost:8081/login;JSESSIONID=15af459c-2c6b-4749-84ac-d7a470ed68d3
2019-05-05 15:34:30 -HTTP METHOD : GET
2019-05-05 15:34:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 15:34:30 -参数 : [{}]
2019-05-05 15:34:30 -耗时 : 10
2019-05-05 15:34:30 -返回值 : login
2019-05-05 15:34:32 -请求地址 : http://localhost:8081/getVerify
2019-05-05 15:34:32 -HTTP METHOD : GET
2019-05-05 15:34:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 15:34:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3aac1b4a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e9388c7]
2019-05-05 15:34:36 -5024
2019-05-05 15:34:36 -耗时 : 4225
2019-05-05 15:34:36 -返回值 : null
2019-05-05 15:34:44 -请求地址 : http://localhost:8081/login
2019-05-05 15:34:44 -HTTP METHOD : POST
2019-05-05 15:34:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 15:34:44 -参数 : [admin, 111111, 5024, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62671983]
2019-05-05 15:34:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 15:34:44 -==> Parameters: admin(String)
2019-05-05 15:34:44 -<==      Total: 1
2019-05-05 15:34:44 -耗时 : 148
2019-05-05 15:34:44 -返回值 : {msg=操作成功, code=0}
2019-05-05 15:34:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 15:34:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:34:44 -请求地址 : http://localhost:8081/index
2019-05-05 15:34:44 -HTTP METHOD : GET
2019-05-05 15:34:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:34:44 -参数 : [{}]
2019-05-05 15:34:44 -==> Parameters: 1(Long), admin(String), 登录(String), 148(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 15:34:44.33(Timestamp)
2019-05-05 15:34:44 -<==    Updates: 1
2019-05-05 15:34:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:34:44 -==> Parameters: 1(Long)
2019-05-05 15:34:44 -<==      Total: 49
2019-05-05 15:34:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:34:44 -==> Parameters: 138(Long)
2019-05-05 15:34:44 -<==      Total: 1
2019-05-05 15:34:44 -耗时 : 563
2019-05-05 15:34:44 -返回值 : index_v1
2019-05-05 15:34:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:34:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 563(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:34:44.973(Timestamp)
2019-05-05 15:34:45 -<==    Updates: 1
2019-05-05 15:34:45 -请求地址 : http://localhost:8081/main
2019-05-05 15:34:45 -HTTP METHOD : GET
2019-05-05 15:34:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:34:45 -参数 : []
2019-05-05 15:34:45 -耗时 : 0
2019-05-05 15:34:45 -返回值 : main
2019-05-05 15:34:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:34:45 -HTTP METHOD : GET
2019-05-05 15:34:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:34:45 -参数 : []
2019-05-05 15:34:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:34:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:34:45 -<==      Total: 0
2019-05-05 15:34:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:34:45 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:34:45 -<==      Total: 1
2019-05-05 15:34:45 -耗时 : 257
2019-05-05 15:34:45 -返回值 : com.bootdo.common.utils.PageUtils@41b1f685
2019-05-05 15:34:45 -请求地址 : http://localhost:8081/main
2019-05-05 15:34:45 -HTTP METHOD : GET
2019-05-05 15:34:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:34:45 -参数 : []
2019-05-05 15:34:45 -耗时 : 1
2019-05-05 15:34:45 -返回值 : main
2019-05-05 15:34:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 15:34:54 -==> Parameters: 1(Long)
2019-05-05 15:34:54 -<==      Total: 93
2019-05-05 15:34:54 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 15:34:54 -HTTP METHOD : GET
2019-05-05 15:34:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 15:34:54 -参数 : []
2019-05-05 15:34:54 -耗时 : 9
2019-05-05 15:34:54 -返回值 : charts/tableElecMM
2019-05-05 15:34:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-05 15:34:57 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-05 15:34:57 -HTTP METHOD : GET
2019-05-05 15:34:57 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-05 15:34:57 -参数 : []
2019-05-05 15:34:57 -耗时 : 11
2019-05-05 15:34:57 -返回值 : charts/tableDD
2019-05-05 15:34:58 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:34:58 -HTTP METHOD : GET
2019-05-05 15:34:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:34:58 -参数 : []
2019-05-05 15:34:58 -耗时 : 18
2019-05-05 15:34:58 -返回值 : charts/countMM
2019-05-05 15:34:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:34:59 -HTTP METHOD : GET
2019-05-05 15:34:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:34:59 -参数 : [userType]
2019-05-05 15:34:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:34:59 -==> Parameters: userType(String)
2019-05-05 15:34:59 -<==      Total: 4
2019-05-05 15:34:59 -耗时 : 108
2019-05-05 15:34:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:35:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:35:05 -HTTP METHOD : GET
2019-05-05 15:35:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:35:05 -参数 : []
2019-05-05 15:35:05 -耗时 : 0
2019-05-05 15:35:05 -返回值 : system/dept/deptTree
2019-05-05 15:35:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:35:05 -HTTP METHOD : GET
2019-05-05 15:35:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:35:05 -参数 : []
2019-05-05 15:35:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:35:05 -==> Parameters: 
2019-05-05 15:35:05 -<==      Total: 3
2019-05-05 15:35:05 -耗时 : 58
2019-05-05 15:35:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:35:08 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:35:08 -HTTP METHOD : POST
2019-05-05 15:35:08 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:35:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@79c56d1e, com.bootdo.moneyLog.vo.WaterLogVo@509606e6, com.bootdo.moneyLog.vo.HeatLogVo@25c994e5]
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:35:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:35:08 -<==      Total: 1
2019-05-05 15:35:08 -耗时 : 308
2019-05-05 15:35:08 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:35:39 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 15:35:39 -HTTP METHOD : GET
2019-05-05 15:35:39 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 15:35:39 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@44210651, com.bootdo.moneyLog.vo.HeatLogVo@1038210a, com.bootdo.moneyLog.vo.WaterLogVo@1531ed05, org.apache.shiro.web.servlet.ShiroHttpServletResponse@16024c0d]
2019-05-05 15:35:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? and user_id = ? 
2019-05-05 15:35:39 -耗时 : 162
2019-05-05 15:35:39 -返回值 : null
2019-05-05 15:47:38 -请求地址 : http://localhost:8081/login;JSESSIONID=2f0ba52f-53ec-406a-8f22-86c8dbc8a7ed
2019-05-05 15:47:38 -HTTP METHOD : GET
2019-05-05 15:47:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 15:47:38 -参数 : [{}]
2019-05-05 15:47:38 -耗时 : 2
2019-05-05 15:47:38 -返回值 : login
2019-05-05 15:47:39 -请求地址 : http://localhost:8081/getVerify
2019-05-05 15:47:39 -HTTP METHOD : GET
2019-05-05 15:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 15:47:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@574d2522, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b1a1117]
2019-05-05 15:47:39 -6610
2019-05-05 15:47:39 -耗时 : 17
2019-05-05 15:47:39 -返回值 : null
2019-05-05 15:47:39 -请求地址 : http://localhost:8081/login
2019-05-05 15:47:39 -HTTP METHOD : GET
2019-05-05 15:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 15:47:39 -参数 : [{}]
2019-05-05 15:47:39 -耗时 : 0
2019-05-05 15:47:39 -返回值 : login
2019-05-05 15:47:45 -请求地址 : http://localhost:8081/login
2019-05-05 15:47:45 -HTTP METHOD : POST
2019-05-05 15:47:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 15:47:45 -参数 : [admin, 111111, 6610, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a9d399e]
2019-05-05 15:47:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 15:47:45 -==> Parameters: admin(String)
2019-05-05 15:47:45 -<==      Total: 1
2019-05-05 15:47:45 -耗时 : 10
2019-05-05 15:47:45 -返回值 : {msg=操作成功, code=0}
2019-05-05 15:47:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:47:45 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 15:47:45.463(Timestamp)
2019-05-05 15:47:45 -请求地址 : http://localhost:8081/index
2019-05-05 15:47:45 -HTTP METHOD : GET
2019-05-05 15:47:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 15:47:45 -参数 : [{}]
2019-05-05 15:47:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 15:47:45 -==> Parameters: 1(Long)
2019-05-05 15:47:45 -<==    Updates: 1
2019-05-05 15:47:46 -<==      Total: 49
2019-05-05 15:47:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 15:47:46 -==> Parameters: 138(Long)
2019-05-05 15:47:46 -<==      Total: 1
2019-05-05 15:47:46 -耗时 : 622
2019-05-05 15:47:46 -返回值 : index_v1
2019-05-05 15:47:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 15:47:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 623(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 15:47:46.122(Timestamp)
2019-05-05 15:47:46 -<==    Updates: 1
2019-05-05 15:47:46 -请求地址 : http://localhost:8081/main
2019-05-05 15:47:46 -HTTP METHOD : GET
2019-05-05 15:47:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:47:46 -参数 : []
2019-05-05 15:47:46 -耗时 : 1
2019-05-05 15:47:46 -返回值 : main
2019-05-05 15:47:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 15:47:46 -HTTP METHOD : GET
2019-05-05 15:47:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 15:47:46 -参数 : []
2019-05-05 15:47:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 15:47:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 15:47:47 -<==      Total: 0
2019-05-05 15:47:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 15:47:47 -==> Parameters: 1(Long), 0(String)
2019-05-05 15:47:47 -<==      Total: 1
2019-05-05 15:47:47 -耗时 : 48
2019-05-05 15:47:47 -返回值 : com.bootdo.common.utils.PageUtils@6f60b9
2019-05-05 15:47:47 -请求地址 : http://localhost:8081/main
2019-05-05 15:47:47 -HTTP METHOD : GET
2019-05-05 15:47:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 15:47:47 -参数 : []
2019-05-05 15:47:47 -耗时 : 1
2019-05-05 15:47:47 -返回值 : main
2019-05-05 15:47:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 15:47:56 -==> Parameters: 1(Long)
2019-05-05 15:47:56 -<==      Total: 93
2019-05-05 15:47:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-05 15:47:56 -HTTP METHOD : GET
2019-05-05 15:47:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-05 15:47:56 -参数 : []
2019-05-05 15:47:56 -耗时 : 12
2019-05-05 15:47:56 -返回值 : charts/tableElecYY
2019-05-05 15:47:58 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 15:47:58 -HTTP METHOD : GET
2019-05-05 15:47:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 15:47:58 -参数 : []
2019-05-05 15:47:58 -耗时 : 0
2019-05-05 15:47:58 -返回值 : charts/tableElecMM
2019-05-05 15:48:09 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 15:48:09 -HTTP METHOD : GET
2019-05-05 15:48:09 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 15:48:09 -参数 : []
2019-05-05 15:48:09 -耗时 : 1
2019-05-05 15:48:09 -返回值 : charts/countMM
2019-05-05 15:48:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 15:48:09 -HTTP METHOD : GET
2019-05-05 15:48:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 15:48:09 -参数 : [userType]
2019-05-05 15:48:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 15:48:09 -==> Parameters: userType(String)
2019-05-05 15:48:09 -<==      Total: 4
2019-05-05 15:48:09 -耗时 : 33
2019-05-05 15:48:09 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 15:48:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 15:48:14 -HTTP METHOD : GET
2019-05-05 15:48:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 15:48:14 -参数 : []
2019-05-05 15:48:14 -耗时 : 1
2019-05-05 15:48:14 -返回值 : system/dept/deptTree
2019-05-05 15:48:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 15:48:15 -HTTP METHOD : GET
2019-05-05 15:48:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 15:48:15 -参数 : []
2019-05-05 15:48:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 15:48:15 -==> Parameters: 
2019-05-05 15:48:15 -<==      Total: 3
2019-05-05 15:48:15 -耗时 : 63
2019-05-05 15:48:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 15:48:17 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 15:48:17 -HTTP METHOD : POST
2019-05-05 15:48:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 15:48:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@35af5852, com.bootdo.moneyLog.vo.WaterLogVo@1ae72e12, com.bootdo.moneyLog.vo.HeatLogVo@40ee4d3b]
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 15:48:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 15:48:17 -<==      Total: 1
2019-05-05 15:48:17 -耗时 : 134
2019-05-05 15:48:17 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 15:48:43 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 15:48:43 -HTTP METHOD : GET
2019-05-05 15:48:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 15:48:43 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3575e31e, com.bootdo.moneyLog.vo.HeatLogVo@3b849b09, com.bootdo.moneyLog.vo.WaterLogVo@466b75f2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7adba9e6]
2019-05-05 15:48:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? and user_id = ? 
2019-05-05 15:48:43 -耗时 : 18
2019-05-05 15:48:43 -返回值 : null
2019-05-05 16:04:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-05-05 16:34:30 -Validating all active sessions...
2019-05-05 16:34:30 -Finished session validation.  [2] sessions were stopped.
2019-05-05 16:34:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 868]
2019-05-05 16:50:16 -请求地址 : http://localhost:8081/login;JSESSIONID=b5696996-0219-4954-b901-c4e4914ccef8
2019-05-05 16:50:16 -HTTP METHOD : GET
2019-05-05 16:50:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 16:50:16 -参数 : [{}]
2019-05-05 16:50:16 -耗时 : 2
2019-05-05 16:50:16 -返回值 : login
2019-05-05 16:50:17 -请求地址 : http://localhost:8081/getVerify
2019-05-05 16:50:17 -HTTP METHOD : GET
2019-05-05 16:50:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 16:50:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37c2eeaf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@636621b3]
2019-05-05 16:50:17 -8050
2019-05-05 16:50:17 -耗时 : 33
2019-05-05 16:50:17 -返回值 : null
2019-05-05 16:50:23 -请求地址 : http://localhost:8081/login
2019-05-05 16:50:23 -HTTP METHOD : POST
2019-05-05 16:50:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 16:50:23 -参数 : [admin, 111111, 8050, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bbf1dd7]
2019-05-05 16:50:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 16:50:23 -==> Parameters: admin(String)
2019-05-05 16:50:23 -<==      Total: 1
2019-05-05 16:50:23 -耗时 : 340
2019-05-05 16:50:23 -返回值 : {msg=操作成功, code=0}
2019-05-05 16:50:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 16:50:23 -==> Parameters: 1(Long), admin(String), 登录(String), 340(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 16:50:23.843(Timestamp)
2019-05-05 16:50:23 -请求地址 : http://localhost:8081/index
2019-05-05 16:50:23 -HTTP METHOD : GET
2019-05-05 16:50:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 16:50:23 -参数 : [{}]
2019-05-05 16:50:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 16:50:23 -==> Parameters: 1(Long)
2019-05-05 16:50:24 -<==    Updates: 1
2019-05-05 16:50:24 -<==      Total: 49
2019-05-05 16:50:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 16:50:24 -==> Parameters: 138(Long)
2019-05-05 16:50:24 -<==      Total: 1
2019-05-05 16:50:24 -耗时 : 315
2019-05-05 16:50:24 -返回值 : index_v1
2019-05-05 16:50:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 16:50:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 315(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 16:50:24.188(Timestamp)
2019-05-05 16:50:24 -请求地址 : http://localhost:8081/main
2019-05-05 16:50:24 -HTTP METHOD : GET
2019-05-05 16:50:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 16:50:24 -参数 : []
2019-05-05 16:50:24 -耗时 : 0
2019-05-05 16:50:24 -返回值 : main
2019-05-05 16:50:24 -<==    Updates: 1
2019-05-05 16:50:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 16:50:24 -HTTP METHOD : GET
2019-05-05 16:50:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 16:50:24 -参数 : []
2019-05-05 16:50:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 16:50:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 16:50:24 -<==      Total: 0
2019-05-05 16:50:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 16:50:24 -==> Parameters: 1(Long), 0(String)
2019-05-05 16:50:24 -<==      Total: 1
2019-05-05 16:50:24 -耗时 : 13
2019-05-05 16:50:24 -返回值 : com.bootdo.common.utils.PageUtils@17108d46
2019-05-05 16:50:24 -请求地址 : http://localhost:8081/main
2019-05-05 16:50:24 -HTTP METHOD : GET
2019-05-05 16:50:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 16:50:24 -参数 : []
2019-05-05 16:50:24 -耗时 : 1
2019-05-05 16:50:24 -返回值 : main
2019-05-05 16:50:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 16:50:34 -==> Parameters: 1(Long)
2019-05-05 16:50:34 -<==      Total: 93
2019-05-05 16:50:34 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 16:50:34 -HTTP METHOD : GET
2019-05-05 16:50:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 16:50:34 -参数 : []
2019-05-05 16:50:34 -耗时 : 0
2019-05-05 16:50:34 -返回值 : charts/tableElecMM
2019-05-05 16:50:35 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 16:50:35 -HTTP METHOD : GET
2019-05-05 16:50:35 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 16:50:35 -参数 : []
2019-05-05 16:50:35 -耗时 : 1
2019-05-05 16:50:35 -返回值 : charts/countMM
2019-05-05 16:50:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 16:50:35 -HTTP METHOD : GET
2019-05-05 16:50:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 16:50:36 -参数 : [userType]
2019-05-05 16:50:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 16:50:36 -==> Parameters: userType(String)
2019-05-05 16:50:36 -<==      Total: 4
2019-05-05 16:50:36 -耗时 : 37
2019-05-05 16:50:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 16:50:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 16:50:41 -HTTP METHOD : GET
2019-05-05 16:50:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 16:50:41 -参数 : []
2019-05-05 16:50:41 -耗时 : 8
2019-05-05 16:50:41 -返回值 : system/dept/deptTree
2019-05-05 16:50:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 16:50:41 -HTTP METHOD : GET
2019-05-05 16:50:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 16:50:41 -参数 : []
2019-05-05 16:50:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 16:50:41 -==> Parameters: 
2019-05-05 16:50:41 -<==      Total: 3
2019-05-05 16:50:41 -耗时 : 19
2019-05-05 16:50:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 16:50:43 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 16:50:43 -HTTP METHOD : POST
2019-05-05 16:50:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 16:50:43 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@20eb70b5, com.bootdo.moneyLog.vo.WaterLogVo@6f1dfd15, com.bootdo.moneyLog.vo.HeatLogVo@6d6c36b7]
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 16:50:43 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 16:50:43 -<==      Total: 1
2019-05-05 16:50:43 -耗时 : 219
2019-05-05 16:50:43 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 16:50:45 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 16:50:45 -HTTP METHOD : GET
2019-05-05 16:50:45 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 16:50:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6776bbe0, com.bootdo.moneyLog.vo.HeatLogVo@6ff86ac9, com.bootdo.moneyLog.vo.WaterLogVo@75c96024, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7a4dc737]
2019-05-05 16:50:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? and user_id = ? 
2019-05-05 16:50:45 -耗时 : 36
2019-05-05 16:50:45 -返回值 : null
2019-05-05 16:51:55 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-05 16:51:55 -HTTP METHOD : GET
2019-05-05 16:51:55 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-05 16:51:55 -参数 : []
2019-05-05 16:51:55 -耗时 : 1
2019-05-05 16:51:55 -返回值 : charts/tableDD
2019-05-05 16:51:58 -请求地址 : http://localhost:8081/index
2019-05-05 16:51:58 -HTTP METHOD : GET
2019-05-05 16:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 16:51:58 -参数 : [{}]
2019-05-05 16:51:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 16:51:58 -==> Parameters: 1(Long)
2019-05-05 16:51:58 -<==      Total: 49
2019-05-05 16:51:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 16:51:58 -==> Parameters: 138(Long)
2019-05-05 16:51:58 -<==      Total: 1
2019-05-05 16:51:58 -耗时 : 119
2019-05-05 16:51:58 -返回值 : index_v1
2019-05-05 16:51:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 16:51:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 16:51:58.518(Timestamp)
2019-05-05 16:51:58 -<==    Updates: 1
2019-05-05 16:51:58 -请求地址 : http://localhost:8081/main
2019-05-05 16:51:58 -HTTP METHOD : GET
2019-05-05 16:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 16:51:58 -参数 : []
2019-05-05 16:51:58 -耗时 : 1
2019-05-05 16:51:58 -返回值 : main
2019-05-05 16:51:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 16:51:58 -HTTP METHOD : GET
2019-05-05 16:51:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 16:51:58 -参数 : []
2019-05-05 16:51:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 16:51:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 16:51:58 -<==      Total: 0
2019-05-05 16:51:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 16:51:58 -==> Parameters: 1(Long), 0(String)
2019-05-05 16:51:58 -<==      Total: 1
2019-05-05 16:51:58 -耗时 : 14
2019-05-05 16:51:58 -返回值 : com.bootdo.common.utils.PageUtils@57b1d173
2019-05-05 16:51:59 -请求地址 : http://localhost:8081/main
2019-05-05 16:51:59 -HTTP METHOD : GET
2019-05-05 16:51:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 16:51:59 -参数 : []
2019-05-05 16:51:59 -耗时 : 2
2019-05-05 16:51:59 -返回值 : main
2019-05-05 16:52:01 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 16:52:01 -HTTP METHOD : GET
2019-05-05 16:52:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 16:52:01 -参数 : []
2019-05-05 16:52:01 -耗时 : 0
2019-05-05 16:52:01 -返回值 : charts/countMM
2019-05-05 16:52:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 16:52:01 -HTTP METHOD : GET
2019-05-05 16:52:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 16:52:01 -参数 : [userType]
2019-05-05 16:52:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 16:52:01 -==> Parameters: userType(String)
2019-05-05 16:52:01 -<==      Total: 4
2019-05-05 16:52:01 -耗时 : 21
2019-05-05 16:52:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:04:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 17452 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 17:04:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 17:04:15 -The following profiles are active: dev
2019-05-05 17:04:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 17:04:15 CST 2019]; root of context hierarchy
2019-05-05 17:04:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 17:04:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 17:04:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 17:04:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 17:04:35 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 17:04:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 17:04:35 -Starting service [Tomcat]
2019-05-05 17:04:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 17:04:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 17:04:36 -Initializing Spring embedded WebApplicationContext
2019-05-05 17:04:36 -Root WebApplicationContext: initialization completed in 21090 ms
2019-05-05 17:04:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 17:04:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 17:04:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 17:04:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 17:04:37 -Filter xssFilter was not registered (disabled)
2019-05-05 17:04:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 17:04:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 17:04:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 17:04:37 -Servlet dispatcherServlet mapped to [/]
2019-05-05 17:04:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 17:04:15 CST 2019]; root of context hierarchy
2019-05-05 17:04:48 -Using default implementation for ThreadExecutor
2019-05-05 17:04:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 17:04:48 -Quartz Scheduler v.2.2.1 created.
2019-05-05 17:04:48 -RAMJobStore initialized.
2019-05-05 17:04:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 17:04:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 17:04:48 -Quartz scheduler version: 2.2.1
2019-05-05 17:04:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-05-05 17:04:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 17:04:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 17:04:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 17:04:57 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 17:04:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 17:04:57 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 17:04:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 17:04:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 17:04:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 17:04:57 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:57 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 17:04:57 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:57 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 17:04:57 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 17:04:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 17:04:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 17:04:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 17:04:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 17:04:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 17:04:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 17:04:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 17:04:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 17:04:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 17:04:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 17:04:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 17:04:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 17:04:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 17:04:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 17:04:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 17:04:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 17:04:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 17:04:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 17:04:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 17:04:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 17:04:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 17:04:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 17:04:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 17:04:58 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 17:04:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 17:04:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 17:04:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 17:04:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 17:04:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 17:04:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 17:04:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 17:04:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 17:04:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 17:04:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 17:04:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 17:04:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 17:04:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 17:04:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 17:04:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 17:04:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 17:04:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 17:04:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 17:04:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 17:04:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 17:04:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 17:04:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 17:04:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 17:04:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 17:04:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 17:04:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 17:04:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 17:04:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 17:04:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 17:04:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 17:04:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 17:04:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 17:04:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 17:04:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 17:04:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 17:04:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 17:04:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 17:04:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 17:04:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 17:04:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 17:04:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 17:04:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 17:04:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 17:04:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 17:04:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 17:04:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 17:04:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 17:04:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 17:04:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 17:04:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 17:04:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 17:04:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 17:04:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 17:04:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 17:04:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 17:04:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 17:04:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 17:04:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 17:04:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 17:04:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 17:04:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 17:04:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 17:05:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 17:05:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 17:04:15 CST 2019]; root of context hierarchy
2019-05-05 17:05:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 17:05:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 17:05:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 17:05:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 17:05:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 17:05:07 -Registering beans for JMX exposure on startup
2019-05-05 17:05:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 17:05:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 17:05:08 -Starting beans in phase 2147483647
2019-05-05 17:05:08 -Context refreshed
2019-05-05 17:05:08 -Found 1 custom documentation plugin(s)
2019-05-05 17:05:08 -Scanning for api listing references
2019-05-05 17:05:10 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_1
2019-05-05 17:05:10 -Generating unique operation named: addUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: editUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: listUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_2
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_3
2019-05-05 17:05:10 -Generating unique operation named: saveUsingPOST_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPOST_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPUT_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 17:05:10 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 17:05:10 -Generating unique operation named: addUsingGET_2
2019-05-05 17:05:10 -Generating unique operation named: editUsingGET_2
2019-05-05 17:05:10 -Generating unique operation named: listUsingGET_2
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_4
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_5
2019-05-05 17:05:10 -Generating unique operation named: saveUsingPOST_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPOST_2
2019-05-05 17:05:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: addUsingGET_3
2019-05-05 17:05:10 -Generating unique operation named: editUsingGET_3
2019-05-05 17:05:10 -Generating unique operation named: listUsingGET_3
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_6
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_7
2019-05-05 17:05:10 -Generating unique operation named: saveUsingPOST_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingGET_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPOST_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPUT_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 17:05:10 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 17:05:10 -Generating unique operation named: addUsingGET_4
2019-05-05 17:05:10 -Generating unique operation named: editUsingGET_4
2019-05-05 17:05:10 -Generating unique operation named: listUsingGET_4
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_8
2019-05-05 17:05:10 -Generating unique operation named: removeUsingPOST_9
2019-05-05 17:05:10 -Generating unique operation named: saveUsingPOST_4
2019-05-05 17:05:10 -Generating unique operation named: updateUsingGET_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPOST_4
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPUT_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 17:05:10 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 17:05:10 -Generating unique operation named: ElecUsingGET_1
2019-05-05 17:05:10 -Generating unique operation named: addUsingGET_5
2019-05-05 17:05:10 -Generating unique operation named: editUsingGET_5
2019-05-05 17:05:10 -Generating unique operation named: listUsingGET_5
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_10
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_11
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_6
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_6
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_6
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_7
2019-05-05 17:05:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_7
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_12
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_13
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 17:05:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_7
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_8
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_8
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_14
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_15
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_8
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_9
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_9
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_16
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_17
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_9
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_10
2019-05-05 17:05:11 -Generating unique operation named: infoUsingGET_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingPOST_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingPUT_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 17:05:11 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_10
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_18
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_19
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_10
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_11
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_20
2019-05-05 17:05:11 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_10
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_11
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_12
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_21
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_10
2019-05-05 17:05:11 -Generating unique operation named: treeUsingGET_1
2019-05-05 17:05:11 -Generating unique operation named: treeUsingGET_2
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_11
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_11
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_12
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_13
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_22
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_23
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_11
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_12
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_12
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_13
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_14
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_24
2019-05-05 17:05:11 -Generating unique operation named: removeUsingPOST_25
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_12
2019-05-05 17:05:11 -Generating unique operation named: updateUsingGET_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_13
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPUT_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 17:05:11 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 17:05:11 -Generating unique operation named: addUsingGET_13
2019-05-05 17:05:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 17:05:11 -Generating unique operation named: editUsingGET_14
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_15
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_13
2019-05-05 17:05:11 -Generating unique operation named: saveUsingPOST_14
2019-05-05 17:05:11 -Generating unique operation named: updateUsingPOST_14
2019-05-05 17:05:11 -Generating unique operation named: listUsingGET_16
2019-05-05 17:05:11 -Generating unique operation named: listUsingHEAD_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingPOST_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingPUT_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingPATCH_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingDELETE_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 17:05:11 -Generating unique operation named: listUsingTRACE_1
2019-05-05 17:05:11 -Generating unique operation named: countDDUsingGET_1
2019-05-05 17:05:12 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 17:05:12 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 17:05:12 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 17:05:12 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 17:05:12 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 17:05:12 -Generating unique operation named: addUsingGET_14
2019-05-05 17:05:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 17:05:12 -Generating unique operation named: editUsingGET_15
2019-05-05 17:05:12 -Generating unique operation named: listUsingGET_17
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_26
2019-05-05 17:05:12 -Generating unique operation named: saveUsingPOST_15
2019-05-05 17:05:12 -Generating unique operation named: treeUsingGET_3
2019-05-05 17:05:12 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPOST_15
2019-05-05 17:05:12 -Generating unique operation named: addUsingGET_15
2019-05-05 17:05:12 -Generating unique operation named: editUsingGET_16
2019-05-05 17:05:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 17:05:12 -Generating unique operation named: listUsingGET_18
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_27
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_28
2019-05-05 17:05:12 -Generating unique operation named: saveUsingPOST_16
2019-05-05 17:05:12 -Generating unique operation named: updateUsingGET_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPOST_16
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPUT_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 17:05:12 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 17:05:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 17:05:12 -Generating unique operation named: addUsingGET_16
2019-05-05 17:05:12 -Generating unique operation named: editUsingGET_17
2019-05-05 17:05:12 -Generating unique operation named: listUsingGET_19
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_29
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_30
2019-05-05 17:05:12 -Generating unique operation named: saveUsingPOST_17
2019-05-05 17:05:12 -Generating unique operation named: updateUsingGET_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPOST_17
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPUT_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 17:05:12 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 17:05:12 -Generating unique operation named: addUsingGET_17
2019-05-05 17:05:12 -Generating unique operation named: editUsingGET_18
2019-05-05 17:05:12 -Generating unique operation named: listUsingGET_20
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_31
2019-05-05 17:05:12 -Generating unique operation named: removeUsingPOST_32
2019-05-05 17:05:12 -Generating unique operation named: saveUsingPOST_18
2019-05-05 17:05:12 -Generating unique operation named: updateUsingGET_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPOST_18
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPUT_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 17:05:12 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 17:05:12 -Starting Quartz Scheduler now
2019-05-05 17:05:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 17:05:12 -Starting...
2019-05-05 17:05:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 17:05:12 -Started.
2019-05-05 17:05:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 17:05:13 -Using a shared selector for servlet write/read
2019-05-05 17:05:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 17:05:13 -Started BootdoApplication in 59.314 seconds (JVM running for 60.237)
2019-05-05 17:05:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 17:05:14 -==> Parameters: 
2019-05-05 17:05:14 -<==      Total: 1
2019-05-05 17:05:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 17:06:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 17:06:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 17:06:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-05-05 17:06:12 -Enabling session validation scheduler...
2019-05-05 17:06:13 -请求地址 : http://localhost:8081/login;JSESSIONID=34b02b77-1da0-4287-af7d-e89e0f19f75e
2019-05-05 17:06:13 -HTTP METHOD : GET
2019-05-05 17:06:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 17:06:13 -参数 : [{}]
2019-05-05 17:06:13 -耗时 : 3
2019-05-05 17:06:13 -返回值 : login
2019-05-05 17:06:16 -请求地址 : http://localhost:8081/getVerify
2019-05-05 17:06:16 -HTTP METHOD : GET
2019-05-05 17:06:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 17:06:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7763c2dd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ba5336a]
2019-05-05 17:06:32 -7236
2019-05-05 17:06:33 -耗时 : 16777
2019-05-05 17:06:33 -返回值 : null
2019-05-05 17:06:40 -请求地址 : http://localhost:8081/login
2019-05-05 17:06:40 -HTTP METHOD : POST
2019-05-05 17:06:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 17:06:40 -参数 : [admin, 111111, 7236, org.apache.shiro.web.servlet.ShiroHttpServletRequest@70976591]
2019-05-05 17:06:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 17:06:40 -==> Parameters: admin(String)
2019-05-05 17:06:40 -<==      Total: 1
2019-05-05 17:06:41 -耗时 : 320
2019-05-05 17:06:41 -返回值 : {msg=操作成功, code=0}
2019-05-05 17:06:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 17:06:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:06:41 -==> Parameters: 1(Long), admin(String), 登录(String), 320(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 17:06:41.221(Timestamp)
2019-05-05 17:06:41 -<==    Updates: 1
2019-05-05 17:06:41 -请求地址 : http://localhost:8081/index
2019-05-05 17:06:41 -HTTP METHOD : GET
2019-05-05 17:06:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:06:41 -参数 : [{}]
2019-05-05 17:06:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:06:42 -==> Parameters: 1(Long)
2019-05-05 17:06:42 -<==      Total: 49
2019-05-05 17:06:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:06:42 -==> Parameters: 138(Long)
2019-05-05 17:06:42 -<==      Total: 1
2019-05-05 17:06:42 -耗时 : 715
2019-05-05 17:06:42 -返回值 : index_v1
2019-05-05 17:06:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:06:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 715(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:06:42.464(Timestamp)
2019-05-05 17:06:42 -<==    Updates: 1
2019-05-05 17:06:44 -请求地址 : http://localhost:8081/main
2019-05-05 17:06:44 -HTTP METHOD : GET
2019-05-05 17:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:06:44 -参数 : []
2019-05-05 17:06:44 -耗时 : 0
2019-05-05 17:06:44 -返回值 : main
2019-05-05 17:06:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:06:44 -HTTP METHOD : GET
2019-05-05 17:06:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:06:44 -参数 : []
2019-05-05 17:06:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:06:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:06:45 -请求地址 : http://localhost:8081/main
2019-05-05 17:06:45 -HTTP METHOD : GET
2019-05-05 17:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:06:45 -参数 : []
2019-05-05 17:06:45 -耗时 : 1
2019-05-05 17:06:45 -返回值 : main
2019-05-05 17:06:45 -<==      Total: 0
2019-05-05 17:06:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:06:45 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:06:45 -<==      Total: 1
2019-05-05 17:06:45 -耗时 : 735
2019-05-05 17:06:45 -返回值 : com.bootdo.common.utils.PageUtils@2f983306
2019-05-05 17:07:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 17:07:07 -==> Parameters: 1(Long)
2019-05-05 17:07:07 -<==      Total: 93
2019-05-05 17:07:07 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 17:07:07 -HTTP METHOD : GET
2019-05-05 17:07:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 17:07:07 -参数 : []
2019-05-05 17:07:07 -耗时 : 17
2019-05-05 17:07:07 -返回值 : charts/tableElecMM
2019-05-05 17:07:11 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:07:11 -HTTP METHOD : GET
2019-05-05 17:07:11 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:07:11 -参数 : []
2019-05-05 17:07:11 -耗时 : 15
2019-05-05 17:07:11 -返回值 : charts/countMM
2019-05-05 17:07:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:07:12 -HTTP METHOD : GET
2019-05-05 17:07:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:07:12 -参数 : [userType]
2019-05-05 17:07:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:07:12 -==> Parameters: userType(String)
2019-05-05 17:07:12 -<==      Total: 4
2019-05-05 17:07:12 -耗时 : 93
2019-05-05 17:07:12 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:07:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 17:07:17 -HTTP METHOD : GET
2019-05-05 17:07:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 17:07:17 -参数 : []
2019-05-05 17:07:17 -耗时 : 1
2019-05-05 17:07:17 -返回值 : system/dept/deptTree
2019-05-05 17:07:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 17:07:18 -HTTP METHOD : GET
2019-05-05 17:07:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 17:07:18 -参数 : []
2019-05-05 17:07:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 17:07:18 -==> Parameters: 
2019-05-05 17:07:18 -<==      Total: 3
2019-05-05 17:07:18 -耗时 : 70
2019-05-05 17:07:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 17:07:40 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-05 17:07:40 -HTTP METHOD : POST
2019-05-05 17:07:40 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-05 17:07:40 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@32dd914c, com.bootdo.moneyLog.vo.WaterLogVo@67a2c832, com.bootdo.moneyLog.vo.HeatLogVo@a4d2e71]
2019-05-05 17:07:40 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:40 -<==      Total: 1
2019-05-05 17:07:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:40 -<==      Total: 1
2019-05-05 17:07:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:40 -<==      Total: 1
2019-05-05 17:07:40 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:40 -<==      Total: 1
2019-05-05 17:07:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:40 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-05 17:07:41 -==> Parameters: 2019-03(String), 2(String)
2019-05-05 17:07:41 -<==      Total: 1
2019-05-05 17:07:41 -耗时 : 342
2019-05-05 17:07:41 -返回值 : {CountSHeatLog=1, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=70, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=484, SumG2ElecLog=80, CountWSElecLog=1, SumWMElecLog=60, totalCount=19, CountMMElecLog=1, SumSHeatLog=40, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=60, CountSElecLog=1, SumGSHeatLog=80, CountZElecLog=1, SumGMHeatLog=0, totalSumWater=160, CountMHeatLog=2, CountGSHeatLog=1, CountWGElecLog=1, SumSElecLog=20, SumMHeatLog=120, SumZElecLog=1, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=2, CountMSElecLog=1, totalSum=884, SumMElecLog=52, totalSumHeat=240, SumMMElecLog=20, SumMWaterLog=100, SumMSElecLog=1}
2019-05-05 17:07:41 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 17:08:09 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-05 17:08:09 -HTTP METHOD : GET
2019-05-05 17:08:09 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-05 17:08:09 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5ad4daa, com.bootdo.moneyLog.vo.HeatLogVo@77454a20, com.bootdo.moneyLog.vo.WaterLogVo@7eea6e06, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b791561]
2019-05-05 17:08:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-05 17:08:10 -耗时 : 876
2019-05-05 17:08:10 -返回值 : null
2019-05-05 17:19:18 -请求地址 : http://localhost:8081/index
2019-05-05 17:19:18 -HTTP METHOD : GET
2019-05-05 17:19:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:19:18 -参数 : [{}]
2019-05-05 17:19:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:19:18 -==> Parameters: 1(Long)
2019-05-05 17:19:18 -<==      Total: 49
2019-05-05 17:19:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:19:18 -==> Parameters: 138(Long)
2019-05-05 17:19:18 -<==      Total: 1
2019-05-05 17:19:18 -耗时 : 229
2019-05-05 17:19:18 -返回值 : index_v1
2019-05-05 17:19:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:19:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 229(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:19:18.473(Timestamp)
2019-05-05 17:19:18 -请求地址 : http://localhost:8081/main
2019-05-05 17:19:18 -HTTP METHOD : GET
2019-05-05 17:19:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:19:18 -参数 : []
2019-05-05 17:19:18 -耗时 : 1
2019-05-05 17:19:18 -返回值 : main
2019-05-05 17:19:18 -<==    Updates: 1
2019-05-05 17:19:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:19:18 -HTTP METHOD : GET
2019-05-05 17:19:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:19:18 -参数 : []
2019-05-05 17:19:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:19:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:19:18 -<==      Total: 0
2019-05-05 17:19:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:19:18 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:19:18 -<==      Total: 1
2019-05-05 17:19:18 -耗时 : 24
2019-05-05 17:19:18 -返回值 : com.bootdo.common.utils.PageUtils@70020ed6
2019-05-05 17:19:18 -请求地址 : http://localhost:8081/main
2019-05-05 17:19:18 -HTTP METHOD : GET
2019-05-05 17:19:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:19:18 -参数 : []
2019-05-05 17:19:18 -耗时 : 3
2019-05-05 17:19:18 -返回值 : main
2019-05-05 17:19:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 17:19:36 -==> Parameters: 1(Long)
2019-05-05 17:19:36 -<==      Total: 93
2019-05-05 17:19:36 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:19:36 -HTTP METHOD : GET
2019-05-05 17:19:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:19:36 -参数 : []
2019-05-05 17:19:36 -耗时 : 1
2019-05-05 17:19:36 -返回值 : charts/countMM
2019-05-05 17:19:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:19:37 -HTTP METHOD : GET
2019-05-05 17:19:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:19:37 -参数 : [userType]
2019-05-05 17:19:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:19:37 -==> Parameters: userType(String)
2019-05-05 17:19:37 -<==      Total: 4
2019-05-05 17:19:37 -耗时 : 8
2019-05-05 17:19:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:20:20 -请求地址 : http://localhost:8081/index
2019-05-05 17:20:20 -HTTP METHOD : GET
2019-05-05 17:20:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:20:20 -参数 : [{}]
2019-05-05 17:20:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:20:20 -==> Parameters: 1(Long)
2019-05-05 17:20:20 -<==      Total: 49
2019-05-05 17:20:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:20:20 -==> Parameters: 138(Long)
2019-05-05 17:20:20 -<==      Total: 1
2019-05-05 17:20:20 -耗时 : 98
2019-05-05 17:20:20 -返回值 : index_v1
2019-05-05 17:20:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:20:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 99(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:20:20.238(Timestamp)
2019-05-05 17:20:20 -请求地址 : http://localhost:8081/main
2019-05-05 17:20:20 -HTTP METHOD : GET
2019-05-05 17:20:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:20:20 -参数 : []
2019-05-05 17:20:20 -耗时 : 0
2019-05-05 17:20:20 -返回值 : main
2019-05-05 17:20:20 -<==    Updates: 1
2019-05-05 17:20:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:20:20 -HTTP METHOD : GET
2019-05-05 17:20:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:20:20 -参数 : []
2019-05-05 17:20:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:20:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:20:20 -<==      Total: 0
2019-05-05 17:20:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:20:20 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:20:20 -<==      Total: 1
2019-05-05 17:20:20 -耗时 : 23
2019-05-05 17:20:20 -返回值 : com.bootdo.common.utils.PageUtils@ea6308c
2019-05-05 17:20:20 -请求地址 : http://localhost:8081/main
2019-05-05 17:20:20 -HTTP METHOD : GET
2019-05-05 17:20:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:20:20 -参数 : []
2019-05-05 17:20:20 -耗时 : 0
2019-05-05 17:20:20 -返回值 : main
2019-05-05 17:20:26 -请求地址 : http://localhost:8081/charts/countYY
2019-05-05 17:20:26 -HTTP METHOD : GET
2019-05-05 17:20:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-05 17:20:26 -参数 : []
2019-05-05 17:20:26 -耗时 : 1
2019-05-05 17:20:26 -返回值 : charts/countYY
2019-05-05 17:20:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:20:26 -HTTP METHOD : GET
2019-05-05 17:20:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:20:26 -参数 : [userType]
2019-05-05 17:20:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:20:26 -==> Parameters: userType(String)
2019-05-05 17:20:26 -<==      Total: 4
2019-05-05 17:20:26 -耗时 : 5
2019-05-05 17:20:26 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:20:29 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 17:20:29 -HTTP METHOD : GET
2019-05-05 17:20:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 17:20:29 -参数 : []
2019-05-05 17:20:29 -耗时 : 0
2019-05-05 17:20:29 -返回值 : charts/tableElecMM
2019-05-05 17:20:36 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:20:36 -HTTP METHOD : GET
2019-05-05 17:20:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:20:36 -参数 : []
2019-05-05 17:20:36 -耗时 : 1
2019-05-05 17:20:36 -返回值 : charts/countMM
2019-05-05 17:20:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:20:36 -HTTP METHOD : GET
2019-05-05 17:20:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:20:36 -参数 : [userType]
2019-05-05 17:20:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:20:36 -==> Parameters: userType(String)
2019-05-05 17:20:36 -<==      Total: 4
2019-05-05 17:20:36 -耗时 : 11
2019-05-05 17:20:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:20:39 -请求地址 : http://localhost:8081/index
2019-05-05 17:20:39 -HTTP METHOD : GET
2019-05-05 17:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:20:39 -参数 : [{}]
2019-05-05 17:20:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:20:39 -==> Parameters: 1(Long)
2019-05-05 17:20:39 -<==      Total: 49
2019-05-05 17:20:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:20:39 -==> Parameters: 138(Long)
2019-05-05 17:20:39 -<==      Total: 1
2019-05-05 17:20:39 -耗时 : 26
2019-05-05 17:20:39 -返回值 : index_v1
2019-05-05 17:20:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:20:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:20:39.282(Timestamp)
2019-05-05 17:20:39 -<==    Updates: 1
2019-05-05 17:20:39 -请求地址 : http://localhost:8081/main
2019-05-05 17:20:39 -HTTP METHOD : GET
2019-05-05 17:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:20:39 -参数 : []
2019-05-05 17:20:39 -耗时 : 0
2019-05-05 17:20:39 -返回值 : main
2019-05-05 17:20:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:20:39 -HTTP METHOD : GET
2019-05-05 17:20:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:20:39 -参数 : []
2019-05-05 17:20:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:20:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:20:39 -<==      Total: 0
2019-05-05 17:20:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:20:39 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:20:39 -<==      Total: 1
2019-05-05 17:20:39 -耗时 : 8
2019-05-05 17:20:39 -返回值 : com.bootdo.common.utils.PageUtils@1fe5e18a
2019-05-05 17:20:39 -请求地址 : http://localhost:8081/main
2019-05-05 17:20:39 -HTTP METHOD : GET
2019-05-05 17:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:20:39 -参数 : []
2019-05-05 17:20:39 -耗时 : 1
2019-05-05 17:20:39 -返回值 : main
2019-05-05 17:21:04 -请求地址 : http://localhost:8081/index
2019-05-05 17:21:04 -HTTP METHOD : GET
2019-05-05 17:21:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:21:04 -参数 : [{}]
2019-05-05 17:21:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:21:04 -==> Parameters: 1(Long)
2019-05-05 17:21:04 -<==      Total: 49
2019-05-05 17:21:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:21:04 -==> Parameters: 138(Long)
2019-05-05 17:21:04 -<==      Total: 1
2019-05-05 17:21:04 -耗时 : 213
2019-05-05 17:21:04 -返回值 : index_v1
2019-05-05 17:21:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:21:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 213(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:21:04.805(Timestamp)
2019-05-05 17:21:04 -请求地址 : http://localhost:8081/main
2019-05-05 17:21:04 -HTTP METHOD : GET
2019-05-05 17:21:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:21:04 -参数 : []
2019-05-05 17:21:04 -耗时 : 0
2019-05-05 17:21:04 -返回值 : main
2019-05-05 17:21:04 -<==    Updates: 1
2019-05-05 17:21:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:21:05 -HTTP METHOD : GET
2019-05-05 17:21:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:21:05 -参数 : []
2019-05-05 17:21:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:21:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:21:05 -<==      Total: 0
2019-05-05 17:21:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:21:05 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:21:05 -<==      Total: 1
2019-05-05 17:21:05 -耗时 : 7
2019-05-05 17:21:05 -返回值 : com.bootdo.common.utils.PageUtils@7479b157
2019-05-05 17:21:05 -请求地址 : http://localhost:8081/main
2019-05-05 17:21:05 -HTTP METHOD : GET
2019-05-05 17:21:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:21:05 -参数 : []
2019-05-05 17:21:05 -耗时 : 0
2019-05-05 17:21:05 -返回值 : main
2019-05-05 17:21:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-05 17:21:08 -HTTP METHOD : GET
2019-05-05 17:21:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-05 17:21:08 -参数 : []
2019-05-05 17:21:08 -耗时 : 1
2019-05-05 17:21:08 -返回值 : charts/tableElecMM
2019-05-05 17:21:10 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:21:10 -HTTP METHOD : GET
2019-05-05 17:21:10 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:21:10 -参数 : []
2019-05-05 17:21:10 -耗时 : 1
2019-05-05 17:21:10 -返回值 : charts/countMM
2019-05-05 17:21:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:21:10 -HTTP METHOD : GET
2019-05-05 17:21:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:21:10 -参数 : [userType]
2019-05-05 17:21:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:21:10 -==> Parameters: userType(String)
2019-05-05 17:21:10 -<==      Total: 4
2019-05-05 17:21:10 -耗时 : 5
2019-05-05 17:21:10 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:21:43 -请求地址 : http://localhost:8081/login;JSESSIONID=16ba2af3-5642-415e-873f-4aa1fbe059e7
2019-05-05 17:21:43 -HTTP METHOD : GET
2019-05-05 17:21:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 17:21:43 -参数 : [{}]
2019-05-05 17:21:43 -耗时 : 1
2019-05-05 17:21:43 -返回值 : login
2019-05-05 17:21:44 -请求地址 : http://localhost:8081/getVerify
2019-05-05 17:21:44 -HTTP METHOD : GET
2019-05-05 17:21:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 17:21:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@36f8d6bd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76d5a58]
2019-05-05 17:21:44 -6836
2019-05-05 17:21:44 -耗时 : 25
2019-05-05 17:21:44 -返回值 : null
2019-05-05 17:21:44 -请求地址 : http://localhost:8081/login
2019-05-05 17:21:44 -HTTP METHOD : GET
2019-05-05 17:21:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 17:21:44 -参数 : [{}]
2019-05-05 17:21:44 -耗时 : 1
2019-05-05 17:21:44 -返回值 : login
2019-05-05 17:21:49 -请求地址 : http://localhost:8081/login
2019-05-05 17:21:49 -HTTP METHOD : POST
2019-05-05 17:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 17:21:49 -参数 : [admin, 111111, 6836, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e0034af]
2019-05-05 17:21:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 17:21:49 -==> Parameters: admin(String)
2019-05-05 17:21:49 -<==      Total: 1
2019-05-05 17:21:49 -耗时 : 12
2019-05-05 17:21:49 -返回值 : {msg=操作成功, code=0}
2019-05-05 17:21:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:21:49 -==> Parameters: 1(Long), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 17:21:49.679(Timestamp)
2019-05-05 17:21:49 -请求地址 : http://localhost:8081/index
2019-05-05 17:21:49 -HTTP METHOD : GET
2019-05-05 17:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:21:49 -参数 : [{}]
2019-05-05 17:21:49 -<==    Updates: 1
2019-05-05 17:21:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:21:49 -==> Parameters: 1(Long)
2019-05-05 17:21:49 -<==      Total: 49
2019-05-05 17:21:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:21:49 -==> Parameters: 138(Long)
2019-05-05 17:21:49 -<==      Total: 1
2019-05-05 17:21:49 -耗时 : 289
2019-05-05 17:21:49 -返回值 : index_v1
2019-05-05 17:21:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:21:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 289(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:21:49.992(Timestamp)
2019-05-05 17:21:50 -请求地址 : http://localhost:8081/main
2019-05-05 17:21:50 -HTTP METHOD : GET
2019-05-05 17:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:21:50 -参数 : []
2019-05-05 17:21:50 -耗时 : 1
2019-05-05 17:21:50 -返回值 : main
2019-05-05 17:21:50 -<==    Updates: 1
2019-05-05 17:21:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:21:50 -HTTP METHOD : GET
2019-05-05 17:21:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:21:50 -参数 : []
2019-05-05 17:21:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:21:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:21:50 -<==      Total: 0
2019-05-05 17:21:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:21:50 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:21:50 -<==      Total: 1
2019-05-05 17:21:50 -耗时 : 11
2019-05-05 17:21:50 -返回值 : com.bootdo.common.utils.PageUtils@42815687
2019-05-05 17:21:50 -请求地址 : http://localhost:8081/main
2019-05-05 17:21:50 -HTTP METHOD : GET
2019-05-05 17:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:21:50 -参数 : []
2019-05-05 17:21:50 -耗时 : 0
2019-05-05 17:21:50 -返回值 : main
2019-05-05 17:21:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 17:21:54 -==> Parameters: 1(Long)
2019-05-05 17:21:54 -<==      Total: 93
2019-05-05 17:21:54 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-05 17:21:54 -HTTP METHOD : GET
2019-05-05 17:21:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-05 17:21:54 -参数 : []
2019-05-05 17:21:54 -耗时 : 13
2019-05-05 17:21:54 -返回值 : charts/tableDD
2019-05-05 17:21:55 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:21:55 -HTTP METHOD : GET
2019-05-05 17:21:55 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:21:55 -参数 : []
2019-05-05 17:21:55 -耗时 : 0
2019-05-05 17:21:55 -返回值 : charts/countMM
2019-05-05 17:21:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:21:56 -HTTP METHOD : GET
2019-05-05 17:21:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:21:56 -参数 : [userType]
2019-05-05 17:21:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:21:56 -==> Parameters: userType(String)
2019-05-05 17:21:56 -<==      Total: 4
2019-05-05 17:21:56 -耗时 : 233
2019-05-05 17:21:56 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:22:44 -请求地址 : http://localhost:8081/index
2019-05-05 17:22:44 -HTTP METHOD : GET
2019-05-05 17:22:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:22:44 -参数 : [{}]
2019-05-05 17:22:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:22:44 -==> Parameters: 1(Long)
2019-05-05 17:22:44 -<==      Total: 49
2019-05-05 17:22:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:22:44 -==> Parameters: 138(Long)
2019-05-05 17:22:44 -<==      Total: 1
2019-05-05 17:22:44 -耗时 : 75
2019-05-05 17:22:44 -返回值 : index_v1
2019-05-05 17:22:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:22:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 75(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:22:44.69(Timestamp)
2019-05-05 17:22:44 -请求地址 : http://localhost:8081/main
2019-05-05 17:22:44 -HTTP METHOD : GET
2019-05-05 17:22:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:22:44 -参数 : []
2019-05-05 17:22:44 -耗时 : 0
2019-05-05 17:22:44 -返回值 : main
2019-05-05 17:22:44 -<==    Updates: 1
2019-05-05 17:22:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:22:45 -HTTP METHOD : GET
2019-05-05 17:22:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:22:45 -参数 : []
2019-05-05 17:22:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:22:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:22:45 -<==      Total: 0
2019-05-05 17:22:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:22:45 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:22:45 -<==      Total: 1
2019-05-05 17:22:45 -耗时 : 85
2019-05-05 17:22:45 -返回值 : com.bootdo.common.utils.PageUtils@51536842
2019-05-05 17:22:45 -请求地址 : http://localhost:8081/main
2019-05-05 17:22:45 -HTTP METHOD : GET
2019-05-05 17:22:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:22:45 -参数 : []
2019-05-05 17:22:45 -耗时 : 1
2019-05-05 17:22:45 -返回值 : main
2019-05-05 17:22:47 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:22:47 -HTTP METHOD : GET
2019-05-05 17:22:47 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:22:47 -参数 : []
2019-05-05 17:22:47 -耗时 : 0
2019-05-05 17:22:47 -返回值 : charts/countMM
2019-05-05 17:22:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:22:47 -HTTP METHOD : GET
2019-05-05 17:22:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:22:47 -参数 : [userType]
2019-05-05 17:22:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:22:47 -==> Parameters: userType(String)
2019-05-05 17:22:47 -<==      Total: 4
2019-05-05 17:22:47 -耗时 : 5
2019-05-05 17:22:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:23:22 -请求地址 : http://localhost:8081/index
2019-05-05 17:23:22 -HTTP METHOD : GET
2019-05-05 17:23:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:23:22 -参数 : [{}]
2019-05-05 17:23:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:23:22 -==> Parameters: 1(Long)
2019-05-05 17:23:22 -<==      Total: 49
2019-05-05 17:23:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:23:22 -==> Parameters: 138(Long)
2019-05-05 17:23:22 -<==      Total: 1
2019-05-05 17:23:22 -耗时 : 37
2019-05-05 17:23:22 -返回值 : index_v1
2019-05-05 17:23:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:23:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:23:22.684(Timestamp)
2019-05-05 17:23:22 -请求地址 : http://localhost:8081/main
2019-05-05 17:23:22 -HTTP METHOD : GET
2019-05-05 17:23:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:23:22 -参数 : []
2019-05-05 17:23:22 -耗时 : 1
2019-05-05 17:23:22 -返回值 : main
2019-05-05 17:23:22 -<==    Updates: 1
2019-05-05 17:23:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:23:22 -HTTP METHOD : GET
2019-05-05 17:23:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:23:22 -参数 : []
2019-05-05 17:23:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:23:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:23:22 -<==      Total: 0
2019-05-05 17:23:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:23:23 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:23:23 -<==      Total: 1
2019-05-05 17:23:23 -耗时 : 12
2019-05-05 17:23:23 -返回值 : com.bootdo.common.utils.PageUtils@3ab3a3ac
2019-05-05 17:23:23 -请求地址 : http://localhost:8081/main
2019-05-05 17:23:23 -HTTP METHOD : GET
2019-05-05 17:23:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:23:23 -参数 : []
2019-05-05 17:23:23 -耗时 : 1
2019-05-05 17:23:23 -返回值 : main
2019-05-05 17:23:25 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:23:25 -HTTP METHOD : GET
2019-05-05 17:23:25 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:23:25 -参数 : []
2019-05-05 17:23:25 -耗时 : 1
2019-05-05 17:23:25 -返回值 : charts/countMM
2019-05-05 17:23:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:23:25 -HTTP METHOD : GET
2019-05-05 17:23:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:23:25 -参数 : [userType]
2019-05-05 17:23:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:23:25 -==> Parameters: userType(String)
2019-05-05 17:23:25 -<==      Total: 4
2019-05-05 17:23:25 -耗时 : 5
2019-05-05 17:23:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 17:24:41 -请求地址 : http://localhost:8081/index
2019-05-05 17:24:41 -HTTP METHOD : GET
2019-05-05 17:24:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 17:24:41 -参数 : [{}]
2019-05-05 17:24:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 17:24:41 -==> Parameters: 1(Long)
2019-05-05 17:24:41 -<==      Total: 49
2019-05-05 17:24:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 17:24:41 -==> Parameters: 138(Long)
2019-05-05 17:24:41 -<==      Total: 1
2019-05-05 17:24:41 -耗时 : 94
2019-05-05 17:24:41 -返回值 : index_v1
2019-05-05 17:24:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 17:24:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 17:24:41.512(Timestamp)
2019-05-05 17:24:41 -<==    Updates: 1
2019-05-05 17:24:41 -请求地址 : http://localhost:8081/main
2019-05-05 17:24:41 -HTTP METHOD : GET
2019-05-05 17:24:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:24:41 -参数 : []
2019-05-05 17:24:41 -耗时 : 0
2019-05-05 17:24:41 -返回值 : main
2019-05-05 17:24:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 17:24:41 -HTTP METHOD : GET
2019-05-05 17:24:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 17:24:41 -参数 : []
2019-05-05 17:24:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 17:24:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 17:24:41 -<==      Total: 0
2019-05-05 17:24:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 17:24:41 -==> Parameters: 1(Long), 0(String)
2019-05-05 17:24:41 -<==      Total: 1
2019-05-05 17:24:41 -耗时 : 11
2019-05-05 17:24:41 -返回值 : com.bootdo.common.utils.PageUtils@45a97968
2019-05-05 17:24:41 -请求地址 : http://localhost:8081/main
2019-05-05 17:24:41 -HTTP METHOD : GET
2019-05-05 17:24:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 17:24:41 -参数 : []
2019-05-05 17:24:41 -耗时 : 1
2019-05-05 17:24:41 -返回值 : main
2019-05-05 17:24:54 -请求地址 : http://localhost:8081/charts/countMM
2019-05-05 17:24:54 -HTTP METHOD : GET
2019-05-05 17:24:54 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-05 17:24:54 -参数 : []
2019-05-05 17:24:54 -耗时 : 0
2019-05-05 17:24:54 -返回值 : charts/countMM
2019-05-05 17:24:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-05 17:24:54 -HTTP METHOD : GET
2019-05-05 17:24:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-05 17:24:54 -参数 : [userType]
2019-05-05 17:24:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-05 17:24:54 -==> Parameters: userType(String)
2019-05-05 17:24:54 -<==      Total: 4
2019-05-05 17:24:54 -耗时 : 6
2019-05-05 17:24:54 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-05 20:48:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 12284 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 20:48:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 20:48:33 -The following profiles are active: dev
2019-05-05 20:48:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 20:48:33 CST 2019]; root of context hierarchy
2019-05-05 20:48:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 20:48:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f957530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81eea3d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 20:48:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 20:48:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 20:48:44 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 20:48:44 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 20:48:44 -Starting service [Tomcat]
2019-05-05 20:48:44 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 20:48:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 20:48:45 -Initializing Spring embedded WebApplicationContext
2019-05-05 20:48:45 -Root WebApplicationContext: initialization completed in 12031 ms
2019-05-05 20:48:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 20:48:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 20:48:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 20:48:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 20:48:46 -Filter xssFilter was not registered (disabled)
2019-05-05 20:48:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 20:48:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 20:48:46 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 20:48:46 -Servlet dispatcherServlet mapped to [/]
2019-05-05 20:48:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 20:48:33 CST 2019]; root of context hierarchy
2019-05-05 20:48:55 -Using default implementation for ThreadExecutor
2019-05-05 20:48:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 20:48:56 -Quartz Scheduler v.2.2.1 created.
2019-05-05 20:48:56 -RAMJobStore initialized.
2019-05-05 20:48:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 20:48:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 20:48:56 -Quartz scheduler version: 2.2.1
2019-05-05 20:48:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@78479f2b
2019-05-05 20:48:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 20:48:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 20:48:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 20:48:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 20:48:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 20:48:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 20:48:59 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 20:48:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 20:48:59 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 20:48:59 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 20:48:59 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 20:48:59 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 20:48:59 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 20:48:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 20:48:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 20:48:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 20:48:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 20:48:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 20:48:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 20:48:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 20:48:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 20:48:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 20:48:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 20:48:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 20:48:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 20:48:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 20:48:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 20:48:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 20:48:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 20:48:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 20:48:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 20:48:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 20:48:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 20:48:59 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 20:48:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 20:48:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 20:48:59 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 20:48:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 20:48:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 20:48:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 20:48:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 20:48:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 20:48:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 20:48:59 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 20:48:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 20:48:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 20:48:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 20:48:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 20:48:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 20:48:59 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 20:48:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 20:48:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 20:48:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 20:48:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 20:48:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 20:48:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 20:48:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 20:48:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 20:48:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:48:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 20:48:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 20:48:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:48:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 20:48:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 20:49:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 20:49:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 20:49:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 20:49:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 20:49:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 20:49:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 20:49:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 20:49:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 20:49:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 20:49:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 20:49:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 20:49:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 20:49:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 20:49:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 20:49:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 20:49:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 20:49:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 20:49:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 20:49:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:49:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 20:49:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:49:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 20:49:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 20:49:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 20:49:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 20:49:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 20:49:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 20:49:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 20:49:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 20:49:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 20:49:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 20:49:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 20:49:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 20:49:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:49:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 20:49:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 20:49:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:49:00 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 20:49:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:49:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 20:49:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 20:49:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 20:49:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 20:49:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 20:49:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 20:49:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 20:49:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 20:49:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 20:49:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 20:49:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 20:49:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 20:49:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 20:49:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 20:49:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Sun May 05 20:48:33 CST 2019]; root of context hierarchy
2019-05-05 20:49:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 20:49:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 20:49:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 20:49:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 20:49:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 20:49:04 -Registering beans for JMX exposure on startup
2019-05-05 20:49:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 20:49:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 20:49:05 -Starting beans in phase 2147483647
2019-05-05 20:49:05 -Context refreshed
2019-05-05 20:49:05 -Found 1 custom documentation plugin(s)
2019-05-05 20:49:05 -Scanning for api listing references
2019-05-05 20:49:05 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 20:49:05 -Generating unique operation named: removeUsingPOST_1
2019-05-05 20:49:05 -Generating unique operation named: addUsingGET_1
2019-05-05 20:49:05 -Generating unique operation named: editUsingGET_1
2019-05-05 20:49:05 -Generating unique operation named: listUsingGET_1
2019-05-05 20:49:05 -Generating unique operation named: removeUsingPOST_2
2019-05-05 20:49:05 -Generating unique operation named: removeUsingPOST_3
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_2
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_2
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_2
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_4
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_5
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_2
2019-05-05 20:49:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_3
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_3
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_3
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_6
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_7
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_4
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_4
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_4
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_8
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_9
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 20:49:06 -Generating unique operation named: ElecUsingGET_1
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_5
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_5
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_5
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_10
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_11
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_6
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_6
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_6
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_7
2019-05-05 20:49:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_7
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_12
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_13
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 20:49:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_7
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_8
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_8
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_14
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_15
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_8
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_8
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_9
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_9
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_16
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_17
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_8
2019-05-05 20:49:06 -Generating unique operation named: updateUsingGET_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_9
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPUT_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 20:49:06 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_9
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_10
2019-05-05 20:49:06 -Generating unique operation named: infoUsingGET_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingPOST_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingPUT_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 20:49:06 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_10
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_18
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_19
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_9
2019-05-05 20:49:06 -Generating unique operation named: updateUsingPOST_10
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_11
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_20
2019-05-05 20:49:06 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 20:49:06 -Generating unique operation named: addUsingGET_10
2019-05-05 20:49:06 -Generating unique operation named: editUsingGET_11
2019-05-05 20:49:06 -Generating unique operation named: listUsingGET_12
2019-05-05 20:49:06 -Generating unique operation named: removeUsingPOST_21
2019-05-05 20:49:06 -Generating unique operation named: saveUsingPOST_10
2019-05-05 20:49:07 -Generating unique operation named: treeUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: treeUsingGET_2
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_11
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_11
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_12
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_13
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_22
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_23
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingGET_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPUT_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 20:49:07 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_12
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_13
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_14
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_24
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_25
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingGET_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_13
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPUT_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 20:49:07 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_13
2019-05-05 20:49:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_14
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_15
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_13
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_14
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_14
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_16
2019-05-05 20:49:07 -Generating unique operation named: listUsingHEAD_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingPOST_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingPUT_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingPATCH_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingDELETE_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 20:49:07 -Generating unique operation named: listUsingTRACE_1
2019-05-05 20:49:07 -Generating unique operation named: countDDUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 20:49:07 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_14
2019-05-05 20:49:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_15
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_17
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_26
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_15
2019-05-05 20:49:07 -Generating unique operation named: treeUsingGET_3
2019-05-05 20:49:07 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_15
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_15
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_16
2019-05-05 20:49:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_18
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_27
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_28
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_16
2019-05-05 20:49:07 -Generating unique operation named: updateUsingGET_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_16
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPUT_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 20:49:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 20:49:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_16
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_17
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_19
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_29
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_30
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_17
2019-05-05 20:49:07 -Generating unique operation named: updateUsingGET_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_17
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPUT_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 20:49:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 20:49:07 -Generating unique operation named: addUsingGET_17
2019-05-05 20:49:07 -Generating unique operation named: editUsingGET_18
2019-05-05 20:49:07 -Generating unique operation named: listUsingGET_20
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_31
2019-05-05 20:49:07 -Generating unique operation named: removeUsingPOST_32
2019-05-05 20:49:07 -Generating unique operation named: saveUsingPOST_18
2019-05-05 20:49:07 -Generating unique operation named: updateUsingGET_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPOST_18
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPUT_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 20:49:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 20:49:07 -Starting Quartz Scheduler now
2019-05-05 20:49:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 20:49:07 -Starting...
2019-05-05 20:49:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 20:49:07 -Started.
2019-05-05 20:49:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 20:49:08 -Using a shared selector for servlet write/read
2019-05-05 20:49:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 20:49:08 -Started BootdoApplication in 36.178 seconds (JVM running for 36.983)
2019-05-05 20:49:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 20:49:08 -==> Parameters: 
2019-05-05 20:49:08 -<==      Total: 1
2019-05-05 20:50:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 20:50:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 20:50:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 20:50:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2019-05-05 20:50:40 -Enabling session validation scheduler...
2019-05-05 20:50:40 -请求地址 : http://localhost:8081/login;JSESSIONID=1f4ba99d-01e1-4611-b323-c1b8a137de6e
2019-05-05 20:50:40 -HTTP METHOD : GET
2019-05-05 20:50:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 20:50:40 -参数 : [{}]
2019-05-05 20:50:40 -耗时 : 2
2019-05-05 20:50:40 -返回值 : login
2019-05-05 20:50:44 -请求地址 : http://localhost:8081/getVerify
2019-05-05 20:50:44 -HTTP METHOD : GET
2019-05-05 20:50:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 20:50:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@78283931, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76efc844]
2019-05-05 20:50:56 -0110
2019-05-05 20:50:56 -耗时 : 12261
2019-05-05 20:50:56 -返回值 : null
2019-05-05 20:51:04 -请求地址 : http://localhost:8081/login
2019-05-05 20:51:04 -HTTP METHOD : POST
2019-05-05 20:51:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 20:51:04 -参数 : [admin, 111111, 0110, org.apache.shiro.web.servlet.ShiroHttpServletRequest@18f6f8e0]
2019-05-05 20:51:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 20:51:04 -==> Parameters: admin(String)
2019-05-05 20:51:04 -<==      Total: 1
2019-05-05 20:51:04 -耗时 : 240
2019-05-05 20:51:04 -返回值 : {msg=操作成功, code=0}
2019-05-05 20:51:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 20:51:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 20:51:04 -==> Parameters: 1(Long), admin(String), 登录(String), 240(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 20:51:04.809(Timestamp)
2019-05-05 20:51:04 -<==    Updates: 1
2019-05-05 20:51:05 -请求地址 : http://localhost:8081/index
2019-05-05 20:51:05 -HTTP METHOD : GET
2019-05-05 20:51:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 20:51:05 -参数 : [{}]
2019-05-05 20:51:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 20:51:05 -==> Parameters: 1(Long)
2019-05-05 20:51:05 -<==      Total: 49
2019-05-05 20:51:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 20:51:05 -==> Parameters: 138(Long)
2019-05-05 20:51:05 -<==      Total: 1
2019-05-05 20:51:05 -耗时 : 389
2019-05-05 20:51:05 -返回值 : index_v1
2019-05-05 20:51:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 20:51:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 389(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 20:51:05.687(Timestamp)
2019-05-05 20:51:05 -<==    Updates: 1
2019-05-05 20:51:06 -请求地址 : http://localhost:8081/main
2019-05-05 20:51:06 -HTTP METHOD : GET
2019-05-05 20:51:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 20:51:06 -参数 : []
2019-05-05 20:51:06 -耗时 : 1
2019-05-05 20:51:06 -返回值 : main
2019-05-05 20:51:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 20:51:09 -HTTP METHOD : GET
2019-05-05 20:51:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 20:51:09 -参数 : []
2019-05-05 20:51:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 20:51:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 20:51:09 -<==      Total: 0
2019-05-05 20:51:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 20:51:09 -==> Parameters: 1(Long), 0(String)
2019-05-05 20:51:09 -<==      Total: 1
2019-05-05 20:51:09 -耗时 : 37
2019-05-05 20:51:09 -返回值 : com.bootdo.common.utils.PageUtils@29e502cc
2019-05-05 20:51:10 -请求地址 : http://localhost:8081/main
2019-05-05 20:51:10 -HTTP METHOD : GET
2019-05-05 20:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 20:51:10 -参数 : []
2019-05-05 20:51:10 -耗时 : 2
2019-05-05 20:51:10 -返回值 : main
2019-05-05 20:54:00 -请求地址 : http://localhost:8081/index
2019-05-05 20:54:00 -HTTP METHOD : GET
2019-05-05 20:54:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 20:54:00 -参数 : [{}]
2019-05-05 20:54:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 20:54:00 -==> Parameters: 1(Long)
2019-05-05 20:54:00 -<==      Total: 49
2019-05-05 20:54:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 20:54:00 -==> Parameters: 138(Long)
2019-05-05 20:54:00 -<==      Total: 1
2019-05-05 20:54:00 -耗时 : 34
2019-05-05 20:54:00 -返回值 : index_v1
2019-05-05 20:54:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 20:54:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 20:54:00.933(Timestamp)
2019-05-05 20:54:01 -<==    Updates: 1
2019-05-05 20:54:01 -请求地址 : http://localhost:8081/main
2019-05-05 20:54:01 -HTTP METHOD : GET
2019-05-05 20:54:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 20:54:01 -参数 : []
2019-05-05 20:54:01 -耗时 : 0
2019-05-05 20:54:01 -返回值 : main
2019-05-05 20:54:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 20:54:01 -HTTP METHOD : GET
2019-05-05 20:54:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 20:54:01 -参数 : []
2019-05-05 20:54:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 20:54:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 20:54:01 -<==      Total: 0
2019-05-05 20:54:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 20:54:01 -==> Parameters: 1(Long), 0(String)
2019-05-05 20:54:01 -<==      Total: 1
2019-05-05 20:54:01 -耗时 : 10
2019-05-05 20:54:01 -返回值 : com.bootdo.common.utils.PageUtils@3e3a3ccd
2019-05-05 20:54:01 -请求地址 : http://localhost:8081/main
2019-05-05 20:54:01 -HTTP METHOD : GET
2019-05-05 20:54:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 20:54:01 -参数 : []
2019-05-05 20:54:01 -耗时 : 1
2019-05-05 20:54:01 -返回值 : main
2019-05-05 20:54:32 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 20:58:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 20:58:23 -==> Parameters: 1(Long)
2019-05-05 20:58:23 -<==      Total: 93
2019-05-05 20:58:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-05 20:58:23 -HTTP METHOD : GET
2019-05-05 20:58:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-05 20:58:23 -参数 : []
2019-05-05 20:58:23 -耗时 : 0
2019-05-05 20:58:23 -返回值 : /moneyList/moneyList
2019-05-05 20:58:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 20:58:34 -HTTP METHOD : GET
2019-05-05 20:58:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 20:58:34 -参数 : []
2019-05-05 20:58:34 -耗时 : 1
2019-05-05 20:58:34 -返回值 : system/dept/deptTree
2019-05-05 20:58:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 20:58:34 -HTTP METHOD : GET
2019-05-05 20:58:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 20:58:34 -参数 : []
2019-05-05 20:58:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 20:58:34 -==> Parameters: 
2019-05-05 20:58:34 -<==      Total: 3
2019-05-05 20:58:34 -耗时 : 53
2019-05-05 20:58:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 20:58:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 20:58:42 -HTTP METHOD : POST
2019-05-05 20:58:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 20:58:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3ab8b703]
2019-05-05 20:58:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 20:58:42 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 20:58:42 -<==      Total: 3
2019-05-05 20:58:42 -耗时 : 862
2019-05-05 20:58:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5c53d095, com.bootdo.moneyList.damain.MoneyListDO@53729b3b, com.bootdo.moneyList.damain.MoneyListDO@50ccc5cc]
2019-05-05 20:59:05 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 20:59:05 -HTTP METHOD : POST
2019-05-05 20:59:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 20:59:05 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29e43569]
2019-05-05 20:59:05 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 20:59:05 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-05-05 20:59:05 -<==      Total: 1
2019-05-05 20:59:05 -耗时 : 297
2019-05-05 20:59:05 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5967e70]
2019-05-05 21:01:50 -请求地址 : http://localhost:8081/index
2019-05-05 21:01:50 -HTTP METHOD : GET
2019-05-05 21:01:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 21:01:50 -参数 : [{}]
2019-05-05 21:01:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 21:01:50 -==> Parameters: 1(Long)
2019-05-05 21:01:50 -<==      Total: 49
2019-05-05 21:01:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 21:01:50 -==> Parameters: 138(Long)
2019-05-05 21:01:50 -<==      Total: 1
2019-05-05 21:01:50 -耗时 : 33
2019-05-05 21:01:50 -返回值 : index_v1
2019-05-05 21:01:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:01:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 21:01:50.084(Timestamp)
2019-05-05 21:01:50 -<==    Updates: 1
2019-05-05 21:01:50 -请求地址 : http://localhost:8081/main
2019-05-05 21:01:50 -HTTP METHOD : GET
2019-05-05 21:01:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:01:50 -参数 : []
2019-05-05 21:01:50 -耗时 : 0
2019-05-05 21:01:50 -返回值 : main
2019-05-05 21:01:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 21:01:50 -HTTP METHOD : GET
2019-05-05 21:01:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 21:01:50 -参数 : []
2019-05-05 21:01:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 21:01:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 21:01:50 -<==      Total: 0
2019-05-05 21:01:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 21:01:50 -==> Parameters: 1(Long), 0(String)
2019-05-05 21:01:50 -<==      Total: 1
2019-05-05 21:01:50 -耗时 : 9
2019-05-05 21:01:50 -返回值 : com.bootdo.common.utils.PageUtils@27c85431
2019-05-05 21:01:50 -请求地址 : http://localhost:8081/main
2019-05-05 21:01:50 -HTTP METHOD : GET
2019-05-05 21:01:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:01:50 -参数 : []
2019-05-05 21:01:50 -耗时 : 0
2019-05-05 21:01:50 -返回值 : main
2019-05-05 21:01:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-05 21:01:52 -HTTP METHOD : GET
2019-05-05 21:01:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-05 21:01:52 -参数 : []
2019-05-05 21:01:52 -耗时 : 1
2019-05-05 21:01:52 -返回值 : /moneyList/moneyList
2019-05-05 21:01:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:01:58 -HTTP METHOD : POST
2019-05-05 21:01:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:01:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@698c97aa]
2019-05-05 21:01:58 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:01:58 -==> Parameters: 李(String), 李(String), 李(String)
2019-05-05 21:01:58 -<==      Total: 3
2019-05-05 21:01:58 -耗时 : 8
2019-05-05 21:01:58 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@416e3df2, com.bootdo.moneyList.damain.MoneyListDO@79440d62, com.bootdo.moneyList.damain.MoneyListDO@74f8e427]
2019-05-05 21:02:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 21:02:14 -HTTP METHOD : GET
2019-05-05 21:02:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 21:02:14 -参数 : []
2019-05-05 21:02:14 -耗时 : 6
2019-05-05 21:02:14 -返回值 : system/dept/deptTree
2019-05-05 21:02:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 21:02:14 -HTTP METHOD : GET
2019-05-05 21:02:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 21:02:14 -参数 : []
2019-05-05 21:02:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 21:02:14 -==> Parameters: 
2019-05-05 21:02:14 -<==      Total: 3
2019-05-05 21:02:14 -耗时 : 3
2019-05-05 21:02:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 21:02:18 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:18 -HTTP METHOD : POST
2019-05-05 21:02:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:18 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4c21bbdc]
2019-05-05 21:02:18 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:18 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:18 -<==      Total: 1
2019-05-05 21:02:18 -耗时 : 6
2019-05-05 21:02:18 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2ec6b076]
2019-05-05 21:02:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:20 -HTTP METHOD : POST
2019-05-05 21:02:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@26d0b1b7]
2019-05-05 21:02:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_name = ? 
2019-05-05 21:02:20 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:20 -<==      Total: 3
2019-05-05 21:02:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:20.281(Timestamp)
2019-05-05 21:02:20 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:20 -<==    Updates: 1
2019-05-05 21:02:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:21 -HTTP METHOD : POST
2019-05-05 21:02:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@260e00e8]
2019-05-05 21:02:21 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:21 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:21 -<==      Total: 1
2019-05-05 21:02:21 -耗时 : 6
2019-05-05 21:02:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7d2971da]
2019-05-05 21:02:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:22 -HTTP METHOD : POST
2019-05-05 21:02:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c089b73]
2019-05-05 21:02:22 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:22 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:22 -<==      Total: 1
2019-05-05 21:02:22 -耗时 : 7
2019-05-05 21:02:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@209dd02b]
2019-05-05 21:02:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:22 -HTTP METHOD : POST
2019-05-05 21:02:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@442f8d65]
2019-05-05 21:02:22 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:22 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:22 -<==      Total: 1
2019-05-05 21:02:22 -耗时 : 5
2019-05-05 21:02:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@442dde35]
2019-05-05 21:02:24 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:24 -HTTP METHOD : POST
2019-05-05 21:02:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@fcb99d3]
2019-05-05 21:02:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_name = ? 
2019-05-05 21:02:24 -==> Parameters: 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String), 2019-03(String), 李萨德(String)
2019-05-05 21:02:24 -<==      Total: 3
2019-05-05 21:02:24 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:24.624(Timestamp)
2019-05-05 21:02:24 -<==    Updates: 1
2019-05-05 21:02:25 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 21:02:26 -HTTP METHOD : GET
2019-05-05 21:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 21:02:26 -参数 : []
2019-05-05 21:02:26 -耗时 : 1
2019-05-05 21:02:26 -返回值 : system/dept/deptTree
2019-05-05 21:02:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 21:02:26 -HTTP METHOD : GET
2019-05-05 21:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 21:02:26 -参数 : []
2019-05-05 21:02:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 21:02:26 -==> Parameters: 
2019-05-05 21:02:26 -<==      Total: 3
2019-05-05 21:02:26 -耗时 : 23
2019-05-05 21:02:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 21:02:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:29 -HTTP METHOD : POST
2019-05-05 21:02:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2fb82668]
2019-05-05 21:02:29 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:29 -==> Parameters: 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String)
2019-05-05 21:02:29 -<==      Total: 1
2019-05-05 21:02:29 -耗时 : 5
2019-05-05 21:02:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2cde8d6b]
2019-05-05 21:02:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:29 -HTTP METHOD : POST
2019-05-05 21:02:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d81382d]
2019-05-05 21:02:29 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:29 -==> Parameters: 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String)
2019-05-05 21:02:29 -<==      Total: 1
2019-05-05 21:02:29 -耗时 : 4
2019-05-05 21:02:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@629b0c69]
2019-05-05 21:02:30 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:30 -HTTP METHOD : POST
2019-05-05 21:02:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:30 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6b45328c]
2019-05-05 21:02:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_name = ? 
2019-05-05 21:02:30 -==> Parameters: 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String)
2019-05-05 21:02:30 -<==      Total: 3
2019-05-05 21:02:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:30.393(Timestamp)
2019-05-05 21:02:30 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:30 -<==    Updates: 1
2019-05-05 21:02:31 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:02:31 -HTTP METHOD : POST
2019-05-05 21:02:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:02:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@147b96d5]
2019-05-05 21:02:31 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:02:31 -==> Parameters: 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String)
2019-05-05 21:02:31 -<==      Total: 1
2019-05-05 21:02:31 -耗时 : 4
2019-05-05 21:02:31 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@76b00190]
2019-05-05 21:02:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 21:02:45 -HTTP METHOD : GET
2019-05-05 21:02:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 21:02:45 -参数 : []
2019-05-05 21:02:45 -耗时 : 1
2019-05-05 21:02:45 -返回值 : system/dept/deptTree
2019-05-05 21:02:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 21:02:45 -HTTP METHOD : GET
2019-05-05 21:02:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 21:02:45 -参数 : []
2019-05-05 21:02:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 21:02:45 -==> Parameters: 
2019-05-05 21:02:45 -<==      Total: 3
2019-05-05 21:02:45 -耗时 : 67
2019-05-05 21:02:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 21:02:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:51 -HTTP METHOD : POST
2019-05-05 21:02:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5766ba89]
2019-05-05 21:02:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:51 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:51 -<==      Total: 3
2019-05-05 21:02:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:51 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:51.38(Timestamp)
2019-05-05 21:02:51 -<==    Updates: 1
2019-05-05 21:02:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:52 -HTTP METHOD : POST
2019-05-05 21:02:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3c7c0cb4]
2019-05-05 21:02:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:52 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:52 -<==      Total: 3
2019-05-05 21:02:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:52.73(Timestamp)
2019-05-05 21:02:52 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:52 -<==    Updates: 1
2019-05-05 21:02:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:52 -HTTP METHOD : POST
2019-05-05 21:02:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@34038d1e]
2019-05-05 21:02:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:52 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:52 -<==      Total: 3
2019-05-05 21:02:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:52 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:52.955(Timestamp)
2019-05-05 21:02:53 -<==    Updates: 1
2019-05-05 21:02:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:53 -HTTP METHOD : POST
2019-05-05 21:02:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2c498499]
2019-05-05 21:02:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:53 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:53 -<==      Total: 3
2019-05-05 21:02:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:53.139(Timestamp)
2019-05-05 21:02:53 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:53 -<==    Updates: 1
2019-05-05 21:02:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:53 -HTTP METHOD : POST
2019-05-05 21:02:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6bd29724]
2019-05-05 21:02:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:53 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:53 -<==      Total: 3
2019-05-05 21:02:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:53 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:53.355(Timestamp)
2019-05-05 21:02:53 -<==    Updates: 1
2019-05-05 21:02:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:54 -HTTP METHOD : POST
2019-05-05 21:02:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3a237b95]
2019-05-05 21:02:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-05-05 21:02:54 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String), 2019-02(String), 2(String), 1-0001(String), 李萨德(String)
2019-05-05 21:02:54 -<==      Total: 3
2019-05-05 21:02:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:02:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:02:54.093(Timestamp)
2019-05-05 21:02:54 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:02:54 -<==    Updates: 1
2019-05-05 21:02:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:02:57 -HTTP METHOD : POST
2019-05-05 21:02:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:02:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@630fef48]
2019-05-05 21:02:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:02:57 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:02:57 -<==      Total: 3
2019-05-05 21:02:57 -耗时 : 6
2019-05-05 21:02:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@8ebe258, com.bootdo.moneyList.damain.MoneyListDO@24b3ffbe, com.bootdo.moneyList.damain.MoneyListDO@38da21cf]
2019-05-05 21:03:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:03:00 -HTTP METHOD : POST
2019-05-05 21:03:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:03:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6902cbbc]
2019-05-05 21:03:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:03:00 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:03:00 -<==      Total: 3
2019-05-05 21:03:00 -耗时 : 9
2019-05-05 21:03:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@39f95096, com.bootdo.moneyList.damain.MoneyListDO@6df93b1, com.bootdo.moneyList.damain.MoneyListDO@797ff7fd]
2019-05-05 21:03:31 -请求地址 : http://localhost:8081/index
2019-05-05 21:03:31 -HTTP METHOD : GET
2019-05-05 21:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 21:03:31 -参数 : [{}]
2019-05-05 21:03:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 21:03:31 -==> Parameters: 1(Long)
2019-05-05 21:03:31 -<==      Total: 49
2019-05-05 21:03:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 21:03:31 -==> Parameters: 138(Long)
2019-05-05 21:03:31 -<==      Total: 1
2019-05-05 21:03:31 -耗时 : 27
2019-05-05 21:03:31 -返回值 : index_v1
2019-05-05 21:03:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:03:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 21:03:31.172(Timestamp)
2019-05-05 21:03:31 -请求地址 : http://localhost:8081/main
2019-05-05 21:03:31 -HTTP METHOD : GET
2019-05-05 21:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:03:31 -参数 : []
2019-05-05 21:03:31 -耗时 : 1
2019-05-05 21:03:31 -返回值 : main
2019-05-05 21:03:31 -<==    Updates: 1
2019-05-05 21:03:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 21:03:31 -HTTP METHOD : GET
2019-05-05 21:03:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 21:03:31 -参数 : []
2019-05-05 21:03:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 21:03:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 21:03:31 -<==      Total: 0
2019-05-05 21:03:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 21:03:31 -==> Parameters: 1(Long), 0(String)
2019-05-05 21:03:31 -<==      Total: 1
2019-05-05 21:03:31 -耗时 : 7
2019-05-05 21:03:31 -返回值 : com.bootdo.common.utils.PageUtils@463ec5bb
2019-05-05 21:03:31 -请求地址 : http://localhost:8081/main
2019-05-05 21:03:31 -HTTP METHOD : GET
2019-05-05 21:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:03:31 -参数 : []
2019-05-05 21:03:31 -耗时 : 1
2019-05-05 21:03:31 -返回值 : main
2019-05-05 21:03:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-05 21:03:33 -HTTP METHOD : GET
2019-05-05 21:03:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-05 21:03:33 -参数 : []
2019-05-05 21:03:33 -耗时 : 1
2019-05-05 21:03:33 -返回值 : /moneyList/moneyList
2019-05-05 21:03:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 21:03:38 -HTTP METHOD : GET
2019-05-05 21:03:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 21:03:38 -参数 : []
2019-05-05 21:03:38 -耗时 : 0
2019-05-05 21:03:38 -返回值 : system/dept/deptTree
2019-05-05 21:03:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 21:03:39 -HTTP METHOD : GET
2019-05-05 21:03:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 21:03:39 -参数 : []
2019-05-05 21:03:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 21:03:39 -==> Parameters: 
2019-05-05 21:03:39 -<==      Total: 3
2019-05-05 21:03:39 -耗时 : 4
2019-05-05 21:03:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 21:03:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:03:41 -HTTP METHOD : POST
2019-05-05 21:03:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:03:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ba80f40]
2019-05-05 21:03:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:03:41 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:03:41 -<==      Total: 3
2019-05-05 21:03:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:03:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:03:41.406(Timestamp)
2019-05-05 21:03:41 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:03:41 -<==    Updates: 1
2019-05-05 21:03:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:03:42 -HTTP METHOD : POST
2019-05-05 21:03:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:03:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@738e9713]
2019-05-05 21:03:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:03:42 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:03:42 -<==      Total: 3
2019-05-05 21:03:42 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:03:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:03:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:03:42.319(Timestamp)
2019-05-05 21:03:42 -<==    Updates: 1
2019-05-05 21:03:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:03:42 -HTTP METHOD : POST
2019-05-05 21:03:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:03:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6cad58aa]
2019-05-05 21:03:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:03:42 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:03:42 -<==      Total: 3
2019-05-05 21:03:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:03:42 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c140186a.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-05-05 21:03:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-05-05 21:03:42.925(Timestamp)
2019-05-05 21:03:43 -<==    Updates: 1
2019-05-05 21:19:37 -Starting BootdoApplication on ZJZL-20180906VX with PID 1516 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-05 21:19:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-05 21:19:37 -The following profiles are active: dev
2019-05-05 21:19:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 21:19:37 CST 2019]; root of context hierarchy
2019-05-05 21:19:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-05 21:19:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-05 21:19:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-05 21:19:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-05 21:19:44 -Tomcat initialized with port(s): 8081 (http)
2019-05-05 21:19:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-05 21:19:45 -Starting service [Tomcat]
2019-05-05 21:19:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-05 21:19:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-05 21:19:45 -Initializing Spring embedded WebApplicationContext
2019-05-05 21:19:45 -Root WebApplicationContext: initialization completed in 8275 ms
2019-05-05 21:19:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-05 21:19:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-05 21:19:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-05 21:19:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-05 21:19:46 -Filter xssFilter was not registered (disabled)
2019-05-05 21:19:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-05 21:19:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-05 21:19:46 -Servlet statViewServlet mapped to [/druid/*]
2019-05-05 21:19:46 -Servlet dispatcherServlet mapped to [/]
2019-05-05 21:19:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 21:19:37 CST 2019]; root of context hierarchy
2019-05-05 21:19:54 -Using default implementation for ThreadExecutor
2019-05-05 21:19:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-05 21:19:54 -Quartz Scheduler v.2.2.1 created.
2019-05-05 21:19:54 -RAMJobStore initialized.
2019-05-05 21:19:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-05 21:19:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-05 21:19:54 -Quartz scheduler version: 2.2.1
2019-05-05 21:19:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65859b44
2019-05-05 21:19:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-05 21:19:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-05 21:19:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-05 21:19:57 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-05 21:19:57 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-05 21:19:57 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-05 21:19:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-05 21:19:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-05 21:19:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-05 21:19:57 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-05 21:19:57 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-05 21:19:57 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-05 21:19:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-05 21:19:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-05 21:19:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-05 21:19:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-05 21:19:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-05 21:19:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-05 21:19:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 21:19:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-05 21:19:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-05 21:19:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-05 21:19:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-05 21:19:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-05 21:19:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-05 21:19:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-05 21:19:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-05 21:19:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-05 21:19:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-05 21:19:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-05 21:19:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-05 21:19:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-05 21:19:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-05 21:19:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-05 21:19:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-05 21:19:57 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-05 21:19:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-05 21:19:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-05 21:19:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-05 21:19:57 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-05 21:19:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-05 21:19:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-05 21:19:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 21:19:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 21:19:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-05 21:19:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 21:19:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-05 21:19:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-05 21:19:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-05 21:19:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-05 21:19:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-05 21:19:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-05 21:19:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-05 21:19:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-05 21:19:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-05 21:19:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-05 21:19:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-05 21:19:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-05 21:19:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-05 21:19:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-05 21:19:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-05 21:19:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-05 21:19:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-05 21:19:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-05 21:19:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-05 21:19:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-05 21:19:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-05 21:19:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-05 21:19:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-05 21:19:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-05 21:19:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-05 21:19:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-05 21:19:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-05 21:19:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-05 21:19:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-05 21:19:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-05 21:19:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-05 21:19:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-05 21:19:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 21:19:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-05 21:19:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-05 21:19:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-05 21:19:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-05 21:19:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-05 21:19:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-05 21:19:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-05 21:19:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-05 21:19:58 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-05 21:19:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-05 21:19:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-05 21:19:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-05 21:19:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-05 21:19:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-05 21:19:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-05 21:19:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-05 21:19:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-05 21:19:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-05 21:19:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-05 21:19:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-05 21:19:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-05 21:19:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-05 21:19:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 21:19:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Sun May 05 21:19:37 CST 2019]; root of context hierarchy
2019-05-05 21:19:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 21:19:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 21:19:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-05 21:19:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-05 21:19:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-05 21:20:01 -Registering beans for JMX exposure on startup
2019-05-05 21:20:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-05 21:20:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-05 21:20:01 -Starting beans in phase 2147483647
2019-05-05 21:20:01 -Context refreshed
2019-05-05 21:20:01 -Found 1 custom documentation plugin(s)
2019-05-05 21:20:01 -Scanning for api listing references
2019-05-05 21:20:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_1
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_2
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_3
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_2
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_2
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_2
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_4
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_5
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_2
2019-05-05 21:20:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_3
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_3
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_3
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_6
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_7
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_4
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_4
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_4
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_8
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_9
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_3
2019-05-05 21:20:02 -Generating unique operation named: ElecUsingGET_1
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_5
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_5
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_5
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_10
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_11
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_4
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_6
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_6
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_6
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_7
2019-05-05 21:20:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_7
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_12
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_13
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_7
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_5
2019-05-05 21:20:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_7
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_8
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_8
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_14
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_15
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_7
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPOST_8
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPUT_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingPATCH_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingDELETE_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-05 21:20:02 -Generating unique operation named: updateUsingTRACE_6
2019-05-05 21:20:02 -Generating unique operation named: addUsingGET_8
2019-05-05 21:20:02 -Generating unique operation named: editUsingGET_9
2019-05-05 21:20:02 -Generating unique operation named: listUsingGET_9
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_16
2019-05-05 21:20:02 -Generating unique operation named: removeUsingPOST_17
2019-05-05 21:20:02 -Generating unique operation named: saveUsingPOST_8
2019-05-05 21:20:02 -Generating unique operation named: updateUsingGET_7
2019-05-05 21:20:02 -Generating unique operation named: updateUsingHEAD_7
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_7
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_9
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_10
2019-05-05 21:20:03 -Generating unique operation named: infoUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingHEAD_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingPOST_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingPUT_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingPATCH_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingDELETE_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-05 21:20:03 -Generating unique operation named: infoUsingTRACE_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_10
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_18
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_19
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_10
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_11
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_20
2019-05-05 21:20:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_10
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_11
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_12
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_21
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_10
2019-05-05 21:20:03 -Generating unique operation named: treeUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: treeUsingGET_2
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_11
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_11
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_12
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_13
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_22
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_23
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingGET_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingHEAD_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_8
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_12
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_13
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_14
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_24
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_25
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingGET_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingHEAD_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_13
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_9
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_13
2019-05-05 21:20:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_14
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_15
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_13
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_14
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_14
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_16
2019-05-05 21:20:03 -Generating unique operation named: listUsingHEAD_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingPOST_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingPUT_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingPATCH_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingDELETE_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingOPTIONS_1
2019-05-05 21:20:03 -Generating unique operation named: listUsingTRACE_1
2019-05-05 21:20:03 -Generating unique operation named: countDDUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: exportDDUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: exprotElecLogUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-05 21:20:03 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: getCountMMUsingPOST_2
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_14
2019-05-05 21:20:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_15
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_17
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_26
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_15
2019-05-05 21:20:03 -Generating unique operation named: treeUsingGET_3
2019-05-05 21:20:03 -Generating unique operation named: treeViewUsingGET_1
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_15
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_15
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_16
2019-05-05 21:20:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_18
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_27
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_28
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_16
2019-05-05 21:20:03 -Generating unique operation named: updateUsingGET_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingHEAD_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_16
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_10
2019-05-05 21:20:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_16
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_17
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_19
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_29
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_30
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_17
2019-05-05 21:20:03 -Generating unique operation named: updateUsingGET_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingHEAD_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_17
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_11
2019-05-05 21:20:03 -Generating unique operation named: addUsingGET_17
2019-05-05 21:20:03 -Generating unique operation named: editUsingGET_18
2019-05-05 21:20:03 -Generating unique operation named: listUsingGET_20
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_31
2019-05-05 21:20:03 -Generating unique operation named: removeUsingPOST_32
2019-05-05 21:20:03 -Generating unique operation named: saveUsingPOST_18
2019-05-05 21:20:03 -Generating unique operation named: updateUsingGET_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingHEAD_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPOST_18
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPUT_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingPATCH_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingDELETE_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-05 21:20:03 -Generating unique operation named: updateUsingTRACE_12
2019-05-05 21:20:04 -Starting Quartz Scheduler now
2019-05-05 21:20:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-05 21:20:04 -Starting...
2019-05-05 21:20:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-05 21:20:04 -Started.
2019-05-05 21:20:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-05 21:20:04 -Using a shared selector for servlet write/read
2019-05-05 21:20:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-05 21:20:04 -Started BootdoApplication in 28.158 seconds (JVM running for 28.963)
2019-05-05 21:20:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-05 21:20:04 -==> Parameters: 
2019-05-05 21:20:04 -<==      Total: 1
2019-05-05 21:20:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-05 21:22:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-05 21:22:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-05 21:22:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2019-05-05 21:22:38 -Enabling session validation scheduler...
2019-05-05 21:23:10 -请求地址 : http://localhost:8081/login;JSESSIONID=b802d3ac-ec91-4230-a268-6de4cde61560
2019-05-05 21:23:10 -HTTP METHOD : GET
2019-05-05 21:23:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-05 21:23:10 -参数 : [{}]
2019-05-05 21:23:10 -耗时 : 2
2019-05-05 21:23:10 -返回值 : login
2019-05-05 21:23:14 -请求地址 : http://localhost:8081/getVerify
2019-05-05 21:23:14 -HTTP METHOD : GET
2019-05-05 21:23:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-05 21:23:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2cdcdb79, org.apache.shiro.web.servlet.ShiroHttpServletResponse@221b3092]
2019-05-05 21:23:19 -8790
2019-05-05 21:23:20 -耗时 : 5720
2019-05-05 21:23:20 -返回值 : null
2019-05-05 21:23:25 -请求地址 : http://localhost:8081/login
2019-05-05 21:23:25 -HTTP METHOD : POST
2019-05-05 21:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-05 21:23:25 -参数 : [admin, 111111, 8790, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f647b84]
2019-05-05 21:23:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-05 21:23:25 -==> Parameters: admin(String)
2019-05-05 21:23:25 -<==      Total: 1
2019-05-05 21:23:26 -耗时 : 319
2019-05-05 21:23:26 -返回值 : {msg=操作成功, code=0}
2019-05-05 21:23:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-05 21:23:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:23:26 -==> Parameters: 1(Long), admin(String), 登录(String), 319(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-05 21:23:26.21(Timestamp)
2019-05-05 21:23:26 -<==    Updates: 1
2019-05-05 21:23:26 -请求地址 : http://localhost:8081/index
2019-05-05 21:23:26 -HTTP METHOD : GET
2019-05-05 21:23:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 21:23:26 -参数 : [{}]
2019-05-05 21:23:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 21:23:26 -==> Parameters: 1(Long)
2019-05-05 21:23:27 -<==      Total: 49
2019-05-05 21:23:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 21:23:27 -==> Parameters: 138(Long)
2019-05-05 21:23:27 -<==      Total: 1
2019-05-05 21:23:27 -耗时 : 395
2019-05-05 21:23:27 -返回值 : index_v1
2019-05-05 21:23:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:23:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 396(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 21:23:27.177(Timestamp)
2019-05-05 21:23:27 -<==    Updates: 1
2019-05-05 21:23:27 -请求地址 : http://localhost:8081/main
2019-05-05 21:23:27 -HTTP METHOD : GET
2019-05-05 21:23:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:23:27 -参数 : []
2019-05-05 21:23:27 -耗时 : 1
2019-05-05 21:23:27 -返回值 : main
2019-05-05 21:23:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 21:23:29 -HTTP METHOD : GET
2019-05-05 21:23:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 21:23:29 -参数 : []
2019-05-05 21:23:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 21:23:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 21:23:29 -<==      Total: 0
2019-05-05 21:23:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 21:23:29 -==> Parameters: 1(Long), 0(String)
2019-05-05 21:23:29 -<==      Total: 1
2019-05-05 21:23:29 -耗时 : 330
2019-05-05 21:23:29 -返回值 : com.bootdo.common.utils.PageUtils@4b22a208
2019-05-05 21:23:29 -请求地址 : http://localhost:8081/main
2019-05-05 21:23:29 -HTTP METHOD : GET
2019-05-05 21:23:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:23:29 -参数 : []
2019-05-05 21:23:29 -耗时 : 1
2019-05-05 21:23:29 -返回值 : main
2019-05-05 21:24:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-05 21:24:25 -==> Parameters: 1(Long)
2019-05-05 21:24:25 -<==      Total: 93
2019-05-05 21:24:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-05 21:24:25 -HTTP METHOD : GET
2019-05-05 21:24:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-05 21:24:25 -参数 : []
2019-05-05 21:24:25 -耗时 : 1
2019-05-05 21:24:25 -返回值 : /moneyList/moneyList
2019-05-05 21:24:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-05 21:24:30 -HTTP METHOD : GET
2019-05-05 21:24:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-05 21:24:30 -参数 : []
2019-05-05 21:24:30 -耗时 : 1
2019-05-05 21:24:30 -返回值 : system/dept/deptTree
2019-05-05 21:24:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-05 21:24:30 -HTTP METHOD : GET
2019-05-05 21:24:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-05 21:24:30 -参数 : []
2019-05-05 21:24:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-05 21:24:30 -==> Parameters: 
2019-05-05 21:24:30 -<==      Total: 3
2019-05-05 21:24:30 -耗时 : 43
2019-05-05 21:24:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-05 21:24:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:24:33 -HTTP METHOD : POST
2019-05-05 21:24:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:24:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@33cf22e3]
2019-05-05 21:24:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-05 21:24:33 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-05 21:24:34 -<==      Total: 3
2019-05-05 21:24:34 -耗时 : 711
2019-05-05 21:24:34 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@18b49db7, com.bootdo.moneyList.damain.MoneyListDO@5fbe8b38, com.bootdo.moneyList.damain.MoneyListDO@455049c3]
2019-05-05 21:24:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:24:47 -HTTP METHOD : POST
2019-05-05 21:24:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:24:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@488e0642]
2019-05-05 21:24:47 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:24:47 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-05-05 21:24:47 -<==      Total: 1
2019-05-05 21:24:47 -耗时 : 77
2019-05-05 21:24:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6bf7c58c]
2019-05-05 21:24:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:24:59 -HTTP METHOD : POST
2019-05-05 21:24:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:24:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@282364bd]
2019-05-05 21:24:59 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:24:59 -==> Parameters: 2019-03(String), 2(String), 李(String), 2019-03(String), 2(String), 李(String), 2019-03(String), 2(String), 李(String)
2019-05-05 21:24:59 -<==      Total: 2
2019-05-05 21:24:59 -耗时 : 5
2019-05-05 21:24:59 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@22db0fcd, com.bootdo.moneyList.damain.MoneyListDO@67d995f2]
2019-05-05 21:25:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-05-05 21:25:21 -HTTP METHOD : POST
2019-05-05 21:25:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-05-05 21:25:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4b690ae8]
2019-05-05 21:25:21 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-05-05 21:25:21 -==> Parameters: 2019-03(String), 2(String), 李(String), 2019-03(String), 2(String), 李(String), 2019-03(String), 2(String), 李(String)
2019-05-05 21:25:21 -<==      Total: 2
2019-05-05 21:25:21 -耗时 : 31
2019-05-05 21:25:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6c8d4a89, com.bootdo.moneyList.damain.MoneyListDO@701bed3b]
2019-05-05 21:25:23 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-05 21:25:23 -HTTP METHOD : POST
2019-05-05 21:25:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-05 21:25:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3fd25b0b]
2019-05-05 21:25:23 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_name = ? 
2019-05-05 21:25:23 -==> Parameters: 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String), 2019-03(String), 2(String), 李萨德(String)
2019-05-05 21:25:23 -<==      Total: 3
2019-05-05 21:25:23 -耗时 : 34
2019-05-05 21:25:23 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6a980343, com.bootdo.moneyList.damain.MoneyListDO@473f0718, com.bootdo.moneyList.damain.MoneyListDO@713b3c2]
2019-05-05 21:25:26 -请求地址 : http://localhost:8081/index
2019-05-05 21:25:26 -HTTP METHOD : GET
2019-05-05 21:25:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-05 21:25:26 -参数 : [{}]
2019-05-05 21:25:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-05 21:25:26 -==> Parameters: 1(Long)
2019-05-05 21:25:26 -<==      Total: 49
2019-05-05 21:25:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-05 21:25:26 -==> Parameters: 138(Long)
2019-05-05 21:25:26 -<==      Total: 1
2019-05-05 21:25:26 -耗时 : 38
2019-05-05 21:25:26 -返回值 : index_v1
2019-05-05 21:25:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-05 21:25:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-05 21:25:26.835(Timestamp)
2019-05-05 21:25:26 -请求地址 : http://localhost:8081/main
2019-05-05 21:25:26 -HTTP METHOD : GET
2019-05-05 21:25:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:25:26 -参数 : []
2019-05-05 21:25:26 -耗时 : 1
2019-05-05 21:25:26 -返回值 : main
2019-05-05 21:25:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-05 21:25:27 -HTTP METHOD : GET
2019-05-05 21:25:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-05 21:25:27 -参数 : []
2019-05-05 21:25:27 -<==    Updates: 1
2019-05-05 21:25:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-05 21:25:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-05 21:25:27 -<==      Total: 0
2019-05-05 21:25:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-05 21:25:27 -==> Parameters: 1(Long), 0(String)
2019-05-05 21:25:27 -<==      Total: 1
2019-05-05 21:25:27 -耗时 : 37
2019-05-05 21:25:27 -返回值 : com.bootdo.common.utils.PageUtils@1c792a7d
2019-05-05 21:25:27 -请求地址 : http://localhost:8081/main
2019-05-05 21:25:27 -HTTP METHOD : GET
2019-05-05 21:25:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-05 21:25:27 -参数 : []
2019-05-05 21:25:27 -耗时 : 1
2019-05-05 21:25:27 -返回值 : main

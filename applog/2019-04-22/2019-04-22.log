2019-04-22 08:40:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 10552 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 08:40:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 08:40:56 -The following profiles are active: dev
2019-04-22 08:40:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 08:40:57 CST 2019]; root of context hierarchy
2019-04-22 08:41:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 08:42:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 08:42:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 08:42:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:42:26 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 08:42:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 08:42:27 -Starting service [Tomcat]
2019-04-22 08:42:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 08:42:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 08:42:29 -Initializing Spring embedded WebApplicationContext
2019-04-22 08:42:29 -Root WebApplicationContext: initialization completed in 91799 ms
2019-04-22 08:42:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 08:42:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 08:42:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 08:42:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 08:42:32 -Filter xssFilter was not registered (disabled)
2019-04-22 08:42:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 08:42:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 08:42:32 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 08:42:32 -Servlet dispatcherServlet mapped to [/]
2019-04-22 08:43:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 08:40:57 CST 2019]; root of context hierarchy
2019-04-22 08:43:04 -Using default implementation for ThreadExecutor
2019-04-22 08:43:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 08:43:04 -Quartz Scheduler v.2.2.1 created.
2019-04-22 08:43:04 -RAMJobStore initialized.
2019-04-22 08:43:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 08:43:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 08:43:04 -Quartz scheduler version: 2.2.1
2019-04-22 08:43:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-04-22 08:43:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 08:43:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 08:43:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 08:43:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 08:43:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 08:43:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 08:43:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 08:43:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 08:43:10 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 08:43:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 08:43:10 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 08:43:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 08:43:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 08:43:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 08:43:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 08:43:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 08:43:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 08:43:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 08:43:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 08:43:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 08:43:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 08:43:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 08:43:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 08:43:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 08:43:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 08:43:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 08:43:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 08:43:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 08:43:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 08:43:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 08:43:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 08:43:10 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 08:43:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 08:43:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 08:43:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 08:43:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 08:43:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 08:43:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 08:43:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 08:43:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 08:43:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 08:43:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 08:43:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 08:43:10 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:43:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 08:43:10 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:43:10 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 08:43:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 08:43:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 08:43:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 08:43:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 08:43:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 08:43:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 08:43:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 08:43:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 08:43:10 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 08:43:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 08:43:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 08:43:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 08:43:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 08:43:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 08:43:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 08:43:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 08:43:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 08:43:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 08:43:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 08:43:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 08:43:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 08:43:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 08:43:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 08:43:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 08:43:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 08:43:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 08:43:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 08:43:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 08:43:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 08:43:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 08:43:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 08:43:10 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 08:43:10 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 08:43:10 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 08:43:10 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 08:43:10 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:43:10 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 08:43:10 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:43:10 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 08:43:10 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 08:43:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:43:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 08:43:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 08:43:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 08:43:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 08:43:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 08:43:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 08:43:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:43:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 08:40:57 CST 2019]; root of context hierarchy
2019-04-22 08:43:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:43:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:43:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:43:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 08:43:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 08:43:32 -Registering beans for JMX exposure on startup
2019-04-22 08:43:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 08:43:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 08:43:32 -Starting beans in phase 2147483647
2019-04-22 08:43:32 -Context refreshed
2019-04-22 08:43:32 -Found 1 custom documentation plugin(s)
2019-04-22 08:43:32 -Scanning for api listing references
2019-04-22 08:43:34 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 08:43:34 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 08:43:34 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_1
2019-04-22 08:43:34 -Generating unique operation named: addUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: editUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: listUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_2
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_3
2019-04-22 08:43:34 -Generating unique operation named: saveUsingPOST_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPOST_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPUT_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 08:43:34 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 08:43:34 -Generating unique operation named: addUsingGET_2
2019-04-22 08:43:34 -Generating unique operation named: editUsingGET_2
2019-04-22 08:43:34 -Generating unique operation named: listUsingGET_2
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_4
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_5
2019-04-22 08:43:34 -Generating unique operation named: saveUsingPOST_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPOST_2
2019-04-22 08:43:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 08:43:34 -Generating unique operation named: addUsingGET_3
2019-04-22 08:43:34 -Generating unique operation named: editUsingGET_3
2019-04-22 08:43:34 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 08:43:34 -Generating unique operation named: listUsingGET_3
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_6
2019-04-22 08:43:34 -Generating unique operation named: removeUsingPOST_7
2019-04-22 08:43:34 -Generating unique operation named: saveUsingPOST_3
2019-04-22 08:43:34 -Generating unique operation named: updateUsingGET_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPOST_3
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPUT_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 08:43:34 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 08:43:34 -Generating unique operation named: addUsingGET_4
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_4
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_4
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_8
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_9
2019-04-22 08:43:35 -Generating unique operation named: saveUsingPOST_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingGET_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPUT_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 08:43:35 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 08:43:35 -Generating unique operation named: ElecUsingGET_1
2019-04-22 08:43:35 -Generating unique operation named: addUsingGET_5
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_5
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_5
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_10
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_11
2019-04-22 08:43:35 -Generating unique operation named: saveUsingPOST_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingGET_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPUT_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 08:43:35 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_6
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_6
2019-04-22 08:43:35 -Generating unique operation named: addUsingGET_6
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_7
2019-04-22 08:43:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_7
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_12
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_13
2019-04-22 08:43:35 -Generating unique operation named: saveUsingPOST_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingGET_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPUT_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 08:43:35 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 08:43:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 08:43:35 -Generating unique operation named: addUsingGET_7
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_8
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_8
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_14
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_15
2019-04-22 08:43:35 -Generating unique operation named: saveUsingPOST_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingGET_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_8
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPUT_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 08:43:35 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 08:43:35 -Generating unique operation named: addUsingGET_8
2019-04-22 08:43:35 -Generating unique operation named: editUsingGET_9
2019-04-22 08:43:35 -Generating unique operation named: listUsingGET_9
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_16
2019-04-22 08:43:35 -Generating unique operation named: removeUsingPOST_17
2019-04-22 08:43:35 -Generating unique operation named: saveUsingPOST_8
2019-04-22 08:43:35 -Generating unique operation named: updateUsingGET_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPOST_9
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPUT_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 08:43:35 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 08:43:35 -Generating unique operation named: addUsingGET_9
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_10
2019-04-22 08:43:36 -Generating unique operation named: infoUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingPOST_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingPUT_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 08:43:36 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_10
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_18
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_19
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_10
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_11
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_20
2019-04-22 08:43:36 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_10
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_11
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_12
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_21
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_10
2019-04-22 08:43:36 -Generating unique operation named: treeUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: treeUsingGET_2
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_11
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_11
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_12
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_13
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_22
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_23
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingGET_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_12
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPUT_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 08:43:36 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_12
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_13
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_14
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_24
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_25
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_12
2019-04-22 08:43:36 -Generating unique operation named: updateUsingGET_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_13
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPUT_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 08:43:36 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_13
2019-04-22 08:43:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_14
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_15
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_13
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_14
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_14
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_16
2019-04-22 08:43:36 -Generating unique operation named: listUsingHEAD_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingPOST_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingPUT_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingPATCH_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingDELETE_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingTRACE_1
2019-04-22 08:43:36 -Generating unique operation named: countDDUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 08:43:36 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 08:43:36 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 08:43:36 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_14
2019-04-22 08:43:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_15
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_17
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_26
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_15
2019-04-22 08:43:36 -Generating unique operation named: treeUsingGET_3
2019-04-22 08:43:36 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_15
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_15
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_16
2019-04-22 08:43:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_18
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_27
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_28
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_16
2019-04-22 08:43:36 -Generating unique operation named: updateUsingGET_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_16
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPUT_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 08:43:36 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 08:43:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_16
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_17
2019-04-22 08:43:36 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_19
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_29
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_30
2019-04-22 08:43:36 -Generating unique operation named: saveUsingPOST_17
2019-04-22 08:43:36 -Generating unique operation named: updateUsingGET_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPOST_17
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPUT_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 08:43:36 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 08:43:36 -Generating unique operation named: addUsingGET_17
2019-04-22 08:43:36 -Generating unique operation named: editUsingGET_18
2019-04-22 08:43:36 -Generating unique operation named: listUsingGET_20
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_31
2019-04-22 08:43:36 -Generating unique operation named: removeUsingPOST_32
2019-04-22 08:43:37 -Generating unique operation named: saveUsingPOST_18
2019-04-22 08:43:37 -Generating unique operation named: updateUsingGET_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingPOST_18
2019-04-22 08:43:37 -Generating unique operation named: updateUsingPUT_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 08:43:37 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 08:43:37 -Starting Quartz Scheduler now
2019-04-22 08:43:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 08:43:37 -Starting...
2019-04-22 08:43:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 08:43:37 -Started.
2019-04-22 08:43:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 08:43:37 -Using a shared selector for servlet write/read
2019-04-22 08:43:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 08:43:37 -Started BootdoApplication in 208.487 seconds (JVM running for 222.158)
2019-04-22 08:43:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 08:43:38 -==> Parameters: 
2019-04-22 08:43:39 -<==      Total: 1
2019-04-22 08:43:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 08:43:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 08:43:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-04-22 08:43:52 -Enabling session validation scheduler...
2019-04-22 08:43:52 -请求地址 : http://localhost:8081/
2019-04-22 08:43:52 -HTTP METHOD : GET
2019-04-22 08:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-22 08:43:52 -参数 : [{}]
2019-04-22 08:43:52 -耗时 : 5
2019-04-22 08:43:52 -返回值 : redirect:/index
2019-04-22 08:43:52 -请求地址 : http://localhost:8081/login;JSESSIONID=d980fa43-716e-497e-b559-0516ffb07459
2019-04-22 08:43:52 -HTTP METHOD : GET
2019-04-22 08:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 08:43:52 -参数 : [{}]
2019-04-22 08:43:52 -耗时 : 1
2019-04-22 08:43:52 -返回值 : login
2019-04-22 08:43:55 -请求地址 : http://localhost:8081/getVerify
2019-04-22 08:43:55 -HTTP METHOD : GET
2019-04-22 08:43:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 08:43:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@fb9163f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1eb2c461]
2019-04-22 08:44:00 -9528
2019-04-22 08:44:01 -耗时 : 5445
2019-04-22 08:44:01 -返回值 : null
2019-04-22 08:44:10 -请求地址 : http://localhost:8081/login
2019-04-22 08:44:10 -HTTP METHOD : POST
2019-04-22 08:44:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 08:44:10 -参数 : [admin, 111111, 9528, org.apache.shiro.web.servlet.ShiroHttpServletRequest@cbece99]
2019-04-22 08:44:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 08:44:10 -==> Parameters: admin(String)
2019-04-22 08:44:10 -<==      Total: 1
2019-04-22 08:44:10 -耗时 : 760
2019-04-22 08:44:10 -返回值 : {msg=操作成功, code=0}
2019-04-22 08:44:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 08:44:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:44:11 -==> Parameters: 1(Long), admin(String), 登录(String), 760(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 08:44:11.066(Timestamp)
2019-04-22 08:44:11 -请求地址 : http://localhost:8081/index
2019-04-22 08:44:11 -HTTP METHOD : GET
2019-04-22 08:44:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 08:44:11 -参数 : [{}]
2019-04-22 08:44:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 08:44:11 -<==    Updates: 1
2019-04-22 08:44:11 -==> Parameters: 1(Long)
2019-04-22 08:44:12 -<==      Total: 49
2019-04-22 08:44:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 08:44:12 -==> Parameters: 138(Long)
2019-04-22 08:44:12 -<==      Total: 1
2019-04-22 08:44:12 -耗时 : 752
2019-04-22 08:44:12 -返回值 : index_v1
2019-04-22 08:44:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:44:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 752(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 08:44:12.278(Timestamp)
2019-04-22 08:44:12 -<==    Updates: 1
2019-04-22 08:44:12 -请求地址 : http://localhost:8081/main
2019-04-22 08:44:12 -HTTP METHOD : GET
2019-04-22 08:44:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 08:44:12 -参数 : []
2019-04-22 08:44:12 -耗时 : 0
2019-04-22 08:44:12 -返回值 : main
2019-04-22 08:44:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-22 08:44:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 08:44:18 -HTTP METHOD : GET
2019-04-22 08:44:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 08:44:18 -参数 : []
2019-04-22 08:44:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 08:44:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 08:44:19 -请求地址 : http://localhost:8081/main
2019-04-22 08:44:19 -HTTP METHOD : GET
2019-04-22 08:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 08:44:19 -参数 : []
2019-04-22 08:44:19 -耗时 : 0
2019-04-22 08:44:19 -返回值 : main
2019-04-22 08:44:19 -<==      Total: 0
2019-04-22 08:44:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 08:44:19 -==> Parameters: 1(Long), 0(String)
2019-04-22 08:44:19 -<==      Total: 1
2019-04-22 08:44:19 -耗时 : 890
2019-04-22 08:44:19 -返回值 : com.bootdo.common.utils.PageUtils@3b2ed4dd
2019-04-22 08:44:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 08:44:34 -==> Parameters: 1(Long)
2019-04-22 08:44:34 -<==      Total: 93
2019-04-22 08:44:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-22 08:44:34 -HTTP METHOD : GET
2019-04-22 08:44:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-22 08:44:34 -参数 : []
2019-04-22 08:44:34 -耗时 : 0
2019-04-22 08:44:34 -返回值 : /moneyLog/elecLog/elecLog
2019-04-22 08:44:36 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 08:44:36 -HTTP METHOD : GET
2019-04-22 08:44:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 08:44:36 -参数 : []
2019-04-22 08:44:36 -耗时 : 1
2019-04-22 08:44:36 -返回值 : /moneyList/moneyList
2019-04-22 08:44:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 08:44:37 -HTTP METHOD : GET
2019-04-22 08:44:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 08:44:37 -参数 : [userType]
2019-04-22 08:44:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 08:44:37 -==> Parameters: userType(String)
2019-04-22 08:44:37 -<==      Total: 4
2019-04-22 08:44:37 -耗时 : 78
2019-04-22 08:44:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 08:44:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-22 08:44:37 -HTTP METHOD : GET
2019-04-22 08:44:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-22 08:44:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-22 08:44:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-22 08:44:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-22 08:44:37 -<==      Total: 8
2019-04-22 08:44:37 -==>  Preparing: select count(*) from elec_log 
2019-04-22 08:44:37 -==> Parameters: 
2019-04-22 08:44:37 -<==      Total: 1
2019-04-22 08:44:37 -耗时 : 257
2019-04-22 08:44:37 -返回值 : com.bootdo.common.utils.PageUtils@585c20cd
2019-04-22 08:44:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 08:44:46 -HTTP METHOD : GET
2019-04-22 08:44:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 08:44:46 -参数 : []
2019-04-22 08:44:46 -耗时 : 1
2019-04-22 08:44:46 -返回值 : system/dept/deptTree
2019-04-22 08:44:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 08:44:46 -HTTP METHOD : GET
2019-04-22 08:44:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 08:44:46 -参数 : []
2019-04-22 08:44:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 08:44:46 -==> Parameters: 
2019-04-22 08:44:46 -<==      Total: 3
2019-04-22 08:44:46 -耗时 : 17
2019-04-22 08:44:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 08:44:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 08:44:51 -HTTP METHOD : GET
2019-04-22 08:44:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 08:44:51 -参数 : []
2019-04-22 08:44:51 -耗时 : 0
2019-04-22 08:44:51 -返回值 : system/dept/deptTree
2019-04-22 08:44:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 08:44:51 -HTTP METHOD : GET
2019-04-22 08:44:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 08:44:51 -参数 : []
2019-04-22 08:44:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 08:44:51 -==> Parameters: 
2019-04-22 08:44:51 -<==      Total: 3
2019-04-22 08:44:51 -耗时 : 5
2019-04-22 08:44:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 08:44:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:44:59 -HTTP METHOD : POST
2019-04-22 08:44:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:44:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@48e17bad]
2019-04-22 08:44:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:44:59 -==> Parameters: 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String)
2019-04-22 08:44:59 -<==      Total: 3
2019-04-22 08:44:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:44:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:44:59.894(Timestamp)
2019-04-22 08:44:59 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:44:59 -<==    Updates: 1
2019-04-22 08:45:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:45:01 -HTTP METHOD : POST
2019-04-22 08:45:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:45:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@78fc332c]
2019-04-22 08:45:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:45:01 -==> Parameters: 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String)
2019-04-22 08:45:01 -<==      Total: 3
2019-04-22 08:45:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:45:01 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:45:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:45:01.268(Timestamp)
2019-04-22 08:45:01 -<==    Updates: 1
2019-04-22 08:45:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:45:50 -HTTP METHOD : POST
2019-04-22 08:45:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:45:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4f362627]
2019-04-22 08:45:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:45:50 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 08:45:50 -<==      Total: 3
2019-04-22 08:45:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:45:50 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:45:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:45:50.385(Timestamp)
2019-04-22 08:45:50 -<==    Updates: 1
2019-04-22 08:45:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:45:51 -HTTP METHOD : POST
2019-04-22 08:45:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:45:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1cbb6474]
2019-04-22 08:45:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:45:51 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 08:45:51 -<==      Total: 3
2019-04-22 08:45:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:45:51 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:45:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:45:51.516(Timestamp)
2019-04-22 08:45:51 -<==    Updates: 1
2019-04-22 08:45:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:45:52 -HTTP METHOD : POST
2019-04-22 08:45:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:45:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@316f7b0a]
2019-04-22 08:45:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:45:52 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 08:45:52 -<==      Total: 3
2019-04-22 08:45:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:45:52 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:45:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:45:52.437(Timestamp)
2019-04-22 08:45:52 -<==    Updates: 1
2019-04-22 08:45:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:45:53 -HTTP METHOD : POST
2019-04-22 08:45:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:45:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5629e743]
2019-04-22 08:45:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:45:53 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 08:45:53 -<==      Total: 3
2019-04-22 08:45:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:45:53 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 08:45:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 08:45:53.772(Timestamp)
2019-04-22 08:45:53 -<==    Updates: 1
2019-04-22 08:45:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 08:45:54 -HTTP METHOD : GET
2019-04-22 08:45:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 08:45:54 -参数 : []
2019-04-22 08:45:54 -耗时 : 1
2019-04-22 08:45:54 -返回值 : system/dept/deptTree
2019-04-22 08:45:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 08:45:54 -HTTP METHOD : GET
2019-04-22 08:45:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 08:45:54 -参数 : []
2019-04-22 08:45:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 08:45:54 -==> Parameters: 
2019-04-22 08:45:54 -<==      Total: 3
2019-04-22 08:45:54 -耗时 : 3
2019-04-22 08:45:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 08:48:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 9508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 08:48:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 08:48:49 -The following profiles are active: dev
2019-04-22 08:48:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Mon Apr 22 08:48:49 CST 2019]; root of context hierarchy
2019-04-22 08:48:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 08:48:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dd32a96e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cf8bd815] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 08:48:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 08:48:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:48:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 08:49:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 08:49:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 08:49:00 -Starting service [Tomcat]
2019-04-22 08:49:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 08:49:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 08:49:00 -Initializing Spring embedded WebApplicationContext
2019-04-22 08:49:00 -Root WebApplicationContext: initialization completed in 10862 ms
2019-04-22 08:49:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 08:49:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 08:49:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 08:49:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 08:49:01 -Filter xssFilter was not registered (disabled)
2019-04-22 08:49:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 08:49:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 08:49:01 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 08:49:01 -Servlet dispatcherServlet mapped to [/]
2019-04-22 08:50:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Mon Apr 22 08:48:49 CST 2019]; root of context hierarchy
2019-04-22 08:50:32 -Using default implementation for ThreadExecutor
2019-04-22 08:50:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 08:50:32 -Quartz Scheduler v.2.2.1 created.
2019-04-22 08:50:32 -RAMJobStore initialized.
2019-04-22 08:50:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 08:50:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 08:50:32 -Quartz scheduler version: 2.2.1
2019-04-22 08:50:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6604f246
2019-04-22 08:50:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 08:50:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 08:50:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 08:50:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 08:50:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 08:50:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 08:50:36 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 08:50:36 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 08:50:36 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 08:50:36 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 08:50:36 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 08:50:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 08:50:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 08:50:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 08:50:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 08:50:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 08:50:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 08:50:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 08:50:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 08:50:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 08:50:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 08:50:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 08:50:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 08:50:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 08:50:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 08:50:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 08:50:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 08:50:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 08:50:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 08:50:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 08:50:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 08:50:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 08:50:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 08:50:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 08:50:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 08:50:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 08:50:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 08:50:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 08:50:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 08:50:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 08:50:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 08:50:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 08:50:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 08:50:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:50:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 08:50:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:50:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 08:50:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 08:50:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 08:50:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 08:50:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 08:50:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 08:50:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 08:50:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 08:50:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 08:50:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 08:50:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 08:50:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 08:50:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 08:50:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 08:50:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 08:50:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 08:50:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 08:50:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 08:50:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 08:50:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 08:50:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 08:50:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 08:50:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 08:50:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 08:50:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 08:50:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 08:50:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 08:50:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 08:50:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 08:50:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 08:50:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 08:50:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 08:50:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 08:50:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 08:50:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 08:50:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 08:50:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 08:50:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 08:50:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 08:50:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 08:50:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 08:50:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 08:50:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 08:50:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 08:50:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 08:50:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 08:50:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 08:50:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 08:50:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:50:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Mon Apr 22 08:48:49 CST 2019]; root of context hierarchy
2019-04-22 08:50:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:50:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:50:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 08:50:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 08:50:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 08:50:42 -Registering beans for JMX exposure on startup
2019-04-22 08:50:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 08:50:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 08:50:42 -Starting beans in phase 2147483647
2019-04-22 08:50:42 -Context refreshed
2019-04-22 08:50:42 -Found 1 custom documentation plugin(s)
2019-04-22 08:50:42 -Scanning for api listing references
2019-04-22 08:50:42 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 08:50:42 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 08:50:42 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 08:50:42 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 08:50:42 -Generating unique operation named: removeUsingPOST_1
2019-04-22 08:50:43 -Generating unique operation named: addUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_2
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_3
2019-04-22 08:50:43 -Generating unique operation named: saveUsingPOST_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPUT_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 08:50:43 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 08:50:43 -Generating unique operation named: addUsingGET_2
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_2
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_2
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_4
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_5
2019-04-22 08:50:43 -Generating unique operation named: saveUsingPOST_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_2
2019-04-22 08:50:43 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: addUsingGET_3
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_3
2019-04-22 08:50:43 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_3
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_6
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_7
2019-04-22 08:50:43 -Generating unique operation named: saveUsingPOST_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingGET_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPUT_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 08:50:43 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 08:50:43 -Generating unique operation named: addUsingGET_4
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_4
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_4
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_8
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_9
2019-04-22 08:50:43 -Generating unique operation named: saveUsingPOST_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingGET_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPUT_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 08:50:43 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 08:50:43 -Generating unique operation named: ElecUsingGET_1
2019-04-22 08:50:43 -Generating unique operation named: addUsingGET_5
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_5
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_5
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_10
2019-04-22 08:50:43 -Generating unique operation named: removeUsingPOST_11
2019-04-22 08:50:43 -Generating unique operation named: saveUsingPOST_5
2019-04-22 08:50:43 -Generating unique operation named: updateUsingGET_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_5
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPUT_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 08:50:43 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 08:50:43 -Generating unique operation named: editUsingGET_6
2019-04-22 08:50:43 -Generating unique operation named: listUsingGET_6
2019-04-22 08:50:43 -Generating unique operation named: updateUsingPOST_6
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_6
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_7
2019-04-22 08:50:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_7
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_12
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_13
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingGET_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPUT_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 08:50:44 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 08:50:44 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_7
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_8
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_8
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_14
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_15
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingGET_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPUT_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 08:50:44 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_8
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_9
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_9
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_16
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_17
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingGET_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_9
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPUT_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 08:50:44 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_9
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_10
2019-04-22 08:50:44 -Generating unique operation named: infoUsingGET_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingPOST_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingPUT_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 08:50:44 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_10
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_18
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_19
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_9
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_10
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_11
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_20
2019-04-22 08:50:44 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_10
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_11
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_12
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_21
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_10
2019-04-22 08:50:44 -Generating unique operation named: treeUsingGET_1
2019-04-22 08:50:44 -Generating unique operation named: treeUsingGET_2
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_11
2019-04-22 08:50:44 -Generating unique operation named: addUsingGET_11
2019-04-22 08:50:44 -Generating unique operation named: editUsingGET_12
2019-04-22 08:50:44 -Generating unique operation named: listUsingGET_13
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_22
2019-04-22 08:50:44 -Generating unique operation named: removeUsingPOST_23
2019-04-22 08:50:44 -Generating unique operation named: saveUsingPOST_11
2019-04-22 08:50:44 -Generating unique operation named: updateUsingGET_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPOST_12
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPUT_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 08:50:44 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_12
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_13
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_14
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_24
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_25
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingGET_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_13
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPUT_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 08:50:45 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_13
2019-04-22 08:50:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_14
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_15
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_13
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_14
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_14
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_16
2019-04-22 08:50:45 -Generating unique operation named: listUsingHEAD_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingPOST_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingPUT_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingPATCH_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingDELETE_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingTRACE_1
2019-04-22 08:50:45 -Generating unique operation named: countDDUsingGET_1
2019-04-22 08:50:45 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 08:50:45 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 08:50:45 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 08:50:45 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_14
2019-04-22 08:50:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_15
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_17
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_26
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_15
2019-04-22 08:50:45 -Generating unique operation named: treeUsingGET_3
2019-04-22 08:50:45 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_15
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_15
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_16
2019-04-22 08:50:45 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_18
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_27
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_28
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_16
2019-04-22 08:50:45 -Generating unique operation named: updateUsingGET_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_16
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPUT_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 08:50:45 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 08:50:45 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_16
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_17
2019-04-22 08:50:45 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_19
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_29
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_30
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_17
2019-04-22 08:50:45 -Generating unique operation named: updateUsingGET_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_17
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPUT_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 08:50:45 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 08:50:45 -Generating unique operation named: addUsingGET_17
2019-04-22 08:50:45 -Generating unique operation named: editUsingGET_18
2019-04-22 08:50:45 -Generating unique operation named: listUsingGET_20
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_31
2019-04-22 08:50:45 -Generating unique operation named: removeUsingPOST_32
2019-04-22 08:50:45 -Generating unique operation named: saveUsingPOST_18
2019-04-22 08:50:45 -Generating unique operation named: updateUsingGET_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPOST_18
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPUT_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 08:50:45 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 08:50:45 -Starting Quartz Scheduler now
2019-04-22 08:50:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 08:50:45 -Starting...
2019-04-22 08:50:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 08:50:45 -Started.
2019-04-22 08:50:45 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 08:50:45 -Using a shared selector for servlet write/read
2019-04-22 08:50:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 08:50:46 -Started BootdoApplication in 119.881 seconds (JVM running for 124.085)
2019-04-22 08:50:46 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 08:50:46 -==> Parameters: 
2019-04-22 08:50:46 -<==      Total: 1
2019-04-22 08:50:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 08:50:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 08:50:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-04-22 08:50:59 -Enabling session validation scheduler...
2019-04-22 08:50:59 -请求地址 : http://localhost:8081/login;JSESSIONID=c1d5aa52-fe08-4453-b80c-09581aec5c10
2019-04-22 08:50:59 -HTTP METHOD : GET
2019-04-22 08:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 08:50:59 -参数 : [{}]
2019-04-22 08:50:59 -耗时 : 9
2019-04-22 08:50:59 -返回值 : login
2019-04-22 08:51:01 -请求地址 : http://localhost:8081/getVerify
2019-04-22 08:51:01 -HTTP METHOD : GET
2019-04-22 08:51:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 08:51:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3ec9070f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7983cd7]
2019-04-22 08:51:04 -3217
2019-04-22 08:51:04 -耗时 : 3237
2019-04-22 08:51:04 -返回值 : null
2019-04-22 08:51:04 -请求地址 : http://localhost:8081/login
2019-04-22 08:51:04 -HTTP METHOD : GET
2019-04-22 08:51:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 08:51:04 -参数 : [{}]
2019-04-22 08:51:04 -耗时 : 1
2019-04-22 08:51:04 -返回值 : login
2019-04-22 08:51:10 -请求地址 : http://localhost:8081/login
2019-04-22 08:51:10 -HTTP METHOD : POST
2019-04-22 08:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 08:51:10 -参数 : [admin, 111111, 3217, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ac2fe9f]
2019-04-22 08:51:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 08:51:10 -==> Parameters: admin(String)
2019-04-22 08:51:10 -<==      Total: 1
2019-04-22 08:51:10 -耗时 : 204
2019-04-22 08:51:10 -返回值 : {msg=操作成功, code=0}
2019-04-22 08:51:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 08:51:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:51:10 -==> Parameters: 1(Long), admin(String), 登录(String), 205(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 08:51:10.822(Timestamp)
2019-04-22 08:51:10 -请求地址 : http://localhost:8081/index
2019-04-22 08:51:10 -HTTP METHOD : GET
2019-04-22 08:51:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 08:51:10 -参数 : [{}]
2019-04-22 08:51:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 08:51:11 -<==    Updates: 1
2019-04-22 08:51:11 -==> Parameters: 1(Long)
2019-04-22 08:51:11 -<==      Total: 49
2019-04-22 08:51:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 08:51:11 -==> Parameters: 138(Long)
2019-04-22 08:51:11 -<==      Total: 1
2019-04-22 08:51:11 -耗时 : 628
2019-04-22 08:51:11 -返回值 : index_v1
2019-04-22 08:51:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 08:51:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 628(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 08:51:11.585(Timestamp)
2019-04-22 08:51:11 -请求地址 : http://localhost:8081/main
2019-04-22 08:51:11 -HTTP METHOD : GET
2019-04-22 08:51:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 08:51:11 -参数 : []
2019-04-22 08:51:11 -耗时 : 1
2019-04-22 08:51:11 -返回值 : main
2019-04-22 08:51:11 -<==    Updates: 1
2019-04-22 08:51:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 08:51:12 -HTTP METHOD : GET
2019-04-22 08:51:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 08:51:12 -参数 : []
2019-04-22 08:51:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 08:51:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 08:51:12 -请求地址 : http://localhost:8081/main
2019-04-22 08:51:12 -HTTP METHOD : GET
2019-04-22 08:51:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 08:51:12 -参数 : []
2019-04-22 08:51:12 -耗时 : 2
2019-04-22 08:51:12 -返回值 : main
2019-04-22 08:51:12 -<==      Total: 0
2019-04-22 08:51:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 08:51:12 -==> Parameters: 1(Long), 0(String)
2019-04-22 08:51:12 -<==      Total: 1
2019-04-22 08:51:12 -耗时 : 129
2019-04-22 08:51:12 -返回值 : com.bootdo.common.utils.PageUtils@68bece68
2019-04-22 08:51:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 08:51:18 -==> Parameters: 1(Long)
2019-04-22 08:51:18 -<==      Total: 93
2019-04-22 08:51:18 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 08:51:18 -HTTP METHOD : GET
2019-04-22 08:51:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 08:51:18 -参数 : []
2019-04-22 08:51:18 -耗时 : 1
2019-04-22 08:51:18 -返回值 : /moneyList/moneyList
2019-04-22 08:51:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 08:51:29 -HTTP METHOD : GET
2019-04-22 08:51:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 08:51:29 -参数 : []
2019-04-22 08:51:29 -耗时 : 1
2019-04-22 08:51:29 -返回值 : system/dept/deptTree
2019-04-22 08:51:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 08:51:29 -HTTP METHOD : GET
2019-04-22 08:51:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 08:51:29 -参数 : []
2019-04-22 08:51:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 08:51:29 -==> Parameters: 
2019-04-22 08:51:29 -<==      Total: 3
2019-04-22 08:51:29 -耗时 : 26
2019-04-22 08:51:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 08:51:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 08:51:33 -HTTP METHOD : POST
2019-04-22 08:51:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 08:51:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1b40a8bb]
2019-04-22 08:51:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-22 08:51:43 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 08:51:44 -==> Parameters: 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String)
2019-04-22 08:51:45 -<==      Total: 3
2019-04-22 09:00:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:00:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:00:35.552(Timestamp)
2019-04-22 09:00:35 -<==    Updates: 1
2019-04-22 09:00:35 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$877095c6.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:04:46 -请求地址 : http://localhost:8081/index
2019-04-22 09:04:46 -HTTP METHOD : GET
2019-04-22 09:04:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:04:46 -参数 : [{}]
2019-04-22 09:04:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:04:46 -==> Parameters: 1(Long)
2019-04-22 09:04:46 -<==      Total: 49
2019-04-22 09:04:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:04:46 -==> Parameters: 138(Long)
2019-04-22 09:04:46 -<==      Total: 1
2019-04-22 09:04:46 -耗时 : 271
2019-04-22 09:04:46 -返回值 : index_v1
2019-04-22 09:04:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:04:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 272(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:04:46.778(Timestamp)
2019-04-22 09:04:46 -<==    Updates: 1
2019-04-22 09:04:47 -请求地址 : http://localhost:8081/main
2019-04-22 09:04:47 -HTTP METHOD : GET
2019-04-22 09:04:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:04:47 -参数 : []
2019-04-22 09:04:47 -耗时 : 0
2019-04-22 09:04:47 -返回值 : main
2019-04-22 09:04:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:04:47 -HTTP METHOD : GET
2019-04-22 09:04:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:04:47 -参数 : []
2019-04-22 09:04:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:04:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:04:47 -<==      Total: 0
2019-04-22 09:04:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:04:47 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:04:47 -<==      Total: 1
2019-04-22 09:04:47 -耗时 : 11
2019-04-22 09:04:47 -返回值 : com.bootdo.common.utils.PageUtils@112e123f
2019-04-22 09:04:47 -请求地址 : http://localhost:8081/main
2019-04-22 09:04:47 -HTTP METHOD : GET
2019-04-22 09:04:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:04:47 -参数 : []
2019-04-22 09:04:47 -耗时 : 2
2019-04-22 09:04:47 -返回值 : main
2019-04-22 09:04:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 09:04:51 -==> Parameters: 1(Long)
2019-04-22 09:04:51 -<==      Total: 93
2019-04-22 09:04:51 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:04:51 -HTTP METHOD : GET
2019-04-22 09:04:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:04:51 -参数 : []
2019-04-22 09:04:51 -耗时 : 0
2019-04-22 09:04:51 -返回值 : /moneyList/moneyList
2019-04-22 09:04:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:04:58 -HTTP METHOD : GET
2019-04-22 09:04:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:04:58 -参数 : []
2019-04-22 09:04:58 -耗时 : 1
2019-04-22 09:04:58 -返回值 : system/dept/deptTree
2019-04-22 09:04:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:04:58 -HTTP METHOD : GET
2019-04-22 09:04:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:04:58 -参数 : []
2019-04-22 09:04:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:04:58 -==> Parameters: 
2019-04-22 09:04:58 -<==      Total: 3
2019-04-22 09:04:58 -耗时 : 5
2019-04-22 09:04:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:05:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:05:00 -HTTP METHOD : POST
2019-04-22 09:05:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:05:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1274f12e]
2019-04-22 09:05:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 09:05:18 -==> Parameters: 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String)
2019-04-22 09:05:18 -<==      Total: 3
2019-04-22 09:06:22 -请求地址 : http://localhost:8081/index
2019-04-22 09:06:22 -HTTP METHOD : GET
2019-04-22 09:06:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:06:22 -参数 : [{}]
2019-04-22 09:06:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:06:22 -==> Parameters: 1(Long)
2019-04-22 09:06:22 -<==      Total: 49
2019-04-22 09:06:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:06:22 -==> Parameters: 138(Long)
2019-04-22 09:06:22 -<==      Total: 1
2019-04-22 09:06:22 -耗时 : 38
2019-04-22 09:06:22 -返回值 : index_v1
2019-04-22 09:06:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:06:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:06:22.408(Timestamp)
2019-04-22 09:06:22 -<==    Updates: 1
2019-04-22 09:10:48 -请求地址 : http://localhost:8081/login;JSESSIONID=cb67b369-e543-4d2a-9f67-dcba03bbec89
2019-04-22 09:10:48 -HTTP METHOD : GET
2019-04-22 09:10:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:10:48 -参数 : [{}]
2019-04-22 09:10:48 -耗时 : 0
2019-04-22 09:10:48 -返回值 : login
2019-04-22 09:10:49 -请求地址 : http://localhost:8081/getVerify
2019-04-22 09:10:49 -HTTP METHOD : GET
2019-04-22 09:10:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 09:10:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38e09689, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ea71b82]
2019-04-22 09:10:49 -3989
2019-04-22 09:10:49 -耗时 : 17
2019-04-22 09:10:49 -返回值 : null
2019-04-22 09:10:50 -请求地址 : http://localhost:8081/login
2019-04-22 09:10:50 -HTTP METHOD : GET
2019-04-22 09:10:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:10:50 -参数 : [{}]
2019-04-22 09:10:50 -耗时 : 0
2019-04-22 09:10:50 -返回值 : login
2019-04-22 09:11:00 -请求地址 : http://localhost:8081/login
2019-04-22 09:11:00 -HTTP METHOD : POST
2019-04-22 09:11:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 09:11:00 -参数 : [admin, 111111, 3989, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2eada107]
2019-04-22 09:11:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 09:11:00 -==> Parameters: admin(String)
2019-04-22 09:11:00 -<==      Total: 1
2019-04-22 09:11:00 -耗时 : 140
2019-04-22 09:11:00 -返回值 : {msg=操作成功, code=0}
2019-04-22 09:11:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:11:00 -==> Parameters: 1(Long), admin(String), 登录(String), 140(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 09:11:00.483(Timestamp)
2019-04-22 09:11:00 -<==    Updates: 1
2019-04-22 09:11:01 -请求地址 : http://localhost:8081/index
2019-04-22 09:11:01 -HTTP METHOD : GET
2019-04-22 09:11:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:11:01 -参数 : [{}]
2019-04-22 09:11:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:11:01 -==> Parameters: 1(Long)
2019-04-22 09:11:01 -<==      Total: 49
2019-04-22 09:11:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:11:01 -==> Parameters: 138(Long)
2019-04-22 09:11:01 -<==      Total: 1
2019-04-22 09:11:01 -耗时 : 19
2019-04-22 09:11:01 -返回值 : index_v1
2019-04-22 09:11:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:11:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:11:01.312(Timestamp)
2019-04-22 09:11:01 -<==    Updates: 1
2019-04-22 09:11:02 -请求地址 : http://localhost:8081/main
2019-04-22 09:11:02 -HTTP METHOD : GET
2019-04-22 09:11:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:11:02 -参数 : []
2019-04-22 09:11:02 -耗时 : 1
2019-04-22 09:11:02 -返回值 : main
2019-04-22 09:11:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:11:05 -HTTP METHOD : GET
2019-04-22 09:11:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:11:05 -参数 : []
2019-04-22 09:11:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:11:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:11:06 -<==      Total: 0
2019-04-22 09:11:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:11:06 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:11:06 -<==      Total: 1
2019-04-22 09:11:06 -耗时 : 74
2019-04-22 09:11:06 -返回值 : com.bootdo.common.utils.PageUtils@6f58335d
2019-04-22 09:11:06 -请求地址 : http://localhost:8081/main
2019-04-22 09:11:06 -HTTP METHOD : GET
2019-04-22 09:11:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:11:06 -参数 : []
2019-04-22 09:11:06 -耗时 : 1
2019-04-22 09:11:06 -返回值 : main
2019-04-22 09:11:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 09:11:15 -==> Parameters: 1(Long)
2019-04-22 09:11:15 -<==      Total: 93
2019-04-22 09:11:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:11:15 -HTTP METHOD : GET
2019-04-22 09:11:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:11:15 -参数 : []
2019-04-22 09:11:15 -耗时 : 0
2019-04-22 09:11:15 -返回值 : /moneyList/moneyList
2019-04-22 09:11:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:11:23 -HTTP METHOD : GET
2019-04-22 09:11:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:11:23 -参数 : []
2019-04-22 09:11:23 -耗时 : 0
2019-04-22 09:11:23 -返回值 : system/dept/deptTree
2019-04-22 09:11:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:11:23 -HTTP METHOD : GET
2019-04-22 09:11:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:11:23 -参数 : []
2019-04-22 09:11:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:11:23 -==> Parameters: 
2019-04-22 09:11:23 -<==      Total: 3
2019-04-22 09:11:23 -耗时 : 9
2019-04-22 09:11:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:11:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:11:25 -HTTP METHOD : POST
2019-04-22 09:11:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:11:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c89036b]
2019-04-22 09:11:30 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$877095c6.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:11:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:11:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:11:30.68(Timestamp)
2019-04-22 09:11:30 -<==    Updates: 1
2019-04-22 09:11:37 -请求地址 : http://localhost:8081/index
2019-04-22 09:11:37 -HTTP METHOD : GET
2019-04-22 09:11:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:11:37 -参数 : [{}]
2019-04-22 09:11:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:11:37 -==> Parameters: 1(Long)
2019-04-22 09:11:37 -<==      Total: 49
2019-04-22 09:11:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:11:37 -==> Parameters: 138(Long)
2019-04-22 09:11:37 -<==      Total: 1
2019-04-22 09:11:37 -耗时 : 41
2019-04-22 09:11:37 -返回值 : index_v1
2019-04-22 09:11:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:11:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:11:37.344(Timestamp)
2019-04-22 09:11:37 -<==    Updates: 1
2019-04-22 09:12:12 -请求地址 : http://localhost:8081/index
2019-04-22 09:12:12 -HTTP METHOD : GET
2019-04-22 09:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:12:12 -参数 : [{}]
2019-04-22 09:12:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:12:12 -==> Parameters: 1(Long)
2019-04-22 09:12:12 -<==      Total: 49
2019-04-22 09:12:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:12:12 -==> Parameters: 138(Long)
2019-04-22 09:12:12 -<==      Total: 1
2019-04-22 09:12:12 -耗时 : 25
2019-04-22 09:12:12 -返回值 : index_v1
2019-04-22 09:12:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:12:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:12:12.268(Timestamp)
2019-04-22 09:12:12 -<==    Updates: 1
2019-04-22 09:12:12 -请求地址 : http://localhost:8081/main
2019-04-22 09:12:12 -HTTP METHOD : GET
2019-04-22 09:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:12:12 -参数 : []
2019-04-22 09:12:12 -耗时 : 1
2019-04-22 09:12:12 -返回值 : main
2019-04-22 09:12:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:12:12 -HTTP METHOD : GET
2019-04-22 09:12:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:12:12 -参数 : []
2019-04-22 09:12:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:12:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:12:12 -<==      Total: 0
2019-04-22 09:12:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:12:12 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:12:12 -<==      Total: 1
2019-04-22 09:12:12 -耗时 : 8
2019-04-22 09:12:12 -返回值 : com.bootdo.common.utils.PageUtils@6efbfeb9
2019-04-22 09:12:12 -请求地址 : http://localhost:8081/main
2019-04-22 09:12:12 -HTTP METHOD : GET
2019-04-22 09:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:12:12 -参数 : []
2019-04-22 09:12:12 -耗时 : 1
2019-04-22 09:12:12 -返回值 : main
2019-04-22 09:12:18 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:12:18 -HTTP METHOD : GET
2019-04-22 09:12:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:12:18 -参数 : []
2019-04-22 09:12:18 -耗时 : 0
2019-04-22 09:12:18 -返回值 : /moneyList/moneyList
2019-04-22 09:12:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:12:23 -HTTP METHOD : GET
2019-04-22 09:12:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:12:23 -参数 : []
2019-04-22 09:12:23 -耗时 : 1
2019-04-22 09:12:23 -返回值 : system/dept/deptTree
2019-04-22 09:12:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:12:23 -HTTP METHOD : GET
2019-04-22 09:12:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:12:23 -参数 : []
2019-04-22 09:12:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:12:23 -==> Parameters: 
2019-04-22 09:12:23 -<==      Total: 3
2019-04-22 09:12:23 -耗时 : 4
2019-04-22 09:12:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:12:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:12:26 -HTTP METHOD : POST
2019-04-22 09:12:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:12:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3532f9f3]
2019-04-22 09:12:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 09:12:36 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 09:12:36 -<==      Total: 3
2019-04-22 09:13:03 -请求地址 : http://localhost:8081/index
2019-04-22 09:13:03 -HTTP METHOD : GET
2019-04-22 09:13:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:13:03 -参数 : [{}]
2019-04-22 09:13:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:13:03 -==> Parameters: 1(Long)
2019-04-22 09:13:03 -<==      Total: 49
2019-04-22 09:13:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:13:03 -==> Parameters: 138(Long)
2019-04-22 09:13:03 -<==      Total: 1
2019-04-22 09:13:03 -耗时 : 35
2019-04-22 09:13:03 -返回值 : index_v1
2019-04-22 09:13:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:13:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:13:03.619(Timestamp)
2019-04-22 09:13:03 -<==    Updates: 1
2019-04-22 09:13:03 -请求地址 : http://localhost:8081/main
2019-04-22 09:13:03 -HTTP METHOD : GET
2019-04-22 09:13:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:13:03 -参数 : []
2019-04-22 09:13:03 -耗时 : 1
2019-04-22 09:13:03 -返回值 : main
2019-04-22 09:13:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:13:03 -HTTP METHOD : GET
2019-04-22 09:13:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:13:03 -参数 : []
2019-04-22 09:13:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:13:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:13:04 -<==      Total: 0
2019-04-22 09:13:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:13:04 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:13:04 -<==      Total: 1
2019-04-22 09:13:04 -耗时 : 8
2019-04-22 09:13:04 -返回值 : com.bootdo.common.utils.PageUtils@54d90636
2019-04-22 09:13:04 -请求地址 : http://localhost:8081/main
2019-04-22 09:13:04 -HTTP METHOD : GET
2019-04-22 09:13:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:13:04 -参数 : []
2019-04-22 09:13:04 -耗时 : 0
2019-04-22 09:13:04 -返回值 : main
2019-04-22 09:13:07 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:13:07 -HTTP METHOD : GET
2019-04-22 09:13:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:13:07 -参数 : []
2019-04-22 09:13:07 -耗时 : 1
2019-04-22 09:13:07 -返回值 : /moneyList/moneyList
2019-04-22 09:13:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:13:12 -HTTP METHOD : GET
2019-04-22 09:13:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:13:12 -参数 : []
2019-04-22 09:13:12 -耗时 : 1
2019-04-22 09:13:12 -返回值 : system/dept/deptTree
2019-04-22 09:13:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:13:12 -HTTP METHOD : GET
2019-04-22 09:13:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:13:12 -参数 : []
2019-04-22 09:13:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:13:12 -==> Parameters: 
2019-04-22 09:13:12 -<==      Total: 3
2019-04-22 09:13:12 -耗时 : 5
2019-04-22 09:13:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:13:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:13:15 -HTTP METHOD : POST
2019-04-22 09:13:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:13:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3791df12]
2019-04-22 09:15:37 -请求地址 : http://localhost:8081/index
2019-04-22 09:15:37 -HTTP METHOD : GET
2019-04-22 09:15:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:15:37 -参数 : [{}]
2019-04-22 09:15:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:15:37 -==> Parameters: 1(Long)
2019-04-22 09:15:37 -<==      Total: 49
2019-04-22 09:15:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:15:37 -==> Parameters: 138(Long)
2019-04-22 09:15:37 -<==      Total: 1
2019-04-22 09:15:37 -耗时 : 27
2019-04-22 09:15:37 -返回值 : index_v1
2019-04-22 09:15:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:15:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:15:37.94(Timestamp)
2019-04-22 09:15:38 -<==    Updates: 1
2019-04-22 09:15:38 -请求地址 : http://localhost:8081/index
2019-04-22 09:15:38 -HTTP METHOD : GET
2019-04-22 09:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:15:38 -参数 : [{}]
2019-04-22 09:15:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:15:38 -==> Parameters: 1(Long)
2019-04-22 09:15:38 -<==      Total: 49
2019-04-22 09:15:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:15:38 -==> Parameters: 138(Long)
2019-04-22 09:15:38 -<==      Total: 1
2019-04-22 09:15:38 -耗时 : 61
2019-04-22 09:15:38 -返回值 : index_v1
2019-04-22 09:15:38 -请求地址 : http://localhost:8081/main
2019-04-22 09:15:38 -HTTP METHOD : GET
2019-04-22 09:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:15:38 -参数 : []
2019-04-22 09:15:38 -耗时 : 1
2019-04-22 09:15:38 -返回值 : main
2019-04-22 09:15:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:15:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 61(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:15:38.262(Timestamp)
2019-04-22 09:15:38 -<==    Updates: 1
2019-04-22 09:15:38 -请求地址 : http://localhost:8081/main
2019-04-22 09:15:38 -HTTP METHOD : GET
2019-04-22 09:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:15:38 -参数 : []
2019-04-22 09:15:38 -耗时 : 1
2019-04-22 09:15:38 -返回值 : main
2019-04-22 09:15:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:15:38 -HTTP METHOD : GET
2019-04-22 09:15:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:15:38 -参数 : []
2019-04-22 09:15:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:15:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:15:38 -<==      Total: 0
2019-04-22 09:15:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:15:38 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:15:38 -<==      Total: 1
2019-04-22 09:15:38 -耗时 : 7
2019-04-22 09:15:38 -返回值 : com.bootdo.common.utils.PageUtils@2af495ae
2019-04-22 09:15:38 -请求地址 : http://localhost:8081/main
2019-04-22 09:15:38 -HTTP METHOD : GET
2019-04-22 09:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:15:38 -参数 : []
2019-04-22 09:15:38 -耗时 : 0
2019-04-22 09:15:38 -返回值 : main
2019-04-22 09:16:14 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-22 09:16:14 -HTTP METHOD : GET
2019-04-22 09:16:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-22 09:16:14 -参数 : []
2019-04-22 09:16:14 -耗时 : 20
2019-04-22 09:16:14 -返回值 : charts/tableDD
2019-04-22 09:16:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 09:16:16 -HTTP METHOD : GET
2019-04-22 09:16:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 09:16:16 -参数 : []
2019-04-22 09:16:16 -耗时 : 19
2019-04-22 09:16:16 -返回值 : charts/tableElecMM
2019-04-22 09:16:17 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 09:16:17 -HTTP METHOD : GET
2019-04-22 09:16:17 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 09:16:17 -参数 : []
2019-04-22 09:16:17 -耗时 : 1
2019-04-22 09:16:17 -返回值 : charts/countYY
2019-04-22 09:16:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 09:16:18 -HTTP METHOD : GET
2019-04-22 09:16:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 09:16:18 -参数 : [userType]
2019-04-22 09:16:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 09:16:18 -==> Parameters: userType(String)
2019-04-22 09:16:18 -<==      Total: 4
2019-04-22 09:16:18 -耗时 : 209
2019-04-22 09:16:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 09:16:19 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 09:16:19 -HTTP METHOD : GET
2019-04-22 09:16:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 09:16:19 -参数 : []
2019-04-22 09:16:19 -耗时 : 19
2019-04-22 09:16:19 -返回值 : charts/tableElecYY
2019-04-22 09:17:06 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 09:17:06 -HTTP METHOD : GET
2019-04-22 09:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 09:17:06 -参数 : []
2019-04-22 09:17:06 -耗时 : 19
2019-04-22 09:17:06 -返回值 : charts/tableHeatYY
2019-04-22 09:17:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 09:17:07 -HTTP METHOD : GET
2019-04-22 09:17:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 09:17:07 -参数 : []
2019-04-22 09:17:07 -耗时 : 18
2019-04-22 09:17:07 -返回值 : charts/tableWaterYY
2019-04-22 09:17:08 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 09:17:08 -HTTP METHOD : GET
2019-04-22 09:17:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 09:17:08 -参数 : []
2019-04-22 09:17:08 -耗时 : 0
2019-04-22 09:17:08 -返回值 : charts/tableHeatYY
2019-04-22 09:17:08 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 09:17:08 -HTTP METHOD : GET
2019-04-22 09:17:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 09:17:08 -参数 : []
2019-04-22 09:17:08 -耗时 : 0
2019-04-22 09:17:08 -返回值 : charts/tableElecYY
2019-04-22 09:21:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-04-22 09:37:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 12140 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 09:37:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 09:37:38 -The following profiles are active: dev
2019-04-22 09:37:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:37:38 CST 2019]; root of context hierarchy
2019-04-22 09:37:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 09:37:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7d81ac79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6fdadb20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 09:37:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 09:37:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:37:47 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 09:37:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 09:37:47 -Starting service [Tomcat]
2019-04-22 09:37:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 09:37:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 09:37:47 -Initializing Spring embedded WebApplicationContext
2019-04-22 09:37:47 -Root WebApplicationContext: initialization completed in 8720 ms
2019-04-22 09:37:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 09:37:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 09:37:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 09:37:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 09:37:48 -Filter xssFilter was not registered (disabled)
2019-04-22 09:37:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 09:37:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 09:37:48 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 09:37:48 -Servlet dispatcherServlet mapped to [/]
2019-04-22 09:37:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:37:38 CST 2019]; root of context hierarchy
2019-04-22 09:37:52 -Using default implementation for ThreadExecutor
2019-04-22 09:37:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 09:37:52 -Quartz Scheduler v.2.2.1 created.
2019-04-22 09:37:52 -RAMJobStore initialized.
2019-04-22 09:37:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 09:37:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 09:37:52 -Quartz scheduler version: 2.2.1
2019-04-22 09:37:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3ef3f661
2019-04-22 09:37:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 09:37:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 09:37:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 09:37:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 09:37:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 09:37:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 09:37:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 09:37:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 09:37:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 09:37:55 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 09:37:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 09:37:55 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 09:37:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 09:37:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 09:37:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 09:37:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 09:37:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 09:37:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 09:37:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 09:37:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 09:37:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 09:37:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 09:37:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 09:37:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 09:37:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 09:37:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 09:37:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 09:37:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 09:37:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 09:37:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 09:37:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 09:37:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 09:37:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 09:37:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 09:37:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 09:37:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 09:37:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 09:37:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 09:37:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 09:37:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 09:37:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 09:37:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 09:37:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 09:37:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 09:37:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 09:37:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:37:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 09:37:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:37:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 09:37:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 09:37:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 09:37:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 09:37:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 09:37:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 09:37:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 09:37:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 09:37:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 09:37:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 09:37:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 09:37:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 09:37:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 09:37:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 09:37:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 09:37:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 09:37:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 09:37:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 09:37:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 09:37:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 09:37:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 09:37:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 09:37:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 09:37:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 09:37:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 09:37:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 09:37:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 09:37:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 09:37:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 09:37:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 09:37:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 09:37:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 09:37:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 09:37:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 09:37:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 09:37:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:37:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 09:37:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 09:37:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 09:37:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 09:37:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:37:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:37:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 09:37:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 09:37:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 09:37:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 09:37:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 09:37:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 09:37:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:37:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:37:38 CST 2019]; root of context hierarchy
2019-04-22 09:37:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:37:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:37:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:37:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 09:37:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 09:37:59 -Registering beans for JMX exposure on startup
2019-04-22 09:37:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 09:37:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 09:37:59 -Starting beans in phase 2147483647
2019-04-22 09:37:59 -Context refreshed
2019-04-22 09:37:59 -Found 1 custom documentation plugin(s)
2019-04-22 09:37:59 -Scanning for api listing references
2019-04-22 09:37:59 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 09:37:59 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 09:37:59 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 09:37:59 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_1
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_2
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_3
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_4
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_5
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_2
2019-04-22 09:38:00 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_3
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_3
2019-04-22 09:38:00 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_3
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_6
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_7
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_4
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_4
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_4
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_8
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_9
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 09:38:00 -Generating unique operation named: ElecUsingGET_1
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_5
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_5
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_5
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_10
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_11
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_6
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_6
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_6
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_7
2019-04-22 09:38:00 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_7
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_12
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_13
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_7
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 09:38:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_7
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_8
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_8
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_14
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_15
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_7
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_8
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 09:38:00 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 09:38:00 -Generating unique operation named: addUsingGET_8
2019-04-22 09:38:00 -Generating unique operation named: editUsingGET_9
2019-04-22 09:38:00 -Generating unique operation named: listUsingGET_9
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_16
2019-04-22 09:38:00 -Generating unique operation named: removeUsingPOST_17
2019-04-22 09:38:00 -Generating unique operation named: saveUsingPOST_8
2019-04-22 09:38:00 -Generating unique operation named: updateUsingGET_7
2019-04-22 09:38:00 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPOST_9
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPUT_7
2019-04-22 09:38:00 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_9
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_10
2019-04-22 09:38:01 -Generating unique operation named: infoUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingPOST_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingPUT_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 09:38:01 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_10
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_18
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_19
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_10
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_11
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_20
2019-04-22 09:38:01 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_10
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_11
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_12
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_21
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_10
2019-04-22 09:38:01 -Generating unique operation named: treeUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: treeUsingGET_2
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_11
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_11
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_12
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_13
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_22
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_23
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingGET_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPUT_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_12
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_13
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_14
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_24
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_25
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingGET_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_13
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPUT_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_13
2019-04-22 09:38:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_14
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_15
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_13
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_14
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_14
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_16
2019-04-22 09:38:01 -Generating unique operation named: listUsingHEAD_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingPOST_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingPUT_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingPATCH_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingDELETE_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingTRACE_1
2019-04-22 09:38:01 -Generating unique operation named: countDDUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 09:38:01 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 09:38:01 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 09:38:01 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_14
2019-04-22 09:38:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_15
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_17
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_26
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_15
2019-04-22 09:38:01 -Generating unique operation named: treeUsingGET_3
2019-04-22 09:38:01 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_15
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_15
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_16
2019-04-22 09:38:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_18
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_27
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_28
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_16
2019-04-22 09:38:01 -Generating unique operation named: updateUsingGET_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_16
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPUT_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 09:38:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_16
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_17
2019-04-22 09:38:01 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_19
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_29
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_30
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_17
2019-04-22 09:38:01 -Generating unique operation named: updateUsingGET_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_17
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPUT_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 09:38:01 -Generating unique operation named: addUsingGET_17
2019-04-22 09:38:01 -Generating unique operation named: editUsingGET_18
2019-04-22 09:38:01 -Generating unique operation named: listUsingGET_20
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_31
2019-04-22 09:38:01 -Generating unique operation named: removeUsingPOST_32
2019-04-22 09:38:01 -Generating unique operation named: saveUsingPOST_18
2019-04-22 09:38:01 -Generating unique operation named: updateUsingGET_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPOST_18
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPUT_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 09:38:01 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 09:38:02 -Starting Quartz Scheduler now
2019-04-22 09:38:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 09:38:02 -Starting...
2019-04-22 09:38:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 09:38:02 -Started.
2019-04-22 09:38:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 09:38:02 -Using a shared selector for servlet write/read
2019-04-22 09:38:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 09:38:02 -Started BootdoApplication in 24.527 seconds (JVM running for 25.348)
2019-04-22 09:38:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 09:38:02 -==> Parameters: 
2019-04-22 09:38:02 -<==      Total: 1
2019-04-22 09:38:53 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 09:38:53 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 09:38:53 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-04-22 09:38:53 -Enabling session validation scheduler...
2019-04-22 09:38:53 -请求地址 : http://localhost:8081/login;JSESSIONID=8d4a029a-9431-4d4b-bf70-58d21c95833c
2019-04-22 09:38:53 -HTTP METHOD : GET
2019-04-22 09:38:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:38:53 -参数 : [{}]
2019-04-22 09:38:53 -耗时 : 4
2019-04-22 09:38:53 -返回值 : login
2019-04-22 09:38:55 -请求地址 : http://localhost:8081/getVerify
2019-04-22 09:38:55 -HTTP METHOD : GET
2019-04-22 09:38:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 09:38:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@da132f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@45d89d50]
2019-04-22 09:38:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-22 09:39:05 -8589
2019-04-22 09:39:05 -耗时 : 9760
2019-04-22 09:39:05 -返回值 : null
2019-04-22 09:39:05 -请求地址 : http://localhost:8081/login
2019-04-22 09:39:05 -HTTP METHOD : GET
2019-04-22 09:39:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:39:05 -参数 : [{}]
2019-04-22 09:39:05 -耗时 : 0
2019-04-22 09:39:05 -返回值 : login
2019-04-22 09:39:12 -请求地址 : http://localhost:8081/login
2019-04-22 09:39:12 -HTTP METHOD : POST
2019-04-22 09:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 09:39:12 -参数 : [admin, 111111, 8589, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43cc2459]
2019-04-22 09:39:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 09:39:12 -==> Parameters: admin(String)
2019-04-22 09:39:12 -<==      Total: 1
2019-04-22 09:39:12 -耗时 : 226
2019-04-22 09:39:12 -返回值 : {msg=操作成功, code=0}
2019-04-22 09:39:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 09:39:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:39:12 -==> Parameters: 1(Long), admin(String), 登录(String), 226(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 09:39:12.754(Timestamp)
2019-04-22 09:39:13 -<==    Updates: 1
2019-04-22 09:39:13 -请求地址 : http://localhost:8081/index
2019-04-22 09:39:13 -HTTP METHOD : GET
2019-04-22 09:39:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:39:13 -参数 : [{}]
2019-04-22 09:39:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:39:13 -==> Parameters: 1(Long)
2019-04-22 09:39:13 -<==      Total: 49
2019-04-22 09:39:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:39:13 -==> Parameters: 138(Long)
2019-04-22 09:39:13 -<==      Total: 1
2019-04-22 09:39:13 -耗时 : 256
2019-04-22 09:39:13 -返回值 : index_v1
2019-04-22 09:39:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:39:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 256(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:39:13.382(Timestamp)
2019-04-22 09:39:13 -<==    Updates: 1
2019-04-22 09:39:13 -请求地址 : http://localhost:8081/main
2019-04-22 09:39:13 -HTTP METHOD : GET
2019-04-22 09:39:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:39:13 -参数 : []
2019-04-22 09:39:13 -耗时 : 10
2019-04-22 09:39:13 -返回值 : main
2019-04-22 09:39:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:39:13 -HTTP METHOD : GET
2019-04-22 09:39:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:39:13 -参数 : []
2019-04-22 09:39:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:39:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:39:13 -<==      Total: 0
2019-04-22 09:39:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:39:13 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:39:13 -<==      Total: 1
2019-04-22 09:39:13 -耗时 : 83
2019-04-22 09:39:13 -返回值 : com.bootdo.common.utils.PageUtils@77e4be2b
2019-04-22 09:39:13 -请求地址 : http://localhost:8081/main
2019-04-22 09:39:13 -HTTP METHOD : GET
2019-04-22 09:39:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:39:13 -参数 : []
2019-04-22 09:39:13 -耗时 : 1
2019-04-22 09:39:13 -返回值 : main
2019-04-22 09:39:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 09:39:16 -==> Parameters: 1(Long)
2019-04-22 09:39:16 -<==      Total: 93
2019-04-22 09:39:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:39:16 -HTTP METHOD : GET
2019-04-22 09:39:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:39:16 -参数 : []
2019-04-22 09:39:16 -耗时 : 0
2019-04-22 09:39:16 -返回值 : /moneyList/moneyList
2019-04-22 09:39:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:39:24 -HTTP METHOD : GET
2019-04-22 09:39:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:39:24 -参数 : []
2019-04-22 09:39:24 -耗时 : 1
2019-04-22 09:39:24 -返回值 : system/dept/deptTree
2019-04-22 09:39:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:39:24 -HTTP METHOD : GET
2019-04-22 09:39:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:39:24 -参数 : []
2019-04-22 09:39:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:39:24 -==> Parameters: 
2019-04-22 09:39:24 -<==      Total: 3
2019-04-22 09:39:24 -耗时 : 24
2019-04-22 09:39:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:39:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:39:27 -HTTP METHOD : POST
2019-04-22 09:39:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:39:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@145930dc]
2019-04-22 09:39:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 09:39:27 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 09:39:27 -<==      Total: 3
2019-04-22 09:39:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:39:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:39:27.795(Timestamp)
2019-04-22 09:39:27 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$50afe5cb.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:39:27 -<==    Updates: 1
2019-04-22 09:39:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:39:29 -HTTP METHOD : POST
2019-04-22 09:39:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:39:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20010e45]
2019-04-22 09:39:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 09:39:29 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 09:39:29 -<==      Total: 3
2019-04-22 09:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:39:29 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$50afe5cb.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:39:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:39:29.134(Timestamp)
2019-04-22 09:39:29 -<==    Updates: 1
2019-04-22 09:39:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:39:29 -HTTP METHOD : POST
2019-04-22 09:39:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:39:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7cfd47a0]
2019-04-22 09:39:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 09:39:29 -==> Parameters: 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String)
2019-04-22 09:39:29 -<==      Total: 3
2019-04-22 09:39:29 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$50afe5cb.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:39:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:39:29.512(Timestamp)
2019-04-22 09:39:29 -<==    Updates: 1
2019-04-22 09:41:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-22 09:41:37 -HTTP METHOD : GET
2019-04-22 09:41:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-22 09:41:37 -参数 : []
2019-04-22 09:41:37 -耗时 : 13
2019-04-22 09:41:37 -返回值 : charts/tableDD
2019-04-22 09:41:40 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 09:41:40 -HTTP METHOD : GET
2019-04-22 09:41:40 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 09:41:40 -参数 : []
2019-04-22 09:41:40 -耗时 : 13
2019-04-22 09:41:40 -返回值 : charts/countMM
2019-04-22 09:41:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 09:41:40 -HTTP METHOD : GET
2019-04-22 09:41:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 09:41:40 -参数 : [userType]
2019-04-22 09:41:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 09:41:40 -==> Parameters: userType(String)
2019-04-22 09:41:40 -<==      Total: 4
2019-04-22 09:41:40 -耗时 : 148
2019-04-22 09:41:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 09:41:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 09:41:41 -HTTP METHOD : GET
2019-04-22 09:41:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 09:41:41 -参数 : []
2019-04-22 09:41:41 -耗时 : 9
2019-04-22 09:41:41 -返回值 : charts/tableElecMM
2019-04-22 09:41:42 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 09:41:42 -HTTP METHOD : GET
2019-04-22 09:41:42 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 09:41:42 -参数 : []
2019-04-22 09:41:42 -耗时 : 1
2019-04-22 09:41:42 -返回值 : charts/countYY
2019-04-22 09:41:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 09:41:42 -HTTP METHOD : GET
2019-04-22 09:41:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 09:41:42 -参数 : [userType]
2019-04-22 09:41:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 09:41:42 -==> Parameters: userType(String)
2019-04-22 09:41:42 -<==      Total: 4
2019-04-22 09:41:42 -耗时 : 5
2019-04-22 09:41:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 09:41:43 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 09:41:43 -HTTP METHOD : GET
2019-04-22 09:41:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 09:41:43 -参数 : []
2019-04-22 09:41:43 -耗时 : 12
2019-04-22 09:41:43 -返回值 : charts/tableElecYY
2019-04-22 09:54:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 13048 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 09:54:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 09:54:52 -The following profiles are active: dev
2019-04-22 09:54:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:54:52 CST 2019]; root of context hierarchy
2019-04-22 09:54:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 09:54:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$16ae8ea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$907bd4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 09:54:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 09:54:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:54:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 09:55:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 09:55:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 09:55:00 -Starting service [Tomcat]
2019-04-22 09:55:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 09:55:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 09:55:00 -Initializing Spring embedded WebApplicationContext
2019-04-22 09:55:00 -Root WebApplicationContext: initialization completed in 7914 ms
2019-04-22 09:55:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 09:55:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 09:55:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 09:55:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 09:55:01 -Filter xssFilter was not registered (disabled)
2019-04-22 09:55:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 09:55:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 09:55:01 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 09:55:01 -Servlet dispatcherServlet mapped to [/]
2019-04-22 09:55:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:54:52 CST 2019]; root of context hierarchy
2019-04-22 09:55:04 -Using default implementation for ThreadExecutor
2019-04-22 09:55:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 09:55:05 -Quartz Scheduler v.2.2.1 created.
2019-04-22 09:55:05 -RAMJobStore initialized.
2019-04-22 09:55:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 09:55:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 09:55:05 -Quartz scheduler version: 2.2.1
2019-04-22 09:55:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-22 09:55:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 09:55:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 09:55:08 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 09:55:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 09:55:08 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 09:55:08 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 09:55:08 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 09:55:08 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 09:55:08 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 09:55:08 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 09:55:08 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 09:55:08 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 09:55:08 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 09:55:08 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 09:55:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 09:55:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 09:55:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 09:55:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 09:55:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 09:55:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 09:55:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 09:55:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 09:55:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 09:55:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 09:55:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 09:55:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 09:55:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 09:55:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 09:55:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 09:55:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 09:55:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 09:55:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 09:55:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 09:55:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 09:55:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 09:55:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 09:55:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 09:55:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 09:55:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 09:55:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 09:55:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 09:55:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 09:55:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 09:55:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 09:55:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 09:55:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:55:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:55:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 09:55:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 09:55:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 09:55:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 09:55:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 09:55:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 09:55:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 09:55:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 09:55:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 09:55:08 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 09:55:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 09:55:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 09:55:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 09:55:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 09:55:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 09:55:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 09:55:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 09:55:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 09:55:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 09:55:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 09:55:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 09:55:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 09:55:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 09:55:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 09:55:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 09:55:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 09:55:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 09:55:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 09:55:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 09:55:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 09:55:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 09:55:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 09:55:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 09:55:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 09:55:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 09:55:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 09:55:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 09:55:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 09:55:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 09:55:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 09:55:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 09:55:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 09:55:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 09:55:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 09:55:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 09:55:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 09:55:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 09:55:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 09:55:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 09:55:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:55:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 09:54:52 CST 2019]; root of context hierarchy
2019-04-22 09:55:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:55:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:55:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 09:55:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 09:55:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 09:55:11 -Registering beans for JMX exposure on startup
2019-04-22 09:55:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 09:55:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 09:55:11 -Starting beans in phase 2147483647
2019-04-22 09:55:11 -Context refreshed
2019-04-22 09:55:12 -Found 1 custom documentation plugin(s)
2019-04-22 09:55:12 -Scanning for api listing references
2019-04-22 09:55:12 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 09:55:12 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 09:55:12 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 09:55:12 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 09:55:12 -Generating unique operation named: removeUsingPOST_1
2019-04-22 09:55:12 -Generating unique operation named: addUsingGET_1
2019-04-22 09:55:12 -Generating unique operation named: editUsingGET_1
2019-04-22 09:55:12 -Generating unique operation named: listUsingGET_1
2019-04-22 09:55:12 -Generating unique operation named: removeUsingPOST_2
2019-04-22 09:55:12 -Generating unique operation named: removeUsingPOST_3
2019-04-22 09:55:12 -Generating unique operation named: saveUsingPOST_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingGET_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingPOST_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingPUT_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 09:55:12 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 09:55:12 -Generating unique operation named: addUsingGET_2
2019-04-22 09:55:12 -Generating unique operation named: editUsingGET_2
2019-04-22 09:55:12 -Generating unique operation named: listUsingGET_2
2019-04-22 09:55:12 -Generating unique operation named: removeUsingPOST_4
2019-04-22 09:55:12 -Generating unique operation named: removeUsingPOST_5
2019-04-22 09:55:12 -Generating unique operation named: saveUsingPOST_2
2019-04-22 09:55:12 -Generating unique operation named: updateUsingPOST_2
2019-04-22 09:55:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_3
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_3
2019-04-22 09:55:13 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_3
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_6
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_7
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_4
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_4
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_4
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_8
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_9
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 09:55:13 -Generating unique operation named: ElecUsingGET_1
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_5
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_5
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_5
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_10
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_11
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_6
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_6
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_6
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_7
2019-04-22 09:55:13 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_7
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_12
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_13
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 09:55:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_7
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_8
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_8
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_14
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_15
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_8
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_9
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_9
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_16
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_17
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_9
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_9
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_10
2019-04-22 09:55:13 -Generating unique operation named: infoUsingGET_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingPOST_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingPUT_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 09:55:13 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_10
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_18
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_19
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_9
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_10
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_11
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_20
2019-04-22 09:55:13 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_10
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_11
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_12
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_21
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_10
2019-04-22 09:55:13 -Generating unique operation named: treeUsingGET_1
2019-04-22 09:55:13 -Generating unique operation named: treeUsingGET_2
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_11
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_11
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_12
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_13
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_22
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_23
2019-04-22 09:55:13 -Generating unique operation named: saveUsingPOST_11
2019-04-22 09:55:13 -Generating unique operation named: updateUsingGET_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPOST_12
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPUT_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 09:55:13 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 09:55:13 -Generating unique operation named: addUsingGET_12
2019-04-22 09:55:13 -Generating unique operation named: editUsingGET_13
2019-04-22 09:55:13 -Generating unique operation named: listUsingGET_14
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_24
2019-04-22 09:55:13 -Generating unique operation named: removeUsingPOST_25
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingGET_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_13
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPUT_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 09:55:14 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 09:55:14 -Generating unique operation named: addUsingGET_13
2019-04-22 09:55:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 09:55:14 -Generating unique operation named: editUsingGET_14
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_15
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_13
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_14
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_14
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_16
2019-04-22 09:55:14 -Generating unique operation named: listUsingHEAD_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingPOST_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingPUT_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingPATCH_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingDELETE_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingTRACE_1
2019-04-22 09:55:14 -Generating unique operation named: countDDUsingGET_1
2019-04-22 09:55:14 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 09:55:14 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 09:55:14 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 09:55:14 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 09:55:14 -Generating unique operation named: addUsingGET_14
2019-04-22 09:55:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 09:55:14 -Generating unique operation named: editUsingGET_15
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_17
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_26
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_15
2019-04-22 09:55:14 -Generating unique operation named: treeUsingGET_3
2019-04-22 09:55:14 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_15
2019-04-22 09:55:14 -Generating unique operation named: addUsingGET_15
2019-04-22 09:55:14 -Generating unique operation named: editUsingGET_16
2019-04-22 09:55:14 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_18
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_27
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_28
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_16
2019-04-22 09:55:14 -Generating unique operation named: updateUsingGET_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_16
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPUT_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 09:55:14 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 09:55:14 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 09:55:14 -Generating unique operation named: addUsingGET_16
2019-04-22 09:55:14 -Generating unique operation named: editUsingGET_17
2019-04-22 09:55:14 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_19
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_29
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_30
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_17
2019-04-22 09:55:14 -Generating unique operation named: updateUsingGET_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_17
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPUT_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 09:55:14 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 09:55:14 -Generating unique operation named: addUsingGET_17
2019-04-22 09:55:14 -Generating unique operation named: editUsingGET_18
2019-04-22 09:55:14 -Generating unique operation named: listUsingGET_20
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_31
2019-04-22 09:55:14 -Generating unique operation named: removeUsingPOST_32
2019-04-22 09:55:14 -Generating unique operation named: saveUsingPOST_18
2019-04-22 09:55:14 -Generating unique operation named: updateUsingGET_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPOST_18
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPUT_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 09:55:14 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 09:55:14 -Starting Quartz Scheduler now
2019-04-22 09:55:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 09:55:14 -Starting...
2019-04-22 09:55:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 09:55:14 -Started.
2019-04-22 09:55:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 09:55:14 -Using a shared selector for servlet write/read
2019-04-22 09:55:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 09:55:14 -Started BootdoApplication in 23.359 seconds (JVM running for 24.15)
2019-04-22 09:55:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 09:55:15 -==> Parameters: 
2019-04-22 09:55:15 -<==      Total: 1
2019-04-22 09:55:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 09:55:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 09:55:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-04-22 09:55:24 -Enabling session validation scheduler...
2019-04-22 09:55:24 -请求地址 : http://localhost:8081/login;JSESSIONID=30334c80-9ce7-4591-9244-fee552345405
2019-04-22 09:55:24 -HTTP METHOD : GET
2019-04-22 09:55:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:55:24 -参数 : [{}]
2019-04-22 09:55:24 -耗时 : 4
2019-04-22 09:55:24 -返回值 : login
2019-04-22 09:55:27 -请求地址 : http://localhost:8081/getVerify
2019-04-22 09:55:27 -HTTP METHOD : GET
2019-04-22 09:55:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 09:55:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@677a0914, org.apache.shiro.web.servlet.ShiroHttpServletResponse@743685e5]
2019-04-22 09:55:33 -0334
2019-04-22 09:55:33 -耗时 : 6820
2019-04-22 09:55:33 -返回值 : null
2019-04-22 09:55:33 -请求地址 : http://localhost:8081/login
2019-04-22 09:55:33 -HTTP METHOD : GET
2019-04-22 09:55:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:55:33 -参数 : [{}]
2019-04-22 09:55:33 -耗时 : 1
2019-04-22 09:55:33 -返回值 : login
2019-04-22 09:55:38 -请求地址 : http://localhost:8081/login
2019-04-22 09:55:38 -HTTP METHOD : POST
2019-04-22 09:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 09:55:38 -参数 : [admin, 111111, 0334, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f180cb4]
2019-04-22 09:55:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 09:55:38 -==> Parameters: admin(String)
2019-04-22 09:55:39 -<==      Total: 1
2019-04-22 09:55:39 -耗时 : 316
2019-04-22 09:55:39 -返回值 : {msg=操作成功, code=0}
2019-04-22 09:55:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 09:55:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:39 -==> Parameters: 1(Long), admin(String), 登录(String), 316(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 09:55:39.307(Timestamp)
2019-04-22 09:55:39 -请求地址 : http://localhost:8081/index
2019-04-22 09:55:39 -HTTP METHOD : GET
2019-04-22 09:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:55:39 -参数 : [{}]
2019-04-22 09:55:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:55:39 -<==    Updates: 1
2019-04-22 09:55:39 -==> Parameters: 1(Long)
2019-04-22 09:55:40 -<==      Total: 49
2019-04-22 09:55:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:55:40 -==> Parameters: 138(Long)
2019-04-22 09:55:40 -<==      Total: 1
2019-04-22 09:55:40 -耗时 : 1180
2019-04-22 09:55:40 -返回值 : index_v1
2019-04-22 09:55:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1180(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:55:40.7(Timestamp)
2019-04-22 09:55:40 -请求地址 : http://localhost:8081/main
2019-04-22 09:55:40 -HTTP METHOD : GET
2019-04-22 09:55:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:55:40 -参数 : []
2019-04-22 09:55:40 -耗时 : 0
2019-04-22 09:55:40 -返回值 : main
2019-04-22 09:55:40 -<==    Updates: 1
2019-04-22 09:55:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:55:41 -HTTP METHOD : GET
2019-04-22 09:55:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:55:41 -参数 : []
2019-04-22 09:55:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:55:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:55:41 -请求地址 : http://localhost:8081/main
2019-04-22 09:55:41 -HTTP METHOD : GET
2019-04-22 09:55:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:55:41 -参数 : []
2019-04-22 09:55:41 -耗时 : 1
2019-04-22 09:55:41 -返回值 : main
2019-04-22 09:55:42 -<==      Total: 0
2019-04-22 09:55:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:55:42 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:55:42 -<==      Total: 1
2019-04-22 09:55:42 -耗时 : 631
2019-04-22 09:55:42 -返回值 : com.bootdo.common.utils.PageUtils@15681fb9
2019-04-22 09:55:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 09:55:46 -==> Parameters: 1(Long)
2019-04-22 09:55:46 -<==      Total: 93
2019-04-22 09:55:46 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:55:46 -HTTP METHOD : GET
2019-04-22 09:55:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:55:46 -参数 : []
2019-04-22 09:55:46 -耗时 : 0
2019-04-22 09:55:46 -返回值 : /moneyList/moneyList
2019-04-22 09:55:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:55:51 -HTTP METHOD : GET
2019-04-22 09:55:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:55:51 -参数 : []
2019-04-22 09:55:51 -耗时 : 1
2019-04-22 09:55:51 -返回值 : system/dept/deptTree
2019-04-22 09:55:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:55:52 -HTTP METHOD : GET
2019-04-22 09:55:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:55:52 -参数 : []
2019-04-22 09:55:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:55:52 -==> Parameters: 
2019-04-22 09:55:52 -<==      Total: 3
2019-04-22 09:55:52 -耗时 : 54
2019-04-22 09:55:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:55:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:54 -HTTP METHOD : POST
2019-04-22 09:55:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@53a96bba]
2019-04-22 09:55:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:54 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:54 -<==      Total: 3
2019-04-22 09:55:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:54.919(Timestamp)
2019-04-22 09:55:54 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:55 -<==    Updates: 1
2019-04-22 09:55:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:55 -HTTP METHOD : POST
2019-04-22 09:55:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@570e3d10]
2019-04-22 09:55:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:55 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:55 -<==      Total: 3
2019-04-22 09:55:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:55 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:55.917(Timestamp)
2019-04-22 09:55:55 -<==    Updates: 1
2019-04-22 09:55:56 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:56 -HTTP METHOD : POST
2019-04-22 09:55:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@133fd423]
2019-04-22 09:55:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:56 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:56 -<==      Total: 3
2019-04-22 09:55:56 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:56.713(Timestamp)
2019-04-22 09:55:56 -<==    Updates: 1
2019-04-22 09:55:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:57 -HTTP METHOD : POST
2019-04-22 09:55:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@28cd69d8]
2019-04-22 09:55:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:57 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:57 -<==      Total: 3
2019-04-22 09:55:57 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:57.647(Timestamp)
2019-04-22 09:55:57 -<==    Updates: 1
2019-04-22 09:55:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:58 -HTTP METHOD : POST
2019-04-22 09:55:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2f28db5b]
2019-04-22 09:55:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:58 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:58 -<==      Total: 3
2019-04-22 09:55:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:58 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:58.031(Timestamp)
2019-04-22 09:55:58 -<==    Updates: 1
2019-04-22 09:55:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:58 -HTTP METHOD : POST
2019-04-22 09:55:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@368b9ac6]
2019-04-22 09:55:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:58 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:58 -<==      Total: 3
2019-04-22 09:55:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:58 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:58.434(Timestamp)
2019-04-22 09:55:58 -<==    Updates: 1
2019-04-22 09:55:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:55:59 -HTTP METHOD : POST
2019-04-22 09:55:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:55:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4a114fb6]
2019-04-22 09:55:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:55:59 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:55:59 -<==      Total: 3
2019-04-22 09:55:59 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:55:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:55:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:55:59.64(Timestamp)
2019-04-22 09:55:59 -<==    Updates: 1
2019-04-22 09:56:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:56:00 -HTTP METHOD : POST
2019-04-22 09:56:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:56:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40784a11]
2019-04-22 09:56:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:56:00 -==> Parameters: 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String), 1-0001(String), 2019-02(String), 五九(String)
2019-04-22 09:56:00 -<==      Total: 3
2019-04-22 09:56:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:56:00 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:56:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:56:00.48(Timestamp)
2019-04-22 09:56:00 -<==    Updates: 1
2019-04-22 09:56:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-22 09:57:13 -请求地址 : http://localhost:8081/login;JSESSIONID=20bdf52b-7052-40ce-adfd-bf1bc52e27c9
2019-04-22 09:57:13 -HTTP METHOD : GET
2019-04-22 09:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:57:13 -参数 : [{}]
2019-04-22 09:57:13 -耗时 : 1
2019-04-22 09:57:13 -返回值 : login
2019-04-22 09:57:13 -请求地址 : http://localhost:8081/getVerify
2019-04-22 09:57:13 -HTTP METHOD : GET
2019-04-22 09:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 09:57:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@440fd3f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@631254be]
2019-04-22 09:57:13 -0927
2019-04-22 09:57:13 -耗时 : 21
2019-04-22 09:57:13 -返回值 : null
2019-04-22 09:57:14 -请求地址 : http://localhost:8081/login
2019-04-22 09:57:14 -HTTP METHOD : GET
2019-04-22 09:57:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 09:57:14 -参数 : [{}]
2019-04-22 09:57:14 -耗时 : 0
2019-04-22 09:57:14 -返回值 : login
2019-04-22 09:57:20 -请求地址 : http://localhost:8081/login
2019-04-22 09:57:20 -HTTP METHOD : POST
2019-04-22 09:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 09:57:20 -参数 : [admin, 111111, 0927, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6066c06b]
2019-04-22 09:57:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 09:57:20 -==> Parameters: admin(String)
2019-04-22 09:57:20 -<==      Total: 1
2019-04-22 09:57:20 -耗时 : 43
2019-04-22 09:57:20 -返回值 : {msg=操作成功, code=0}
2019-04-22 09:57:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:57:20 -==> Parameters: 1(Long), admin(String), 登录(String), 43(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 09:57:20.116(Timestamp)
2019-04-22 09:57:20 -请求地址 : http://localhost:8081/index
2019-04-22 09:57:20 -HTTP METHOD : GET
2019-04-22 09:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 09:57:20 -参数 : [{}]
2019-04-22 09:57:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 09:57:20 -==> Parameters: 1(Long)
2019-04-22 09:57:20 -<==    Updates: 1
2019-04-22 09:57:20 -<==      Total: 49
2019-04-22 09:57:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 09:57:20 -==> Parameters: 138(Long)
2019-04-22 09:57:20 -<==      Total: 1
2019-04-22 09:57:20 -耗时 : 455
2019-04-22 09:57:20 -返回值 : index_v1
2019-04-22 09:57:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:57:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 456(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 09:57:20.592(Timestamp)
2019-04-22 09:57:20 -<==    Updates: 1
2019-04-22 09:57:20 -请求地址 : http://localhost:8081/main
2019-04-22 09:57:20 -HTTP METHOD : GET
2019-04-22 09:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:57:20 -参数 : []
2019-04-22 09:57:20 -耗时 : 1
2019-04-22 09:57:20 -返回值 : main
2019-04-22 09:57:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 09:57:22 -HTTP METHOD : GET
2019-04-22 09:57:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 09:57:22 -参数 : []
2019-04-22 09:57:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 09:57:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 09:57:22 -请求地址 : http://localhost:8081/main
2019-04-22 09:57:22 -HTTP METHOD : GET
2019-04-22 09:57:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 09:57:22 -参数 : []
2019-04-22 09:57:22 -耗时 : 0
2019-04-22 09:57:22 -返回值 : main
2019-04-22 09:57:22 -<==      Total: 0
2019-04-22 09:57:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 09:57:22 -==> Parameters: 1(Long), 0(String)
2019-04-22 09:57:22 -<==      Total: 1
2019-04-22 09:57:22 -耗时 : 423
2019-04-22 09:57:22 -返回值 : com.bootdo.common.utils.PageUtils@a93fbc2
2019-04-22 09:57:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 09:57:28 -==> Parameters: 1(Long)
2019-04-22 09:57:28 -<==      Total: 93
2019-04-22 09:57:28 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 09:57:28 -HTTP METHOD : GET
2019-04-22 09:57:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 09:57:28 -参数 : []
2019-04-22 09:57:28 -耗时 : 0
2019-04-22 09:57:28 -返回值 : /moneyList/moneyList
2019-04-22 09:57:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 09:57:33 -HTTP METHOD : GET
2019-04-22 09:57:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 09:57:33 -参数 : []
2019-04-22 09:57:33 -耗时 : 1
2019-04-22 09:57:33 -返回值 : system/dept/deptTree
2019-04-22 09:57:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 09:57:33 -HTTP METHOD : GET
2019-04-22 09:57:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 09:57:33 -参数 : []
2019-04-22 09:57:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 09:57:33 -==> Parameters: 
2019-04-22 09:57:33 -<==      Total: 3
2019-04-22 09:57:33 -耗时 : 38
2019-04-22 09:57:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 09:57:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:57:41 -HTTP METHOD : POST
2019-04-22 09:57:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:57:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@13abec69]
2019-04-22 09:57:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? 
2019-04-22 09:57:41 -==> Parameters: 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String), 1-0001(String), 2019-03(String), 五九(String)
2019-04-22 09:57:41 -<==      Total: 3
2019-04-22 09:57:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:57:41 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:57:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:57:41.838(Timestamp)
2019-04-22 09:57:41 -<==    Updates: 1
2019-04-22 09:57:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 09:57:49 -HTTP METHOD : POST
2019-04-22 09:57:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 09:57:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4b85f35a]
2019-04-22 09:57:49 -==>  Preparing: select DISTINCT user_name from (SELECT user_name FROM elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) ) username 
2019-04-22 09:57:49 -==> Parameters: 李(String), 李(String), 李(String)
2019-04-22 09:57:49 -<==      Total: 1
2019-04-22 09:57:49 -耗时 : 141
2019-04-22 09:57:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ea8ecd6]
2019-04-22 09:57:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:57:50 -HTTP METHOD : POST
2019-04-22 09:57:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:57:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a111c00]
2019-04-22 09:57:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? 
2019-04-22 09:57:50 -==> Parameters: 1-0001(String), 2019-03(String), 五九(String), 李文英(String), 1-0001(String), 2019-03(String), 五九(String), 李文英(String), 1-0001(String), 2019-03(String), 五九(String), 李文英(String)
2019-04-22 09:57:50 -<==      Total: 3
2019-04-22 09:57:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:57:50 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:57:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:57:50.567(Timestamp)
2019-04-22 09:57:50 -<==    Updates: 1
2019-04-22 09:57:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 09:57:53 -HTTP METHOD : POST
2019-04-22 09:57:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 09:57:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5bd0b954]
2019-04-22 09:57:53 -==>  Preparing: select DISTINCT user_name from (SELECT user_name FROM elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) ) username 
2019-04-22 09:57:53 -==> Parameters: 李文英(String), 李文英(String), 李文英(String)
2019-04-22 09:57:53 -<==      Total: 1
2019-04-22 09:57:53 -耗时 : 3
2019-04-22 09:57:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@527aa90e]
2019-04-22 09:57:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 09:57:54 -HTTP METHOD : POST
2019-04-22 09:57:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 09:57:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@12734a7]
2019-04-22 09:57:54 -==>  Preparing: select DISTINCT user_name from (SELECT user_name FROM elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) ) username 
2019-04-22 09:57:54 -==> Parameters: 李文英(String), 李文英(String), 李文英(String)
2019-04-22 09:57:54 -<==      Total: 1
2019-04-22 09:57:54 -耗时 : 8
2019-04-22 09:57:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@64ab06b4]
2019-04-22 09:57:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 09:57:54 -HTTP METHOD : POST
2019-04-22 09:57:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 09:57:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@44b1e947]
2019-04-22 09:57:54 -==>  Preparing: select DISTINCT user_name from (SELECT user_name FROM elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) ) username 
2019-04-22 09:57:54 -==> Parameters: 李文英(String), 李文英(String), 李文英(String)
2019-04-22 09:57:54 -<==      Total: 1
2019-04-22 09:57:54 -耗时 : 3
2019-04-22 09:57:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@73af317c]
2019-04-22 09:57:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 09:57:54 -HTTP METHOD : POST
2019-04-22 09:57:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 09:57:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@498d83ab]
2019-04-22 09:57:54 -==>  Preparing: select DISTINCT user_name from (SELECT user_name FROM elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) ) username 
2019-04-22 09:57:54 -==> Parameters: 李文英(String), 李文英(String), 李文英(String)
2019-04-22 09:57:54 -<==      Total: 1
2019-04-22 09:57:54 -耗时 : 4
2019-04-22 09:57:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6d1cef7c]
2019-04-22 09:57:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 09:57:55 -HTTP METHOD : POST
2019-04-22 09:57:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 09:57:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a71fdb3]
2019-04-22 09:57:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type moneytype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type moneytype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type moneytype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_Id = ? and create_time = ? and user_org = ? and user_name = ? 
2019-04-22 09:57:55 -==> Parameters: 1-0001(String), 2019-03(String), 五九(String), 李文英(String), 1-0001(String), 2019-03(String), 五九(String), 李文英(String), 1-0001(String), 2019-03(String), 五九(String), 李文英(String)
2019-04-22 09:57:55 -<==      Total: 3
2019-04-22 09:57:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 09:57:55 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$d60a908e.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 09:57:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 09:57:55.575(Timestamp)
2019-04-22 09:57:55 -<==    Updates: 1
2019-04-22 10:10:14 -请求地址 : http://localhost:8081/index
2019-04-22 10:10:14 -HTTP METHOD : GET
2019-04-22 10:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 10:10:14 -参数 : [{}]
2019-04-22 10:10:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 10:10:14 -==> Parameters: 1(Long)
2019-04-22 10:10:14 -<==      Total: 49
2019-04-22 10:10:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 10:10:14 -==> Parameters: 138(Long)
2019-04-22 10:10:14 -<==      Total: 1
2019-04-22 10:10:14 -耗时 : 23
2019-04-22 10:10:14 -返回值 : index_v1
2019-04-22 10:10:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 10:10:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 10:10:14.451(Timestamp)
2019-04-22 10:10:14 -<==    Updates: 1
2019-04-22 10:10:14 -请求地址 : http://localhost:8081/main
2019-04-22 10:10:14 -HTTP METHOD : GET
2019-04-22 10:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 10:10:14 -参数 : []
2019-04-22 10:10:14 -耗时 : 1
2019-04-22 10:10:14 -返回值 : main
2019-04-22 10:10:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 10:10:14 -HTTP METHOD : GET
2019-04-22 10:10:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 10:10:14 -参数 : []
2019-04-22 10:10:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 10:10:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 10:10:14 -<==      Total: 0
2019-04-22 10:10:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 10:10:14 -==> Parameters: 1(Long), 0(String)
2019-04-22 10:10:14 -<==      Total: 1
2019-04-22 10:10:14 -耗时 : 9
2019-04-22 10:10:14 -返回值 : com.bootdo.common.utils.PageUtils@2ace387a
2019-04-22 10:10:15 -请求地址 : http://localhost:8081/main
2019-04-22 10:10:15 -HTTP METHOD : GET
2019-04-22 10:10:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 10:10:15 -参数 : []
2019-04-22 10:10:15 -耗时 : 2
2019-04-22 10:10:15 -返回值 : main
2019-04-22 10:10:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 10:10:20 -==> Parameters: 1(Long)
2019-04-22 10:10:20 -<==      Total: 93
2019-04-22 10:10:20 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-22 10:10:20 -HTTP METHOD : GET
2019-04-22 10:10:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-22 10:10:20 -参数 : []
2019-04-22 10:10:20 -耗时 : 9
2019-04-22 10:10:20 -返回值 : charts/tableDD
2019-04-22 10:10:21 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 10:10:21 -HTTP METHOD : GET
2019-04-22 10:10:21 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 10:10:21 -参数 : []
2019-04-22 10:10:21 -耗时 : 12
2019-04-22 10:10:21 -返回值 : charts/countMM
2019-04-22 10:10:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 10:10:21 -HTTP METHOD : GET
2019-04-22 10:10:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 10:10:21 -参数 : [userType]
2019-04-22 10:10:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 10:10:21 -==> Parameters: userType(String)
2019-04-22 10:10:22 -<==      Total: 4
2019-04-22 10:10:22 -耗时 : 112
2019-04-22 10:10:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 10:10:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 10:10:23 -HTTP METHOD : GET
2019-04-22 10:10:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 10:10:23 -参数 : []
2019-04-22 10:10:23 -耗时 : 11
2019-04-22 10:10:23 -返回值 : charts/tableElecMM
2019-04-22 10:20:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 10:20:53 -HTTP METHOD : GET
2019-04-22 10:20:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 10:20:53 -参数 : []
2019-04-22 10:20:53 -耗时 : 0
2019-04-22 10:20:53 -返回值 : system/dept/deptTree
2019-04-22 10:20:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 10:20:53 -HTTP METHOD : GET
2019-04-22 10:20:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 10:20:53 -参数 : []
2019-04-22 10:20:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 10:20:53 -==> Parameters: 
2019-04-22 10:20:53 -<==      Total: 3
2019-04-22 10:20:53 -耗时 : 6
2019-04-22 10:20:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 10:26:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-04-22 10:55:24 -Validating all active sessions...
2019-04-22 10:55:24 -Finished session validation.  [2] sessions were stopped.
2019-04-22 10:56:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]
2019-04-22 11:14:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 12948 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 11:14:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 11:14:26 -The following profiles are active: dev
2019-04-22 11:14:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:14:27 CST 2019]; root of context hierarchy
2019-04-22 11:14:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 11:14:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 11:14:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 11:14:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:14:43 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 11:14:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 11:14:43 -Starting service [Tomcat]
2019-04-22 11:14:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 11:14:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 11:14:44 -Initializing Spring embedded WebApplicationContext
2019-04-22 11:14:44 -Root WebApplicationContext: initialization completed in 17022 ms
2019-04-22 11:14:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 11:14:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 11:14:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 11:14:45 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 11:14:45 -Filter xssFilter was not registered (disabled)
2019-04-22 11:14:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 11:14:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 11:14:45 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 11:14:45 -Servlet dispatcherServlet mapped to [/]
2019-04-22 11:14:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:14:27 CST 2019]; root of context hierarchy
2019-04-22 11:14:49 -Using default implementation for ThreadExecutor
2019-04-22 11:14:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 11:14:49 -Quartz Scheduler v.2.2.1 created.
2019-04-22 11:14:49 -RAMJobStore initialized.
2019-04-22 11:14:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 11:14:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 11:14:49 -Quartz scheduler version: 2.2.1
2019-04-22 11:14:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b0e031b
2019-04-22 11:14:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 11:14:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 11:14:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 11:14:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 11:14:53 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 11:14:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 11:14:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 11:14:53 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 11:14:53 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 11:14:53 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 11:14:53 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 11:14:53 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 11:14:53 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 11:14:53 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 11:14:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 11:14:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 11:14:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 11:14:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 11:14:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 11:14:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 11:14:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 11:14:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 11:14:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 11:14:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 11:14:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 11:14:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 11:14:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 11:14:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 11:14:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 11:14:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 11:14:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 11:14:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 11:14:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 11:14:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 11:14:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 11:14:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 11:14:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 11:14:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 11:14:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 11:14:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 11:14:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 11:14:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 11:14:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 11:14:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 11:14:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 11:14:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 11:14:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:14:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:14:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 11:14:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 11:14:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 11:14:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 11:14:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 11:14:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 11:14:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 11:14:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 11:14:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 11:14:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 11:14:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 11:14:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 11:14:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 11:14:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 11:14:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 11:14:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 11:14:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 11:14:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 11:14:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 11:14:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 11:14:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 11:14:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 11:14:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 11:14:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 11:14:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 11:14:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 11:14:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 11:14:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 11:14:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 11:14:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 11:14:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 11:14:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 11:14:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 11:14:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 11:14:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 11:14:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 11:14:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:14:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 11:14:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 11:14:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:14:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 11:14:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:14:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 11:14:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 11:14:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 11:14:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 11:14:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 11:14:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 11:14:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:14:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:14:27 CST 2019]; root of context hierarchy
2019-04-22 11:14:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:14:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:14:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:14:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 11:14:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 11:14:57 -Registering beans for JMX exposure on startup
2019-04-22 11:14:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 11:14:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 11:14:57 -Starting beans in phase 2147483647
2019-04-22 11:14:57 -Context refreshed
2019-04-22 11:14:57 -Found 1 custom documentation plugin(s)
2019-04-22 11:14:57 -Scanning for api listing references
2019-04-22 11:14:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 11:14:58 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 11:14:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_1
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_2
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_3
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_4
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_5
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_2
2019-04-22 11:14:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_3
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_3
2019-04-22 11:14:58 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_3
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_6
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_7
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_4
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_4
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_4
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_8
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_9
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 11:14:58 -Generating unique operation named: ElecUsingGET_1
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_5
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_5
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_5
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_10
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_11
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_6
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_6
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_6
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_7
2019-04-22 11:14:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_7
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_12
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_13
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 11:14:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_7
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_8
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_8
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_14
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_15
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_8
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 11:14:58 -Generating unique operation named: addUsingGET_8
2019-04-22 11:14:58 -Generating unique operation named: editUsingGET_9
2019-04-22 11:14:58 -Generating unique operation named: listUsingGET_9
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_16
2019-04-22 11:14:58 -Generating unique operation named: removeUsingPOST_17
2019-04-22 11:14:58 -Generating unique operation named: saveUsingPOST_8
2019-04-22 11:14:58 -Generating unique operation named: updateUsingGET_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPOST_9
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPUT_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 11:14:58 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_9
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_10
2019-04-22 11:14:59 -Generating unique operation named: infoUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingPOST_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingPUT_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 11:14:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_10
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_18
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_19
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_10
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_11
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_20
2019-04-22 11:14:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_10
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_11
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_12
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_21
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_10
2019-04-22 11:14:59 -Generating unique operation named: treeUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: treeUsingGET_2
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_11
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_11
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_12
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_13
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_22
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_23
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingGET_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPUT_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 11:14:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_12
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_13
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_14
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_24
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_25
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingGET_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_13
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPUT_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 11:14:59 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_13
2019-04-22 11:14:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_14
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_15
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_13
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_14
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_14
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_16
2019-04-22 11:14:59 -Generating unique operation named: listUsingHEAD_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingPOST_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingPUT_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingPATCH_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingDELETE_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingTRACE_1
2019-04-22 11:14:59 -Generating unique operation named: countDDUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 11:14:59 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 11:14:59 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 11:14:59 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_14
2019-04-22 11:14:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_15
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_17
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_26
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_15
2019-04-22 11:14:59 -Generating unique operation named: treeUsingGET_3
2019-04-22 11:14:59 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_15
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_15
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_16
2019-04-22 11:14:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_18
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_27
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_28
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_16
2019-04-22 11:14:59 -Generating unique operation named: updateUsingGET_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_16
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPUT_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 11:14:59 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 11:14:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_16
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_17
2019-04-22 11:14:59 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_19
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_29
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_30
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_17
2019-04-22 11:14:59 -Generating unique operation named: updateUsingGET_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_17
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPUT_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 11:14:59 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 11:14:59 -Generating unique operation named: addUsingGET_17
2019-04-22 11:14:59 -Generating unique operation named: editUsingGET_18
2019-04-22 11:14:59 -Generating unique operation named: listUsingGET_20
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_31
2019-04-22 11:14:59 -Generating unique operation named: removeUsingPOST_32
2019-04-22 11:14:59 -Generating unique operation named: saveUsingPOST_18
2019-04-22 11:14:59 -Generating unique operation named: updateUsingGET_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPOST_18
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPUT_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 11:14:59 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 11:14:59 -Starting Quartz Scheduler now
2019-04-22 11:14:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 11:14:59 -Starting...
2019-04-22 11:14:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 11:14:59 -Started.
2019-04-22 11:14:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 11:15:00 -Using a shared selector for servlet write/read
2019-04-22 11:15:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 11:15:00 -Started BootdoApplication in 34.218 seconds (JVM running for 35.011)
2019-04-22 11:15:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 11:15:00 -==> Parameters: 
2019-04-22 11:15:00 -<==      Total: 1
2019-04-22 11:15:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 11:15:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 11:15:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 107 ms
2019-04-22 11:15:09 -Enabling session validation scheduler...
2019-04-22 11:15:09 -请求地址 : http://localhost:8081/login;JSESSIONID=898726da-931c-4c1b-b1c3-5dc4d17fa77a
2019-04-22 11:15:09 -HTTP METHOD : GET
2019-04-22 11:15:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:15:09 -参数 : [{}]
2019-04-22 11:15:09 -耗时 : 5
2019-04-22 11:15:09 -返回值 : login
2019-04-22 11:15:12 -请求地址 : http://localhost:8081/getVerify
2019-04-22 11:15:12 -HTTP METHOD : GET
2019-04-22 11:15:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 11:15:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ddf205e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@19e0b73d]
2019-04-22 11:15:22 -2542
2019-04-22 11:15:22 -耗时 : 9828
2019-04-22 11:15:22 -返回值 : null
2019-04-22 11:15:22 -请求地址 : http://localhost:8081/login
2019-04-22 11:15:22 -HTTP METHOD : GET
2019-04-22 11:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:15:22 -参数 : [{}]
2019-04-22 11:15:22 -耗时 : 0
2019-04-22 11:15:22 -返回值 : login
2019-04-22 11:15:27 -请求地址 : http://localhost:8081/login
2019-04-22 11:15:27 -HTTP METHOD : POST
2019-04-22 11:15:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 11:15:27 -参数 : [admin, 111111, 2542, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c36e961]
2019-04-22 11:15:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 11:15:27 -==> Parameters: admin(String)
2019-04-22 11:15:27 -<==      Total: 1
2019-04-22 11:15:27 -耗时 : 585
2019-04-22 11:15:27 -返回值 : {msg=操作成功, code=0}
2019-04-22 11:15:28 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 11:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:28 -==> Parameters: 1(Long), admin(String), 登录(String), 585(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 11:15:28.14(Timestamp)
2019-04-22 11:15:28 -请求地址 : http://localhost:8081/index
2019-04-22 11:15:28 -HTTP METHOD : GET
2019-04-22 11:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:15:28 -参数 : [{}]
2019-04-22 11:15:28 -<==    Updates: 1
2019-04-22 11:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:15:29 -==> Parameters: 1(Long)
2019-04-22 11:15:29 -<==      Total: 49
2019-04-22 11:15:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:15:29 -==> Parameters: 138(Long)
2019-04-22 11:15:29 -<==      Total: 1
2019-04-22 11:15:29 -耗时 : 903
2019-04-22 11:15:29 -返回值 : index_v1
2019-04-22 11:15:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 904(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:15:29.557(Timestamp)
2019-04-22 11:15:29 -<==    Updates: 1
2019-04-22 11:15:30 -请求地址 : http://localhost:8081/main
2019-04-22 11:15:30 -HTTP METHOD : GET
2019-04-22 11:15:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:15:30 -参数 : []
2019-04-22 11:15:30 -耗时 : 1
2019-04-22 11:15:30 -返回值 : main
2019-04-22 11:15:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:15:30 -HTTP METHOD : GET
2019-04-22 11:15:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:15:30 -参数 : []
2019-04-22 11:15:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:15:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:15:30 -<==      Total: 0
2019-04-22 11:15:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:15:30 -请求地址 : http://localhost:8081/main
2019-04-22 11:15:30 -HTTP METHOD : GET
2019-04-22 11:15:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:15:30 -参数 : []
2019-04-22 11:15:30 -耗时 : 1
2019-04-22 11:15:30 -返回值 : main
2019-04-22 11:15:30 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:15:30 -<==      Total: 1
2019-04-22 11:15:30 -耗时 : 294
2019-04-22 11:15:30 -返回值 : com.bootdo.common.utils.PageUtils@1755ba7b
2019-04-22 11:15:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 11:15:36 -==> Parameters: 1(Long)
2019-04-22 11:15:36 -<==      Total: 93
2019-04-22 11:15:36 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 11:15:36 -HTTP METHOD : GET
2019-04-22 11:15:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 11:15:36 -参数 : []
2019-04-22 11:15:36 -耗时 : 0
2019-04-22 11:15:36 -返回值 : /moneyList/moneyList
2019-04-22 11:15:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 11:15:41 -HTTP METHOD : GET
2019-04-22 11:15:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 11:15:41 -参数 : []
2019-04-22 11:15:41 -耗时 : 1
2019-04-22 11:15:41 -返回值 : system/dept/deptTree
2019-04-22 11:15:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 11:15:41 -HTTP METHOD : GET
2019-04-22 11:15:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 11:15:41 -参数 : []
2019-04-22 11:15:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 11:15:41 -==> Parameters: 
2019-04-22 11:15:41 -<==      Total: 3
2019-04-22 11:15:41 -耗时 : 169
2019-04-22 11:15:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 11:15:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:44 -HTTP METHOD : POST
2019-04-22 11:15:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b6a3c44]
2019-04-22 11:15:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:44 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:45 -<==      Total: 3
2019-04-22 11:15:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:45.467(Timestamp)
2019-04-22 11:15:45 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:45 -<==    Updates: 1
2019-04-22 11:15:46 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:46 -HTTP METHOD : POST
2019-04-22 11:15:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@ea1e6de]
2019-04-22 11:15:46 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:46 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:46 -<==      Total: 3
2019-04-22 11:15:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:46 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:46.757(Timestamp)
2019-04-22 11:15:46 -<==    Updates: 1
2019-04-22 11:15:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:47 -HTTP METHOD : POST
2019-04-22 11:15:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6bbfd036]
2019-04-22 11:15:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:47 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:47 -<==      Total: 3
2019-04-22 11:15:47 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:47.662(Timestamp)
2019-04-22 11:15:47 -<==    Updates: 1
2019-04-22 11:15:48 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:48 -HTTP METHOD : POST
2019-04-22 11:15:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1fdd9ed0]
2019-04-22 11:15:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:48 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:48 -<==      Total: 3
2019-04-22 11:15:48 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:48.605(Timestamp)
2019-04-22 11:15:48 -<==    Updates: 1
2019-04-22 11:15:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:49 -HTTP METHOD : POST
2019-04-22 11:15:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14bf0240]
2019-04-22 11:15:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:49 -<==      Total: 3
2019-04-22 11:15:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:49 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:49.499(Timestamp)
2019-04-22 11:15:49 -<==    Updates: 1
2019-04-22 11:15:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:50 -HTTP METHOD : POST
2019-04-22 11:15:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4a608ba]
2019-04-22 11:15:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:50 -<==      Total: 3
2019-04-22 11:15:50 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:50.383(Timestamp)
2019-04-22 11:15:50 -<==    Updates: 1
2019-04-22 11:15:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:15:51 -HTTP METHOD : POST
2019-04-22 11:15:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:15:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60bfc0e1]
2019-04-22 11:15:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:15:51 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:15:51 -<==      Total: 3
2019-04-22 11:15:51 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:15:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:15:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:15:51.534(Timestamp)
2019-04-22 11:15:51 -<==    Updates: 1
2019-04-22 11:15:54 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-22 11:16:53 -请求地址 : http://localhost:8081/index
2019-04-22 11:16:53 -HTTP METHOD : GET
2019-04-22 11:16:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:16:53 -参数 : [{}]
2019-04-22 11:16:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:16:53 -==> Parameters: 1(Long)
2019-04-22 11:16:53 -<==      Total: 49
2019-04-22 11:16:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:16:53 -==> Parameters: 138(Long)
2019-04-22 11:16:53 -<==      Total: 1
2019-04-22 11:16:53 -耗时 : 76
2019-04-22 11:16:53 -返回值 : index_v1
2019-04-22 11:16:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:16:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 77(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:16:53.329(Timestamp)
2019-04-22 11:16:53 -请求地址 : http://localhost:8081/main
2019-04-22 11:16:53 -HTTP METHOD : GET
2019-04-22 11:16:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:16:53 -参数 : []
2019-04-22 11:16:53 -耗时 : 1
2019-04-22 11:16:53 -返回值 : main
2019-04-22 11:16:53 -<==    Updates: 1
2019-04-22 11:16:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:16:53 -HTTP METHOD : GET
2019-04-22 11:16:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:16:53 -参数 : []
2019-04-22 11:16:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:16:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:16:53 -<==      Total: 0
2019-04-22 11:16:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:16:53 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:16:53 -<==      Total: 1
2019-04-22 11:16:53 -耗时 : 86
2019-04-22 11:16:53 -返回值 : com.bootdo.common.utils.PageUtils@4ca2a288
2019-04-22 11:16:53 -请求地址 : http://localhost:8081/main
2019-04-22 11:16:53 -HTTP METHOD : GET
2019-04-22 11:16:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:16:53 -参数 : []
2019-04-22 11:16:53 -耗时 : 1
2019-04-22 11:16:53 -返回值 : main
2019-04-22 11:17:10 -请求地址 : http://localhost:8081/login;JSESSIONID=dafa0a6b-ee64-4682-aca5-394bdf45a8e6
2019-04-22 11:17:10 -HTTP METHOD : GET
2019-04-22 11:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:17:10 -参数 : [{}]
2019-04-22 11:17:10 -耗时 : 1
2019-04-22 11:17:10 -返回值 : login
2019-04-22 11:17:10 -请求地址 : http://localhost:8081/login;JSESSIONID=dafa0a6b-ee64-4682-aca5-394bdf45a8e6
2019-04-22 11:17:10 -HTTP METHOD : GET
2019-04-22 11:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:17:10 -参数 : [{}]
2019-04-22 11:17:10 -耗时 : 0
2019-04-22 11:17:10 -返回值 : login
2019-04-22 11:17:10 -请求地址 : http://localhost:8081/getVerify
2019-04-22 11:17:10 -HTTP METHOD : GET
2019-04-22 11:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 11:17:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ff2b99e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30fb3a9a]
2019-04-22 11:17:10 -4861
2019-04-22 11:17:10 -耗时 : 51
2019-04-22 11:17:10 -返回值 : null
2019-04-22 11:17:10 -请求地址 : http://localhost:8081/login
2019-04-22 11:17:10 -HTTP METHOD : GET
2019-04-22 11:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:17:10 -参数 : [{}]
2019-04-22 11:17:10 -耗时 : 0
2019-04-22 11:17:10 -返回值 : login
2019-04-22 11:17:18 -请求地址 : http://localhost:8081/login
2019-04-22 11:17:18 -HTTP METHOD : POST
2019-04-22 11:17:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 11:17:18 -参数 : [admin, 111111, 4861, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d3cb57f]
2019-04-22 11:17:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 11:17:18 -==> Parameters: admin(String)
2019-04-22 11:17:18 -<==      Total: 1
2019-04-22 11:17:18 -耗时 : 7
2019-04-22 11:17:18 -返回值 : {msg=操作成功, code=0}
2019-04-22 11:17:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:17:18 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 11:17:18.759(Timestamp)
2019-04-22 11:17:18 -请求地址 : http://localhost:8081/index
2019-04-22 11:17:18 -HTTP METHOD : GET
2019-04-22 11:17:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:17:18 -参数 : [{}]
2019-04-22 11:17:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:17:18 -==> Parameters: 1(Long)
2019-04-22 11:17:18 -<==    Updates: 1
2019-04-22 11:17:19 -<==      Total: 49
2019-04-22 11:17:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:17:19 -==> Parameters: 138(Long)
2019-04-22 11:17:19 -<==      Total: 1
2019-04-22 11:17:19 -耗时 : 529
2019-04-22 11:17:19 -返回值 : index_v1
2019-04-22 11:17:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:17:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 529(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:17:19.323(Timestamp)
2019-04-22 11:17:19 -<==    Updates: 1
2019-04-22 11:17:20 -请求地址 : http://localhost:8081/main
2019-04-22 11:17:20 -HTTP METHOD : GET
2019-04-22 11:17:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:17:20 -参数 : []
2019-04-22 11:17:20 -耗时 : 1
2019-04-22 11:17:20 -返回值 : main
2019-04-22 11:17:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:17:20 -HTTP METHOD : GET
2019-04-22 11:17:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:17:20 -参数 : []
2019-04-22 11:17:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:17:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:17:20 -请求地址 : http://localhost:8081/main
2019-04-22 11:17:20 -HTTP METHOD : GET
2019-04-22 11:17:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:17:20 -参数 : []
2019-04-22 11:17:20 -耗时 : 0
2019-04-22 11:17:20 -返回值 : main
2019-04-22 11:17:20 -<==      Total: 0
2019-04-22 11:17:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:17:20 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:17:20 -<==      Total: 1
2019-04-22 11:17:20 -耗时 : 416
2019-04-22 11:17:20 -返回值 : com.bootdo.common.utils.PageUtils@58bf9c53
2019-04-22 11:17:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 11:17:25 -==> Parameters: 1(Long)
2019-04-22 11:17:25 -<==      Total: 93
2019-04-22 11:17:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 11:17:25 -HTTP METHOD : GET
2019-04-22 11:17:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 11:17:25 -参数 : []
2019-04-22 11:17:25 -耗时 : 1
2019-04-22 11:17:25 -返回值 : /moneyList/moneyList
2019-04-22 11:17:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 11:17:30 -HTTP METHOD : GET
2019-04-22 11:17:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 11:17:30 -参数 : []
2019-04-22 11:17:30 -耗时 : 0
2019-04-22 11:17:30 -返回值 : system/dept/deptTree
2019-04-22 11:17:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 11:17:31 -HTTP METHOD : GET
2019-04-22 11:17:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 11:17:31 -参数 : []
2019-04-22 11:17:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 11:17:31 -==> Parameters: 
2019-04-22 11:17:31 -<==      Total: 3
2019-04-22 11:17:31 -耗时 : 43
2019-04-22 11:17:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 11:17:41 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:19:30 -请求地址 : http://localhost:8081/index
2019-04-22 11:19:30 -HTTP METHOD : GET
2019-04-22 11:19:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:19:30 -参数 : [{}]
2019-04-22 11:19:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:19:30 -==> Parameters: 1(Long)
2019-04-22 11:19:30 -<==      Total: 49
2019-04-22 11:19:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:19:30 -==> Parameters: 138(Long)
2019-04-22 11:19:30 -<==      Total: 1
2019-04-22 11:19:30 -耗时 : 24
2019-04-22 11:19:30 -返回值 : index_v1
2019-04-22 11:19:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:19:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:19:30.58(Timestamp)
2019-04-22 11:19:30 -<==    Updates: 1
2019-04-22 11:19:30 -请求地址 : http://localhost:8081/main
2019-04-22 11:19:30 -HTTP METHOD : GET
2019-04-22 11:19:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:19:30 -参数 : []
2019-04-22 11:19:30 -耗时 : 1
2019-04-22 11:19:30 -返回值 : main
2019-04-22 11:19:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:19:31 -HTTP METHOD : GET
2019-04-22 11:19:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:19:31 -参数 : []
2019-04-22 11:19:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:19:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:19:31 -<==      Total: 0
2019-04-22 11:19:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:19:31 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:19:31 -<==      Total: 1
2019-04-22 11:19:31 -耗时 : 23
2019-04-22 11:19:31 -返回值 : com.bootdo.common.utils.PageUtils@551dc08b
2019-04-22 11:19:31 -请求地址 : http://localhost:8081/main
2019-04-22 11:19:31 -HTTP METHOD : GET
2019-04-22 11:19:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:19:31 -参数 : []
2019-04-22 11:19:31 -耗时 : 1
2019-04-22 11:19:31 -返回值 : main
2019-04-22 11:19:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 11:19:33 -HTTP METHOD : GET
2019-04-22 11:19:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 11:19:33 -参数 : []
2019-04-22 11:19:33 -耗时 : 0
2019-04-22 11:19:33 -返回值 : /moneyList/moneyList
2019-04-22 11:19:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 11:19:38 -HTTP METHOD : GET
2019-04-22 11:19:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 11:19:38 -参数 : []
2019-04-22 11:19:38 -耗时 : 0
2019-04-22 11:19:38 -返回值 : system/dept/deptTree
2019-04-22 11:19:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 11:19:39 -HTTP METHOD : GET
2019-04-22 11:19:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 11:19:39 -参数 : []
2019-04-22 11:19:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 11:19:39 -==> Parameters: 
2019-04-22 11:19:39 -<==      Total: 3
2019-04-22 11:19:39 -耗时 : 4
2019-04-22 11:19:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 11:20:14 -请求地址 : http://localhost:8081/index
2019-04-22 11:20:14 -HTTP METHOD : GET
2019-04-22 11:20:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:20:14 -参数 : [{}]
2019-04-22 11:20:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:20:14 -==> Parameters: 1(Long)
2019-04-22 11:20:14 -<==      Total: 49
2019-04-22 11:20:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:20:14 -==> Parameters: 138(Long)
2019-04-22 11:20:14 -<==      Total: 1
2019-04-22 11:20:14 -耗时 : 24
2019-04-22 11:20:14 -返回值 : index_v1
2019-04-22 11:20:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:20:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:20:14.259(Timestamp)
2019-04-22 11:20:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:20:14 -HTTP METHOD : POST
2019-04-22 11:20:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:20:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2800c2a1]
2019-04-22 11:20:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:20:14 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:20:14 -<==    Updates: 1
2019-04-22 11:20:14 -<==      Total: 3
2019-04-22 11:20:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:20:14 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:20:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:20:14.324(Timestamp)
2019-04-22 11:20:14 -<==    Updates: 1
2019-04-22 11:20:14 -请求地址 : http://localhost:8081/main
2019-04-22 11:20:14 -HTTP METHOD : GET
2019-04-22 11:20:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:20:14 -参数 : []
2019-04-22 11:20:14 -耗时 : 0
2019-04-22 11:20:14 -返回值 : main
2019-04-22 11:20:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:20:15 -HTTP METHOD : GET
2019-04-22 11:20:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:20:15 -参数 : []
2019-04-22 11:20:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:20:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:20:15 -<==      Total: 0
2019-04-22 11:20:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:20:15 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:20:15 -<==      Total: 1
2019-04-22 11:20:15 -耗时 : 10
2019-04-22 11:20:15 -返回值 : com.bootdo.common.utils.PageUtils@133aa784
2019-04-22 11:20:15 -请求地址 : http://localhost:8081/main
2019-04-22 11:20:15 -HTTP METHOD : GET
2019-04-22 11:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:20:15 -参数 : []
2019-04-22 11:20:15 -耗时 : 1
2019-04-22 11:20:15 -返回值 : main
2019-04-22 11:20:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 11:20:16 -HTTP METHOD : GET
2019-04-22 11:20:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 11:20:16 -参数 : []
2019-04-22 11:20:16 -耗时 : 0
2019-04-22 11:20:16 -返回值 : /moneyList/moneyList
2019-04-22 11:20:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 11:20:21 -HTTP METHOD : GET
2019-04-22 11:20:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 11:20:21 -参数 : []
2019-04-22 11:20:21 -耗时 : 0
2019-04-22 11:20:21 -返回值 : system/dept/deptTree
2019-04-22 11:20:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 11:20:22 -HTTP METHOD : GET
2019-04-22 11:20:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 11:20:22 -参数 : []
2019-04-22 11:20:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 11:20:22 -==> Parameters: 
2019-04-22 11:20:22 -<==      Total: 3
2019-04-22 11:20:22 -耗时 : 4
2019-04-22 11:20:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 11:20:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:20:25 -HTTP METHOD : POST
2019-04-22 11:20:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:20:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@aab03d4]
2019-04-22 11:20:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:20:25 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:20:25 -<==      Total: 3
2019-04-22 11:20:25 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor133.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$4ed95077.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:20:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:20:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:20:25.009(Timestamp)
2019-04-22 11:20:25 -<==    Updates: 1
2019-04-22 11:21:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 2000 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 11:21:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 11:21:46 -The following profiles are active: dev
2019-04-22 11:21:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:21:46 CST 2019]; root of context hierarchy
2019-04-22 11:21:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 11:21:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 11:21:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 11:21:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 11:21:54 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 11:21:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 11:21:55 -Starting service [Tomcat]
2019-04-22 11:21:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 11:21:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 11:21:55 -Initializing Spring embedded WebApplicationContext
2019-04-22 11:21:55 -Root WebApplicationContext: initialization completed in 9314 ms
2019-04-22 11:21:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 11:21:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 11:21:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 11:21:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 11:21:56 -Filter xssFilter was not registered (disabled)
2019-04-22 11:21:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 11:21:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 11:21:56 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 11:21:56 -Servlet dispatcherServlet mapped to [/]
2019-04-22 11:22:00 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:21:46 CST 2019]; root of context hierarchy
2019-04-22 11:22:00 -Using default implementation for ThreadExecutor
2019-04-22 11:22:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 11:22:00 -Quartz Scheduler v.2.2.1 created.
2019-04-22 11:22:00 -RAMJobStore initialized.
2019-04-22 11:22:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 11:22:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 11:22:00 -Quartz scheduler version: 2.2.1
2019-04-22 11:22:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-04-22 11:22:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 11:22:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 11:22:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 11:22:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 11:22:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 11:22:04 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public void com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 11:22:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 11:22:04 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public void com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 11:22:04 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 11:22:04 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 11:22:04 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 11:22:04 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 11:22:04 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 11:22:04 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 11:22:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 11:22:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 11:22:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 11:22:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 11:22:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 11:22:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 11:22:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 11:22:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 11:22:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 11:22:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 11:22:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 11:22:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 11:22:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 11:22:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 11:22:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 11:22:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 11:22:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 11:22:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 11:22:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 11:22:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 11:22:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 11:22:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 11:22:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 11:22:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 11:22:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 11:22:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 11:22:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 11:22:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 11:22:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 11:22:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 11:22:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 11:22:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 11:22:04 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:22:04 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:22:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 11:22:04 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 11:22:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 11:22:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 11:22:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 11:22:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 11:22:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 11:22:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 11:22:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 11:22:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 11:22:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 11:22:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 11:22:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 11:22:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 11:22:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 11:22:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 11:22:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 11:22:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 11:22:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 11:22:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 11:22:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 11:22:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 11:22:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 11:22:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 11:22:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 11:22:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 11:22:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 11:22:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 11:22:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 11:22:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 11:22:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 11:22:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 11:22:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 11:22:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 11:22:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 11:22:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 11:22:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 11:22:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 11:22:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 11:22:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 11:22:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 11:22:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 11:22:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 11:22:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 11:22:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 11:22:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 11:22:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 11:22:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 11:22:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 11:22:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:22:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 11:21:46 CST 2019]; root of context hierarchy
2019-04-22 11:22:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:22:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:22:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 11:22:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 11:22:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 11:22:08 -Registering beans for JMX exposure on startup
2019-04-22 11:22:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 11:22:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 11:22:08 -Starting beans in phase 2147483647
2019-04-22 11:22:08 -Context refreshed
2019-04-22 11:22:08 -Found 1 custom documentation plugin(s)
2019-04-22 11:22:08 -Scanning for api listing references
2019-04-22 11:22:09 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 11:22:09 -Generating unique operation named: getCountDUsingPOST_2
2019-04-22 11:22:09 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 11:22:09 -Generating unique operation named: getCountDUsingPOST_3
2019-04-22 11:22:09 -Generating unique operation named: removeUsingPOST_1
2019-04-22 11:22:09 -Generating unique operation named: addUsingGET_1
2019-04-22 11:22:09 -Generating unique operation named: editUsingGET_1
2019-04-22 11:22:09 -Generating unique operation named: listUsingGET_1
2019-04-22 11:22:09 -Generating unique operation named: removeUsingPOST_2
2019-04-22 11:22:09 -Generating unique operation named: removeUsingPOST_3
2019-04-22 11:22:09 -Generating unique operation named: saveUsingPOST_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingGET_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingPOST_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingPUT_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 11:22:09 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 11:22:09 -Generating unique operation named: addUsingGET_2
2019-04-22 11:22:09 -Generating unique operation named: editUsingGET_2
2019-04-22 11:22:09 -Generating unique operation named: listUsingGET_2
2019-04-22 11:22:09 -Generating unique operation named: removeUsingPOST_4
2019-04-22 11:22:09 -Generating unique operation named: removeUsingPOST_5
2019-04-22 11:22:09 -Generating unique operation named: saveUsingPOST_2
2019-04-22 11:22:09 -Generating unique operation named: updateUsingPOST_2
2019-04-22 11:22:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_3
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_3
2019-04-22 11:22:10 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_3
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_6
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_7
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_4
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_4
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_4
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_8
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_9
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 11:22:10 -Generating unique operation named: ElecUsingGET_1
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_5
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_5
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_5
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_10
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_11
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_6
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_6
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_6
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_7
2019-04-22 11:22:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_7
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_12
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_13
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 11:22:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_7
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_8
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_8
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_14
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_15
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_8
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 11:22:10 -Generating unique operation named: addUsingGET_8
2019-04-22 11:22:10 -Generating unique operation named: editUsingGET_9
2019-04-22 11:22:10 -Generating unique operation named: listUsingGET_9
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_16
2019-04-22 11:22:10 -Generating unique operation named: removeUsingPOST_17
2019-04-22 11:22:10 -Generating unique operation named: saveUsingPOST_8
2019-04-22 11:22:10 -Generating unique operation named: updateUsingGET_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPOST_9
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPUT_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 11:22:10 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_9
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_10
2019-04-22 11:22:11 -Generating unique operation named: infoUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingPOST_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingPUT_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 11:22:11 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_10
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_18
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_19
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_10
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_11
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_20
2019-04-22 11:22:11 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_10
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_11
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_12
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_21
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_10
2019-04-22 11:22:11 -Generating unique operation named: treeUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: treeUsingGET_2
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_11
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_11
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_12
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_13
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_22
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_23
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_11
2019-04-22 11:22:11 -Generating unique operation named: updateUsingGET_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_12
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPUT_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 11:22:11 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_12
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_13
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_14
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_24
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_25
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_12
2019-04-22 11:22:11 -Generating unique operation named: updateUsingGET_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_13
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPUT_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 11:22:11 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_13
2019-04-22 11:22:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_14
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_15
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_13
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_14
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_14
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_16
2019-04-22 11:22:11 -Generating unique operation named: listUsingHEAD_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingPOST_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingPUT_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingPATCH_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingDELETE_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 11:22:11 -Generating unique operation named: listUsingTRACE_1
2019-04-22 11:22:11 -Generating unique operation named: countDDUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 11:22:11 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 11:22:11 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 11:22:11 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 11:22:11 -Generating unique operation named: addUsingGET_14
2019-04-22 11:22:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 11:22:11 -Generating unique operation named: editUsingGET_15
2019-04-22 11:22:11 -Generating unique operation named: listUsingGET_17
2019-04-22 11:22:11 -Generating unique operation named: removeUsingPOST_26
2019-04-22 11:22:11 -Generating unique operation named: saveUsingPOST_15
2019-04-22 11:22:11 -Generating unique operation named: treeUsingGET_3
2019-04-22 11:22:11 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 11:22:11 -Generating unique operation named: updateUsingPOST_15
2019-04-22 11:22:12 -Generating unique operation named: addUsingGET_15
2019-04-22 11:22:12 -Generating unique operation named: editUsingGET_16
2019-04-22 11:22:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 11:22:12 -Generating unique operation named: listUsingGET_18
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_27
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_28
2019-04-22 11:22:12 -Generating unique operation named: saveUsingPOST_16
2019-04-22 11:22:12 -Generating unique operation named: updateUsingGET_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPOST_16
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPUT_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 11:22:12 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 11:22:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 11:22:12 -Generating unique operation named: addUsingGET_16
2019-04-22 11:22:12 -Generating unique operation named: editUsingGET_17
2019-04-22 11:22:12 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 11:22:12 -Generating unique operation named: listUsingGET_19
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_29
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_30
2019-04-22 11:22:12 -Generating unique operation named: saveUsingPOST_17
2019-04-22 11:22:12 -Generating unique operation named: updateUsingGET_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPOST_17
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPUT_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 11:22:12 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 11:22:12 -Generating unique operation named: addUsingGET_17
2019-04-22 11:22:12 -Generating unique operation named: editUsingGET_18
2019-04-22 11:22:12 -Generating unique operation named: listUsingGET_20
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_31
2019-04-22 11:22:12 -Generating unique operation named: removeUsingPOST_32
2019-04-22 11:22:12 -Generating unique operation named: saveUsingPOST_18
2019-04-22 11:22:12 -Generating unique operation named: updateUsingGET_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPOST_18
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPUT_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 11:22:12 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 11:22:12 -Starting Quartz Scheduler now
2019-04-22 11:22:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 11:22:12 -Starting...
2019-04-22 11:22:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 11:22:12 -Started.
2019-04-22 11:22:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 11:22:12 -Using a shared selector for servlet write/read
2019-04-22 11:22:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 11:22:12 -Started BootdoApplication in 27.65 seconds (JVM running for 28.626)
2019-04-22 11:22:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 11:22:12 -==> Parameters: 
2019-04-22 11:22:12 -<==      Total: 1
2019-04-22 11:22:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 11:22:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 11:22:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-04-22 11:22:27 -Enabling session validation scheduler...
2019-04-22 11:22:27 -请求地址 : http://localhost:8081/login;JSESSIONID=b4644ceb-e9b0-45b8-9654-61ff852a4777
2019-04-22 11:22:27 -HTTP METHOD : GET
2019-04-22 11:22:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 11:22:27 -参数 : [{}]
2019-04-22 11:22:27 -耗时 : 3
2019-04-22 11:22:27 -返回值 : login
2019-04-22 11:22:28 -请求地址 : http://localhost:8081/getVerify
2019-04-22 11:22:28 -HTTP METHOD : GET
2019-04-22 11:22:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 11:22:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ba03856, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4f06822d]
2019-04-22 11:22:31 -1752
2019-04-22 11:22:31 -耗时 : 3197
2019-04-22 11:22:31 -返回值 : null
2019-04-22 11:22:38 -请求地址 : http://localhost:8081/login
2019-04-22 11:22:38 -HTTP METHOD : POST
2019-04-22 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 11:22:38 -参数 : [admin, 111111, 1752, org.apache.shiro.web.servlet.ShiroHttpServletRequest@453e3670]
2019-04-22 11:22:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 11:22:38 -==> Parameters: admin(String)
2019-04-22 11:22:38 -<==      Total: 1
2019-04-22 11:22:38 -耗时 : 77
2019-04-22 11:22:38 -返回值 : {msg=操作成功, code=0}
2019-04-22 11:22:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 11:22:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:22:38 -==> Parameters: 1(Long), admin(String), 登录(String), 77(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 11:22:38.22(Timestamp)
2019-04-22 11:22:38 -请求地址 : http://localhost:8081/index
2019-04-22 11:22:38 -HTTP METHOD : GET
2019-04-22 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 11:22:38 -参数 : [{}]
2019-04-22 11:22:38 -<==    Updates: 1
2019-04-22 11:22:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 11:22:38 -==> Parameters: 1(Long)
2019-04-22 11:22:38 -<==      Total: 49
2019-04-22 11:22:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 11:22:38 -==> Parameters: 138(Long)
2019-04-22 11:22:38 -<==      Total: 1
2019-04-22 11:22:38 -耗时 : 174
2019-04-22 11:22:38 -返回值 : index_v1
2019-04-22 11:22:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:22:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 175(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 11:22:38.579(Timestamp)
2019-04-22 11:22:38 -<==    Updates: 1
2019-04-22 11:22:38 -请求地址 : http://localhost:8081/main
2019-04-22 11:22:38 -HTTP METHOD : GET
2019-04-22 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:22:38 -参数 : []
2019-04-22 11:22:38 -耗时 : 0
2019-04-22 11:22:38 -返回值 : main
2019-04-22 11:22:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 11:22:38 -HTTP METHOD : GET
2019-04-22 11:22:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 11:22:38 -参数 : []
2019-04-22 11:22:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 11:22:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 11:22:38 -<==      Total: 0
2019-04-22 11:22:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 11:22:39 -==> Parameters: 1(Long), 0(String)
2019-04-22 11:22:39 -<==      Total: 1
2019-04-22 11:22:39 -耗时 : 34
2019-04-22 11:22:39 -返回值 : com.bootdo.common.utils.PageUtils@1f72b5da
2019-04-22 11:22:39 -请求地址 : http://localhost:8081/main
2019-04-22 11:22:39 -HTTP METHOD : GET
2019-04-22 11:22:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 11:22:39 -参数 : []
2019-04-22 11:22:39 -耗时 : 0
2019-04-22 11:22:39 -返回值 : main
2019-04-22 11:22:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 11:22:41 -==> Parameters: 1(Long)
2019-04-22 11:22:41 -<==      Total: 93
2019-04-22 11:22:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 11:22:41 -HTTP METHOD : GET
2019-04-22 11:22:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 11:22:41 -参数 : []
2019-04-22 11:22:41 -耗时 : 0
2019-04-22 11:22:41 -返回值 : /moneyList/moneyList
2019-04-22 11:22:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 11:22:46 -HTTP METHOD : GET
2019-04-22 11:22:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 11:22:46 -参数 : []
2019-04-22 11:22:46 -耗时 : 1
2019-04-22 11:22:46 -返回值 : system/dept/deptTree
2019-04-22 11:22:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 11:22:46 -HTTP METHOD : GET
2019-04-22 11:22:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 11:22:46 -参数 : []
2019-04-22 11:22:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 11:22:46 -==> Parameters: 
2019-04-22 11:22:46 -<==      Total: 3
2019-04-22 11:22:46 -耗时 : 23
2019-04-22 11:22:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 11:22:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:22:49 -HTTP METHOD : POST
2019-04-22 11:22:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:22:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20088604]
2019-04-22 11:22:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:22:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:22:49 -<==      Total: 3
2019-04-22 11:22:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:22:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:22:49.346(Timestamp)
2019-04-22 11:22:49 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:22:49 -<==    Updates: 1
2019-04-22 11:22:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:22:50 -HTTP METHOD : POST
2019-04-22 11:22:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:22:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29f580ff]
2019-04-22 11:22:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:22:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:22:50 -<==      Total: 3
2019-04-22 11:22:50 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:22:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:22:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:22:50.108(Timestamp)
2019-04-22 11:22:50 -<==    Updates: 1
2019-04-22 11:22:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 11:22:50 -HTTP METHOD : POST
2019-04-22 11:22:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 11:22:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4b3511dd]
2019-04-22 11:22:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 11:22:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 11:22:50 -<==      Total: 3
2019-04-22 11:22:50 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.queryAllUser(MoneyListController.java:63)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$28bfc56b.queryAllUser(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 11:22:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 11:22:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/queryAllUser(String), java.lang.NullPointerException(String), null, 2019-04-22 11:22:50.385(Timestamp)
2019-04-22 11:22:50 -<==    Updates: 1
2019-04-22 11:23:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-22 11:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-04-22 12:33:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 749]
2019-04-22 12:41:52 -Validating all active sessions...
2019-04-22 12:41:52 -Finished session validation.  [1] sessions were stopped.
2019-04-22 12:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1260]
2019-04-22 13:43:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 0, completed tasks = 1643]
2019-04-22 13:45:48 -Validating all active sessions...
2019-04-22 13:45:48 -Finished session validation.  No sessions were stopped.
2019-04-22 13:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2069]
2019-04-22 14:02:57 -请求地址 : http://localhost:8081/login;JSESSIONID=debe4fb7-ea19-49ae-8f25-c41f4676d354
2019-04-22 14:02:57 -HTTP METHOD : GET
2019-04-22 14:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 14:02:57 -参数 : [{}]
2019-04-22 14:02:57 -耗时 : 3
2019-04-22 14:02:57 -返回值 : login
2019-04-22 14:02:58 -请求地址 : http://localhost:8081/getVerify
2019-04-22 14:02:58 -HTTP METHOD : GET
2019-04-22 14:02:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 14:02:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@59fbcd0f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@772e009b]
2019-04-22 14:02:58 -3562
2019-04-22 14:02:58 -耗时 : 81
2019-04-22 14:02:58 -返回值 : null
2019-04-22 14:02:58 -请求地址 : http://localhost:8081/login
2019-04-22 14:02:58 -HTTP METHOD : GET
2019-04-22 14:02:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 14:02:58 -参数 : [{}]
2019-04-22 14:02:58 -耗时 : 3
2019-04-22 14:02:58 -返回值 : login
2019-04-22 14:03:03 -请求地址 : http://localhost:8081/login
2019-04-22 14:03:03 -HTTP METHOD : POST
2019-04-22 14:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 14:03:03 -参数 : [admin, 111111, 3562, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65763025]
2019-04-22 14:03:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 14:03:03 -==> Parameters: admin(String)
2019-04-22 14:03:03 -<==      Total: 1
2019-04-22 14:03:03 -耗时 : 32
2019-04-22 14:03:03 -返回值 : {msg=操作成功, code=0}
2019-04-22 14:03:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 14:03:03 -==> Parameters: 1(Long), admin(String), 登录(String), 33(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 14:03:03.951(Timestamp)
2019-04-22 14:03:03 -请求地址 : http://localhost:8081/index
2019-04-22 14:03:03 -HTTP METHOD : GET
2019-04-22 14:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 14:03:03 -参数 : [{}]
2019-04-22 14:03:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 14:03:03 -==> Parameters: 1(Long)
2019-04-22 14:03:04 -<==    Updates: 1
2019-04-22 14:03:04 -<==      Total: 49
2019-04-22 14:03:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 14:03:04 -==> Parameters: 138(Long)
2019-04-22 14:03:04 -<==      Total: 1
2019-04-22 14:03:04 -耗时 : 327
2019-04-22 14:03:04 -返回值 : index_v1
2019-04-22 14:03:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 14:03:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 328(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 14:03:04.303(Timestamp)
2019-04-22 14:03:04 -<==    Updates: 1
2019-04-22 14:03:04 -请求地址 : http://localhost:8081/main
2019-04-22 14:03:04 -HTTP METHOD : GET
2019-04-22 14:03:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 14:03:04 -参数 : []
2019-04-22 14:03:04 -耗时 : 1
2019-04-22 14:03:04 -返回值 : main
2019-04-22 14:03:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 14:03:04 -HTTP METHOD : GET
2019-04-22 14:03:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 14:03:04 -参数 : []
2019-04-22 14:03:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 14:03:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 14:03:04 -<==      Total: 0
2019-04-22 14:03:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 14:03:04 -==> Parameters: 1(Long), 0(String)
2019-04-22 14:03:04 -<==      Total: 1
2019-04-22 14:03:04 -耗时 : 68
2019-04-22 14:03:04 -返回值 : com.bootdo.common.utils.PageUtils@1ed6d32e
2019-04-22 14:03:04 -请求地址 : http://localhost:8081/main
2019-04-22 14:03:04 -HTTP METHOD : GET
2019-04-22 14:03:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 14:03:04 -参数 : []
2019-04-22 14:03:04 -耗时 : 1
2019-04-22 14:03:04 -返回值 : main
2019-04-22 14:03:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 14:03:34 -==> Parameters: 1(Long)
2019-04-22 14:03:34 -<==      Total: 93
2019-04-22 14:03:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 14:03:34 -HTTP METHOD : GET
2019-04-22 14:03:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 14:03:34 -参数 : []
2019-04-22 14:03:34 -耗时 : 1
2019-04-22 14:03:34 -返回值 : /moneyList/moneyList
2019-04-22 14:03:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 14:03:43 -HTTP METHOD : GET
2019-04-22 14:03:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 14:03:43 -参数 : []
2019-04-22 14:03:43 -耗时 : 1
2019-04-22 14:03:43 -返回值 : system/dept/deptTree
2019-04-22 14:03:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 14:03:43 -HTTP METHOD : GET
2019-04-22 14:03:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 14:03:43 -参数 : []
2019-04-22 14:03:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 14:03:43 -==> Parameters: 
2019-04-22 14:03:43 -<==      Total: 3
2019-04-22 14:03:43 -耗时 : 48
2019-04-22 14:03:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 14:03:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 14:03:50 -HTTP METHOD : POST
2019-04-22 14:03:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 14:03:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@50489b47]
2019-04-22 14:03:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 14:03:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 14:03:50 -<==      Total: 3
2019-04-22 14:03:50 -耗时 : 47
2019-04-22 14:03:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7ce1ff95, com.bootdo.moneyList.damain.MoneyListDO@2ba25ef1, com.bootdo.moneyList.damain.MoneyListDO@3f246a61]
2019-04-22 14:04:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 14:04:49 -HTTP METHOD : POST
2019-04-22 14:04:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 14:04:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1bfad013]
2019-04-22 14:04:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-22 14:04:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-22 14:04:49 -<==      Total: 3
2019-04-22 14:04:49 -耗时 : 17
2019-04-22 14:04:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2aaae533, com.bootdo.moneyList.damain.MoneyListDO@671dc23d, com.bootdo.moneyList.damain.MoneyListDO@a1b75b4]
2019-04-22 14:06:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 14:06:28 -HTTP METHOD : POST
2019-04-22 14:06:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 14:06:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@c311cef]
2019-04-22 14:06:28 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-04-22 14:06:29 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-04-22 14:06:29 -<==      Total: 1
2019-04-22 14:06:29 -耗时 : 145
2019-04-22 14:06:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6d02b195]
2019-04-22 14:06:30 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 14:06:30 -HTTP METHOD : POST
2019-04-22 14:06:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 14:06:30 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@297fe0e1]
2019-04-22 14:06:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_name = ? 
2019-04-22 14:06:30 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String), 2019-02(String), 2(String), 1-0001(String), 李文英(String), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-04-22 14:06:30 -<==      Total: 3
2019-04-22 14:06:30 -耗时 : 13
2019-04-22 14:06:30 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4de1ffac, com.bootdo.moneyList.damain.MoneyListDO@31f12fa2, com.bootdo.moneyList.damain.MoneyListDO@49a474cb]
2019-04-22 14:06:37 -请求地址 : http://localhost:8081/index
2019-04-22 14:06:37 -HTTP METHOD : GET
2019-04-22 14:06:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 14:06:37 -参数 : [{}]
2019-04-22 14:06:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 14:06:37 -==> Parameters: 1(Long)
2019-04-22 14:06:37 -<==      Total: 49
2019-04-22 14:06:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 14:06:37 -==> Parameters: 138(Long)
2019-04-22 14:06:37 -<==      Total: 1
2019-04-22 14:06:37 -耗时 : 29
2019-04-22 14:06:37 -返回值 : index_v1
2019-04-22 14:06:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 14:06:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 14:06:37.465(Timestamp)
2019-04-22 14:06:37 -请求地址 : http://localhost:8081/main
2019-04-22 14:06:37 -HTTP METHOD : GET
2019-04-22 14:06:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 14:06:37 -参数 : []
2019-04-22 14:06:37 -耗时 : 2
2019-04-22 14:06:37 -返回值 : main
2019-04-22 14:06:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 14:06:37 -HTTP METHOD : GET
2019-04-22 14:06:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 14:06:37 -参数 : []
2019-04-22 14:06:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 14:06:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 14:06:37 -<==      Total: 0
2019-04-22 14:06:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 14:06:37 -==> Parameters: 1(Long), 0(String)
2019-04-22 14:06:37 -<==      Total: 1
2019-04-22 14:06:37 -耗时 : 11
2019-04-22 14:06:37 -返回值 : com.bootdo.common.utils.PageUtils@338704ff
2019-04-22 14:06:37 -<==    Updates: 1
2019-04-22 14:06:37 -请求地址 : http://localhost:8081/main
2019-04-22 14:06:37 -HTTP METHOD : GET
2019-04-22 14:06:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 14:06:37 -参数 : []
2019-04-22 14:06:37 -耗时 : 1
2019-04-22 14:06:37 -返回值 : main
2019-04-22 14:06:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-22 14:06:40 -HTTP METHOD : GET
2019-04-22 14:06:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-22 14:06:40 -参数 : []
2019-04-22 14:06:40 -耗时 : 1
2019-04-22 14:06:40 -返回值 : /moneyList/moneyList
2019-04-22 14:06:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 14:06:44 -HTTP METHOD : POST
2019-04-22 14:06:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 14:06:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6155bfd5]
2019-04-22 14:06:44 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-04-22 14:06:44 -==> Parameters: 李(String), 李(String), 李(String)
2019-04-22 14:06:44 -<==      Total: 1
2019-04-22 14:06:44 -耗时 : 8
2019-04-22 14:06:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@15f35c6b]
2019-04-22 14:06:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 14:06:53 -HTTP METHOD : POST
2019-04-22 14:06:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 14:06:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@531df038]
2019-04-22 14:06:53 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-04-22 14:06:53 -==> Parameters: 2019-02(String), 李文英(String), 2019-02(String), 李文英(String), 2019-02(String), 李文英(String)
2019-04-22 14:06:53 -<==      Total: 1
2019-04-22 14:06:53 -耗时 : 8
2019-04-22 14:06:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@27e637ce]
2019-04-22 14:06:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 14:06:55 -HTTP METHOD : POST
2019-04-22 14:06:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 14:06:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@339e5f8c]
2019-04-22 14:06:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_name = ? 
2019-04-22 14:06:55 -==> Parameters: 2019-02(String), 李文英(String), 2019-02(String), 李文英(String), 2019-02(String), 李文英(String)
2019-04-22 14:06:55 -<==      Total: 3
2019-04-22 14:06:55 -耗时 : 12
2019-04-22 14:06:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4f758a28, com.bootdo.moneyList.damain.MoneyListDO@15d2e04, com.bootdo.moneyList.damain.MoneyListDO@73aeca87]
2019-04-22 14:06:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-22 14:06:58 -HTTP METHOD : GET
2019-04-22 14:06:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-22 14:06:58 -参数 : []
2019-04-22 14:06:58 -耗时 : 1
2019-04-22 14:06:58 -返回值 : system/dept/deptTree
2019-04-22 14:06:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-22 14:06:58 -HTTP METHOD : GET
2019-04-22 14:06:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-22 14:06:58 -参数 : []
2019-04-22 14:06:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-22 14:06:58 -==> Parameters: 
2019-04-22 14:06:58 -<==      Total: 3
2019-04-22 14:06:58 -耗时 : 5
2019-04-22 14:06:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-22 14:09:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-22 14:09:28 -HTTP METHOD : POST
2019-04-22 14:09:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-22 14:09:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1afacf60]
2019-04-22 14:09:28 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) )userName 
2019-04-22 14:09:28 -==> Parameters: 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String), 2019-02(String), 2(String), 李(String)
2019-04-22 14:09:28 -<==      Total: 1
2019-04-22 14:09:28 -耗时 : 7
2019-04-22 14:09:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@21fa27da]
2019-04-22 14:09:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-22 14:09:32 -HTTP METHOD : POST
2019-04-22 14:09:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-22 14:09:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1ed802d6]
2019-04-22 14:09:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_name = ? 
2019-04-22 14:09:32 -==> Parameters: 2019-02(String), 2(String), 李文英(String), 2019-02(String), 2(String), 李文英(String), 2019-02(String), 2(String), 李文英(String)
2019-04-22 14:09:32 -<==      Total: 3
2019-04-22 14:09:32 -耗时 : 11
2019-04-22 14:09:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@22479238, com.bootdo.moneyList.damain.MoneyListDO@2dd8921f, com.bootdo.moneyList.damain.MoneyListDO@7348ebc0]
2019-04-22 14:22:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 14:22:26 -==> Parameters: 1(Long)
2019-04-22 14:22:26 -<==      Total: 93
2019-04-22 14:22:26 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 14:22:26 -HTTP METHOD : GET
2019-04-22 14:22:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 14:22:26 -参数 : []
2019-04-22 14:22:26 -耗时 : 21
2019-04-22 14:22:26 -返回值 : charts/countMM
2019-04-22 14:22:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 14:22:26 -HTTP METHOD : GET
2019-04-22 14:22:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 14:22:26 -参数 : [userType]
2019-04-22 14:22:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 14:22:27 -==> Parameters: userType(String)
2019-04-22 14:22:27 -<==      Total: 4
2019-04-22 14:22:27 -耗时 : 101
2019-04-22 14:22:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 14:22:27 -Validating all active sessions...
2019-04-22 14:22:27 -Finished session validation.  No sessions were stopped.
2019-04-22 14:22:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 14:22:32 -HTTP METHOD : GET
2019-04-22 14:22:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 14:22:32 -参数 : []
2019-04-22 14:22:32 -耗时 : 13
2019-04-22 14:22:32 -返回值 : charts/tableElecMM
2019-04-22 14:22:39 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 14:22:39 -HTTP METHOD : GET
2019-04-22 14:22:39 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 14:22:39 -参数 : []
2019-04-22 14:22:39 -耗时 : 0
2019-04-22 14:22:39 -返回值 : charts/countYY
2019-04-22 14:22:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 14:22:39 -HTTP METHOD : GET
2019-04-22 14:22:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 14:22:39 -参数 : [userType]
2019-04-22 14:22:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 14:22:39 -==> Parameters: userType(String)
2019-04-22 14:22:39 -<==      Total: 4
2019-04-22 14:22:39 -耗时 : 6
2019-04-22 14:22:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 14:22:41 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 14:22:41 -HTTP METHOD : GET
2019-04-22 14:22:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 14:22:41 -参数 : []
2019-04-22 14:22:41 -耗时 : 10
2019-04-22 14:22:41 -返回值 : charts/tableHeatMM
2019-04-22 14:22:42 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 14:22:42 -HTTP METHOD : GET
2019-04-22 14:22:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 14:22:42 -参数 : []
2019-04-22 14:22:42 -耗时 : 12
2019-04-22 14:22:42 -返回值 : charts/tableWaterMM
2019-04-22 14:23:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2501]
2019-04-22 14:40:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 14:40:07 -==> Parameters: 1(Long)
2019-04-22 14:40:07 -<==      Total: 93
2019-04-22 14:40:07 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 14:40:07 -HTTP METHOD : GET
2019-04-22 14:40:07 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 14:40:07 -参数 : []
2019-04-22 14:40:07 -耗时 : 1
2019-04-22 14:40:07 -返回值 : charts/countYY
2019-04-22 14:40:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 14:40:08 -HTTP METHOD : GET
2019-04-22 14:40:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 14:40:08 -参数 : [userType]
2019-04-22 14:40:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 14:40:08 -==> Parameters: userType(String)
2019-04-22 14:40:08 -<==      Total: 4
2019-04-22 14:40:08 -耗时 : 6
2019-04-22 14:40:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 14:40:10 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-22 14:40:10 -HTTP METHOD : GET
2019-04-22 14:40:10 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-22 14:40:10 -参数 : []
2019-04-22 14:40:10 -耗时 : 0
2019-04-22 14:40:10 -返回值 : charts/countOwe
2019-04-22 14:40:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 14:40:10 -HTTP METHOD : GET
2019-04-22 14:40:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 14:40:10 -参数 : [userType]
2019-04-22 14:40:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 14:40:10 -==> Parameters: userType(String)
2019-04-22 14:40:10 -<==      Total: 4
2019-04-22 14:40:10 -耗时 : 9
2019-04-22 14:40:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 14:40:12 -请求地址 : http://localhost:8081/charts/countRun
2019-04-22 14:40:12 -HTTP METHOD : GET
2019-04-22 14:40:12 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-22 14:40:12 -参数 : []
2019-04-22 14:40:12 -耗时 : 1
2019-04-22 14:40:12 -返回值 : charts/countRun
2019-04-22 14:40:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 14:40:12 -HTTP METHOD : GET
2019-04-22 14:40:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 14:40:12 -参数 : [userType]
2019-04-22 14:40:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 14:40:12 -==> Parameters: userType(String)
2019-04-22 14:40:12 -<==      Total: 4
2019-04-22 14:40:12 -耗时 : 6
2019-04-22 14:40:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 14:40:14 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 14:40:14 -HTTP METHOD : GET
2019-04-22 14:40:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 14:40:14 -参数 : []
2019-04-22 14:40:14 -耗时 : 16
2019-04-22 14:40:14 -返回值 : charts/tableElecYY
2019-04-22 14:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2934]
2019-04-22 15:22:27 -Validating all active sessions...
2019-04-22 15:22:27 -Finished session validation.  [1] sessions were stopped.
2019-04-22 15:23:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3367]
2019-04-22 15:47:39 -请求地址 : http://localhost:8081/login;JSESSIONID=0246d827-4560-455d-824e-3fd2f775b95e
2019-04-22 15:47:39 -HTTP METHOD : GET
2019-04-22 15:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 15:47:39 -参数 : [{}]
2019-04-22 15:47:39 -耗时 : 3
2019-04-22 15:47:39 -返回值 : login
2019-04-22 15:47:40 -请求地址 : http://localhost:8081/getVerify
2019-04-22 15:47:40 -HTTP METHOD : GET
2019-04-22 15:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 15:47:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7fe3e6b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@230d98aa]
2019-04-22 15:47:40 -7677
2019-04-22 15:47:40 -耗时 : 290
2019-04-22 15:47:40 -返回值 : null
2019-04-22 15:47:40 -请求地址 : http://localhost:8081/login
2019-04-22 15:47:40 -HTTP METHOD : GET
2019-04-22 15:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 15:47:40 -参数 : [{}]
2019-04-22 15:47:40 -耗时 : 22
2019-04-22 15:47:40 -返回值 : login
2019-04-22 15:47:44 -请求地址 : http://localhost:8081/login
2019-04-22 15:47:44 -HTTP METHOD : POST
2019-04-22 15:47:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 15:47:44 -参数 : [admin, 111111, 7677, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3756fb2f]
2019-04-22 15:47:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 15:47:44 -==> Parameters: admin(String)
2019-04-22 15:47:44 -<==      Total: 1
2019-04-22 15:47:44 -耗时 : 137
2019-04-22 15:47:44 -返回值 : {msg=操作成功, code=0}
2019-04-22 15:47:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 15:47:44 -==> Parameters: 1(Long), admin(String), 登录(String), 137(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 15:47:44.307(Timestamp)
2019-04-22 15:47:44 -请求地址 : http://localhost:8081/index
2019-04-22 15:47:44 -HTTP METHOD : GET
2019-04-22 15:47:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 15:47:44 -参数 : [{}]
2019-04-22 15:47:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 15:47:44 -==> Parameters: 1(Long)
2019-04-22 15:47:44 -<==    Updates: 1
2019-04-22 15:47:44 -<==      Total: 49
2019-04-22 15:47:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 15:47:44 -==> Parameters: 138(Long)
2019-04-22 15:47:44 -<==      Total: 1
2019-04-22 15:47:44 -耗时 : 631
2019-04-22 15:47:44 -返回值 : index_v1
2019-04-22 15:47:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 15:47:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 632(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 15:47:44.967(Timestamp)
2019-04-22 15:47:45 -<==    Updates: 1
2019-04-22 15:47:45 -请求地址 : http://localhost:8081/main
2019-04-22 15:47:45 -HTTP METHOD : GET
2019-04-22 15:47:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 15:47:45 -参数 : []
2019-04-22 15:47:45 -耗时 : 1
2019-04-22 15:47:45 -返回值 : main
2019-04-22 15:47:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 15:47:47 -HTTP METHOD : GET
2019-04-22 15:47:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 15:47:47 -参数 : []
2019-04-22 15:47:47 -请求地址 : http://localhost:8081/main
2019-04-22 15:47:47 -HTTP METHOD : GET
2019-04-22 15:47:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 15:47:47 -参数 : []
2019-04-22 15:47:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 15:47:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 15:47:47 -<==      Total: 0
2019-04-22 15:47:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 15:47:47 -==> Parameters: 1(Long), 0(String)
2019-04-22 15:47:47 -<==      Total: 1
2019-04-22 15:47:47 -耗时 : 515
2019-04-22 15:47:47 -返回值 : com.bootdo.common.utils.PageUtils@2ad4f8c3
2019-04-22 15:47:47 -耗时 : 255
2019-04-22 15:47:47 -返回值 : main
2019-04-22 15:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3785]
2019-04-22 16:05:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 16:05:17 -==> Parameters: 1(Long)
2019-04-22 16:05:17 -<==      Total: 93
2019-04-22 16:05:17 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:05:17 -HTTP METHOD : GET
2019-04-22 16:05:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:05:17 -参数 : []
2019-04-22 16:05:17 -耗时 : 1
2019-04-22 16:05:17 -返回值 : charts/tableElecYY
2019-04-22 16:12:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:12:01 -HTTP METHOD : GET
2019-04-22 16:12:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:12:01 -参数 : []
2019-04-22 16:12:01 -耗时 : 1
2019-04-22 16:12:01 -返回值 : charts/tableElecMM
2019-04-22 16:12:03 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:12:03 -HTTP METHOD : GET
2019-04-22 16:12:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:12:03 -参数 : []
2019-04-22 16:12:03 -耗时 : 0
2019-04-22 16:12:03 -返回值 : charts/tableWaterMM
2019-04-22 16:21:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 16:21:43 -==> Parameters: 1(Long)
2019-04-22 16:21:43 -<==      Total: 93
2019-04-22 16:21:43 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 16:21:43 -HTTP METHOD : GET
2019-04-22 16:21:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 16:21:43 -参数 : []
2019-04-22 16:21:43 -耗时 : 1
2019-04-22 16:21:43 -返回值 : charts/countMM
2019-04-22 16:21:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 16:21:43 -HTTP METHOD : GET
2019-04-22 16:21:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 16:21:43 -参数 : [userType]
2019-04-22 16:21:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 16:21:43 -==> Parameters: userType(String)
2019-04-22 16:21:43 -<==      Total: 4
2019-04-22 16:21:43 -耗时 : 48
2019-04-22 16:21:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 16:21:50 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:21:50 -HTTP METHOD : GET
2019-04-22 16:21:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:21:50 -参数 : []
2019-04-22 16:21:50 -耗时 : 1
2019-04-22 16:21:50 -返回值 : charts/tableElecMM
2019-04-22 16:23:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4218]
2019-04-22 16:23:28 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:23:28 -HTTP METHOD : GET
2019-04-22 16:23:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:23:28 -参数 : []
2019-04-22 16:23:28 -耗时 : 96
2019-04-22 16:23:28 -返回值 : charts/tableWaterYY
2019-04-22 16:24:17 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 16:24:17 -HTTP METHOD : GET
2019-04-22 16:24:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 16:24:17 -参数 : []
2019-04-22 16:24:17 -耗时 : 36
2019-04-22 16:24:17 -返回值 : charts/tableHeatYY
2019-04-22 16:25:26 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:25:26 -HTTP METHOD : GET
2019-04-22 16:25:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:25:26 -参数 : []
2019-04-22 16:25:26 -耗时 : 0
2019-04-22 16:25:26 -返回值 : charts/tableWaterYY
2019-04-22 16:28:31 -Validating all active sessions...
2019-04-22 16:28:31 -Finished session validation.  No sessions were stopped.
2019-04-22 16:29:31 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:29:31 -HTTP METHOD : GET
2019-04-22 16:29:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:29:31 -参数 : []
2019-04-22 16:29:31 -耗时 : 0
2019-04-22 16:29:31 -返回值 : charts/tableWaterMM
2019-04-22 16:30:17 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:17 -HTTP METHOD : GET
2019-04-22 16:30:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:17 -参数 : []
2019-04-22 16:30:17 -耗时 : 1
2019-04-22 16:30:17 -返回值 : charts/tableHeatMM
2019-04-22 16:30:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:20 -HTTP METHOD : GET
2019-04-22 16:30:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:20 -参数 : []
2019-04-22 16:30:20 -耗时 : 0
2019-04-22 16:30:20 -返回值 : charts/tableElecMM
2019-04-22 16:30:21 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:21 -HTTP METHOD : GET
2019-04-22 16:30:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:21 -参数 : []
2019-04-22 16:30:21 -耗时 : 19
2019-04-22 16:30:21 -返回值 : charts/tableHeatMM
2019-04-22 16:30:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:21 -HTTP METHOD : GET
2019-04-22 16:30:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:21 -参数 : []
2019-04-22 16:30:21 -耗时 : 0
2019-04-22 16:30:21 -返回值 : charts/tableWaterMM
2019-04-22 16:30:22 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:22 -HTTP METHOD : GET
2019-04-22 16:30:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:22 -参数 : []
2019-04-22 16:30:22 -耗时 : 1
2019-04-22 16:30:22 -返回值 : charts/tableHeatMM
2019-04-22 16:30:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:22 -HTTP METHOD : GET
2019-04-22 16:30:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:22 -参数 : []
2019-04-22 16:30:22 -耗时 : 1
2019-04-22 16:30:22 -返回值 : charts/tableElecMM
2019-04-22 16:30:25 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:25 -HTTP METHOD : GET
2019-04-22 16:30:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:25 -参数 : []
2019-04-22 16:30:25 -耗时 : 0
2019-04-22 16:30:25 -返回值 : charts/tableHeatMM
2019-04-22 16:30:26 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:26 -HTTP METHOD : GET
2019-04-22 16:30:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:26 -参数 : []
2019-04-22 16:30:26 -耗时 : 0
2019-04-22 16:30:26 -返回值 : charts/tableWaterMM
2019-04-22 16:30:27 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:27 -HTTP METHOD : GET
2019-04-22 16:30:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:27 -参数 : []
2019-04-22 16:30:27 -耗时 : 1
2019-04-22 16:30:27 -返回值 : charts/tableHeatMM
2019-04-22 16:30:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:28 -HTTP METHOD : GET
2019-04-22 16:30:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:28 -参数 : []
2019-04-22 16:30:28 -耗时 : 0
2019-04-22 16:30:28 -返回值 : charts/tableElecMM
2019-04-22 16:30:29 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:29 -HTTP METHOD : GET
2019-04-22 16:30:29 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:29 -参数 : []
2019-04-22 16:30:29 -耗时 : 1
2019-04-22 16:30:29 -返回值 : charts/tableHeatMM
2019-04-22 16:30:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:29 -HTTP METHOD : GET
2019-04-22 16:30:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:29 -参数 : []
2019-04-22 16:30:29 -耗时 : 1
2019-04-22 16:30:29 -返回值 : charts/tableWaterMM
2019-04-22 16:30:31 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:31 -HTTP METHOD : GET
2019-04-22 16:30:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:31 -参数 : []
2019-04-22 16:30:31 -耗时 : 0
2019-04-22 16:30:31 -返回值 : charts/tableHeatMM
2019-04-22 16:30:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:31 -HTTP METHOD : GET
2019-04-22 16:30:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:31 -参数 : []
2019-04-22 16:30:31 -耗时 : 0
2019-04-22 16:30:31 -返回值 : charts/tableElecMM
2019-04-22 16:30:32 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:32 -HTTP METHOD : GET
2019-04-22 16:30:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:32 -参数 : []
2019-04-22 16:30:32 -耗时 : 1
2019-04-22 16:30:32 -返回值 : charts/tableHeatMM
2019-04-22 16:30:32 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:32 -HTTP METHOD : GET
2019-04-22 16:30:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:32 -参数 : []
2019-04-22 16:30:32 -耗时 : 0
2019-04-22 16:30:32 -返回值 : charts/tableWaterMM
2019-04-22 16:30:33 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:33 -HTTP METHOD : GET
2019-04-22 16:30:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:33 -参数 : []
2019-04-22 16:30:33 -耗时 : 0
2019-04-22 16:30:33 -返回值 : charts/tableHeatMM
2019-04-22 16:30:33 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:33 -HTTP METHOD : GET
2019-04-22 16:30:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:33 -参数 : []
2019-04-22 16:30:33 -耗时 : 0
2019-04-22 16:30:33 -返回值 : charts/tableElecMM
2019-04-22 16:30:34 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:34 -HTTP METHOD : GET
2019-04-22 16:30:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:34 -参数 : []
2019-04-22 16:30:34 -耗时 : 1
2019-04-22 16:30:34 -返回值 : charts/tableHeatMM
2019-04-22 16:30:34 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:34 -HTTP METHOD : GET
2019-04-22 16:30:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:34 -参数 : []
2019-04-22 16:30:34 -耗时 : 0
2019-04-22 16:30:34 -返回值 : charts/tableWaterMM
2019-04-22 16:30:35 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:35 -HTTP METHOD : GET
2019-04-22 16:30:35 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:35 -参数 : []
2019-04-22 16:30:35 -耗时 : 1
2019-04-22 16:30:35 -返回值 : charts/tableHeatMM
2019-04-22 16:30:35 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:35 -HTTP METHOD : GET
2019-04-22 16:30:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:35 -参数 : []
2019-04-22 16:30:35 -耗时 : 1
2019-04-22 16:30:35 -返回值 : charts/tableElecMM
2019-04-22 16:30:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 16:30:36 -HTTP METHOD : GET
2019-04-22 16:30:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 16:30:36 -参数 : []
2019-04-22 16:30:36 -耗时 : 0
2019-04-22 16:30:36 -返回值 : charts/tableElecMM
2019-04-22 16:30:36 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 16:30:36 -HTTP METHOD : GET
2019-04-22 16:30:36 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 16:30:36 -参数 : []
2019-04-22 16:30:36 -耗时 : 0
2019-04-22 16:30:36 -返回值 : charts/tableHeatMM
2019-04-22 16:30:37 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:37 -HTTP METHOD : GET
2019-04-22 16:30:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:37 -参数 : []
2019-04-22 16:30:37 -耗时 : 1
2019-04-22 16:30:37 -返回值 : charts/tableWaterMM
2019-04-22 16:30:37 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 16:30:37 -HTTP METHOD : GET
2019-04-22 16:30:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 16:30:37 -参数 : []
2019-04-22 16:30:37 -耗时 : 2
2019-04-22 16:30:37 -返回值 : charts/tableWaterMM
2019-04-22 16:30:40 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 16:30:40 -HTTP METHOD : GET
2019-04-22 16:30:40 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 16:30:40 -参数 : []
2019-04-22 16:30:40 -耗时 : 2
2019-04-22 16:30:40 -返回值 : charts/countYY
2019-04-22 16:30:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 16:30:41 -HTTP METHOD : GET
2019-04-22 16:30:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 16:30:41 -参数 : [userType]
2019-04-22 16:30:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 16:30:41 -==> Parameters: userType(String)
2019-04-22 16:30:41 -<==      Total: 4
2019-04-22 16:30:41 -耗时 : 5
2019-04-22 16:30:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 16:37:53 -请求地址 : http://localhost:8081/index
2019-04-22 16:37:53 -HTTP METHOD : GET
2019-04-22 16:37:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:37:53 -参数 : [{}]
2019-04-22 16:37:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:37:53 -==> Parameters: 1(Long)
2019-04-22 16:37:53 -<==      Total: 49
2019-04-22 16:37:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:37:53 -==> Parameters: 138(Long)
2019-04-22 16:37:53 -<==      Total: 1
2019-04-22 16:37:53 -耗时 : 360
2019-04-22 16:37:53 -返回值 : index_v1
2019-04-22 16:37:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:37:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 360(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:37:53.374(Timestamp)
2019-04-22 16:37:53 -<==    Updates: 1
2019-04-22 16:37:53 -请求地址 : http://localhost:8081/main
2019-04-22 16:37:53 -HTTP METHOD : GET
2019-04-22 16:37:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:37:53 -参数 : []
2019-04-22 16:37:53 -耗时 : 0
2019-04-22 16:37:53 -返回值 : main
2019-04-22 16:37:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:37:54 -HTTP METHOD : GET
2019-04-22 16:37:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:37:54 -参数 : []
2019-04-22 16:37:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:37:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:37:54 -<==      Total: 0
2019-04-22 16:37:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:37:54 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:37:54 -<==      Total: 1
2019-04-22 16:37:54 -耗时 : 8
2019-04-22 16:37:54 -返回值 : com.bootdo.common.utils.PageUtils@68628e7e
2019-04-22 16:37:54 -请求地址 : http://localhost:8081/main
2019-04-22 16:37:54 -HTTP METHOD : GET
2019-04-22 16:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:37:54 -参数 : []
2019-04-22 16:37:54 -耗时 : 9
2019-04-22 16:37:54 -返回值 : main
2019-04-22 16:37:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 16:37:57 -==> Parameters: 1(Long)
2019-04-22 16:37:57 -<==      Total: 93
2019-04-22 16:37:57 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:37:57 -HTTP METHOD : GET
2019-04-22 16:37:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:37:57 -参数 : []
2019-04-22 16:37:57 -耗时 : 1
2019-04-22 16:37:57 -返回值 : charts/tableElecYY
2019-04-22 16:37:58 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:37:58 -HTTP METHOD : GET
2019-04-22 16:37:58 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:37:58 -参数 : []
2019-04-22 16:37:58 -耗时 : 0
2019-04-22 16:37:58 -返回值 : charts/tableWaterYY
2019-04-22 16:39:54 -请求地址 : http://localhost:8081/index
2019-04-22 16:39:54 -HTTP METHOD : GET
2019-04-22 16:39:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:39:54 -参数 : [{}]
2019-04-22 16:39:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:39:54 -==> Parameters: 1(Long)
2019-04-22 16:39:54 -<==      Total: 49
2019-04-22 16:39:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:39:54 -==> Parameters: 138(Long)
2019-04-22 16:39:54 -<==      Total: 1
2019-04-22 16:39:54 -耗时 : 82
2019-04-22 16:39:54 -返回值 : index_v1
2019-04-22 16:39:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:39:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:39:54.814(Timestamp)
2019-04-22 16:39:54 -<==    Updates: 1
2019-04-22 16:39:55 -请求地址 : http://localhost:8081/main
2019-04-22 16:39:55 -HTTP METHOD : GET
2019-04-22 16:39:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:39:55 -参数 : []
2019-04-22 16:39:55 -耗时 : 0
2019-04-22 16:39:55 -返回值 : main
2019-04-22 16:39:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:39:55 -HTTP METHOD : GET
2019-04-22 16:39:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:39:55 -参数 : []
2019-04-22 16:39:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:39:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:39:55 -<==      Total: 0
2019-04-22 16:39:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:39:55 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:39:55 -<==      Total: 1
2019-04-22 16:39:55 -耗时 : 38
2019-04-22 16:39:55 -返回值 : com.bootdo.common.utils.PageUtils@7b926327
2019-04-22 16:39:55 -请求地址 : http://localhost:8081/main
2019-04-22 16:39:55 -HTTP METHOD : GET
2019-04-22 16:39:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:39:55 -参数 : []
2019-04-22 16:39:55 -耗时 : 1
2019-04-22 16:39:55 -返回值 : main
2019-04-22 16:39:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:39:58 -HTTP METHOD : GET
2019-04-22 16:39:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:39:58 -参数 : []
2019-04-22 16:39:58 -耗时 : 1
2019-04-22 16:39:58 -返回值 : charts/tableElecYY
2019-04-22 16:40:02 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:40:02 -HTTP METHOD : GET
2019-04-22 16:40:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:40:02 -参数 : []
2019-04-22 16:40:02 -耗时 : 1
2019-04-22 16:40:02 -返回值 : charts/tableWaterYY
2019-04-22 16:41:43 -请求地址 : http://localhost:8081/index
2019-04-22 16:41:43 -HTTP METHOD : GET
2019-04-22 16:41:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:41:43 -参数 : [{}]
2019-04-22 16:41:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:41:43 -==> Parameters: 1(Long)
2019-04-22 16:41:43 -<==      Total: 49
2019-04-22 16:41:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:41:43 -==> Parameters: 138(Long)
2019-04-22 16:41:43 -<==      Total: 1
2019-04-22 16:41:43 -耗时 : 77
2019-04-22 16:41:43 -返回值 : index_v1
2019-04-22 16:41:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:41:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 81(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:41:43.419(Timestamp)
2019-04-22 16:41:50 -请求地址 : http://localhost:8081/main
2019-04-22 16:41:50 -HTTP METHOD : GET
2019-04-22 16:41:50 -请求地址 : http://localhost:8081/main
2019-04-22 16:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:41:50 -参数 : []
2019-04-22 16:41:50 -耗时 : 39
2019-04-22 16:41:50 -返回值 : main
2019-04-22 16:41:50 -HTTP METHOD : GET
2019-04-22 16:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:41:50 -参数 : []
2019-04-22 16:41:50 -耗时 : 42
2019-04-22 16:41:50 -返回值 : main
2019-04-22 16:41:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:41:50 -HTTP METHOD : GET
2019-04-22 16:41:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:41:50 -参数 : []
2019-04-22 16:41:50 -<==    Updates: 1
2019-04-22 16:41:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:41:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:41:50 -<==      Total: 0
2019-04-22 16:41:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:41:50 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:41:50 -<==      Total: 1
2019-04-22 16:41:50 -耗时 : 102
2019-04-22 16:41:50 -返回值 : com.bootdo.common.utils.PageUtils@58e63b12
2019-04-22 16:41:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:41:55 -HTTP METHOD : GET
2019-04-22 16:41:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:41:55 -参数 : []
2019-04-22 16:41:55 -耗时 : 0
2019-04-22 16:41:55 -返回值 : charts/tableElecYY
2019-04-22 16:41:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:41:57 -HTTP METHOD : GET
2019-04-22 16:41:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:41:57 -参数 : []
2019-04-22 16:41:57 -耗时 : 0
2019-04-22 16:41:57 -返回值 : charts/tableWaterYY
2019-04-22 16:44:13 -请求地址 : http://localhost:8081/index
2019-04-22 16:44:13 -HTTP METHOD : GET
2019-04-22 16:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:44:13 -参数 : [{}]
2019-04-22 16:44:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:44:13 -==> Parameters: 1(Long)
2019-04-22 16:44:14 -<==      Total: 49
2019-04-22 16:44:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:44:14 -==> Parameters: 138(Long)
2019-04-22 16:44:14 -<==      Total: 1
2019-04-22 16:44:14 -耗时 : 103
2019-04-22 16:44:14 -返回值 : index_v1
2019-04-22 16:44:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:44:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:44:14.025(Timestamp)
2019-04-22 16:44:14 -<==    Updates: 1
2019-04-22 16:44:14 -请求地址 : http://localhost:8081/main
2019-04-22 16:44:14 -HTTP METHOD : GET
2019-04-22 16:44:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:44:14 -参数 : []
2019-04-22 16:44:14 -耗时 : 16
2019-04-22 16:44:14 -返回值 : main
2019-04-22 16:44:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:44:14 -HTTP METHOD : GET
2019-04-22 16:44:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:44:14 -参数 : []
2019-04-22 16:44:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:44:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:44:14 -<==      Total: 0
2019-04-22 16:44:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:44:14 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:44:14 -<==      Total: 1
2019-04-22 16:44:14 -请求地址 : http://localhost:8081/main
2019-04-22 16:44:14 -HTTP METHOD : GET
2019-04-22 16:44:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:44:14 -耗时 : 48
2019-04-22 16:44:14 -参数 : []
2019-04-22 16:44:14 -返回值 : com.bootdo.common.utils.PageUtils@1787788c
2019-04-22 16:44:14 -耗时 : 1
2019-04-22 16:44:14 -返回值 : main
2019-04-22 16:44:19 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:44:19 -HTTP METHOD : GET
2019-04-22 16:44:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:44:19 -参数 : []
2019-04-22 16:44:19 -耗时 : 0
2019-04-22 16:44:19 -返回值 : charts/tableElecYY
2019-04-22 16:44:20 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:44:20 -HTTP METHOD : GET
2019-04-22 16:44:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:44:20 -参数 : []
2019-04-22 16:44:20 -耗时 : 0
2019-04-22 16:44:20 -返回值 : charts/tableWaterYY
2019-04-22 16:45:45 -请求地址 : http://localhost:8081/index
2019-04-22 16:45:45 -HTTP METHOD : GET
2019-04-22 16:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:45:45 -参数 : [{}]
2019-04-22 16:45:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:45:45 -==> Parameters: 1(Long)
2019-04-22 16:45:45 -<==      Total: 49
2019-04-22 16:45:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:45:45 -==> Parameters: 138(Long)
2019-04-22 16:45:45 -<==      Total: 1
2019-04-22 16:45:45 -耗时 : 22
2019-04-22 16:45:45 -返回值 : index_v1
2019-04-22 16:45:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:45:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:45:45.354(Timestamp)
2019-04-22 16:45:45 -请求地址 : http://localhost:8081/main
2019-04-22 16:45:45 -HTTP METHOD : GET
2019-04-22 16:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:45:45 -参数 : []
2019-04-22 16:45:45 -耗时 : 1
2019-04-22 16:45:45 -返回值 : main
2019-04-22 16:45:45 -<==    Updates: 1
2019-04-22 16:45:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:45:45 -HTTP METHOD : GET
2019-04-22 16:45:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:45:45 -参数 : []
2019-04-22 16:45:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:45:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:45:45 -<==      Total: 0
2019-04-22 16:45:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:45:45 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:45:45 -<==      Total: 1
2019-04-22 16:45:45 -耗时 : 25
2019-04-22 16:45:45 -返回值 : com.bootdo.common.utils.PageUtils@36b6b124
2019-04-22 16:45:45 -请求地址 : http://localhost:8081/main
2019-04-22 16:45:45 -HTTP METHOD : GET
2019-04-22 16:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:45:45 -参数 : []
2019-04-22 16:45:45 -耗时 : 0
2019-04-22 16:45:45 -返回值 : main
2019-04-22 16:45:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:45:49 -HTTP METHOD : GET
2019-04-22 16:45:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:45:49 -参数 : []
2019-04-22 16:45:49 -耗时 : 1
2019-04-22 16:45:49 -返回值 : charts/tableElecYY
2019-04-22 16:45:50 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:45:50 -HTTP METHOD : GET
2019-04-22 16:45:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:45:50 -参数 : []
2019-04-22 16:45:50 -耗时 : 1
2019-04-22 16:45:50 -返回值 : charts/tableWaterYY
2019-04-22 16:47:14 -请求地址 : http://localhost:8081/index
2019-04-22 16:47:14 -HTTP METHOD : GET
2019-04-22 16:47:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:47:14 -参数 : [{}]
2019-04-22 16:47:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:47:14 -==> Parameters: 1(Long)
2019-04-22 16:47:14 -<==      Total: 49
2019-04-22 16:47:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:47:14 -==> Parameters: 138(Long)
2019-04-22 16:47:14 -<==      Total: 1
2019-04-22 16:47:14 -耗时 : 75
2019-04-22 16:47:14 -返回值 : index_v1
2019-04-22 16:47:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:47:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 75(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:47:14.498(Timestamp)
2019-04-22 16:47:14 -<==    Updates: 1
2019-04-22 16:47:14 -请求地址 : http://localhost:8081/main
2019-04-22 16:47:14 -HTTP METHOD : GET
2019-04-22 16:47:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:47:14 -参数 : []
2019-04-22 16:47:14 -耗时 : 0
2019-04-22 16:47:14 -返回值 : main
2019-04-22 16:47:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:47:14 -HTTP METHOD : GET
2019-04-22 16:47:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:47:14 -参数 : []
2019-04-22 16:47:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:47:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:47:14 -<==      Total: 0
2019-04-22 16:47:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:47:14 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:47:14 -<==      Total: 1
2019-04-22 16:47:14 -耗时 : 20
2019-04-22 16:47:14 -返回值 : com.bootdo.common.utils.PageUtils@1424e43d
2019-04-22 16:47:14 -请求地址 : http://localhost:8081/main
2019-04-22 16:47:14 -HTTP METHOD : GET
2019-04-22 16:47:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:47:14 -参数 : []
2019-04-22 16:47:14 -耗时 : 1
2019-04-22 16:47:14 -返回值 : main
2019-04-22 16:47:17 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-22 16:47:17 -HTTP METHOD : GET
2019-04-22 16:47:17 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-22 16:47:17 -参数 : []
2019-04-22 16:47:17 -耗时 : 0
2019-04-22 16:47:17 -返回值 : charts/countOwe
2019-04-22 16:47:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 16:47:17 -HTTP METHOD : GET
2019-04-22 16:47:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 16:47:17 -参数 : [userType]
2019-04-22 16:47:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 16:47:17 -==> Parameters: userType(String)
2019-04-22 16:47:17 -<==      Total: 4
2019-04-22 16:47:17 -耗时 : 4
2019-04-22 16:47:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 16:47:17 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:47:17 -HTTP METHOD : GET
2019-04-22 16:47:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:47:17 -参数 : []
2019-04-22 16:47:17 -耗时 : 36
2019-04-22 16:47:17 -返回值 : charts/tableElecYY
2019-04-22 16:47:18 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:47:18 -HTTP METHOD : GET
2019-04-22 16:47:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:47:18 -参数 : []
2019-04-22 16:47:18 -耗时 : 0
2019-04-22 16:47:18 -返回值 : charts/tableWaterYY
2019-04-22 16:50:10 -请求地址 : http://localhost:8081/index
2019-04-22 16:50:10 -HTTP METHOD : GET
2019-04-22 16:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:50:10 -参数 : [{}]
2019-04-22 16:50:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:50:10 -==> Parameters: 1(Long)
2019-04-22 16:50:10 -<==      Total: 49
2019-04-22 16:50:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:50:10 -==> Parameters: 138(Long)
2019-04-22 16:50:10 -<==      Total: 1
2019-04-22 16:50:10 -耗时 : 181
2019-04-22 16:50:10 -返回值 : index_v1
2019-04-22 16:50:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:50:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 181(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:50:10.306(Timestamp)
2019-04-22 16:50:10 -请求地址 : http://localhost:8081/main
2019-04-22 16:50:10 -HTTP METHOD : GET
2019-04-22 16:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:50:10 -参数 : []
2019-04-22 16:50:10 -耗时 : 0
2019-04-22 16:50:10 -返回值 : main
2019-04-22 16:50:10 -<==    Updates: 1
2019-04-22 16:50:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:50:10 -HTTP METHOD : GET
2019-04-22 16:50:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:50:10 -参数 : []
2019-04-22 16:50:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:50:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:50:10 -<==      Total: 0
2019-04-22 16:50:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:50:10 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:50:10 -<==      Total: 1
2019-04-22 16:50:10 -耗时 : 6
2019-04-22 16:50:10 -返回值 : com.bootdo.common.utils.PageUtils@289380b6
2019-04-22 16:50:10 -请求地址 : http://localhost:8081/main
2019-04-22 16:50:10 -HTTP METHOD : GET
2019-04-22 16:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:50:10 -参数 : []
2019-04-22 16:50:10 -耗时 : 0
2019-04-22 16:50:10 -返回值 : main
2019-04-22 16:50:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 16:50:14 -==> Parameters: 1(Long)
2019-04-22 16:50:14 -<==      Total: 93
2019-04-22 16:50:14 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:50:14 -HTTP METHOD : GET
2019-04-22 16:50:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:50:14 -参数 : []
2019-04-22 16:50:14 -耗时 : 1
2019-04-22 16:50:14 -返回值 : charts/tableElecYY
2019-04-22 16:50:17 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:50:17 -HTTP METHOD : GET
2019-04-22 16:50:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:50:17 -参数 : []
2019-04-22 16:50:17 -耗时 : 1
2019-04-22 16:50:17 -返回值 : charts/tableWaterYY
2019-04-22 16:50:34 -请求地址 : http://localhost:8081/index
2019-04-22 16:50:34 -HTTP METHOD : GET
2019-04-22 16:50:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:50:34 -参数 : [{}]
2019-04-22 16:50:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:50:34 -==> Parameters: 1(Long)
2019-04-22 16:50:34 -<==      Total: 49
2019-04-22 16:50:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:50:34 -==> Parameters: 138(Long)
2019-04-22 16:50:34 -<==      Total: 1
2019-04-22 16:50:34 -耗时 : 21
2019-04-22 16:50:34 -返回值 : index_v1
2019-04-22 16:50:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:50:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:50:34.875(Timestamp)
2019-04-22 16:50:35 -<==    Updates: 1
2019-04-22 16:50:35 -请求地址 : http://localhost:8081/main
2019-04-22 16:50:35 -HTTP METHOD : GET
2019-04-22 16:50:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:50:35 -参数 : []
2019-04-22 16:50:35 -耗时 : 1
2019-04-22 16:50:35 -返回值 : main
2019-04-22 16:50:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:50:35 -HTTP METHOD : GET
2019-04-22 16:50:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:50:35 -参数 : []
2019-04-22 16:50:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:50:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:50:35 -<==      Total: 0
2019-04-22 16:50:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:50:35 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:50:35 -<==      Total: 1
2019-04-22 16:50:35 -耗时 : 6
2019-04-22 16:50:35 -返回值 : com.bootdo.common.utils.PageUtils@14755947
2019-04-22 16:50:35 -请求地址 : http://localhost:8081/main
2019-04-22 16:50:35 -HTTP METHOD : GET
2019-04-22 16:50:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:50:35 -参数 : []
2019-04-22 16:50:35 -耗时 : 1
2019-04-22 16:50:35 -返回值 : main
2019-04-22 16:50:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:50:38 -HTTP METHOD : GET
2019-04-22 16:50:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:50:38 -参数 : []
2019-04-22 16:50:38 -耗时 : 21
2019-04-22 16:50:38 -返回值 : charts/tableElecYY
2019-04-22 16:50:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:50:39 -HTTP METHOD : GET
2019-04-22 16:50:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:50:39 -参数 : []
2019-04-22 16:50:39 -耗时 : 0
2019-04-22 16:50:39 -返回值 : charts/tableWaterYY
2019-04-22 16:52:57 -请求地址 : http://localhost:8081/index
2019-04-22 16:52:57 -HTTP METHOD : GET
2019-04-22 16:52:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:52:57 -参数 : [{}]
2019-04-22 16:52:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:52:57 -==> Parameters: 1(Long)
2019-04-22 16:52:57 -<==      Total: 49
2019-04-22 16:52:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:52:57 -==> Parameters: 138(Long)
2019-04-22 16:52:57 -<==      Total: 1
2019-04-22 16:52:57 -耗时 : 198
2019-04-22 16:52:57 -返回值 : index_v1
2019-04-22 16:52:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:52:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 199(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:52:57.971(Timestamp)
2019-04-22 16:52:58 -请求地址 : http://localhost:8081/main
2019-04-22 16:52:58 -HTTP METHOD : GET
2019-04-22 16:52:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:52:58 -参数 : []
2019-04-22 16:52:58 -耗时 : 1
2019-04-22 16:52:58 -返回值 : main
2019-04-22 16:52:58 -<==    Updates: 1
2019-04-22 16:52:58 -请求地址 : http://localhost:8081/main
2019-04-22 16:52:58 -HTTP METHOD : GET
2019-04-22 16:52:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:52:58 -参数 : []
2019-04-22 16:52:58 -耗时 : 1
2019-04-22 16:52:58 -返回值 : main
2019-04-22 16:52:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:52:58 -HTTP METHOD : GET
2019-04-22 16:52:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:52:58 -参数 : []
2019-04-22 16:52:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:52:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:52:58 -<==      Total: 0
2019-04-22 16:52:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:52:58 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:52:58 -<==      Total: 1
2019-04-22 16:52:58 -耗时 : 8
2019-04-22 16:52:58 -返回值 : com.bootdo.common.utils.PageUtils@3e49409b
2019-04-22 16:53:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(13)-CONNECTED(13)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 153], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 25], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4645]
2019-04-22 16:53:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:53:06 -HTTP METHOD : GET
2019-04-22 16:53:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:53:06 -参数 : []
2019-04-22 16:53:06 -耗时 : 0
2019-04-22 16:53:06 -返回值 : charts/tableElecYY
2019-04-22 16:53:08 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:53:08 -HTTP METHOD : GET
2019-04-22 16:53:08 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:53:08 -参数 : []
2019-04-22 16:53:08 -耗时 : 0
2019-04-22 16:53:08 -返回值 : charts/tableWaterYY
2019-04-22 16:53:11 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 16:53:11 -HTTP METHOD : GET
2019-04-22 16:53:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 16:53:11 -参数 : []
2019-04-22 16:53:11 -耗时 : 0
2019-04-22 16:53:11 -返回值 : charts/tableHeatYY
2019-04-22 16:57:29 -请求地址 : http://localhost:8081/index
2019-04-22 16:57:29 -HTTP METHOD : GET
2019-04-22 16:57:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:57:29 -参数 : [{}]
2019-04-22 16:57:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:57:29 -==> Parameters: 1(Long)
2019-04-22 16:57:29 -<==      Total: 49
2019-04-22 16:57:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:57:29 -==> Parameters: 138(Long)
2019-04-22 16:57:29 -<==      Total: 1
2019-04-22 16:57:29 -耗时 : 96
2019-04-22 16:57:29 -返回值 : index_v1
2019-04-22 16:57:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:57:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 97(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:57:29.159(Timestamp)
2019-04-22 16:57:29 -<==    Updates: 1
2019-04-22 16:57:29 -请求地址 : http://localhost:8081/main
2019-04-22 16:57:29 -HTTP METHOD : GET
2019-04-22 16:57:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:57:29 -参数 : []
2019-04-22 16:57:29 -耗时 : 0
2019-04-22 16:57:29 -返回值 : main
2019-04-22 16:57:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:57:29 -HTTP METHOD : GET
2019-04-22 16:57:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:57:29 -参数 : []
2019-04-22 16:57:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:57:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:57:29 -<==      Total: 0
2019-04-22 16:57:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:57:29 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:57:29 -<==      Total: 1
2019-04-22 16:57:29 -耗时 : 8
2019-04-22 16:57:29 -返回值 : com.bootdo.common.utils.PageUtils@83863b4
2019-04-22 16:57:29 -请求地址 : http://localhost:8081/main
2019-04-22 16:57:29 -HTTP METHOD : GET
2019-04-22 16:57:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:57:29 -参数 : []
2019-04-22 16:57:29 -耗时 : 0
2019-04-22 16:57:29 -返回值 : main
2019-04-22 16:57:39 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 16:57:39 -HTTP METHOD : GET
2019-04-22 16:57:39 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 16:57:39 -参数 : []
2019-04-22 16:57:39 -耗时 : 1
2019-04-22 16:57:39 -返回值 : charts/countYY
2019-04-22 16:57:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 16:57:40 -HTTP METHOD : GET
2019-04-22 16:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 16:57:40 -参数 : [userType]
2019-04-22 16:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 16:57:40 -==> Parameters: userType(String)
2019-04-22 16:57:40 -<==      Total: 4
2019-04-22 16:57:40 -耗时 : 5
2019-04-22 16:57:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 16:57:41 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:57:41 -HTTP METHOD : GET
2019-04-22 16:57:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:57:41 -参数 : []
2019-04-22 16:57:41 -耗时 : 1
2019-04-22 16:57:41 -返回值 : charts/tableElecYY
2019-04-22 16:57:42 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:57:42 -HTTP METHOD : GET
2019-04-22 16:57:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:57:42 -参数 : []
2019-04-22 16:57:42 -耗时 : 1
2019-04-22 16:57:42 -返回值 : charts/tableWaterYY
2019-04-22 16:57:47 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 16:57:47 -HTTP METHOD : GET
2019-04-22 16:57:47 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 16:57:47 -参数 : []
2019-04-22 16:57:47 -耗时 : 1
2019-04-22 16:57:47 -返回值 : charts/tableHeatYY
2019-04-22 16:58:58 -请求地址 : http://localhost:8081/index
2019-04-22 16:58:58 -HTTP METHOD : GET
2019-04-22 16:58:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:58:58 -参数 : [{}]
2019-04-22 16:58:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:58:58 -==> Parameters: 1(Long)
2019-04-22 16:58:58 -<==      Total: 49
2019-04-22 16:58:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:58:58 -==> Parameters: 138(Long)
2019-04-22 16:58:58 -<==      Total: 1
2019-04-22 16:58:58 -耗时 : 83
2019-04-22 16:58:58 -返回值 : index_v1
2019-04-22 16:58:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:58:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 83(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:58:58.719(Timestamp)
2019-04-22 16:58:58 -<==    Updates: 1
2019-04-22 16:58:58 -请求地址 : http://localhost:8081/main
2019-04-22 16:58:58 -HTTP METHOD : GET
2019-04-22 16:58:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:58:58 -参数 : []
2019-04-22 16:58:58 -耗时 : 0
2019-04-22 16:58:58 -返回值 : main
2019-04-22 16:58:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:58:59 -HTTP METHOD : GET
2019-04-22 16:58:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:58:59 -参数 : []
2019-04-22 16:58:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:58:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:58:59 -<==      Total: 0
2019-04-22 16:58:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:58:59 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:58:59 -<==      Total: 1
2019-04-22 16:58:59 -耗时 : 11
2019-04-22 16:58:59 -返回值 : com.bootdo.common.utils.PageUtils@86a9212
2019-04-22 16:58:59 -请求地址 : http://localhost:8081/main
2019-04-22 16:58:59 -HTTP METHOD : GET
2019-04-22 16:58:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:58:59 -参数 : []
2019-04-22 16:58:59 -耗时 : 1
2019-04-22 16:58:59 -返回值 : main
2019-04-22 16:59:14 -请求地址 : http://localhost:8081/index
2019-04-22 16:59:14 -HTTP METHOD : GET
2019-04-22 16:59:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 16:59:14 -参数 : [{}]
2019-04-22 16:59:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 16:59:14 -==> Parameters: 1(Long)
2019-04-22 16:59:14 -<==      Total: 49
2019-04-22 16:59:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 16:59:14 -==> Parameters: 138(Long)
2019-04-22 16:59:14 -<==      Total: 1
2019-04-22 16:59:14 -耗时 : 119
2019-04-22 16:59:14 -返回值 : index_v1
2019-04-22 16:59:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 16:59:14 -请求地址 : http://localhost:8081/main
2019-04-22 16:59:14 -HTTP METHOD : GET
2019-04-22 16:59:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:59:14 -参数 : []
2019-04-22 16:59:14 -耗时 : 3
2019-04-22 16:59:14 -返回值 : main
2019-04-22 16:59:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 16:59:14.814(Timestamp)
2019-04-22 16:59:14 -<==    Updates: 1
2019-04-22 16:59:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 16:59:15 -HTTP METHOD : GET
2019-04-22 16:59:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 16:59:15 -参数 : []
2019-04-22 16:59:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 16:59:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 16:59:15 -<==      Total: 0
2019-04-22 16:59:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 16:59:15 -==> Parameters: 1(Long), 0(String)
2019-04-22 16:59:15 -<==      Total: 1
2019-04-22 16:59:15 -耗时 : 10
2019-04-22 16:59:15 -返回值 : com.bootdo.common.utils.PageUtils@4cb1abb2
2019-04-22 16:59:15 -请求地址 : http://localhost:8081/main
2019-04-22 16:59:15 -HTTP METHOD : GET
2019-04-22 16:59:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 16:59:15 -参数 : []
2019-04-22 16:59:15 -耗时 : 0
2019-04-22 16:59:15 -返回值 : main
2019-04-22 16:59:20 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 16:59:20 -HTTP METHOD : GET
2019-04-22 16:59:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 16:59:20 -参数 : []
2019-04-22 16:59:20 -耗时 : 1
2019-04-22 16:59:20 -返回值 : charts/tableElecYY
2019-04-22 16:59:23 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 16:59:23 -HTTP METHOD : GET
2019-04-22 16:59:23 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 16:59:23 -参数 : []
2019-04-22 16:59:23 -耗时 : 1
2019-04-22 16:59:23 -返回值 : charts/countYY
2019-04-22 16:59:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 16:59:24 -HTTP METHOD : GET
2019-04-22 16:59:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 16:59:24 -参数 : [userType]
2019-04-22 16:59:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 16:59:24 -==> Parameters: userType(String)
2019-04-22 16:59:24 -<==      Total: 4
2019-04-22 16:59:24 -耗时 : 21
2019-04-22 16:59:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 16:59:42 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 16:59:42 -HTTP METHOD : GET
2019-04-22 16:59:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 16:59:42 -参数 : []
2019-04-22 16:59:42 -耗时 : 1
2019-04-22 16:59:42 -返回值 : charts/tableWaterYY
2019-04-22 16:59:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 16:59:44 -HTTP METHOD : GET
2019-04-22 16:59:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 16:59:44 -参数 : []
2019-04-22 16:59:44 -耗时 : 62
2019-04-22 16:59:44 -返回值 : charts/tableHeatYY
2019-04-22 17:43:50 -Starting BootdoApplication on ZJZL-20180906VX with PID 14088 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 17:43:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 17:43:51 -The following profiles are active: dev
2019-04-22 17:43:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 22 17:43:51 CST 2019]; root of context hierarchy
2019-04-22 17:43:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 17:43:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14971f41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6f04de8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 17:43:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 17:43:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:43:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 17:44:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 17:44:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 17:44:00 -Starting service [Tomcat]
2019-04-22 17:44:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 17:44:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 17:44:01 -Initializing Spring embedded WebApplicationContext
2019-04-22 17:44:01 -Root WebApplicationContext: initialization completed in 9814 ms
2019-04-22 17:44:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 17:44:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 17:44:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 17:44:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 17:44:01 -Filter xssFilter was not registered (disabled)
2019-04-22 17:44:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 17:44:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 17:44:01 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 17:44:01 -Servlet dispatcherServlet mapped to [/]
2019-04-22 17:44:04 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
2019-04-22 17:44:04 -Stopping service [Tomcat]
2019-04-22 17:44:05 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-22 17:44:05 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$476b7071.CGLIB$sqlSessionFactory$2(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$476b7071$$FastClassBySpringCGLIB$$a7c37ad0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$476b7071.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-04-22 18:25:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 5412 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 18:25:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 18:25:14 -The following profiles are active: dev
2019-04-22 18:25:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 18:25:14 CST 2019]; root of context hierarchy
2019-04-22 18:25:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 18:25:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 18:25:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 18:25:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:25:21 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 18:25:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 18:25:21 -Starting service [Tomcat]
2019-04-22 18:25:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 18:25:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 18:25:21 -Initializing Spring embedded WebApplicationContext
2019-04-22 18:25:21 -Root WebApplicationContext: initialization completed in 6704 ms
2019-04-22 18:25:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 18:25:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 18:25:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 18:25:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 18:25:22 -Filter xssFilter was not registered (disabled)
2019-04-22 18:25:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 18:25:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 18:25:22 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 18:25:22 -Servlet dispatcherServlet mapped to [/]
2019-04-22 18:25:24 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
2019-04-22 18:25:24 -Stopping service [Tomcat]
2019-04-22 18:25:24 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-22 18:25:24 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7898f7c.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7898f7c$$FastClassBySpringCGLIB$$8d22a044.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7898f7c.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-04-22 18:26:34 -Starting BootdoApplication on ZJZL-20180906VX with PID 13320 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 18:26:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 18:26:34 -The following profiles are active: dev
2019-04-22 18:26:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 18:26:34 CST 2019]; root of context hierarchy
2019-04-22 18:26:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 18:26:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 18:26:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 18:26:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:26:41 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 18:26:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 18:26:41 -Starting service [Tomcat]
2019-04-22 18:26:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 18:26:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 18:26:41 -Initializing Spring embedded WebApplicationContext
2019-04-22 18:26:41 -Root WebApplicationContext: initialization completed in 6913 ms
2019-04-22 18:26:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 18:26:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 18:26:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 18:26:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 18:26:42 -Filter xssFilter was not registered (disabled)
2019-04-22 18:26:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 18:26:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 18:26:42 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 18:26:42 -Servlet dispatcherServlet mapped to [/]
2019-04-22 18:26:44 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
2019-04-22 18:26:44 -Stopping service [Tomcat]
2019-04-22 18:26:44 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-22 18:26:44 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$42e5126.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$42e5126$$FastClassBySpringCGLIB$$e69cc019.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$42e5126.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 275; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-04-22 18:32:10 -Starting BootdoApplication on ZJZL-20180906VX with PID 5380 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 18:32:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 18:32:10 -The following profiles are active: dev
2019-04-22 18:32:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 18:32:10 CST 2019]; root of context hierarchy
2019-04-22 18:32:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 18:32:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 18:32:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 18:32:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 18:32:16 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 18:32:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 18:32:16 -Starting service [Tomcat]
2019-04-22 18:32:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 18:32:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 18:32:17 -Initializing Spring embedded WebApplicationContext
2019-04-22 18:32:17 -Root WebApplicationContext: initialization completed in 6923 ms
2019-04-22 18:32:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 18:32:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 18:32:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 18:32:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 18:32:17 -Filter xssFilter was not registered (disabled)
2019-04-22 18:32:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 18:32:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 18:32:17 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 18:32:17 -Servlet dispatcherServlet mapped to [/]
2019-04-22 18:32:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 18:32:10 CST 2019]; root of context hierarchy
2019-04-22 18:32:20 -Using default implementation for ThreadExecutor
2019-04-22 18:32:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 18:32:20 -Quartz Scheduler v.2.2.1 created.
2019-04-22 18:32:20 -RAMJobStore initialized.
2019-04-22 18:32:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 18:32:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 18:32:20 -Quartz scheduler version: 2.2.1
2019-04-22 18:32:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c212536
2019-04-22 18:32:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 18:32:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 18:32:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 18:32:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 18:32:24 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 18:32:24 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 18:32:24 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 18:32:24 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 18:32:24 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 18:32:24 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 18:32:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 18:32:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 18:32:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 18:32:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 18:32:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 18:32:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 18:32:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 18:32:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 18:32:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 18:32:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 18:32:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 18:32:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 18:32:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 18:32:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 18:32:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 18:32:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 18:32:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 18:32:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 18:32:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 18:32:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 18:32:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 18:32:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 18:32:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 18:32:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 18:32:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 18:32:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 18:32:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 18:32:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 18:32:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 18:32:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 18:32:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 18:32:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 18:32:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 18:32:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 18:32:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 18:32:24 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 18:32:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 18:32:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 18:32:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 18:32:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 18:32:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 18:32:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 18:32:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 18:32:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 18:32:24 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 18:32:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 18:32:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 18:32:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 18:32:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 18:32:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 18:32:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 18:32:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 18:32:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 18:32:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 18:32:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 18:32:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 18:32:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 18:32:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 18:32:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 18:32:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 18:32:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 18:32:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 18:32:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 18:32:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 18:32:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 18:32:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 18:32:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 18:32:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 18:32:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 18:32:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 18:32:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 18:32:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 18:32:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 18:32:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 18:32:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 18:32:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 18:32:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 18:32:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 18:32:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 18:32:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 18:32:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 18:32:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 18:32:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 18:32:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 18:32:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 18:32:10 CST 2019]; root of context hierarchy
2019-04-22 18:32:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 18:32:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 18:32:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 18:32:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 18:32:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 18:32:29 -Registering beans for JMX exposure on startup
2019-04-22 18:32:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 18:32:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 18:32:29 -Starting beans in phase 2147483647
2019-04-22 18:32:29 -Context refreshed
2019-04-22 18:32:29 -Found 1 custom documentation plugin(s)
2019-04-22 18:32:29 -Scanning for api listing references
2019-04-22 18:32:30 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_1
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_2
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_3
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_2
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_2
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_2
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_4
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_5
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_2
2019-04-22 18:32:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_3
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_3
2019-04-22 18:32:30 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_3
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_6
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_7
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_4
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_4
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_4
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_8
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_9
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 18:32:30 -Generating unique operation named: ElecUsingGET_1
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_5
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_5
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_5
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_10
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_11
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_6
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_6
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_6
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_7
2019-04-22 18:32:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_7
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_12
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_13
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_7
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 18:32:30 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_7
2019-04-22 18:32:30 -Generating unique operation named: editUsingGET_8
2019-04-22 18:32:30 -Generating unique operation named: listUsingGET_8
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_14
2019-04-22 18:32:30 -Generating unique operation named: removeUsingPOST_15
2019-04-22 18:32:30 -Generating unique operation named: saveUsingPOST_7
2019-04-22 18:32:30 -Generating unique operation named: updateUsingGET_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPOST_8
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPUT_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 18:32:30 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 18:32:30 -Generating unique operation named: addUsingGET_8
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_9
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_9
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_16
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_17
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_9
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_10
2019-04-22 18:32:31 -Generating unique operation named: infoUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingPOST_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingPUT_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 18:32:31 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_10
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_18
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_19
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_10
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_11
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_20
2019-04-22 18:32:31 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_10
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_11
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_12
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_21
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_10
2019-04-22 18:32:31 -Generating unique operation named: treeUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: treeUsingGET_2
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_11
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_11
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_12
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_13
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_22
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_23
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_12
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_13
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_14
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_24
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_25
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_13
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_13
2019-04-22 18:32:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_14
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_15
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_13
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_14
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_14
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_16
2019-04-22 18:32:31 -Generating unique operation named: listUsingHEAD_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingPOST_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingPUT_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingPATCH_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingDELETE_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingTRACE_1
2019-04-22 18:32:31 -Generating unique operation named: countDDUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 18:32:31 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 18:32:31 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 18:32:31 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_14
2019-04-22 18:32:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_15
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_17
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_26
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_15
2019-04-22 18:32:31 -Generating unique operation named: treeUsingGET_3
2019-04-22 18:32:31 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_15
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_15
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_16
2019-04-22 18:32:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_18
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_27
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_28
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_16
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_16
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 18:32:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_16
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_17
2019-04-22 18:32:31 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_19
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_29
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_30
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_17
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_17
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 18:32:31 -Generating unique operation named: addUsingGET_17
2019-04-22 18:32:31 -Generating unique operation named: editUsingGET_18
2019-04-22 18:32:31 -Generating unique operation named: listUsingGET_20
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_31
2019-04-22 18:32:31 -Generating unique operation named: removeUsingPOST_32
2019-04-22 18:32:31 -Generating unique operation named: saveUsingPOST_18
2019-04-22 18:32:31 -Generating unique operation named: updateUsingGET_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPOST_18
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPUT_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 18:32:31 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 18:32:31 -Starting Quartz Scheduler now
2019-04-22 18:32:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 18:32:31 -Starting...
2019-04-22 18:32:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 18:32:31 -Started.
2019-04-22 18:32:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 18:32:32 -Using a shared selector for servlet write/read
2019-04-22 18:32:32 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 18:32:32 -Started BootdoApplication in 23.06 seconds (JVM running for 24.009)
2019-04-22 18:32:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 18:32:32 -==> Parameters: 
2019-04-22 18:32:32 -<==      Total: 1
2019-04-22 18:33:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-22 18:46:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 18:46:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 18:46:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-22 18:46:11 -Enabling session validation scheduler...
2019-04-22 18:46:11 -请求地址 : http://localhost:8081/login;JSESSIONID=176204e4-ccc9-40f6-8554-9b87ebf7202c
2019-04-22 18:46:11 -HTTP METHOD : GET
2019-04-22 18:46:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 18:46:11 -参数 : [{}]
2019-04-22 18:46:11 -耗时 : 4
2019-04-22 18:46:11 -返回值 : login
2019-04-22 18:46:15 -请求地址 : http://localhost:8081/getVerify
2019-04-22 18:46:15 -HTTP METHOD : GET
2019-04-22 18:46:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 18:46:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@75522702, org.apache.shiro.web.servlet.ShiroHttpServletResponse@29b78fec]
2019-04-22 18:46:26 -0930
2019-04-22 18:46:26 -耗时 : 11699
2019-04-22 18:46:26 -返回值 : null
2019-04-22 18:46:54 -请求地址 : http://localhost:8081/login
2019-04-22 18:46:54 -HTTP METHOD : POST
2019-04-22 18:46:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 18:46:54 -参数 : [admin, 111111, 0930, org.apache.shiro.web.servlet.ShiroHttpServletRequest@39987ad9]
2019-04-22 18:46:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 18:46:54 -==> Parameters: admin(String)
2019-04-22 18:46:54 -<==      Total: 1
2019-04-22 18:46:55 -耗时 : 356
2019-04-22 18:46:55 -返回值 : {msg=操作成功, code=0}
2019-04-22 18:46:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 18:46:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 18:46:55 -==> Parameters: 1(Long), admin(String), 登录(String), 356(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 18:46:55.211(Timestamp)
2019-04-22 18:46:55 -<==    Updates: 1
2019-04-22 18:46:55 -请求地址 : http://localhost:8081/index
2019-04-22 18:46:55 -HTTP METHOD : GET
2019-04-22 18:46:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 18:46:55 -参数 : [{}]
2019-04-22 18:46:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 18:46:56 -==> Parameters: 1(Long)
2019-04-22 18:46:56 -<==      Total: 49
2019-04-22 18:46:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 18:46:56 -==> Parameters: 138(Long)
2019-04-22 18:46:56 -<==      Total: 1
2019-04-22 18:46:56 -耗时 : 501
2019-04-22 18:46:56 -返回值 : index_v1
2019-04-22 18:46:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 18:46:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 501(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 18:46:56.221(Timestamp)
2019-04-22 18:46:56 -<==    Updates: 1
2019-04-22 18:46:56 -请求地址 : http://localhost:8081/main
2019-04-22 18:46:56 -HTTP METHOD : GET
2019-04-22 18:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:46:56 -参数 : []
2019-04-22 18:46:56 -耗时 : 1
2019-04-22 18:46:56 -返回值 : main
2019-04-22 18:46:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 18:46:59 -HTTP METHOD : GET
2019-04-22 18:46:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 18:46:59 -参数 : []
2019-04-22 18:46:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 18:46:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 18:46:59 -<==      Total: 0
2019-04-22 18:46:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 18:46:59 -==> Parameters: 1(Long), 0(String)
2019-04-22 18:46:59 -<==      Total: 1
2019-04-22 18:46:59 -耗时 : 56
2019-04-22 18:46:59 -返回值 : com.bootdo.common.utils.PageUtils@7ad29d62
2019-04-22 18:47:00 -请求地址 : http://localhost:8081/main
2019-04-22 18:47:00 -HTTP METHOD : GET
2019-04-22 18:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:47:00 -参数 : []
2019-04-22 18:47:00 -耗时 : 1
2019-04-22 18:47:00 -返回值 : main
2019-04-22 18:47:05 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/895/al6woypd/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 18:47:05 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-22 18:47:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 18:47:12 -==> Parameters: 1(Long)
2019-04-22 18:47:12 -<==      Total: 93
2019-04-22 18:47:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 18:47:12 -HTTP METHOD : GET
2019-04-22 18:47:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 18:47:12 -参数 : []
2019-04-22 18:47:12 -耗时 : 12
2019-04-22 18:47:12 -返回值 : charts/tableElecYY
2019-04-22 18:47:19 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 18:47:19 -HTTP METHOD : GET
2019-04-22 18:47:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 18:47:19 -参数 : []
2019-04-22 18:47:19 -耗时 : 9
2019-04-22 18:47:19 -返回值 : charts/tableWaterYY
2019-04-22 18:47:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 18:47:44 -HTTP METHOD : GET
2019-04-22 18:47:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 18:47:44 -参数 : []
2019-04-22 18:47:44 -耗时 : 11
2019-04-22 18:47:44 -返回值 : charts/tableHeatYY
2019-04-22 18:52:19 -请求地址 : http://localhost:8081/index
2019-04-22 18:52:19 -HTTP METHOD : GET
2019-04-22 18:52:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 18:52:19 -参数 : [{}]
2019-04-22 18:52:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 18:52:19 -==> Parameters: 1(Long)
2019-04-22 18:52:19 -<==      Total: 49
2019-04-22 18:52:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 18:52:19 -==> Parameters: 138(Long)
2019-04-22 18:52:19 -<==      Total: 1
2019-04-22 18:52:19 -耗时 : 34
2019-04-22 18:52:19 -返回值 : index_v1
2019-04-22 18:52:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 18:52:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 18:52:19.239(Timestamp)
2019-04-22 18:52:19 -请求地址 : http://localhost:8081/main
2019-04-22 18:52:19 -HTTP METHOD : GET
2019-04-22 18:52:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:52:19 -参数 : []
2019-04-22 18:52:19 -耗时 : 2
2019-04-22 18:52:19 -返回值 : main
2019-04-22 18:52:19 -<==    Updates: 1
2019-04-22 18:52:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 18:52:19 -HTTP METHOD : GET
2019-04-22 18:52:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 18:52:19 -参数 : []
2019-04-22 18:52:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 18:52:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 18:52:19 -<==      Total: 0
2019-04-22 18:52:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 18:52:19 -==> Parameters: 1(Long), 0(String)
2019-04-22 18:52:19 -<==      Total: 1
2019-04-22 18:52:19 -耗时 : 7
2019-04-22 18:52:19 -返回值 : com.bootdo.common.utils.PageUtils@bc06a20
2019-04-22 18:52:19 -请求地址 : http://localhost:8081/main
2019-04-22 18:52:19 -HTTP METHOD : GET
2019-04-22 18:52:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:52:19 -参数 : []
2019-04-22 18:52:19 -耗时 : 0
2019-04-22 18:52:19 -返回值 : main
2019-04-22 18:52:23 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 18:52:23 -HTTP METHOD : GET
2019-04-22 18:52:23 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 18:52:23 -参数 : []
2019-04-22 18:52:23 -耗时 : 1
2019-04-22 18:52:23 -返回值 : charts/countYY
2019-04-22 18:52:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 18:52:24 -HTTP METHOD : GET
2019-04-22 18:52:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 18:52:24 -参数 : [userType]
2019-04-22 18:52:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 18:52:24 -==> Parameters: userType(String)
2019-04-22 18:52:24 -<==      Total: 4
2019-04-22 18:52:24 -耗时 : 21
2019-04-22 18:52:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 18:52:26 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 18:52:26 -HTTP METHOD : GET
2019-04-22 18:52:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 18:52:26 -参数 : []
2019-04-22 18:52:26 -耗时 : 0
2019-04-22 18:52:26 -返回值 : charts/tableElecYY
2019-04-22 18:52:27 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 18:52:27 -HTTP METHOD : GET
2019-04-22 18:52:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 18:52:27 -参数 : []
2019-04-22 18:52:27 -耗时 : 0
2019-04-22 18:52:27 -返回值 : charts/tableWaterYY
2019-04-22 18:52:30 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 18:52:30 -HTTP METHOD : GET
2019-04-22 18:52:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 18:52:30 -参数 : []
2019-04-22 18:52:30 -耗时 : 1
2019-04-22 18:52:30 -返回值 : charts/tableHeatYY
2019-04-22 18:55:37 -请求地址 : http://localhost:8081/index
2019-04-22 18:55:37 -HTTP METHOD : GET
2019-04-22 18:55:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 18:55:37 -参数 : [{}]
2019-04-22 18:55:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 18:55:37 -==> Parameters: 1(Long)
2019-04-22 18:55:37 -<==      Total: 49
2019-04-22 18:55:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 18:55:37 -==> Parameters: 138(Long)
2019-04-22 18:55:37 -<==      Total: 1
2019-04-22 18:55:37 -耗时 : 33
2019-04-22 18:55:37 -返回值 : index_v1
2019-04-22 18:55:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 18:55:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 18:55:37.277(Timestamp)
2019-04-22 18:55:37 -请求地址 : http://localhost:8081/main
2019-04-22 18:55:37 -HTTP METHOD : GET
2019-04-22 18:55:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:55:37 -参数 : []
2019-04-22 18:55:37 -耗时 : 1
2019-04-22 18:55:37 -返回值 : main
2019-04-22 18:55:37 -<==    Updates: 1
2019-04-22 18:55:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 18:55:37 -HTTP METHOD : GET
2019-04-22 18:55:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 18:55:37 -参数 : []
2019-04-22 18:55:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 18:55:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 18:55:37 -<==      Total: 0
2019-04-22 18:55:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 18:55:37 -==> Parameters: 1(Long), 0(String)
2019-04-22 18:55:37 -<==      Total: 1
2019-04-22 18:55:37 -耗时 : 12
2019-04-22 18:55:37 -返回值 : com.bootdo.common.utils.PageUtils@7d299923
2019-04-22 18:55:37 -请求地址 : http://localhost:8081/main
2019-04-22 18:55:37 -HTTP METHOD : GET
2019-04-22 18:55:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:55:37 -参数 : []
2019-04-22 18:55:37 -耗时 : 0
2019-04-22 18:55:37 -返回值 : main
2019-04-22 18:55:40 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 18:55:40 -HTTP METHOD : GET
2019-04-22 18:55:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 18:55:40 -参数 : []
2019-04-22 18:55:40 -耗时 : 1
2019-04-22 18:55:40 -返回值 : charts/tableElecYY
2019-04-22 18:59:01 -请求地址 : http://localhost:8081/index
2019-04-22 18:59:01 -HTTP METHOD : GET
2019-04-22 18:59:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 18:59:01 -参数 : [{}]
2019-04-22 18:59:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 18:59:01 -==> Parameters: 1(Long)
2019-04-22 18:59:02 -<==      Total: 49
2019-04-22 18:59:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 18:59:02 -==> Parameters: 138(Long)
2019-04-22 18:59:02 -<==      Total: 1
2019-04-22 18:59:02 -耗时 : 31
2019-04-22 18:59:02 -返回值 : index_v1
2019-04-22 18:59:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 18:59:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 18:59:02.013(Timestamp)
2019-04-22 18:59:02 -<==    Updates: 1
2019-04-22 18:59:02 -请求地址 : http://localhost:8081/main
2019-04-22 18:59:02 -HTTP METHOD : GET
2019-04-22 18:59:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:59:02 -参数 : []
2019-04-22 18:59:02 -耗时 : 1
2019-04-22 18:59:02 -返回值 : main
2019-04-22 18:59:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 18:59:02 -HTTP METHOD : GET
2019-04-22 18:59:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 18:59:02 -参数 : []
2019-04-22 18:59:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 18:59:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 18:59:02 -<==      Total: 0
2019-04-22 18:59:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 18:59:02 -==> Parameters: 1(Long), 0(String)
2019-04-22 18:59:02 -<==      Total: 1
2019-04-22 18:59:02 -耗时 : 6
2019-04-22 18:59:02 -返回值 : com.bootdo.common.utils.PageUtils@2928b1b2
2019-04-22 18:59:02 -请求地址 : http://localhost:8081/main
2019-04-22 18:59:02 -HTTP METHOD : GET
2019-04-22 18:59:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 18:59:02 -参数 : []
2019-04-22 18:59:02 -耗时 : 2
2019-04-22 18:59:02 -返回值 : main
2019-04-22 18:59:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 18:59:08 -==> Parameters: 1(Long)
2019-04-22 18:59:08 -<==      Total: 93
2019-04-22 18:59:08 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 18:59:08 -HTTP METHOD : GET
2019-04-22 18:59:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 18:59:08 -参数 : []
2019-04-22 18:59:08 -耗时 : 0
2019-04-22 18:59:08 -返回值 : charts/tableElecYY
2019-04-22 19:03:24 -请求地址 : http://localhost:8081/index
2019-04-22 19:03:24 -HTTP METHOD : GET
2019-04-22 19:03:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:03:24 -参数 : [{}]
2019-04-22 19:03:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:03:24 -==> Parameters: 1(Long)
2019-04-22 19:03:25 -<==      Total: 49
2019-04-22 19:03:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:03:25 -==> Parameters: 138(Long)
2019-04-22 19:03:25 -<==      Total: 1
2019-04-22 19:03:25 -耗时 : 27
2019-04-22 19:03:25 -返回值 : index_v1
2019-04-22 19:03:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:03:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:03:25.023(Timestamp)
2019-04-22 19:03:25 -<==    Updates: 1
2019-04-22 19:03:25 -请求地址 : http://localhost:8081/main
2019-04-22 19:03:25 -HTTP METHOD : GET
2019-04-22 19:03:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:03:25 -参数 : []
2019-04-22 19:03:25 -耗时 : 0
2019-04-22 19:03:25 -返回值 : main
2019-04-22 19:03:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 223]
2019-04-22 19:03:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:03:25 -HTTP METHOD : GET
2019-04-22 19:03:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:03:25 -参数 : []
2019-04-22 19:03:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:03:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:03:25 -<==      Total: 0
2019-04-22 19:03:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:03:25 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:03:25 -<==      Total: 1
2019-04-22 19:03:25 -耗时 : 12
2019-04-22 19:03:25 -返回值 : com.bootdo.common.utils.PageUtils@3cf73f31
2019-04-22 19:03:25 -请求地址 : http://localhost:8081/main
2019-04-22 19:03:25 -HTTP METHOD : GET
2019-04-22 19:03:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:03:25 -参数 : []
2019-04-22 19:03:25 -耗时 : 1
2019-04-22 19:03:25 -返回值 : main
2019-04-22 19:03:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:03:28 -HTTP METHOD : GET
2019-04-22 19:03:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:03:28 -参数 : []
2019-04-22 19:03:28 -耗时 : 1
2019-04-22 19:03:28 -返回值 : charts/tableElecYY
2019-04-22 19:03:32 -请求地址 : http://localhost:8081/index
2019-04-22 19:03:32 -HTTP METHOD : GET
2019-04-22 19:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:03:32 -参数 : [{}]
2019-04-22 19:03:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:03:32 -==> Parameters: 1(Long)
2019-04-22 19:03:32 -<==      Total: 49
2019-04-22 19:03:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:03:32 -==> Parameters: 138(Long)
2019-04-22 19:03:32 -<==      Total: 1
2019-04-22 19:03:32 -耗时 : 33
2019-04-22 19:03:32 -返回值 : index_v1
2019-04-22 19:03:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:03:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:03:32.945(Timestamp)
2019-04-22 19:03:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:03:33 -HTTP METHOD : GET
2019-04-22 19:03:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:03:33 -参数 : []
2019-04-22 19:03:33 -耗时 : 0
2019-04-22 19:03:33 -返回值 : main
2019-04-22 19:03:33 -<==    Updates: 1
2019-04-22 19:03:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:03:33 -HTTP METHOD : GET
2019-04-22 19:03:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:03:33 -参数 : []
2019-04-22 19:03:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:03:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:03:33 -<==      Total: 0
2019-04-22 19:03:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:03:33 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:03:33 -<==      Total: 1
2019-04-22 19:03:33 -耗时 : 8
2019-04-22 19:03:33 -返回值 : com.bootdo.common.utils.PageUtils@41ed2c90
2019-04-22 19:03:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:03:33 -HTTP METHOD : GET
2019-04-22 19:03:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:03:33 -参数 : []
2019-04-22 19:03:33 -耗时 : 0
2019-04-22 19:03:33 -返回值 : main
2019-04-22 19:03:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:03:36 -HTTP METHOD : GET
2019-04-22 19:03:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:03:36 -参数 : []
2019-04-22 19:03:36 -耗时 : 0
2019-04-22 19:03:36 -返回值 : charts/tableElecYY
2019-04-22 19:04:01 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 19:04:01 -HTTP METHOD : GET
2019-04-22 19:04:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 19:04:01 -参数 : []
2019-04-22 19:04:01 -耗时 : 1
2019-04-22 19:04:01 -返回值 : charts/tableHeatYY
2019-04-22 19:04:13 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 19:04:13 -HTTP METHOD : GET
2019-04-22 19:04:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 19:04:13 -参数 : []
2019-04-22 19:04:13 -耗时 : 0
2019-04-22 19:04:13 -返回值 : charts/tableWaterYY
2019-04-22 19:04:17 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 19:04:17 -HTTP METHOD : GET
2019-04-22 19:04:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 19:04:17 -参数 : []
2019-04-22 19:04:17 -耗时 : 1
2019-04-22 19:04:17 -返回值 : charts/tableHeatYY
2019-04-22 19:04:18 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 19:04:18 -HTTP METHOD : GET
2019-04-22 19:04:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 19:04:18 -参数 : []
2019-04-22 19:04:18 -耗时 : 0
2019-04-22 19:04:18 -返回值 : charts/tableWaterYY
2019-04-22 19:04:20 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 19:04:20 -HTTP METHOD : GET
2019-04-22 19:04:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 19:04:20 -参数 : []
2019-04-22 19:04:20 -耗时 : 0
2019-04-22 19:04:20 -返回值 : charts/tableHeatYY
2019-04-22 19:04:20 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:04:20 -HTTP METHOD : GET
2019-04-22 19:04:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:04:20 -参数 : []
2019-04-22 19:04:20 -耗时 : 0
2019-04-22 19:04:20 -返回值 : charts/tableElecYY
2019-04-22 19:06:23 -请求地址 : http://localhost:8081/index
2019-04-22 19:06:23 -HTTP METHOD : GET
2019-04-22 19:06:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:06:23 -参数 : [{}]
2019-04-22 19:06:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:06:23 -==> Parameters: 1(Long)
2019-04-22 19:06:23 -<==      Total: 49
2019-04-22 19:06:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:06:23 -==> Parameters: 138(Long)
2019-04-22 19:06:23 -<==      Total: 1
2019-04-22 19:06:23 -耗时 : 22
2019-04-22 19:06:23 -返回值 : index_v1
2019-04-22 19:06:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:06:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:06:23.723(Timestamp)
2019-04-22 19:06:23 -请求地址 : http://localhost:8081/main
2019-04-22 19:06:23 -HTTP METHOD : GET
2019-04-22 19:06:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:06:23 -参数 : []
2019-04-22 19:06:23 -耗时 : 1
2019-04-22 19:06:23 -返回值 : main
2019-04-22 19:06:23 -<==    Updates: 1
2019-04-22 19:06:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:06:23 -HTTP METHOD : GET
2019-04-22 19:06:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:06:23 -参数 : []
2019-04-22 19:06:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:06:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:06:23 -<==      Total: 0
2019-04-22 19:06:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:06:23 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:06:23 -<==      Total: 1
2019-04-22 19:06:23 -耗时 : 7
2019-04-22 19:06:23 -返回值 : com.bootdo.common.utils.PageUtils@6b9bd05e
2019-04-22 19:06:23 -请求地址 : http://localhost:8081/main
2019-04-22 19:06:23 -HTTP METHOD : GET
2019-04-22 19:06:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:06:23 -参数 : []
2019-04-22 19:06:23 -耗时 : 2
2019-04-22 19:06:23 -返回值 : main
2019-04-22 19:06:26 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 19:06:26 -HTTP METHOD : GET
2019-04-22 19:06:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 19:06:26 -参数 : []
2019-04-22 19:06:26 -耗时 : 1
2019-04-22 19:06:26 -返回值 : charts/countYY
2019-04-22 19:06:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 19:06:27 -HTTP METHOD : GET
2019-04-22 19:06:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 19:06:27 -参数 : [userType]
2019-04-22 19:06:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 19:06:27 -==> Parameters: userType(String)
2019-04-22 19:06:27 -<==      Total: 4
2019-04-22 19:06:27 -耗时 : 5
2019-04-22 19:06:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 19:06:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:06:28 -HTTP METHOD : GET
2019-04-22 19:06:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:06:28 -参数 : []
2019-04-22 19:06:28 -耗时 : 2
2019-04-22 19:06:28 -返回值 : charts/tableElecYY
2019-04-22 19:07:47 -请求地址 : http://localhost:8081/index
2019-04-22 19:07:47 -HTTP METHOD : GET
2019-04-22 19:07:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:07:47 -参数 : [{}]
2019-04-22 19:07:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:07:47 -==> Parameters: 1(Long)
2019-04-22 19:07:47 -<==      Total: 49
2019-04-22 19:07:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:07:47 -==> Parameters: 138(Long)
2019-04-22 19:07:47 -<==      Total: 1
2019-04-22 19:07:47 -耗时 : 24
2019-04-22 19:07:47 -返回值 : index_v1
2019-04-22 19:07:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:07:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:07:47.39(Timestamp)
2019-04-22 19:07:47 -请求地址 : http://localhost:8081/main
2019-04-22 19:07:47 -HTTP METHOD : GET
2019-04-22 19:07:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:07:47 -参数 : []
2019-04-22 19:07:47 -耗时 : 1
2019-04-22 19:07:47 -返回值 : main
2019-04-22 19:07:47 -<==    Updates: 1
2019-04-22 19:07:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:07:47 -HTTP METHOD : GET
2019-04-22 19:07:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:07:47 -参数 : []
2019-04-22 19:07:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:07:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:07:47 -<==      Total: 0
2019-04-22 19:07:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:07:47 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:07:47 -<==      Total: 1
2019-04-22 19:07:47 -耗时 : 14
2019-04-22 19:07:47 -返回值 : com.bootdo.common.utils.PageUtils@401ad1e7
2019-04-22 19:07:47 -请求地址 : http://localhost:8081/main
2019-04-22 19:07:47 -HTTP METHOD : GET
2019-04-22 19:07:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:07:47 -参数 : []
2019-04-22 19:07:47 -耗时 : 1
2019-04-22 19:07:47 -返回值 : main
2019-04-22 19:08:12 -请求地址 : http://localhost:8081/index
2019-04-22 19:08:12 -HTTP METHOD : GET
2019-04-22 19:08:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:08:12 -参数 : [{}]
2019-04-22 19:08:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:08:12 -==> Parameters: 1(Long)
2019-04-22 19:08:12 -<==      Total: 49
2019-04-22 19:08:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:08:12 -==> Parameters: 138(Long)
2019-04-22 19:08:12 -<==      Total: 1
2019-04-22 19:08:12 -耗时 : 25
2019-04-22 19:08:12 -返回值 : index_v1
2019-04-22 19:08:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:08:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:08:12.573(Timestamp)
2019-04-22 19:08:12 -<==    Updates: 1
2019-04-22 19:08:12 -请求地址 : http://localhost:8081/main
2019-04-22 19:08:12 -HTTP METHOD : GET
2019-04-22 19:08:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:08:12 -参数 : []
2019-04-22 19:08:12 -耗时 : 1
2019-04-22 19:08:12 -返回值 : main
2019-04-22 19:08:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:08:12 -HTTP METHOD : GET
2019-04-22 19:08:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:08:12 -参数 : []
2019-04-22 19:08:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:08:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:08:12 -<==      Total: 0
2019-04-22 19:08:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:08:12 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:08:12 -<==      Total: 1
2019-04-22 19:08:12 -耗时 : 10
2019-04-22 19:08:12 -返回值 : com.bootdo.common.utils.PageUtils@5ace850f
2019-04-22 19:08:12 -请求地址 : http://localhost:8081/main
2019-04-22 19:08:12 -HTTP METHOD : GET
2019-04-22 19:08:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:08:12 -参数 : []
2019-04-22 19:08:12 -耗时 : 1
2019-04-22 19:08:12 -返回值 : main
2019-04-22 19:08:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:08:16 -HTTP METHOD : GET
2019-04-22 19:08:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:08:16 -参数 : []
2019-04-22 19:08:16 -耗时 : 1
2019-04-22 19:08:16 -返回值 : charts/tableElecYY
2019-04-22 19:09:15 -请求地址 : http://localhost:8081/index
2019-04-22 19:09:15 -HTTP METHOD : GET
2019-04-22 19:09:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:09:15 -参数 : [{}]
2019-04-22 19:09:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:09:15 -==> Parameters: 1(Long)
2019-04-22 19:09:15 -<==      Total: 49
2019-04-22 19:09:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:09:15 -==> Parameters: 138(Long)
2019-04-22 19:09:15 -<==      Total: 1
2019-04-22 19:09:15 -耗时 : 34
2019-04-22 19:09:15 -返回值 : index_v1
2019-04-22 19:09:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:09:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:09:15.974(Timestamp)
2019-04-22 19:09:16 -请求地址 : http://localhost:8081/main
2019-04-22 19:09:16 -HTTP METHOD : GET
2019-04-22 19:09:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:09:16 -参数 : []
2019-04-22 19:09:16 -耗时 : 1
2019-04-22 19:09:16 -返回值 : main
2019-04-22 19:09:16 -<==    Updates: 1
2019-04-22 19:09:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:09:16 -HTTP METHOD : GET
2019-04-22 19:09:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:09:16 -参数 : []
2019-04-22 19:09:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:09:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:09:16 -<==      Total: 0
2019-04-22 19:09:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:09:16 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:09:16 -<==      Total: 1
2019-04-22 19:09:16 -耗时 : 8
2019-04-22 19:09:16 -返回值 : com.bootdo.common.utils.PageUtils@7d96526a
2019-04-22 19:09:16 -请求地址 : http://localhost:8081/main
2019-04-22 19:09:16 -HTTP METHOD : GET
2019-04-22 19:09:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:09:16 -参数 : []
2019-04-22 19:09:16 -耗时 : 1
2019-04-22 19:09:16 -返回值 : main
2019-04-22 19:09:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 19:09:19 -==> Parameters: 1(Long)
2019-04-22 19:09:19 -<==      Total: 93
2019-04-22 19:09:19 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:09:19 -HTTP METHOD : GET
2019-04-22 19:09:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:09:19 -参数 : []
2019-04-22 19:09:19 -耗时 : 1
2019-04-22 19:09:19 -返回值 : charts/tableElecYY
2019-04-22 19:09:39 -请求地址 : http://localhost:8081/index
2019-04-22 19:09:39 -HTTP METHOD : GET
2019-04-22 19:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:09:39 -参数 : [{}]
2019-04-22 19:09:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:09:39 -==> Parameters: 1(Long)
2019-04-22 19:09:39 -<==      Total: 49
2019-04-22 19:09:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:09:39 -==> Parameters: 138(Long)
2019-04-22 19:09:39 -<==      Total: 1
2019-04-22 19:09:39 -耗时 : 26
2019-04-22 19:09:39 -返回值 : index_v1
2019-04-22 19:09:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:09:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:09:39.712(Timestamp)
2019-04-22 19:09:39 -请求地址 : http://localhost:8081/main
2019-04-22 19:09:39 -HTTP METHOD : GET
2019-04-22 19:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:09:39 -参数 : []
2019-04-22 19:09:39 -耗时 : 1
2019-04-22 19:09:39 -返回值 : main
2019-04-22 19:09:39 -<==    Updates: 1
2019-04-22 19:09:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:09:39 -HTTP METHOD : GET
2019-04-22 19:09:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:09:39 -参数 : []
2019-04-22 19:09:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:09:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:09:39 -<==      Total: 0
2019-04-22 19:09:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:09:39 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:09:39 -<==      Total: 1
2019-04-22 19:09:39 -耗时 : 17
2019-04-22 19:09:39 -返回值 : com.bootdo.common.utils.PageUtils@3b393cf7
2019-04-22 19:09:40 -请求地址 : http://localhost:8081/main
2019-04-22 19:09:40 -HTTP METHOD : GET
2019-04-22 19:09:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:09:40 -参数 : []
2019-04-22 19:09:40 -耗时 : 1
2019-04-22 19:09:40 -返回值 : main
2019-04-22 19:09:43 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 19:09:43 -HTTP METHOD : GET
2019-04-22 19:09:43 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 19:09:43 -参数 : []
2019-04-22 19:09:43 -耗时 : 0
2019-04-22 19:09:43 -返回值 : charts/countYY
2019-04-22 19:09:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 19:09:43 -HTTP METHOD : GET
2019-04-22 19:09:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 19:09:43 -参数 : [userType]
2019-04-22 19:09:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 19:09:43 -==> Parameters: userType(String)
2019-04-22 19:09:43 -<==      Total: 4
2019-04-22 19:09:43 -耗时 : 5
2019-04-22 19:09:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 19:09:44 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:09:44 -HTTP METHOD : GET
2019-04-22 19:09:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:09:44 -参数 : []
2019-04-22 19:09:44 -耗时 : 0
2019-04-22 19:09:44 -返回值 : charts/tableElecYY
2019-04-22 19:10:01 -请求地址 : http://localhost:8081/index
2019-04-22 19:10:01 -HTTP METHOD : GET
2019-04-22 19:10:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:10:01 -参数 : [{}]
2019-04-22 19:10:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:10:01 -==> Parameters: 1(Long)
2019-04-22 19:10:01 -<==      Total: 49
2019-04-22 19:10:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:10:01 -==> Parameters: 138(Long)
2019-04-22 19:10:01 -<==      Total: 1
2019-04-22 19:10:01 -耗时 : 22
2019-04-22 19:10:01 -返回值 : index_v1
2019-04-22 19:10:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:10:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:10:01.32(Timestamp)
2019-04-22 19:10:01 -请求地址 : http://localhost:8081/main
2019-04-22 19:10:01 -HTTP METHOD : GET
2019-04-22 19:10:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:10:01 -参数 : []
2019-04-22 19:10:01 -耗时 : 0
2019-04-22 19:10:01 -返回值 : main
2019-04-22 19:10:01 -<==    Updates: 1
2019-04-22 19:10:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:10:01 -HTTP METHOD : GET
2019-04-22 19:10:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:10:01 -参数 : []
2019-04-22 19:10:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:10:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:10:01 -<==      Total: 0
2019-04-22 19:10:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:10:01 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:10:01 -<==      Total: 1
2019-04-22 19:10:01 -耗时 : 6
2019-04-22 19:10:01 -返回值 : com.bootdo.common.utils.PageUtils@497887e9
2019-04-22 19:10:01 -请求地址 : http://localhost:8081/main
2019-04-22 19:10:01 -HTTP METHOD : GET
2019-04-22 19:10:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:10:01 -参数 : []
2019-04-22 19:10:01 -耗时 : 1
2019-04-22 19:10:01 -返回值 : main
2019-04-22 19:10:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:10:05 -HTTP METHOD : GET
2019-04-22 19:10:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:10:05 -参数 : []
2019-04-22 19:10:05 -耗时 : 1
2019-04-22 19:10:05 -返回值 : charts/tableElecYY
2019-04-22 19:10:32 -请求地址 : http://localhost:8081/index
2019-04-22 19:10:32 -HTTP METHOD : GET
2019-04-22 19:10:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:10:32 -参数 : [{}]
2019-04-22 19:10:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:10:32 -==> Parameters: 1(Long)
2019-04-22 19:10:32 -<==      Total: 49
2019-04-22 19:10:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:10:32 -==> Parameters: 138(Long)
2019-04-22 19:10:32 -<==      Total: 1
2019-04-22 19:10:32 -耗时 : 20
2019-04-22 19:10:32 -返回值 : index_v1
2019-04-22 19:10:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:10:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:10:32.949(Timestamp)
2019-04-22 19:10:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:10:33 -HTTP METHOD : GET
2019-04-22 19:10:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:10:33 -参数 : []
2019-04-22 19:10:33 -耗时 : 0
2019-04-22 19:10:33 -返回值 : main
2019-04-22 19:10:33 -<==    Updates: 1
2019-04-22 19:10:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:10:33 -HTTP METHOD : GET
2019-04-22 19:10:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:10:33 -参数 : []
2019-04-22 19:10:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:10:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:10:33 -<==      Total: 0
2019-04-22 19:10:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:10:33 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:10:33 -<==      Total: 1
2019-04-22 19:10:33 -耗时 : 8
2019-04-22 19:10:33 -返回值 : com.bootdo.common.utils.PageUtils@4bde7431
2019-04-22 19:10:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:10:33 -HTTP METHOD : GET
2019-04-22 19:10:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:10:33 -参数 : []
2019-04-22 19:10:33 -耗时 : 1
2019-04-22 19:10:33 -返回值 : main
2019-04-22 19:10:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:10:36 -HTTP METHOD : GET
2019-04-22 19:10:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:10:36 -参数 : []
2019-04-22 19:10:36 -耗时 : 0
2019-04-22 19:10:36 -返回值 : charts/tableElecYY
2019-04-22 19:12:28 -请求地址 : http://localhost:8081/index
2019-04-22 19:12:28 -HTTP METHOD : GET
2019-04-22 19:12:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:12:28 -参数 : [{}]
2019-04-22 19:12:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:12:28 -==> Parameters: 1(Long)
2019-04-22 19:12:28 -<==      Total: 49
2019-04-22 19:12:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:12:28 -==> Parameters: 138(Long)
2019-04-22 19:12:28 -<==      Total: 1
2019-04-22 19:12:28 -耗时 : 20
2019-04-22 19:12:28 -返回值 : index_v1
2019-04-22 19:12:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:12:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:12:28.726(Timestamp)
2019-04-22 19:12:28 -请求地址 : http://localhost:8081/main
2019-04-22 19:12:28 -HTTP METHOD : GET
2019-04-22 19:12:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:12:28 -参数 : []
2019-04-22 19:12:28 -耗时 : 1
2019-04-22 19:12:28 -返回值 : main
2019-04-22 19:12:28 -<==    Updates: 1
2019-04-22 19:12:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:12:29 -HTTP METHOD : GET
2019-04-22 19:12:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:12:29 -参数 : []
2019-04-22 19:12:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:12:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:12:29 -<==      Total: 0
2019-04-22 19:12:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:12:29 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:12:29 -<==      Total: 1
2019-04-22 19:12:29 -耗时 : 7
2019-04-22 19:12:29 -返回值 : com.bootdo.common.utils.PageUtils@500c7c7
2019-04-22 19:12:29 -请求地址 : http://localhost:8081/main
2019-04-22 19:12:29 -HTTP METHOD : GET
2019-04-22 19:12:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:12:29 -参数 : []
2019-04-22 19:12:29 -耗时 : 1
2019-04-22 19:12:29 -返回值 : main
2019-04-22 19:12:35 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:12:35 -HTTP METHOD : GET
2019-04-22 19:12:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:12:35 -参数 : []
2019-04-22 19:12:35 -耗时 : 0
2019-04-22 19:12:35 -返回值 : charts/tableElecYY
2019-04-22 19:13:35 -请求地址 : http://localhost:8081/index
2019-04-22 19:13:35 -HTTP METHOD : GET
2019-04-22 19:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:13:35 -参数 : [{}]
2019-04-22 19:13:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:13:35 -==> Parameters: 1(Long)
2019-04-22 19:13:35 -<==      Total: 49
2019-04-22 19:13:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:13:35 -==> Parameters: 138(Long)
2019-04-22 19:13:35 -<==      Total: 1
2019-04-22 19:13:35 -耗时 : 21
2019-04-22 19:13:35 -返回值 : index_v1
2019-04-22 19:13:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:13:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:13:35.438(Timestamp)
2019-04-22 19:13:35 -请求地址 : http://localhost:8081/main
2019-04-22 19:13:35 -HTTP METHOD : GET
2019-04-22 19:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:13:35 -参数 : []
2019-04-22 19:13:35 -耗时 : 1
2019-04-22 19:13:35 -返回值 : main
2019-04-22 19:13:35 -<==    Updates: 1
2019-04-22 19:13:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:13:35 -HTTP METHOD : GET
2019-04-22 19:13:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:13:35 -参数 : []
2019-04-22 19:13:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:13:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:13:35 -<==      Total: 0
2019-04-22 19:13:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:13:35 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:13:35 -<==      Total: 1
2019-04-22 19:13:35 -耗时 : 9
2019-04-22 19:13:35 -返回值 : com.bootdo.common.utils.PageUtils@600319e3
2019-04-22 19:13:35 -请求地址 : http://localhost:8081/main
2019-04-22 19:13:35 -HTTP METHOD : GET
2019-04-22 19:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:13:35 -参数 : []
2019-04-22 19:13:35 -耗时 : 1
2019-04-22 19:13:35 -返回值 : main
2019-04-22 19:13:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:13:38 -HTTP METHOD : GET
2019-04-22 19:13:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:13:38 -参数 : []
2019-04-22 19:13:38 -耗时 : 0
2019-04-22 19:13:38 -返回值 : charts/tableElecYY
2019-04-22 19:14:55 -请求地址 : http://localhost:8081/index
2019-04-22 19:14:55 -HTTP METHOD : GET
2019-04-22 19:14:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:14:55 -参数 : [{}]
2019-04-22 19:14:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:14:55 -==> Parameters: 1(Long)
2019-04-22 19:14:55 -<==      Total: 49
2019-04-22 19:14:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:14:55 -==> Parameters: 138(Long)
2019-04-22 19:14:55 -<==      Total: 1
2019-04-22 19:14:55 -耗时 : 47
2019-04-22 19:14:55 -返回值 : index_v1
2019-04-22 19:14:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:14:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:14:55.217(Timestamp)
2019-04-22 19:14:55 -请求地址 : http://localhost:8081/main
2019-04-22 19:14:55 -HTTP METHOD : GET
2019-04-22 19:14:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:14:55 -参数 : []
2019-04-22 19:14:55 -耗时 : 1
2019-04-22 19:14:55 -返回值 : main
2019-04-22 19:14:55 -<==    Updates: 1
2019-04-22 19:14:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:14:55 -HTTP METHOD : GET
2019-04-22 19:14:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:14:55 -参数 : []
2019-04-22 19:14:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:14:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:14:55 -<==      Total: 0
2019-04-22 19:14:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:14:55 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:14:55 -<==      Total: 1
2019-04-22 19:14:55 -耗时 : 9
2019-04-22 19:14:55 -返回值 : com.bootdo.common.utils.PageUtils@33da5c84
2019-04-22 19:14:55 -请求地址 : http://localhost:8081/main
2019-04-22 19:14:55 -HTTP METHOD : GET
2019-04-22 19:14:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:14:55 -参数 : []
2019-04-22 19:14:55 -耗时 : 1
2019-04-22 19:14:55 -返回值 : main
2019-04-22 19:15:03 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 19:15:03 -HTTP METHOD : GET
2019-04-22 19:15:03 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 19:15:03 -参数 : []
2019-04-22 19:15:03 -耗时 : 1
2019-04-22 19:15:03 -返回值 : charts/countYY
2019-04-22 19:15:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 19:15:03 -HTTP METHOD : GET
2019-04-22 19:15:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 19:15:03 -参数 : [userType]
2019-04-22 19:15:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 19:15:03 -==> Parameters: userType(String)
2019-04-22 19:15:03 -<==      Total: 4
2019-04-22 19:15:03 -耗时 : 6
2019-04-22 19:15:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 19:15:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:15:05 -HTTP METHOD : GET
2019-04-22 19:15:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:15:05 -参数 : []
2019-04-22 19:15:05 -耗时 : 0
2019-04-22 19:15:05 -返回值 : charts/tableElecYY
2019-04-22 19:15:32 -请求地址 : http://localhost:8081/index
2019-04-22 19:15:32 -HTTP METHOD : GET
2019-04-22 19:15:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:15:32 -参数 : [{}]
2019-04-22 19:15:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:15:32 -==> Parameters: 1(Long)
2019-04-22 19:15:32 -<==      Total: 49
2019-04-22 19:15:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:15:32 -==> Parameters: 138(Long)
2019-04-22 19:15:32 -<==      Total: 1
2019-04-22 19:15:32 -耗时 : 19
2019-04-22 19:15:32 -返回值 : index_v1
2019-04-22 19:15:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:15:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:15:32.997(Timestamp)
2019-04-22 19:15:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:15:33 -HTTP METHOD : GET
2019-04-22 19:15:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:15:33 -参数 : []
2019-04-22 19:15:33 -耗时 : 0
2019-04-22 19:15:33 -返回值 : main
2019-04-22 19:15:33 -<==    Updates: 1
2019-04-22 19:15:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:15:33 -HTTP METHOD : GET
2019-04-22 19:15:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:15:33 -参数 : []
2019-04-22 19:15:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:15:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:15:33 -<==      Total: 0
2019-04-22 19:15:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:15:33 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:15:33 -<==      Total: 1
2019-04-22 19:15:33 -耗时 : 6
2019-04-22 19:15:33 -返回值 : com.bootdo.common.utils.PageUtils@6fc15029
2019-04-22 19:15:33 -请求地址 : http://localhost:8081/main
2019-04-22 19:15:33 -HTTP METHOD : GET
2019-04-22 19:15:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:15:33 -参数 : []
2019-04-22 19:15:33 -耗时 : 1
2019-04-22 19:15:33 -返回值 : main
2019-04-22 19:15:37 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:15:37 -HTTP METHOD : GET
2019-04-22 19:15:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:15:37 -参数 : []
2019-04-22 19:15:37 -耗时 : 1
2019-04-22 19:15:37 -返回值 : charts/tableElecYY
2019-04-22 19:16:08 -请求地址 : http://localhost:8081/index
2019-04-22 19:16:08 -HTTP METHOD : GET
2019-04-22 19:16:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 19:16:08 -参数 : [{}]
2019-04-22 19:16:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 19:16:08 -==> Parameters: 1(Long)
2019-04-22 19:16:08 -<==      Total: 49
2019-04-22 19:16:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 19:16:08 -==> Parameters: 138(Long)
2019-04-22 19:16:08 -<==      Total: 1
2019-04-22 19:16:08 -耗时 : 22
2019-04-22 19:16:08 -返回值 : index_v1
2019-04-22 19:16:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 19:16:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 19:16:08.992(Timestamp)
2019-04-22 19:16:09 -请求地址 : http://localhost:8081/main
2019-04-22 19:16:09 -HTTP METHOD : GET
2019-04-22 19:16:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:16:09 -参数 : []
2019-04-22 19:16:09 -耗时 : 0
2019-04-22 19:16:09 -返回值 : main
2019-04-22 19:16:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 19:16:09 -HTTP METHOD : GET
2019-04-22 19:16:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 19:16:09 -参数 : []
2019-04-22 19:16:09 -<==    Updates: 1
2019-04-22 19:16:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 19:16:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 19:16:09 -<==      Total: 0
2019-04-22 19:16:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 19:16:09 -==> Parameters: 1(Long), 0(String)
2019-04-22 19:16:09 -<==      Total: 1
2019-04-22 19:16:09 -耗时 : 15
2019-04-22 19:16:09 -返回值 : com.bootdo.common.utils.PageUtils@374468fe
2019-04-22 19:16:09 -请求地址 : http://localhost:8081/main
2019-04-22 19:16:09 -HTTP METHOD : GET
2019-04-22 19:16:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 19:16:09 -参数 : []
2019-04-22 19:16:09 -耗时 : 1
2019-04-22 19:16:09 -返回值 : main
2019-04-22 19:16:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:16:12 -HTTP METHOD : GET
2019-04-22 19:16:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:16:12 -参数 : []
2019-04-22 19:16:12 -耗时 : 1
2019-04-22 19:16:12 -返回值 : charts/tableElecYY
2019-04-22 19:16:13 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 19:16:13 -HTTP METHOD : GET
2019-04-22 19:16:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 19:16:13 -参数 : []
2019-04-22 19:16:13 -耗时 : 1
2019-04-22 19:16:13 -返回值 : charts/tableWaterYY
2019-04-22 19:16:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 19:16:14 -HTTP METHOD : GET
2019-04-22 19:16:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 19:16:14 -参数 : []
2019-04-22 19:16:14 -耗时 : 1
2019-04-22 19:16:14 -返回值 : charts/tableHeatYY
2019-04-22 19:16:15 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 19:16:15 -HTTP METHOD : GET
2019-04-22 19:16:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 19:16:15 -参数 : []
2019-04-22 19:16:15 -耗时 : 0
2019-04-22 19:16:15 -返回值 : charts/tableElecYY
2019-04-22 19:16:15 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 19:16:15 -HTTP METHOD : GET
2019-04-22 19:16:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 19:16:15 -参数 : []
2019-04-22 19:16:15 -耗时 : 1
2019-04-22 19:16:15 -返回值 : charts/tableWaterYY
2019-04-22 19:17:38 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-22 19:17:38 -HTTP METHOD : GET
2019-04-22 19:17:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-22 19:17:38 -参数 : []
2019-04-22 19:17:38 -耗时 : 0
2019-04-22 19:17:38 -返回值 : charts/tableHeatYY
2019-04-22 19:27:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 19:27:16 -==> Parameters: 1(Long)
2019-04-22 19:27:16 -<==      Total: 93
2019-04-22 19:27:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 19:27:16 -HTTP METHOD : GET
2019-04-22 19:27:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 19:27:16 -参数 : []
2019-04-22 19:27:16 -耗时 : 14
2019-04-22 19:27:16 -返回值 : charts/tableElecMM
2019-04-22 19:27:18 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 19:27:18 -HTTP METHOD : GET
2019-04-22 19:27:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 19:27:18 -参数 : []
2019-04-22 19:27:18 -耗时 : 9
2019-04-22 19:27:18 -返回值 : charts/tableHeatMM
2019-04-22 19:27:19 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-22 19:27:19 -HTTP METHOD : GET
2019-04-22 19:27:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-22 19:27:19 -参数 : []
2019-04-22 19:27:19 -耗时 : 14
2019-04-22 19:27:19 -返回值 : charts/tableWaterMM
2019-04-22 19:27:20 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-22 19:27:20 -HTTP METHOD : GET
2019-04-22 19:27:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-22 19:27:20 -参数 : []
2019-04-22 19:27:20 -耗时 : 1
2019-04-22 19:27:20 -返回值 : charts/tableHeatMM
2019-04-22 19:33:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 19 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(17)-CONNECTED(17)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 207], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 648]
2019-04-22 19:46:11 -Validating all active sessions...
2019-04-22 19:46:11 -Finished session validation.  No sessions were stopped.
2019-04-22 20:03:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 19 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(17)-CONNECTED(17)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 207], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1081]
2019-04-22 20:29:01 -请求地址 : http://localhost:8081/login;JSESSIONID=c5a29c33-1eda-48d0-b438-ca946f2a27f5
2019-04-22 20:29:01 -HTTP METHOD : GET
2019-04-22 20:29:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 20:29:01 -参数 : [{}]
2019-04-22 20:29:01 -耗时 : 2
2019-04-22 20:29:01 -返回值 : login
2019-04-22 20:29:02 -请求地址 : http://localhost:8081/login;JSESSIONID=c5a29c33-1eda-48d0-b438-ca946f2a27f5
2019-04-22 20:29:02 -HTTP METHOD : GET
2019-04-22 20:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 20:29:02 -参数 : [{}]
2019-04-22 20:29:02 -耗时 : 1
2019-04-22 20:29:02 -返回值 : login
2019-04-22 20:29:02 -请求地址 : http://localhost:8081/getVerify
2019-04-22 20:29:02 -HTTP METHOD : GET
2019-04-22 20:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 20:29:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f5b6473, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1628860d]
2019-04-22 20:29:02 -4481
2019-04-22 20:29:02 -耗时 : 35
2019-04-22 20:29:02 -返回值 : null
2019-04-22 20:29:02 -请求地址 : http://localhost:8081/getVerify
2019-04-22 20:29:02 -HTTP METHOD : GET
2019-04-22 20:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 20:29:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@167bec6e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@620d1754]
2019-04-22 20:29:02 -4079
2019-04-22 20:29:02 -耗时 : 15
2019-04-22 20:29:02 -返回值 : null
2019-04-22 20:29:08 -请求地址 : http://localhost:8081/login
2019-04-22 20:29:08 -HTTP METHOD : POST
2019-04-22 20:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 20:29:08 -参数 : [admin, 111111, 4079, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c383214]
2019-04-22 20:29:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 20:29:08 -==> Parameters: admin(String)
2019-04-22 20:29:08 -<==      Total: 1
2019-04-22 20:29:08 -耗时 : 21
2019-04-22 20:29:08 -返回值 : {msg=操作成功, code=0}
2019-04-22 20:29:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 20:29:08 -==> Parameters: 1(Long), admin(String), 登录(String), 22(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 20:29:08.676(Timestamp)
2019-04-22 20:29:08 -请求地址 : http://localhost:8081/index
2019-04-22 20:29:08 -HTTP METHOD : GET
2019-04-22 20:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 20:29:08 -参数 : [{}]
2019-04-22 20:29:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 20:29:08 -==> Parameters: 1(Long)
2019-04-22 20:29:08 -<==      Total: 49
2019-04-22 20:29:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 20:29:08 -==> Parameters: 138(Long)
2019-04-22 20:29:08 -<==      Total: 1
2019-04-22 20:29:08 -耗时 : 22
2019-04-22 20:29:08 -返回值 : index_v1
2019-04-22 20:29:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 20:29:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 20:29:08.729(Timestamp)
2019-04-22 20:29:08 -请求地址 : http://localhost:8081/main
2019-04-22 20:29:08 -HTTP METHOD : GET
2019-04-22 20:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:29:08 -参数 : []
2019-04-22 20:29:08 -耗时 : 0
2019-04-22 20:29:08 -返回值 : main
2019-04-22 20:29:08 -<==    Updates: 1
2019-04-22 20:29:08 -<==    Updates: 1
2019-04-22 20:29:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 20:29:09 -HTTP METHOD : GET
2019-04-22 20:29:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 20:29:09 -参数 : []
2019-04-22 20:29:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 20:29:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 20:29:09 -<==      Total: 0
2019-04-22 20:29:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 20:29:09 -==> Parameters: 1(Long), 0(String)
2019-04-22 20:29:09 -<==      Total: 1
2019-04-22 20:29:09 -耗时 : 11
2019-04-22 20:29:09 -返回值 : com.bootdo.common.utils.PageUtils@55e2b50a
2019-04-22 20:29:09 -请求地址 : http://localhost:8081/main
2019-04-22 20:29:09 -HTTP METHOD : GET
2019-04-22 20:29:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:29:09 -参数 : []
2019-04-22 20:29:09 -耗时 : 1
2019-04-22 20:29:09 -返回值 : main
2019-04-22 20:29:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 20:29:12 -==> Parameters: 1(Long)
2019-04-22 20:29:12 -<==      Total: 93
2019-04-22 20:29:12 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-22 20:29:12 -HTTP METHOD : GET
2019-04-22 20:29:12 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-22 20:29:12 -参数 : []
2019-04-22 20:29:12 -耗时 : 12
2019-04-22 20:29:12 -返回值 : charts/tableDD
2019-04-22 20:29:14 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 20:29:14 -HTTP METHOD : GET
2019-04-22 20:29:14 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 20:29:14 -参数 : []
2019-04-22 20:29:14 -耗时 : 14
2019-04-22 20:29:14 -返回值 : charts/countMM
2019-04-22 20:29:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:29:15 -HTTP METHOD : GET
2019-04-22 20:29:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:29:15 -参数 : [userType]
2019-04-22 20:29:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:29:15 -==> Parameters: userType(String)
2019-04-22 20:29:15 -<==      Total: 4
2019-04-22 20:29:15 -耗时 : 15
2019-04-22 20:29:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:29:15 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 20:29:15 -HTTP METHOD : GET
2019-04-22 20:29:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 20:29:15 -参数 : []
2019-04-22 20:29:15 -耗时 : 0
2019-04-22 20:29:15 -返回值 : charts/tableElecMM
2019-04-22 20:29:15 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 20:29:15 -HTTP METHOD : GET
2019-04-22 20:29:15 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 20:29:15 -参数 : []
2019-04-22 20:29:15 -耗时 : 1
2019-04-22 20:29:15 -返回值 : charts/countYY
2019-04-22 20:29:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:29:16 -HTTP METHOD : GET
2019-04-22 20:29:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:29:16 -参数 : [userType]
2019-04-22 20:29:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:29:16 -==> Parameters: userType(String)
2019-04-22 20:29:16 -<==      Total: 4
2019-04-22 20:29:16 -耗时 : 5
2019-04-22 20:29:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:33:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 20 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 219], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 37], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1513]
2019-04-22 20:40:57 -请求地址 : http://localhost:8081/index
2019-04-22 20:40:57 -HTTP METHOD : GET
2019-04-22 20:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 20:40:57 -参数 : [{}]
2019-04-22 20:40:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 20:40:57 -==> Parameters: 1(Long)
2019-04-22 20:40:57 -<==      Total: 49
2019-04-22 20:40:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 20:40:57 -==> Parameters: 138(Long)
2019-04-22 20:40:57 -<==      Total: 1
2019-04-22 20:40:57 -耗时 : 30
2019-04-22 20:40:57 -返回值 : index_v1
2019-04-22 20:40:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 20:40:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 20:40:57.571(Timestamp)
2019-04-22 20:40:57 -<==    Updates: 1
2019-04-22 20:40:57 -请求地址 : http://localhost:8081/main
2019-04-22 20:40:57 -HTTP METHOD : GET
2019-04-22 20:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:40:57 -参数 : []
2019-04-22 20:40:57 -耗时 : 1
2019-04-22 20:40:57 -返回值 : main
2019-04-22 20:40:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 20:40:57 -HTTP METHOD : GET
2019-04-22 20:40:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 20:40:57 -参数 : []
2019-04-22 20:40:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 20:40:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 20:40:57 -<==      Total: 0
2019-04-22 20:40:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 20:40:57 -==> Parameters: 1(Long), 0(String)
2019-04-22 20:40:57 -<==      Total: 1
2019-04-22 20:40:57 -耗时 : 23
2019-04-22 20:40:57 -返回值 : com.bootdo.common.utils.PageUtils@1404ba8e
2019-04-22 20:40:57 -请求地址 : http://localhost:8081/main
2019-04-22 20:40:57 -HTTP METHOD : GET
2019-04-22 20:40:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:40:57 -参数 : []
2019-04-22 20:40:57 -耗时 : 0
2019-04-22 20:40:57 -返回值 : main
2019-04-22 20:41:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 20:41:00 -==> Parameters: 1(Long)
2019-04-22 20:41:00 -<==      Total: 93
2019-04-22 20:41:00 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 20:41:00 -HTTP METHOD : GET
2019-04-22 20:41:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 20:41:00 -参数 : []
2019-04-22 20:41:00 -耗时 : 1
2019-04-22 20:41:00 -返回值 : charts/tableElecYY
2019-04-22 20:41:01 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 20:41:01 -HTTP METHOD : GET
2019-04-22 20:41:01 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 20:41:01 -参数 : []
2019-04-22 20:41:01 -耗时 : 1
2019-04-22 20:41:01 -返回值 : charts/countYY
2019-04-22 20:41:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:41:02 -HTTP METHOD : GET
2019-04-22 20:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:41:02 -参数 : [userType]
2019-04-22 20:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:41:02 -==> Parameters: userType(String)
2019-04-22 20:41:02 -<==      Total: 4
2019-04-22 20:41:02 -耗时 : 4
2019-04-22 20:41:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:41:06 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 20:41:06 -HTTP METHOD : GET
2019-04-22 20:41:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 20:41:06 -参数 : []
2019-04-22 20:41:06 -耗时 : 0
2019-04-22 20:41:06 -返回值 : charts/tableElecMM
2019-04-22 20:41:06 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 20:41:06 -HTTP METHOD : GET
2019-04-22 20:41:06 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 20:41:06 -参数 : []
2019-04-22 20:41:06 -耗时 : 1
2019-04-22 20:41:06 -返回值 : charts/countMM
2019-04-22 20:41:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:41:06 -HTTP METHOD : GET
2019-04-22 20:41:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:41:06 -参数 : [userType]
2019-04-22 20:41:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:41:06 -==> Parameters: userType(String)
2019-04-22 20:41:06 -<==      Total: 4
2019-04-22 20:41:06 -耗时 : 3
2019-04-22 20:41:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:41:06 -请求地址 : http://localhost:8081/charts/countDD
2019-04-22 20:41:06 -HTTP METHOD : GET
2019-04-22 20:41:06 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-22 20:41:06 -参数 : []
2019-04-22 20:41:06 -耗时 : 35
2019-04-22 20:41:06 -返回值 : charts/countDD
2019-04-22 20:41:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:41:07 -HTTP METHOD : GET
2019-04-22 20:41:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:41:07 -参数 : [userType]
2019-04-22 20:41:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:41:07 -==> Parameters: userType(String)
2019-04-22 20:41:07 -<==      Total: 4
2019-04-22 20:41:07 -耗时 : 4
2019-04-22 20:41:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:41:10 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-22 20:41:10 -HTTP METHOD : GET
2019-04-22 20:41:10 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-22 20:41:10 -参数 : []
2019-04-22 20:41:10 -耗时 : 1
2019-04-22 20:41:10 -返回值 : charts/tableDD
2019-04-22 20:41:13 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-22 20:41:13 -HTTP METHOD : GET
2019-04-22 20:41:13 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-22 20:41:13 -参数 : []
2019-04-22 20:41:13 -耗时 : 1
2019-04-22 20:41:13 -返回值 : charts/countOwe
2019-04-22 20:41:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:41:13 -HTTP METHOD : GET
2019-04-22 20:41:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:41:13 -参数 : [userType]
2019-04-22 20:41:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:41:13 -==> Parameters: userType(String)
2019-04-22 20:41:13 -<==      Total: 4
2019-04-22 20:41:13 -耗时 : 4
2019-04-22 20:41:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:41:32 -请求地址 : http://localhost:8081/charts/countRun
2019-04-22 20:41:32 -HTTP METHOD : GET
2019-04-22 20:41:32 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-22 20:41:32 -参数 : []
2019-04-22 20:41:32 -耗时 : 0
2019-04-22 20:41:32 -返回值 : charts/countRun
2019-04-22 20:41:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:41:32 -HTTP METHOD : GET
2019-04-22 20:41:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:41:32 -参数 : [userType]
2019-04-22 20:41:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:41:32 -==> Parameters: userType(String)
2019-04-22 20:41:32 -<==      Total: 4
2019-04-22 20:41:32 -耗时 : 7
2019-04-22 20:41:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:46:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 7836 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 20:46:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 20:46:25 -The following profiles are active: dev
2019-04-22 20:46:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 20:46:25 CST 2019]; root of context hierarchy
2019-04-22 20:46:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 20:46:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 20:46:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 20:46:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 20:46:33 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 20:46:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 20:46:33 -Starting service [Tomcat]
2019-04-22 20:46:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 20:46:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 20:46:33 -Initializing Spring embedded WebApplicationContext
2019-04-22 20:46:33 -Root WebApplicationContext: initialization completed in 7976 ms
2019-04-22 20:46:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 20:46:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 20:46:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 20:46:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 20:46:34 -Filter xssFilter was not registered (disabled)
2019-04-22 20:46:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 20:46:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 20:46:34 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 20:46:34 -Servlet dispatcherServlet mapped to [/]
2019-04-22 20:46:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 20:46:25 CST 2019]; root of context hierarchy
2019-04-22 20:46:38 -Using default implementation for ThreadExecutor
2019-04-22 20:46:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 20:46:38 -Quartz Scheduler v.2.2.1 created.
2019-04-22 20:46:38 -RAMJobStore initialized.
2019-04-22 20:46:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 20:46:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 20:46:38 -Quartz scheduler version: 2.2.1
2019-04-22 20:46:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-04-22 20:46:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 20:46:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 20:46:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 20:46:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 20:46:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 20:46:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 20:46:41 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 20:46:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 20:46:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 20:46:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 20:46:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 20:46:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 20:46:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 20:46:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 20:46:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 20:46:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 20:46:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 20:46:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 20:46:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 20:46:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 20:46:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 20:46:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 20:46:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 20:46:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 20:46:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 20:46:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 20:46:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 20:46:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 20:46:41 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 20:46:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 20:46:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 20:46:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 20:46:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 20:46:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 20:46:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 20:46:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 20:46:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 20:46:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 20:46:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 20:46:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 20:46:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 20:46:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 20:46:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 20:46:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 20:46:41 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 20:46:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 20:46:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 20:46:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 20:46:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 20:46:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 20:46:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 20:46:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 20:46:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 20:46:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 20:46:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 20:46:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 20:46:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 20:46:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 20:46:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 20:46:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 20:46:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 20:46:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 20:46:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 20:46:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 20:46:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 20:46:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 20:46:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 20:46:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 20:46:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 20:46:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 20:46:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 20:46:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 20:46:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 20:46:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 20:46:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 20:46:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 20:46:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 20:46:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 20:46:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 20:46:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 20:46:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 20:46:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 20:46:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 20:46:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 20:46:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 20:46:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 20:46:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 20:46:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 20:46:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 20:46:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 20:46:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 20:46:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 20:46:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 20:46:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 20:46:25 CST 2019]; root of context hierarchy
2019-04-22 20:46:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 20:46:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 20:46:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 20:46:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 20:46:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 20:46:45 -Registering beans for JMX exposure on startup
2019-04-22 20:46:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 20:46:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 20:46:45 -Starting beans in phase 2147483647
2019-04-22 20:46:45 -Context refreshed
2019-04-22 20:46:47 -Found 1 custom documentation plugin(s)
2019-04-22 20:46:47 -Scanning for api listing references
2019-04-22 20:46:49 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 20:46:49 -Generating unique operation named: removeUsingPOST_1
2019-04-22 20:46:49 -Generating unique operation named: addUsingGET_1
2019-04-22 20:46:49 -Generating unique operation named: editUsingGET_1
2019-04-22 20:46:49 -Generating unique operation named: listUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_2
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_3
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_4
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_5
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_2
2019-04-22 20:46:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_3
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_3
2019-04-22 20:46:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_3
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_6
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_7
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_4
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_4
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_4
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_8
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_9
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 20:46:50 -Generating unique operation named: ElecUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_5
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_5
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_5
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_10
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_11
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_6
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_6
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_6
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_7
2019-04-22 20:46:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_7
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_12
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_13
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 20:46:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_7
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_8
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_8
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_14
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_15
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_8
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_8
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_9
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_9
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_16
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_17
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_8
2019-04-22 20:46:50 -Generating unique operation named: updateUsingGET_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_9
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPUT_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 20:46:50 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_9
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_10
2019-04-22 20:46:50 -Generating unique operation named: infoUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingPOST_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingPUT_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 20:46:50 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_10
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_18
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_19
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_9
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_10
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_11
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_20
2019-04-22 20:46:50 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: addUsingGET_10
2019-04-22 20:46:50 -Generating unique operation named: editUsingGET_11
2019-04-22 20:46:50 -Generating unique operation named: listUsingGET_12
2019-04-22 20:46:50 -Generating unique operation named: removeUsingPOST_21
2019-04-22 20:46:50 -Generating unique operation named: saveUsingPOST_10
2019-04-22 20:46:50 -Generating unique operation named: treeUsingGET_1
2019-04-22 20:46:50 -Generating unique operation named: treeUsingGET_2
2019-04-22 20:46:50 -Generating unique operation named: updateUsingPOST_11
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_11
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_12
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_13
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_22
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_23
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingGET_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPUT_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 20:46:51 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_12
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_13
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_14
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_24
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_25
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingGET_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_13
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPUT_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 20:46:51 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_13
2019-04-22 20:46:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_14
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_15
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_13
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_14
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_14
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_16
2019-04-22 20:46:51 -Generating unique operation named: listUsingHEAD_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingPOST_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingPUT_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingPATCH_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingDELETE_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingTRACE_1
2019-04-22 20:46:51 -Generating unique operation named: countDDUsingGET_1
2019-04-22 20:46:51 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 20:46:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 20:46:51 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 20:46:51 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_14
2019-04-22 20:46:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_15
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_17
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_26
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_15
2019-04-22 20:46:51 -Generating unique operation named: treeUsingGET_3
2019-04-22 20:46:51 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_15
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_15
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_16
2019-04-22 20:46:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_18
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_27
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_28
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_16
2019-04-22 20:46:51 -Generating unique operation named: updateUsingGET_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_16
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPUT_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 20:46:51 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 20:46:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_16
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_17
2019-04-22 20:46:51 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_19
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_29
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_30
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_17
2019-04-22 20:46:51 -Generating unique operation named: updateUsingGET_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_17
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPUT_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 20:46:51 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 20:46:51 -Generating unique operation named: addUsingGET_17
2019-04-22 20:46:51 -Generating unique operation named: editUsingGET_18
2019-04-22 20:46:51 -Generating unique operation named: listUsingGET_20
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_31
2019-04-22 20:46:51 -Generating unique operation named: removeUsingPOST_32
2019-04-22 20:46:51 -Generating unique operation named: saveUsingPOST_18
2019-04-22 20:46:51 -Generating unique operation named: updateUsingGET_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPOST_18
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPUT_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 20:46:51 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 20:46:51 -Starting Quartz Scheduler now
2019-04-22 20:46:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 20:46:51 -Starting...
2019-04-22 20:46:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 20:46:51 -Started.
2019-04-22 20:46:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 20:46:51 -Using a shared selector for servlet write/read
2019-04-22 20:46:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 20:46:51 -Started BootdoApplication in 27.231 seconds (JVM running for 28.039)
2019-04-22 20:46:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 20:46:52 -==> Parameters: 
2019-04-22 20:46:52 -<==      Total: 1
2019-04-22 20:47:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-22 20:47:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-22 20:47:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-04-22 20:47:03 -Enabling session validation scheduler...
2019-04-22 20:47:04 -请求地址 : http://localhost:8081/login;JSESSIONID=ce26ccc7-ed39-498e-bc89-aaee889b91d1
2019-04-22 20:47:04 -HTTP METHOD : GET
2019-04-22 20:47:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-22 20:47:04 -参数 : [{}]
2019-04-22 20:47:04 -耗时 : 3
2019-04-22 20:47:04 -返回值 : login
2019-04-22 20:47:06 -请求地址 : http://localhost:8081/getVerify
2019-04-22 20:47:06 -HTTP METHOD : GET
2019-04-22 20:47:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-22 20:47:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bfb57df, org.apache.shiro.web.servlet.ShiroHttpServletResponse@32542fa3]
2019-04-22 20:47:11 -0588
2019-04-22 20:47:11 -耗时 : 5159
2019-04-22 20:47:11 -返回值 : null
2019-04-22 20:47:15 -请求地址 : http://localhost:8081/login
2019-04-22 20:47:15 -HTTP METHOD : POST
2019-04-22 20:47:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-22 20:47:15 -参数 : [admin, 111111, 0588, org.apache.shiro.web.servlet.ShiroHttpServletRequest@64d8b0e0]
2019-04-22 20:47:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-22 20:47:16 -==> Parameters: admin(String)
2019-04-22 20:47:16 -<==      Total: 1
2019-04-22 20:47:16 -耗时 : 293
2019-04-22 20:47:16 -返回值 : {msg=操作成功, code=0}
2019-04-22 20:47:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-22 20:47:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 20:47:16 -==> Parameters: 1(Long), admin(String), 登录(String), 293(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-22 20:47:16.25(Timestamp)
2019-04-22 20:47:16 -请求地址 : http://localhost:8081/index
2019-04-22 20:47:16 -HTTP METHOD : GET
2019-04-22 20:47:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-22 20:47:16 -参数 : [{}]
2019-04-22 20:47:16 -<==    Updates: 1
2019-04-22 20:47:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-22 20:47:16 -==> Parameters: 1(Long)
2019-04-22 20:47:17 -<==      Total: 49
2019-04-22 20:47:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-22 20:47:17 -==> Parameters: 138(Long)
2019-04-22 20:47:17 -<==      Total: 1
2019-04-22 20:47:17 -耗时 : 776
2019-04-22 20:47:17 -返回值 : index_v1
2019-04-22 20:47:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-22 20:47:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 776(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-22 20:47:17.179(Timestamp)
2019-04-22 20:47:17 -<==    Updates: 1
2019-04-22 20:47:17 -请求地址 : http://localhost:8081/main
2019-04-22 20:47:17 -HTTP METHOD : GET
2019-04-22 20:47:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:47:17 -参数 : []
2019-04-22 20:47:17 -耗时 : 0
2019-04-22 20:47:17 -返回值 : main
2019-04-22 20:47:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-22 20:47:18 -HTTP METHOD : GET
2019-04-22 20:47:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-22 20:47:18 -参数 : []
2019-04-22 20:47:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-22 20:47:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-22 20:47:18 -请求地址 : http://localhost:8081/main
2019-04-22 20:47:18 -HTTP METHOD : GET
2019-04-22 20:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-22 20:47:18 -参数 : []
2019-04-22 20:47:18 -耗时 : 1
2019-04-22 20:47:18 -返回值 : main
2019-04-22 20:47:18 -<==      Total: 0
2019-04-22 20:47:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-22 20:47:18 -==> Parameters: 1(Long), 0(String)
2019-04-22 20:47:18 -<==      Total: 1
2019-04-22 20:47:18 -耗时 : 167
2019-04-22 20:47:18 -返回值 : com.bootdo.common.utils.PageUtils@322e03c9
2019-04-22 20:47:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-22 20:47:29 -==> Parameters: 1(Long)
2019-04-22 20:47:29 -<==      Total: 93
2019-04-22 20:47:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-22 20:47:29 -HTTP METHOD : GET
2019-04-22 20:47:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-22 20:47:29 -参数 : []
2019-04-22 20:47:29 -耗时 : 15
2019-04-22 20:47:29 -返回值 : charts/tableElecYY
2019-04-22 20:47:32 -请求地址 : http://localhost:8081/charts/countYY
2019-04-22 20:47:32 -HTTP METHOD : GET
2019-04-22 20:47:32 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-22 20:47:32 -参数 : []
2019-04-22 20:47:32 -耗时 : 0
2019-04-22 20:47:32 -返回值 : charts/countYY
2019-04-22 20:47:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:47:32 -HTTP METHOD : GET
2019-04-22 20:47:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:47:32 -参数 : [userType]
2019-04-22 20:47:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:47:32 -==> Parameters: userType(String)
2019-04-22 20:47:32 -<==      Total: 4
2019-04-22 20:47:32 -耗时 : 76
2019-04-22 20:47:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 20:47:41 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-22 20:47:41 -HTTP METHOD : GET
2019-04-22 20:47:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-22 20:47:41 -参数 : []
2019-04-22 20:47:41 -耗时 : 9
2019-04-22 20:47:41 -返回值 : charts/tableWaterYY
2019-04-22 20:47:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-22 20:48:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-22 20:48:02 -HTTP METHOD : GET
2019-04-22 20:48:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-22 20:48:02 -参数 : []
2019-04-22 20:48:02 -耗时 : 10
2019-04-22 20:48:02 -返回值 : charts/tableElecMM
2019-04-22 20:48:03 -请求地址 : http://localhost:8081/charts/countMM
2019-04-22 20:48:03 -HTTP METHOD : GET
2019-04-22 20:48:03 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-22 20:48:03 -参数 : []
2019-04-22 20:48:03 -耗时 : 12
2019-04-22 20:48:03 -返回值 : charts/countMM
2019-04-22 20:48:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-22 20:48:03 -HTTP METHOD : GET
2019-04-22 20:48:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-22 20:48:03 -参数 : [userType]
2019-04-22 20:48:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-22 20:48:03 -==> Parameters: userType(String)
2019-04-22 20:48:03 -<==      Total: 4
2019-04-22 20:48:03 -耗时 : 6
2019-04-22 20:48:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-22 21:14:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 6380 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-22 21:14:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-22 21:14:44 -The following profiles are active: dev
2019-04-22 21:14:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 21:14:45 CST 2019]; root of context hierarchy
2019-04-22 21:14:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-22 21:14:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-22 21:14:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-22 21:14:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-22 21:14:52 -Tomcat initialized with port(s): 8081 (http)
2019-04-22 21:14:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-22 21:14:52 -Starting service [Tomcat]
2019-04-22 21:14:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-22 21:14:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-22 21:14:52 -Initializing Spring embedded WebApplicationContext
2019-04-22 21:14:52 -Root WebApplicationContext: initialization completed in 7526 ms
2019-04-22 21:14:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-22 21:14:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-22 21:14:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-22 21:14:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-22 21:14:53 -Filter xssFilter was not registered (disabled)
2019-04-22 21:14:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-22 21:14:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-22 21:14:53 -Servlet statViewServlet mapped to [/druid/*]
2019-04-22 21:14:53 -Servlet dispatcherServlet mapped to [/]
2019-04-22 21:14:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 21:14:45 CST 2019]; root of context hierarchy
2019-04-22 21:14:56 -Using default implementation for ThreadExecutor
2019-04-22 21:14:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-22 21:14:56 -Quartz Scheduler v.2.2.1 created.
2019-04-22 21:14:56 -RAMJobStore initialized.
2019-04-22 21:14:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-22 21:14:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-22 21:14:56 -Quartz scheduler version: 2.2.1
2019-04-22 21:14:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-04-22 21:14:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-22 21:14:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-22 21:14:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-22 21:14:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-22 21:14:59 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-22 21:14:59 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-22 21:14:59 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportCountYY(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-22 21:14:59 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-22 21:14:59 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.getTableDD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-22 21:14:59 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-22 21:14:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-22 21:14:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-22 21:14:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-22 21:14:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-22 21:14:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-22 21:14:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-22 21:14:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 21:14:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-22 21:14:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-22 21:14:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-22 21:14:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-22 21:14:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-22 21:14:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-22 21:14:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-22 21:14:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-22 21:14:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-22 21:14:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-22 21:14:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-22 21:14:59 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-22 21:14:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-22 21:14:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-22 21:14:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-22 21:14:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-22 21:14:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-22 21:14:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-22 21:14:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-22 21:14:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-22 21:14:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-22 21:14:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-22 21:14:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-22 21:14:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-22 21:14:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 21:14:59 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 21:14:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-22 21:14:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-22 21:14:59 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-22 21:14:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-22 21:14:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-22 21:14:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-22 21:14:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-22 21:14:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-22 21:14:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-22 21:14:59 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-22 21:14:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-22 21:14:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-22 21:14:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-22 21:14:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-22 21:14:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-22 21:14:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-22 21:14:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-22 21:14:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-22 21:14:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-22 21:14:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-22 21:14:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-22 21:14:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-22 21:14:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-22 21:14:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-22 21:14:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-22 21:14:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-22 21:14:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-22 21:14:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-22 21:14:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-22 21:14:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 21:14:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-22 21:14:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-22 21:14:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-22 21:14:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-22 21:14:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-22 21:14:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-22 21:14:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-22 21:14:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-22 21:14:59 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-22 21:14:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-22 21:14:59 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-22 21:14:59 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-22 21:14:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-22 21:14:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-22 21:14:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-22 21:14:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-22 21:14:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-22 21:14:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-22 21:14:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-22 21:15:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 21:15:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 22 21:14:45 CST 2019]; root of context hierarchy
2019-04-22 21:15:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 21:15:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 21:15:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-22 21:15:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-22 21:15:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-22 21:15:02 -Registering beans for JMX exposure on startup
2019-04-22 21:15:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-22 21:15:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-22 21:15:02 -Starting beans in phase 2147483647
2019-04-22 21:15:02 -Context refreshed
2019-04-22 21:15:02 -Found 1 custom documentation plugin(s)
2019-04-22 21:15:02 -Scanning for api listing references
2019-04-22 21:15:02 -Generating unique operation named: getCountDUsingPOST_1
2019-04-22 21:15:02 -Generating unique operation named: removeUsingPOST_1
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_2
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_3
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_1
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_2
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_2
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_2
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_4
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_5
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_2
2019-04-22 21:15:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_3
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_3
2019-04-22 21:15:03 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_3
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_6
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_7
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_2
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_4
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_4
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_4
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_8
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_9
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_3
2019-04-22 21:15:03 -Generating unique operation named: ElecUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_5
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_5
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_5
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_10
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_11
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_4
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_6
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_6
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_6
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_7
2019-04-22 21:15:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_7
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_12
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_13
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_5
2019-04-22 21:15:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_7
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_8
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_8
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_14
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_15
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_8
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_6
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_8
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_9
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_9
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_16
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_17
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_8
2019-04-22 21:15:03 -Generating unique operation named: updateUsingGET_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingHEAD_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_9
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPUT_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPATCH_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingDELETE_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-22 21:15:03 -Generating unique operation named: updateUsingTRACE_7
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_9
2019-04-22 21:15:03 -Generating unique operation named: editUsingGET_10
2019-04-22 21:15:03 -Generating unique operation named: infoUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingHEAD_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingPOST_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingPUT_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingPATCH_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingDELETE_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-22 21:15:03 -Generating unique operation named: infoUsingTRACE_1
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_10
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_18
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_19
2019-04-22 21:15:03 -Generating unique operation named: saveUsingPOST_9
2019-04-22 21:15:03 -Generating unique operation named: updateUsingPOST_10
2019-04-22 21:15:03 -Generating unique operation named: listUsingGET_11
2019-04-22 21:15:03 -Generating unique operation named: removeUsingPOST_20
2019-04-22 21:15:03 -Generating unique operation named: welcomeUsingGET_1
2019-04-22 21:15:03 -Generating unique operation named: addUsingGET_10
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_11
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_12
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_21
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_10
2019-04-22 21:15:04 -Generating unique operation named: treeUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: treeUsingGET_2
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_11
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_11
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_12
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_13
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_22
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_23
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingGET_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingHEAD_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPUT_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPATCH_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingDELETE_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-22 21:15:04 -Generating unique operation named: updateUsingTRACE_8
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_12
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_13
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_14
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_24
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_25
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingGET_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingHEAD_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_13
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPUT_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPATCH_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingDELETE_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-22 21:15:04 -Generating unique operation named: updateUsingTRACE_9
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_13
2019-04-22 21:15:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_14
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_15
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_13
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_14
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_14
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_16
2019-04-22 21:15:04 -Generating unique operation named: listUsingHEAD_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingPOST_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingPUT_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingPATCH_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingDELETE_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingOPTIONS_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingTRACE_1
2019-04-22 21:15:04 -Generating unique operation named: countDDUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: exportDDUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-22 21:15:04 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-22 21:15:04 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-22 21:15:04 -Generating unique operation named: getCountMMUsingPOST_6
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_14
2019-04-22 21:15:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_15
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_17
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_26
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_15
2019-04-22 21:15:04 -Generating unique operation named: treeUsingGET_3
2019-04-22 21:15:04 -Generating unique operation named: treeViewUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_15
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_15
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_16
2019-04-22 21:15:04 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_18
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_27
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_28
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_16
2019-04-22 21:15:04 -Generating unique operation named: updateUsingGET_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingHEAD_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_16
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPUT_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPATCH_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingDELETE_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-22 21:15:04 -Generating unique operation named: updateUsingTRACE_10
2019-04-22 21:15:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_16
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_17
2019-04-22 21:15:04 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_19
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_29
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_30
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_17
2019-04-22 21:15:04 -Generating unique operation named: updateUsingGET_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingHEAD_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_17
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPUT_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPATCH_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingDELETE_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-22 21:15:04 -Generating unique operation named: updateUsingTRACE_11
2019-04-22 21:15:04 -Generating unique operation named: addUsingGET_17
2019-04-22 21:15:04 -Generating unique operation named: editUsingGET_18
2019-04-22 21:15:04 -Generating unique operation named: listUsingGET_20
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_31
2019-04-22 21:15:04 -Generating unique operation named: removeUsingPOST_32
2019-04-22 21:15:04 -Generating unique operation named: saveUsingPOST_18
2019-04-22 21:15:04 -Generating unique operation named: updateUsingGET_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingHEAD_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPOST_18
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPUT_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingPATCH_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingDELETE_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-22 21:15:04 -Generating unique operation named: updateUsingTRACE_12
2019-04-22 21:15:04 -Starting Quartz Scheduler now
2019-04-22 21:15:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-22 21:15:04 -Starting...
2019-04-22 21:15:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-22 21:15:04 -Started.
2019-04-22 21:15:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-22 21:15:04 -Using a shared selector for servlet write/read
2019-04-22 21:15:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-22 21:15:04 -Started BootdoApplication in 20.843 seconds (JVM running for 21.628)
2019-04-22 21:15:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-22 21:15:05 -==> Parameters: 
2019-04-22 21:15:05 -<==      Total: 1
2019-04-22 21:15:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-22 21:45:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]

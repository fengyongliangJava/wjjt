2019-04-30 09:39:22 -Starting BootdoApplication on ZJZL-20180906VX with PID 6888 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 09:39:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 09:39:22 -The following profiles are active: dev
2019-04-30 09:39:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 09:39:22 CST 2019]; root of context hierarchy
2019-04-30 09:39:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 09:39:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 09:39:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 09:39:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:39:55 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 09:39:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 09:39:55 -Starting service [Tomcat]
2019-04-30 09:39:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 09:39:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 09:39:56 -Initializing Spring embedded WebApplicationContext
2019-04-30 09:39:56 -Root WebApplicationContext: initialization completed in 33645 ms
2019-04-30 09:39:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 09:39:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 09:39:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 09:39:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 09:39:57 -Filter xssFilter was not registered (disabled)
2019-04-30 09:39:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 09:39:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 09:39:57 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 09:39:57 -Servlet dispatcherServlet mapped to [/]
2019-04-30 09:40:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 09:39:22 CST 2019]; root of context hierarchy
2019-04-30 09:40:09 -Using default implementation for ThreadExecutor
2019-04-30 09:40:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 09:40:09 -Quartz Scheduler v.2.2.1 created.
2019-04-30 09:40:09 -RAMJobStore initialized.
2019-04-30 09:40:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 09:40:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 09:40:09 -Quartz scheduler version: 2.2.1
2019-04-30 09:40:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-04-30 09:40:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 09:40:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 09:40:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 09:40:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 09:40:14 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 09:40:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 09:40:14 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 09:40:14 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 09:40:14 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 09:40:14 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:14 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:14 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 09:40:14 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 09:40:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 09:40:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 09:40:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 09:40:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 09:40:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 09:40:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 09:40:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:40:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 09:40:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:40:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 09:40:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 09:40:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 09:40:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 09:40:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 09:40:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 09:40:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 09:40:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 09:40:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 09:40:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 09:40:14 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:40:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 09:40:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 09:40:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 09:40:14 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 09:40:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 09:40:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 09:40:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:40:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:40:14 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 09:40:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 09:40:14 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:40:14 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 09:40:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:40:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 09:40:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 09:40:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 09:40:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:40:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:40:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 09:40:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 09:40:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 09:40:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 09:40:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 09:40:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 09:40:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 09:40:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 09:40:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 09:40:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 09:40:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 09:40:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 09:40:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 09:40:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 09:40:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 09:40:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 09:40:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 09:40:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 09:40:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 09:40:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 09:40:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 09:40:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 09:40:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 09:40:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 09:40:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 09:40:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 09:40:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 09:40:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 09:40:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 09:40:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:40:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:40:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 09:40:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 09:40:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 09:40:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 09:40:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 09:40:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:40:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 09:40:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:40:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:40:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 09:40:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:40:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 09:40:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:40:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 09:40:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 09:40:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 09:40:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 09:40:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 09:40:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 09:40:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:40:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 09:39:22 CST 2019]; root of context hierarchy
2019-04-30 09:40:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:40:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:40:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:40:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 09:40:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 09:40:28 -Registering beans for JMX exposure on startup
2019-04-30 09:40:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 09:40:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 09:40:29 -Starting beans in phase 2147483647
2019-04-30 09:40:29 -Context refreshed
2019-04-30 09:40:29 -Found 1 custom documentation plugin(s)
2019-04-30 09:40:29 -Scanning for api listing references
2019-04-30 09:40:33 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 09:40:33 -Generating unique operation named: removeUsingPOST_1
2019-04-30 09:40:33 -Generating unique operation named: addUsingGET_1
2019-04-30 09:40:33 -Generating unique operation named: editUsingGET_1
2019-04-30 09:40:33 -Generating unique operation named: listUsingGET_1
2019-04-30 09:40:33 -Generating unique operation named: removeUsingPOST_2
2019-04-30 09:40:33 -Generating unique operation named: removeUsingPOST_3
2019-04-30 09:40:33 -Generating unique operation named: saveUsingPOST_1
2019-04-30 09:40:33 -Generating unique operation named: updateUsingGET_1
2019-04-30 09:40:33 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 09:40:33 -Generating unique operation named: updateUsingPOST_1
2019-04-30 09:40:33 -Generating unique operation named: updateUsingPUT_1
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_2
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_2
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_2
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_4
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_5
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_2
2019-04-30 09:40:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_3
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_3
2019-04-30 09:40:34 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_3
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_6
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_7
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_4
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_4
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_4
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_8
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_9
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 09:40:34 -Generating unique operation named: ElecUsingGET_1
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_5
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_5
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_5
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_10
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_11
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_6
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_6
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_6
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_7
2019-04-30 09:40:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_7
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_12
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_13
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 09:40:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_7
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_8
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_8
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_14
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_15
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_8
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_8
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_9
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_9
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_16
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_17
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_8
2019-04-30 09:40:34 -Generating unique operation named: updateUsingGET_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_9
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPUT_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 09:40:34 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 09:40:34 -Generating unique operation named: addUsingGET_9
2019-04-30 09:40:34 -Generating unique operation named: editUsingGET_10
2019-04-30 09:40:34 -Generating unique operation named: infoUsingGET_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingPOST_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingPUT_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 09:40:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_10
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_18
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_19
2019-04-30 09:40:34 -Generating unique operation named: saveUsingPOST_9
2019-04-30 09:40:34 -Generating unique operation named: updateUsingPOST_10
2019-04-30 09:40:34 -Generating unique operation named: listUsingGET_11
2019-04-30 09:40:34 -Generating unique operation named: removeUsingPOST_20
2019-04-30 09:40:34 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_10
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_11
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_12
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_21
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_10
2019-04-30 09:40:35 -Generating unique operation named: treeUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: treeUsingGET_2
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_11
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_11
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_12
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_13
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_22
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_23
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingGET_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPUT_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 09:40:35 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_12
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_13
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_14
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_24
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_25
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingGET_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_13
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPUT_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 09:40:35 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_13
2019-04-30 09:40:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_14
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_15
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_13
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_14
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_14
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_16
2019-04-30 09:40:35 -Generating unique operation named: listUsingHEAD_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingPOST_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingPUT_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingPATCH_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingDELETE_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 09:40:35 -Generating unique operation named: listUsingTRACE_1
2019-04-30 09:40:35 -Generating unique operation named: countDDUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 09:40:35 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 09:40:35 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 09:40:35 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_14
2019-04-30 09:40:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_15
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_17
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_26
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_15
2019-04-30 09:40:35 -Generating unique operation named: treeUsingGET_3
2019-04-30 09:40:35 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_15
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_15
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_16
2019-04-30 09:40:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_18
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_27
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_28
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_16
2019-04-30 09:40:35 -Generating unique operation named: updateUsingGET_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_16
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPUT_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 09:40:35 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 09:40:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_16
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_17
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_19
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_29
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_30
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_17
2019-04-30 09:40:35 -Generating unique operation named: updateUsingGET_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_17
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPUT_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 09:40:35 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 09:40:35 -Generating unique operation named: addUsingGET_17
2019-04-30 09:40:35 -Generating unique operation named: editUsingGET_18
2019-04-30 09:40:35 -Generating unique operation named: listUsingGET_20
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_31
2019-04-30 09:40:35 -Generating unique operation named: removeUsingPOST_32
2019-04-30 09:40:35 -Generating unique operation named: saveUsingPOST_18
2019-04-30 09:40:35 -Generating unique operation named: updateUsingGET_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPOST_18
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPUT_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 09:40:35 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 09:40:35 -Starting Quartz Scheduler now
2019-04-30 09:40:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 09:40:35 -Starting...
2019-04-30 09:40:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 09:40:35 -Started.
2019-04-30 09:40:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 09:40:36 -Using a shared selector for servlet write/read
2019-04-30 09:40:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 09:40:36 -Started BootdoApplication in 75.662 seconds (JVM running for 76.598)
2019-04-30 09:40:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 09:40:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 09:40:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 09:40:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 865 ms
2019-04-30 09:40:39 -==> Parameters: 
2019-04-30 09:40:39 -Enabling session validation scheduler...
2019-04-30 09:40:39 -请求地址 : http://localhost:8081/
2019-04-30 09:40:39 -HTTP METHOD : GET
2019-04-30 09:40:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-30 09:40:39 -参数 : [{}]
2019-04-30 09:40:39 -耗时 : 2
2019-04-30 09:40:39 -返回值 : redirect:/index
2019-04-30 09:40:40 -<==      Total: 1
2019-04-30 09:40:40 -请求地址 : http://localhost:8081/login;JSESSIONID=2673c8c2-6148-49a2-80ae-2a503cc499ea
2019-04-30 09:40:40 -HTTP METHOD : GET
2019-04-30 09:40:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 09:40:40 -参数 : [{}]
2019-04-30 09:40:40 -耗时 : 1
2019-04-30 09:40:40 -返回值 : login
2019-04-30 09:40:50 -请求地址 : http://localhost:8081/getVerify
2019-04-30 09:40:50 -HTTP METHOD : GET
2019-04-30 09:40:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 09:40:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68425496, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1bf9d769]
2019-04-30 09:41:07 -1524
2019-04-30 09:41:08 -耗时 : 17751
2019-04-30 09:41:08 -返回值 : null
2019-04-30 09:41:14 -请求地址 : http://localhost:8081/login
2019-04-30 09:41:14 -HTTP METHOD : POST
2019-04-30 09:41:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 09:41:14 -参数 : [admin, 111111, 1524, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a64f014]
2019-04-30 09:41:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 09:41:14 -==> Parameters: admin(String)
2019-04-30 09:41:15 -<==      Total: 1
2019-04-30 09:41:15 -耗时 : 628
2019-04-30 09:41:15 -返回值 : {msg=操作成功, code=0}
2019-04-30 09:41:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 09:41:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:41:15 -==> Parameters: 1(Long), admin(String), 登录(String), 628(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 09:41:15.431(Timestamp)
2019-04-30 09:41:15 -请求地址 : http://localhost:8081/index
2019-04-30 09:41:15 -HTTP METHOD : GET
2019-04-30 09:41:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 09:41:15 -参数 : [{}]
2019-04-30 09:41:16 -<==    Updates: 1
2019-04-30 09:41:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-30 09:41:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 09:41:16 -==> Parameters: 1(Long)
2019-04-30 09:41:17 -<==      Total: 49
2019-04-30 09:41:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 09:41:17 -==> Parameters: 138(Long)
2019-04-30 09:41:17 -<==      Total: 1
2019-04-30 09:41:17 -耗时 : 1983
2019-04-30 09:41:17 -返回值 : index_v1
2019-04-30 09:41:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:41:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1983(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 09:41:17.818(Timestamp)
2019-04-30 09:41:18 -请求地址 : http://localhost:8081/main
2019-04-30 09:41:18 -HTTP METHOD : GET
2019-04-30 09:41:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:41:18 -参数 : []
2019-04-30 09:41:18 -耗时 : 5
2019-04-30 09:41:18 -返回值 : main
2019-04-30 09:41:19 -<==    Updates: 1
2019-04-30 09:41:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 09:41:20 -HTTP METHOD : GET
2019-04-30 09:41:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 09:41:20 -参数 : []
2019-04-30 09:41:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 09:41:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 09:41:20 -请求地址 : http://localhost:8081/main
2019-04-30 09:41:20 -HTTP METHOD : GET
2019-04-30 09:41:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:41:20 -参数 : []
2019-04-30 09:41:20 -耗时 : 1
2019-04-30 09:41:20 -返回值 : main
2019-04-30 09:41:20 -<==      Total: 0
2019-04-30 09:41:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 09:41:20 -==> Parameters: 1(Long), 0(String)
2019-04-30 09:41:20 -<==      Total: 1
2019-04-30 09:41:20 -耗时 : 461
2019-04-30 09:41:20 -返回值 : com.bootdo.common.utils.PageUtils@2ab9d948
2019-04-30 09:42:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 09:42:29 -==> Parameters: 1(Long)
2019-04-30 09:42:29 -<==      Total: 93
2019-04-30 09:42:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 09:42:29 -HTTP METHOD : GET
2019-04-30 09:42:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 09:42:29 -参数 : []
2019-04-30 09:42:29 -耗时 : 12
2019-04-30 09:42:29 -返回值 : charts/tableElecYY
2019-04-30 09:42:31 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 09:42:31 -HTTP METHOD : GET
2019-04-30 09:42:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 09:42:31 -参数 : []
2019-04-30 09:42:31 -耗时 : 9
2019-04-30 09:42:31 -返回值 : charts/tableWaterYY
2019-04-30 09:47:27 -请求地址 : http://localhost:8081/index
2019-04-30 09:47:27 -HTTP METHOD : GET
2019-04-30 09:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 09:47:27 -参数 : [{}]
2019-04-30 09:47:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 09:47:27 -==> Parameters: 1(Long)
2019-04-30 09:47:27 -<==      Total: 49
2019-04-30 09:47:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 09:47:27 -==> Parameters: 138(Long)
2019-04-30 09:47:27 -<==      Total: 1
2019-04-30 09:47:27 -耗时 : 87
2019-04-30 09:47:27 -返回值 : index_v1
2019-04-30 09:47:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:47:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 87(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 09:47:27.706(Timestamp)
2019-04-30 09:47:27 -请求地址 : http://localhost:8081/main
2019-04-30 09:47:27 -HTTP METHOD : GET
2019-04-30 09:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:47:27 -参数 : []
2019-04-30 09:47:27 -耗时 : 2
2019-04-30 09:47:27 -返回值 : main
2019-04-30 09:47:27 -<==    Updates: 1
2019-04-30 09:47:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 09:47:28 -HTTP METHOD : GET
2019-04-30 09:47:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 09:47:28 -参数 : []
2019-04-30 09:47:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 09:47:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 09:47:28 -<==      Total: 0
2019-04-30 09:47:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 09:47:28 -==> Parameters: 1(Long), 0(String)
2019-04-30 09:47:28 -<==      Total: 1
2019-04-30 09:47:28 -耗时 : 9
2019-04-30 09:47:28 -返回值 : com.bootdo.common.utils.PageUtils@6eb2c280
2019-04-30 09:47:28 -请求地址 : http://localhost:8081/main
2019-04-30 09:47:28 -HTTP METHOD : GET
2019-04-30 09:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:47:28 -参数 : []
2019-04-30 09:47:28 -耗时 : 1
2019-04-30 09:47:28 -返回值 : main
2019-04-30 09:47:32 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 09:47:32 -HTTP METHOD : GET
2019-04-30 09:47:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 09:47:32 -参数 : []
2019-04-30 09:47:32 -耗时 : 1
2019-04-30 09:47:32 -返回值 : charts/tableElecYY
2019-04-30 09:47:33 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 09:47:33 -HTTP METHOD : GET
2019-04-30 09:47:33 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 09:47:33 -参数 : []
2019-04-30 09:47:33 -耗时 : 1
2019-04-30 09:47:33 -返回值 : charts/tableWaterYY
2019-04-30 09:48:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 11308 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 09:48:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 09:48:52 -The following profiles are active: dev
2019-04-30 09:48:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:48:52 CST 2019]; root of context hierarchy
2019-04-30 09:48:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 09:48:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:48:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 09:49:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 09:49:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:49:01 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 09:49:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 09:49:01 -Starting service [Tomcat]
2019-04-30 09:49:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 09:49:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 09:49:02 -Initializing Spring embedded WebApplicationContext
2019-04-30 09:49:02 -Root WebApplicationContext: initialization completed in 9541 ms
2019-04-30 09:49:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 09:49:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 09:49:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 09:49:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 09:49:03 -Filter xssFilter was not registered (disabled)
2019-04-30 09:49:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 09:49:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 09:49:03 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 09:49:03 -Servlet dispatcherServlet mapped to [/]
2019-04-30 09:49:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:48:52 CST 2019]; root of context hierarchy
2019-04-30 09:49:12 -Using default implementation for ThreadExecutor
2019-04-30 09:49:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 09:49:12 -Quartz Scheduler v.2.2.1 created.
2019-04-30 09:49:12 -RAMJobStore initialized.
2019-04-30 09:49:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 09:49:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 09:49:12 -Quartz scheduler version: 2.2.1
2019-04-30 09:49:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4601047
2019-04-30 09:49:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 09:49:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 09:49:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 09:49:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 09:49:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 09:49:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 09:49:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 09:49:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 09:49:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 09:49:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 09:49:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 09:49:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 09:49:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 09:49:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 09:49:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 09:49:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:49:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 09:49:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:49:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 09:49:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 09:49:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 09:49:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 09:49:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 09:49:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 09:49:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 09:49:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 09:49:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 09:49:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 09:49:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 09:49:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 09:49:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 09:49:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 09:49:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 09:49:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:49:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:49:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 09:49:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 09:49:16 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 09:49:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 09:49:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:49:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:49:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 09:49:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 09:49:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 09:49:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 09:49:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 09:49:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 09:49:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 09:49:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 09:49:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 09:49:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 09:49:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 09:49:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 09:49:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 09:49:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 09:49:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 09:49:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 09:49:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 09:49:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 09:49:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 09:49:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 09:49:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 09:49:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 09:49:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 09:49:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 09:49:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 09:49:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 09:49:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 09:49:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 09:49:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 09:49:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:49:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:49:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 09:49:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 09:49:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 09:49:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 09:49:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 09:49:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 09:49:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:49:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 09:49:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:49:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 09:49:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:49:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:49:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 09:49:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 09:49:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 09:49:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 09:49:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 09:49:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 09:49:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:49:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:48:52 CST 2019]; root of context hierarchy
2019-04-30 09:49:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:49:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:49:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:49:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 09:49:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 09:49:20 -Registering beans for JMX exposure on startup
2019-04-30 09:49:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 09:49:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 09:49:20 -Starting beans in phase 2147483647
2019-04-30 09:49:20 -Context refreshed
2019-04-30 09:49:20 -Found 1 custom documentation plugin(s)
2019-04-30 09:49:20 -Scanning for api listing references
2019-04-30 09:49:21 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_1
2019-04-30 09:49:21 -Generating unique operation named: addUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: editUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: listUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_2
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_3
2019-04-30 09:49:21 -Generating unique operation named: saveUsingPOST_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPOST_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPUT_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 09:49:21 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 09:49:21 -Generating unique operation named: addUsingGET_2
2019-04-30 09:49:21 -Generating unique operation named: editUsingGET_2
2019-04-30 09:49:21 -Generating unique operation named: listUsingGET_2
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_4
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_5
2019-04-30 09:49:21 -Generating unique operation named: saveUsingPOST_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPOST_2
2019-04-30 09:49:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: addUsingGET_3
2019-04-30 09:49:21 -Generating unique operation named: editUsingGET_3
2019-04-30 09:49:21 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: listUsingGET_3
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_6
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_7
2019-04-30 09:49:21 -Generating unique operation named: saveUsingPOST_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingGET_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPOST_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPUT_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 09:49:21 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 09:49:21 -Generating unique operation named: addUsingGET_4
2019-04-30 09:49:21 -Generating unique operation named: editUsingGET_4
2019-04-30 09:49:21 -Generating unique operation named: listUsingGET_4
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_8
2019-04-30 09:49:21 -Generating unique operation named: removeUsingPOST_9
2019-04-30 09:49:21 -Generating unique operation named: saveUsingPOST_4
2019-04-30 09:49:21 -Generating unique operation named: updateUsingGET_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPOST_4
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPUT_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 09:49:21 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 09:49:21 -Generating unique operation named: ElecUsingGET_1
2019-04-30 09:49:21 -Generating unique operation named: addUsingGET_5
2019-04-30 09:49:21 -Generating unique operation named: editUsingGET_5
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_5
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_10
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_11
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 09:49:22 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_6
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_6
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_6
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_7
2019-04-30 09:49:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_7
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_12
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_13
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 09:49:22 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 09:49:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_7
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_8
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_8
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_14
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_15
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 09:49:22 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_8
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_9
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_9
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_16
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_17
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_9
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 09:49:22 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_9
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_10
2019-04-30 09:49:22 -Generating unique operation named: infoUsingGET_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingPOST_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingPUT_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 09:49:22 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_10
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_18
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_19
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_9
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_10
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_11
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_20
2019-04-30 09:49:22 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_10
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_11
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_12
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_21
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_10
2019-04-30 09:49:22 -Generating unique operation named: treeUsingGET_1
2019-04-30 09:49:22 -Generating unique operation named: treeUsingGET_2
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_11
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_11
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_12
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_13
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_22
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_23
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_11
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_12
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 09:49:22 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 09:49:22 -Generating unique operation named: addUsingGET_12
2019-04-30 09:49:22 -Generating unique operation named: editUsingGET_13
2019-04-30 09:49:22 -Generating unique operation named: listUsingGET_14
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_24
2019-04-30 09:49:22 -Generating unique operation named: removeUsingPOST_25
2019-04-30 09:49:22 -Generating unique operation named: saveUsingPOST_12
2019-04-30 09:49:22 -Generating unique operation named: updateUsingGET_9
2019-04-30 09:49:22 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPOST_13
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPUT_9
2019-04-30 09:49:22 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 09:49:23 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 09:49:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 09:49:23 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 09:49:23 -Generating unique operation named: addUsingGET_13
2019-04-30 09:49:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 09:49:23 -Generating unique operation named: editUsingGET_14
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_15
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_13
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_14
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPOST_14
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_16
2019-04-30 09:49:23 -Generating unique operation named: listUsingHEAD_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingPOST_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingPUT_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingPATCH_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingDELETE_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 09:49:23 -Generating unique operation named: listUsingTRACE_1
2019-04-30 09:49:23 -Generating unique operation named: countDDUsingGET_1
2019-04-30 09:49:23 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 09:49:23 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 09:49:23 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 09:49:23 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 09:49:23 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 09:49:23 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 09:49:23 -Generating unique operation named: addUsingGET_14
2019-04-30 09:49:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 09:49:23 -Generating unique operation named: editUsingGET_15
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_17
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_26
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_15
2019-04-30 09:49:23 -Generating unique operation named: treeUsingGET_3
2019-04-30 09:49:23 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPOST_15
2019-04-30 09:49:23 -Generating unique operation named: addUsingGET_15
2019-04-30 09:49:23 -Generating unique operation named: editUsingGET_16
2019-04-30 09:49:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_18
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_27
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_28
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_16
2019-04-30 09:49:23 -Generating unique operation named: updateUsingGET_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPOST_16
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPUT_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 09:49:23 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 09:49:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 09:49:23 -Generating unique operation named: addUsingGET_16
2019-04-30 09:49:23 -Generating unique operation named: editUsingGET_17
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_19
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_29
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_30
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_17
2019-04-30 09:49:23 -Generating unique operation named: updateUsingGET_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPOST_17
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPUT_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 09:49:23 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 09:49:23 -Generating unique operation named: addUsingGET_17
2019-04-30 09:49:23 -Generating unique operation named: editUsingGET_18
2019-04-30 09:49:23 -Generating unique operation named: listUsingGET_20
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_31
2019-04-30 09:49:23 -Generating unique operation named: removeUsingPOST_32
2019-04-30 09:49:23 -Generating unique operation named: saveUsingPOST_18
2019-04-30 09:49:23 -Generating unique operation named: updateUsingGET_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPOST_18
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPUT_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 09:49:23 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 09:49:23 -Starting Quartz Scheduler now
2019-04-30 09:49:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 09:49:23 -Starting...
2019-04-30 09:49:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 09:49:23 -Started.
2019-04-30 09:49:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 09:49:23 -Using a shared selector for servlet write/read
2019-04-30 09:49:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 09:49:23 -Started BootdoApplication in 32.449 seconds (JVM running for 33.368)
2019-04-30 09:49:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 09:49:24 -==> Parameters: 
2019-04-30 09:49:24 -<==      Total: 1
2019-04-30 09:49:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 09:49:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 09:49:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2019-04-30 09:49:32 -Enabling session validation scheduler...
2019-04-30 09:49:32 -请求地址 : http://localhost:8081/login;JSESSIONID=2db3a458-348c-48e1-b337-1d79d182c53d
2019-04-30 09:49:32 -HTTP METHOD : GET
2019-04-30 09:49:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 09:49:32 -参数 : [{}]
2019-04-30 09:49:32 -耗时 : 3
2019-04-30 09:49:32 -返回值 : login
2019-04-30 09:49:33 -请求地址 : http://localhost:8081/getVerify
2019-04-30 09:49:33 -HTTP METHOD : GET
2019-04-30 09:49:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 09:49:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@144f9a29, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10700c78]
2019-04-30 09:49:37 -4585
2019-04-30 09:49:37 -耗时 : 3655
2019-04-30 09:49:37 -返回值 : null
2019-04-30 09:49:45 -请求地址 : http://localhost:8081/login
2019-04-30 09:49:45 -HTTP METHOD : POST
2019-04-30 09:49:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 09:49:45 -参数 : [admin, 111111, 4585, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d1b5d79]
2019-04-30 09:49:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 09:49:45 -==> Parameters: admin(String)
2019-04-30 09:49:45 -<==      Total: 1
2019-04-30 09:49:45 -耗时 : 304
2019-04-30 09:49:45 -返回值 : {msg=操作成功, code=0}
2019-04-30 09:49:45 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 09:49:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:49:45 -==> Parameters: 1(Long), admin(String), 登录(String), 304(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 09:49:45.522(Timestamp)
2019-04-30 09:49:45 -请求地址 : http://localhost:8081/index
2019-04-30 09:49:45 -HTTP METHOD : GET
2019-04-30 09:49:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 09:49:45 -参数 : [{}]
2019-04-30 09:49:46 -<==    Updates: 1
2019-04-30 09:49:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 09:49:46 -==> Parameters: 1(Long)
2019-04-30 09:49:46 -<==      Total: 49
2019-04-30 09:49:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 09:49:46 -==> Parameters: 138(Long)
2019-04-30 09:49:46 -<==      Total: 1
2019-04-30 09:49:46 -耗时 : 851
2019-04-30 09:49:46 -返回值 : index_v1
2019-04-30 09:49:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:49:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 852(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 09:49:46.797(Timestamp)
2019-04-30 09:49:46 -请求地址 : http://localhost:8081/main
2019-04-30 09:49:46 -HTTP METHOD : GET
2019-04-30 09:49:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:49:46 -参数 : []
2019-04-30 09:49:46 -耗时 : 1
2019-04-30 09:49:46 -返回值 : main
2019-04-30 09:49:47 -<==    Updates: 1
2019-04-30 09:49:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 09:49:47 -HTTP METHOD : GET
2019-04-30 09:49:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 09:49:47 -参数 : []
2019-04-30 09:49:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 09:49:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 09:49:47 -请求地址 : http://localhost:8081/main
2019-04-30 09:49:47 -HTTP METHOD : GET
2019-04-30 09:49:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:49:47 -参数 : []
2019-04-30 09:49:47 -耗时 : 1
2019-04-30 09:49:47 -返回值 : main
2019-04-30 09:49:47 -<==      Total: 0
2019-04-30 09:49:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 09:49:47 -==> Parameters: 1(Long), 0(String)
2019-04-30 09:49:47 -<==      Total: 1
2019-04-30 09:49:47 -耗时 : 304
2019-04-30 09:49:47 -返回值 : com.bootdo.common.utils.PageUtils@710d2187
2019-04-30 09:50:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 09:50:08 -==> Parameters: 1(Long)
2019-04-30 09:50:08 -<==      Total: 93
2019-04-30 09:50:08 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 09:50:08 -HTTP METHOD : GET
2019-04-30 09:50:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 09:50:08 -参数 : []
2019-04-30 09:50:08 -耗时 : 13
2019-04-30 09:50:08 -返回值 : charts/tableElecYY
2019-04-30 09:50:10 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 09:50:10 -HTTP METHOD : GET
2019-04-30 09:50:10 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 09:50:10 -参数 : []
2019-04-30 09:50:10 -耗时 : 10
2019-04-30 09:50:10 -返回值 : charts/tableWaterYY
2019-04-30 09:50:17 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-30 09:50:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 09:50:25 -HTTP METHOD : GET
2019-04-30 09:50:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 09:50:25 -参数 : []
2019-04-30 09:50:25 -耗时 : 1
2019-04-30 09:50:25 -返回值 : system/dept/deptTree
2019-04-30 09:50:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 09:50:26 -HTTP METHOD : GET
2019-04-30 09:50:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 09:50:26 -参数 : []
2019-04-30 09:50:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 09:50:26 -==> Parameters: 
2019-04-30 09:50:26 -<==      Total: 3
2019-04-30 09:50:26 -耗时 : 88
2019-04-30 09:50:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 09:51:26 -请求地址 : http://localhost:8081/index
2019-04-30 09:51:26 -HTTP METHOD : GET
2019-04-30 09:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 09:51:26 -参数 : [{}]
2019-04-30 09:51:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 09:51:26 -==> Parameters: 1(Long)
2019-04-30 09:51:27 -<==      Total: 49
2019-04-30 09:51:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 09:51:27 -==> Parameters: 138(Long)
2019-04-30 09:51:27 -<==      Total: 1
2019-04-30 09:51:27 -耗时 : 104
2019-04-30 09:51:27 -返回值 : index_v1
2019-04-30 09:51:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:51:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 105(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 09:51:27.014(Timestamp)
2019-04-30 09:51:27 -<==    Updates: 1
2019-04-30 09:51:27 -请求地址 : http://localhost:8081/main
2019-04-30 09:51:27 -HTTP METHOD : GET
2019-04-30 09:51:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:51:27 -参数 : []
2019-04-30 09:51:27 -耗时 : 0
2019-04-30 09:51:27 -返回值 : main
2019-04-30 09:51:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 09:51:27 -HTTP METHOD : GET
2019-04-30 09:51:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 09:51:27 -参数 : []
2019-04-30 09:51:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 09:51:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 09:51:27 -<==      Total: 0
2019-04-30 09:51:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 09:51:27 -==> Parameters: 1(Long), 0(String)
2019-04-30 09:51:27 -<==      Total: 1
2019-04-30 09:51:27 -耗时 : 7
2019-04-30 09:51:27 -返回值 : com.bootdo.common.utils.PageUtils@5d8e4b27
2019-04-30 09:51:27 -请求地址 : http://localhost:8081/main
2019-04-30 09:51:27 -HTTP METHOD : GET
2019-04-30 09:51:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:51:27 -参数 : []
2019-04-30 09:51:27 -耗时 : 1
2019-04-30 09:51:27 -返回值 : main
2019-04-30 09:51:30 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 09:51:30 -HTTP METHOD : GET
2019-04-30 09:51:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 09:51:30 -参数 : []
2019-04-30 09:51:30 -耗时 : 2
2019-04-30 09:51:30 -返回值 : charts/tableElecYY
2019-04-30 09:51:32 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 09:51:32 -HTTP METHOD : GET
2019-04-30 09:51:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 09:51:32 -参数 : []
2019-04-30 09:51:32 -耗时 : 1
2019-04-30 09:51:32 -返回值 : charts/tableWaterYY
2019-04-30 09:51:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 09:51:37 -HTTP METHOD : GET
2019-04-30 09:51:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 09:51:37 -参数 : []
2019-04-30 09:51:37 -耗时 : 0
2019-04-30 09:51:37 -返回值 : system/dept/deptTree
2019-04-30 09:51:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 09:51:37 -HTTP METHOD : GET
2019-04-30 09:51:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 09:51:37 -参数 : []
2019-04-30 09:51:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 09:51:37 -==> Parameters: 
2019-04-30 09:51:37 -<==      Total: 3
2019-04-30 09:51:37 -耗时 : 6
2019-04-30 09:51:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 09:51:39 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-04-30 09:51:39 -HTTP METHOD : GET
2019-04-30 09:51:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-04-30 09:51:39 -参数 : [com.bootdo.water.vo.WaterVo@5247614c, com.bootdo.moneyLog.vo.WaterLogVo@4fe134f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@319776c8]
2019-04-30 09:51:40 -耗时 : 702
2019-04-30 09:51:40 -返回值 : null
2019-04-30 09:57:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 12184 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 09:57:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 09:57:55 -The following profiles are active: dev
2019-04-30 09:57:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:57:56 CST 2019]; root of context hierarchy
2019-04-30 09:57:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 09:58:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 09:58:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 09:58:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 09:58:02 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 09:58:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 09:58:02 -Starting service [Tomcat]
2019-04-30 09:58:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 09:58:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 09:58:03 -Initializing Spring embedded WebApplicationContext
2019-04-30 09:58:03 -Root WebApplicationContext: initialization completed in 7138 ms
2019-04-30 09:58:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 09:58:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 09:58:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 09:58:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 09:58:03 -Filter xssFilter was not registered (disabled)
2019-04-30 09:58:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 09:58:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 09:58:03 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 09:58:03 -Servlet dispatcherServlet mapped to [/]
2019-04-30 09:58:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:57:56 CST 2019]; root of context hierarchy
2019-04-30 09:58:12 -Using default implementation for ThreadExecutor
2019-04-30 09:58:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 09:58:12 -Quartz Scheduler v.2.2.1 created.
2019-04-30 09:58:12 -RAMJobStore initialized.
2019-04-30 09:58:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 09:58:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 09:58:12 -Quartz scheduler version: 2.2.1
2019-04-30 09:58:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-04-30 09:58:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 09:58:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 09:58:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 09:58:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 09:58:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 09:58:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 09:58:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 09:58:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 09:58:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 09:58:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 09:58:15 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 09:58:15 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 09:58:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 09:58:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 09:58:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 09:58:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 09:58:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 09:58:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:58:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 09:58:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 09:58:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 09:58:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 09:58:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 09:58:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 09:58:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 09:58:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 09:58:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 09:58:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 09:58:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 09:58:15 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 09:58:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 09:58:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 09:58:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 09:58:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 09:58:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 09:58:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 09:58:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 09:58:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:58:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 09:58:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:58:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 09:58:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 09:58:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 09:58:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 09:58:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 09:58:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 09:58:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 09:58:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 09:58:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 09:58:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 09:58:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 09:58:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 09:58:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 09:58:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 09:58:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 09:58:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 09:58:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 09:58:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 09:58:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 09:58:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 09:58:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 09:58:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 09:58:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 09:58:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 09:58:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 09:58:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 09:58:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 09:58:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 09:58:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 09:58:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:58:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 09:58:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 09:58:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 09:58:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 09:58:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 09:58:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 09:58:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 09:58:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 09:58:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 09:58:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 09:58:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 09:58:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 09:58:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 09:58:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 09:58:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 09:58:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 09:58:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 09:58:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 09:58:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:58:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 09:57:56 CST 2019]; root of context hierarchy
2019-04-30 09:58:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:58:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:58:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 09:58:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 09:58:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 09:58:18 -Registering beans for JMX exposure on startup
2019-04-30 09:58:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 09:58:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 09:58:18 -Starting beans in phase 2147483647
2019-04-30 09:58:18 -Context refreshed
2019-04-30 09:58:18 -Found 1 custom documentation plugin(s)
2019-04-30 09:58:18 -Scanning for api listing references
2019-04-30 09:58:19 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_1
2019-04-30 09:58:19 -Generating unique operation named: addUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: editUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: listUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_2
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_3
2019-04-30 09:58:19 -Generating unique operation named: saveUsingPOST_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPOST_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPUT_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 09:58:19 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 09:58:19 -Generating unique operation named: addUsingGET_2
2019-04-30 09:58:19 -Generating unique operation named: editUsingGET_2
2019-04-30 09:58:19 -Generating unique operation named: listUsingGET_2
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_4
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_5
2019-04-30 09:58:19 -Generating unique operation named: saveUsingPOST_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPOST_2
2019-04-30 09:58:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: addUsingGET_3
2019-04-30 09:58:19 -Generating unique operation named: editUsingGET_3
2019-04-30 09:58:19 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: listUsingGET_3
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_6
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_7
2019-04-30 09:58:19 -Generating unique operation named: saveUsingPOST_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingGET_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPOST_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPUT_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 09:58:19 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 09:58:19 -Generating unique operation named: addUsingGET_4
2019-04-30 09:58:19 -Generating unique operation named: editUsingGET_4
2019-04-30 09:58:19 -Generating unique operation named: listUsingGET_4
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_8
2019-04-30 09:58:19 -Generating unique operation named: removeUsingPOST_9
2019-04-30 09:58:19 -Generating unique operation named: saveUsingPOST_4
2019-04-30 09:58:19 -Generating unique operation named: updateUsingGET_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPOST_4
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPUT_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 09:58:19 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 09:58:19 -Generating unique operation named: ElecUsingGET_1
2019-04-30 09:58:19 -Generating unique operation named: addUsingGET_5
2019-04-30 09:58:19 -Generating unique operation named: editUsingGET_5
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_5
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_10
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_11
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_6
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_6
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_6
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_7
2019-04-30 09:58:20 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_7
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_12
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_13
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 09:58:20 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_7
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_8
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_8
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_14
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_15
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_8
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_9
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_9
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_16
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_17
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_9
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_10
2019-04-30 09:58:20 -Generating unique operation named: infoUsingGET_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingPOST_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingPUT_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 09:58:20 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_10
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_18
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_19
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_10
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_11
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_20
2019-04-30 09:58:20 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_10
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_11
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_12
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_21
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_10
2019-04-30 09:58:20 -Generating unique operation named: treeUsingGET_1
2019-04-30 09:58:20 -Generating unique operation named: treeUsingGET_2
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_11
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_11
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_12
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_13
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_22
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_23
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_11
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_12
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_12
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_13
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_14
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_24
2019-04-30 09:58:20 -Generating unique operation named: removeUsingPOST_25
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_12
2019-04-30 09:58:20 -Generating unique operation named: updateUsingGET_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_13
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPUT_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 09:58:20 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 09:58:20 -Generating unique operation named: addUsingGET_13
2019-04-30 09:58:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 09:58:20 -Generating unique operation named: editUsingGET_14
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_15
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_13
2019-04-30 09:58:20 -Generating unique operation named: saveUsingPOST_14
2019-04-30 09:58:20 -Generating unique operation named: updateUsingPOST_14
2019-04-30 09:58:20 -Generating unique operation named: listUsingGET_16
2019-04-30 09:58:20 -Generating unique operation named: listUsingHEAD_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingPOST_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingPUT_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingPATCH_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingDELETE_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 09:58:20 -Generating unique operation named: listUsingTRACE_1
2019-04-30 09:58:20 -Generating unique operation named: countDDUsingGET_1
2019-04-30 09:58:20 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 09:58:21 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 09:58:21 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 09:58:21 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 09:58:21 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 09:58:21 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 09:58:21 -Generating unique operation named: addUsingGET_14
2019-04-30 09:58:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 09:58:21 -Generating unique operation named: editUsingGET_15
2019-04-30 09:58:21 -Generating unique operation named: listUsingGET_17
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_26
2019-04-30 09:58:21 -Generating unique operation named: saveUsingPOST_15
2019-04-30 09:58:21 -Generating unique operation named: treeUsingGET_3
2019-04-30 09:58:21 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPOST_15
2019-04-30 09:58:21 -Generating unique operation named: addUsingGET_15
2019-04-30 09:58:21 -Generating unique operation named: editUsingGET_16
2019-04-30 09:58:21 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 09:58:21 -Generating unique operation named: listUsingGET_18
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_27
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_28
2019-04-30 09:58:21 -Generating unique operation named: saveUsingPOST_16
2019-04-30 09:58:21 -Generating unique operation named: updateUsingGET_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPOST_16
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPUT_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 09:58:21 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 09:58:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 09:58:21 -Generating unique operation named: addUsingGET_16
2019-04-30 09:58:21 -Generating unique operation named: editUsingGET_17
2019-04-30 09:58:21 -Generating unique operation named: listUsingGET_19
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_29
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_30
2019-04-30 09:58:21 -Generating unique operation named: saveUsingPOST_17
2019-04-30 09:58:21 -Generating unique operation named: updateUsingGET_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPOST_17
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPUT_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 09:58:21 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 09:58:21 -Generating unique operation named: addUsingGET_17
2019-04-30 09:58:21 -Generating unique operation named: editUsingGET_18
2019-04-30 09:58:21 -Generating unique operation named: listUsingGET_20
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_31
2019-04-30 09:58:21 -Generating unique operation named: removeUsingPOST_32
2019-04-30 09:58:21 -Generating unique operation named: saveUsingPOST_18
2019-04-30 09:58:21 -Generating unique operation named: updateUsingGET_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPOST_18
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPUT_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 09:58:21 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 09:58:21 -Starting Quartz Scheduler now
2019-04-30 09:58:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 09:58:21 -Starting...
2019-04-30 09:58:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 09:58:21 -Started.
2019-04-30 09:58:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 09:58:21 -Using a shared selector for servlet write/read
2019-04-30 09:58:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 09:58:21 -Started BootdoApplication in 26.797 seconds (JVM running for 27.63)
2019-04-30 09:58:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 09:58:21 -==> Parameters: 
2019-04-30 09:58:22 -<==      Total: 1
2019-04-30 09:58:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 09:58:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 09:58:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-04-30 09:58:36 -Enabling session validation scheduler...
2019-04-30 09:58:36 -请求地址 : http://localhost:8081/login;JSESSIONID=6f7559fb-267a-4c0f-9ebf-ea0339a3676a
2019-04-30 09:58:36 -HTTP METHOD : GET
2019-04-30 09:58:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 09:58:36 -参数 : [{}]
2019-04-30 09:58:36 -耗时 : 3
2019-04-30 09:58:36 -返回值 : login
2019-04-30 09:58:38 -请求地址 : http://localhost:8081/getVerify
2019-04-30 09:58:38 -HTTP METHOD : GET
2019-04-30 09:58:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 09:58:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d29eee8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@82b6929]
2019-04-30 09:58:44 -2062
2019-04-30 09:58:44 -耗时 : 6048
2019-04-30 09:58:44 -返回值 : null
2019-04-30 09:58:44 -请求地址 : http://localhost:8081/login
2019-04-30 09:58:44 -HTTP METHOD : GET
2019-04-30 09:58:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 09:58:44 -参数 : [{}]
2019-04-30 09:58:44 -耗时 : 0
2019-04-30 09:58:44 -返回值 : login
2019-04-30 09:58:53 -请求地址 : http://localhost:8081/login
2019-04-30 09:58:53 -HTTP METHOD : POST
2019-04-30 09:58:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 09:58:53 -参数 : [admin, 111111, 2062, org.apache.shiro.web.servlet.ShiroHttpServletRequest@f73687f]
2019-04-30 09:58:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 09:58:53 -==> Parameters: admin(String)
2019-04-30 09:58:54 -<==      Total: 1
2019-04-30 09:58:54 -耗时 : 332
2019-04-30 09:58:54 -返回值 : {msg=操作成功, code=0}
2019-04-30 09:58:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 09:58:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:58:54 -==> Parameters: 1(Long), admin(String), 登录(String), 332(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 09:58:54.266(Timestamp)
2019-04-30 09:58:54 -请求地址 : http://localhost:8081/index
2019-04-30 09:58:54 -HTTP METHOD : GET
2019-04-30 09:58:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 09:58:54 -参数 : [{}]
2019-04-30 09:58:54 -<==    Updates: 1
2019-04-30 09:58:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 09:58:55 -==> Parameters: 1(Long)
2019-04-30 09:58:56 -<==      Total: 49
2019-04-30 09:58:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 09:58:56 -==> Parameters: 138(Long)
2019-04-30 09:58:56 -<==      Total: 1
2019-04-30 09:58:56 -耗时 : 1544
2019-04-30 09:58:56 -返回值 : index_v1
2019-04-30 09:58:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 09:58:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1545(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 09:58:56.236(Timestamp)
2019-04-30 09:58:56 -<==    Updates: 1
2019-04-30 09:58:56 -请求地址 : http://localhost:8081/main
2019-04-30 09:58:56 -HTTP METHOD : GET
2019-04-30 09:58:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:58:56 -参数 : []
2019-04-30 09:58:56 -耗时 : 1
2019-04-30 09:58:56 -返回值 : main
2019-04-30 09:58:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 09:58:56 -HTTP METHOD : GET
2019-04-30 09:58:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 09:58:56 -参数 : []
2019-04-30 09:58:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 09:58:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 09:58:57 -请求地址 : http://localhost:8081/main
2019-04-30 09:58:57 -HTTP METHOD : GET
2019-04-30 09:58:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 09:58:57 -参数 : []
2019-04-30 09:58:57 -耗时 : 0
2019-04-30 09:58:57 -返回值 : main
2019-04-30 09:58:57 -<==      Total: 0
2019-04-30 09:58:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 09:58:57 -==> Parameters: 1(Long), 0(String)
2019-04-30 09:58:57 -<==      Total: 1
2019-04-30 09:58:57 -耗时 : 412
2019-04-30 09:58:57 -返回值 : com.bootdo.common.utils.PageUtils@70c32a23
2019-04-30 09:59:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 09:59:04 -==> Parameters: 1(Long)
2019-04-30 09:59:04 -<==      Total: 93
2019-04-30 09:59:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 09:59:04 -HTTP METHOD : GET
2019-04-30 09:59:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 09:59:04 -参数 : []
2019-04-30 09:59:04 -耗时 : 14
2019-04-30 09:59:04 -返回值 : charts/tableElecYY
2019-04-30 09:59:05 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 09:59:05 -HTTP METHOD : GET
2019-04-30 09:59:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 09:59:05 -参数 : []
2019-04-30 09:59:05 -耗时 : 15
2019-04-30 09:59:05 -返回值 : charts/tableWaterYY
2019-04-30 09:59:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 09:59:12 -HTTP METHOD : GET
2019-04-30 09:59:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 09:59:12 -参数 : []
2019-04-30 09:59:12 -耗时 : 0
2019-04-30 09:59:12 -返回值 : system/dept/deptTree
2019-04-30 09:59:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 09:59:12 -HTTP METHOD : GET
2019-04-30 09:59:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 09:59:12 -参数 : []
2019-04-30 09:59:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 09:59:12 -==> Parameters: 
2019-04-30 09:59:13 -<==      Total: 3
2019-04-30 09:59:13 -耗时 : 155
2019-04-30 09:59:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 09:59:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 09:59:14 -HTTP METHOD : GET
2019-04-30 09:59:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 09:59:14 -参数 : []
2019-04-30 09:59:14 -耗时 : 1
2019-04-30 09:59:14 -返回值 : system/dept/deptTree
2019-04-30 09:59:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 09:59:14 -HTTP METHOD : GET
2019-04-30 09:59:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 09:59:14 -参数 : []
2019-04-30 09:59:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 09:59:14 -==> Parameters: 
2019-04-30 09:59:14 -<==      Total: 3
2019-04-30 09:59:14 -耗时 : 4
2019-04-30 09:59:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 09:59:15 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-30 09:59:16 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-04-30 09:59:16 -HTTP METHOD : GET
2019-04-30 09:59:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-04-30 09:59:16 -参数 : [com.bootdo.water.vo.WaterVo@2fbcdd9d, com.bootdo.moneyLog.vo.WaterLogVo@153be01c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@147b71d5]
2019-04-30 09:59:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE '?%' and user_org = ? order by create_time asc 
2019-04-30 09:59:16 -耗时 : 676
2019-04-30 09:59:16 -返回值 : null
2019-04-30 10:07:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 9692 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 10:07:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 10:07:44 -The following profiles are active: dev
2019-04-30 10:07:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:07:45 CST 2019]; root of context hierarchy
2019-04-30 10:07:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 10:07:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 10:07:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 10:07:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:07:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 10:07:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 10:07:53 -Starting service [Tomcat]
2019-04-30 10:07:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 10:07:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 10:07:53 -Initializing Spring embedded WebApplicationContext
2019-04-30 10:07:53 -Root WebApplicationContext: initialization completed in 8575 ms
2019-04-30 10:07:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 10:07:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 10:07:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 10:07:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 10:07:54 -Filter xssFilter was not registered (disabled)
2019-04-30 10:07:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 10:07:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 10:07:54 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 10:07:54 -Servlet dispatcherServlet mapped to [/]
2019-04-30 10:08:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:07:45 CST 2019]; root of context hierarchy
2019-04-30 10:08:02 -Using default implementation for ThreadExecutor
2019-04-30 10:08:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 10:08:02 -Quartz Scheduler v.2.2.1 created.
2019-04-30 10:08:02 -RAMJobStore initialized.
2019-04-30 10:08:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 10:08:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 10:08:02 -Quartz scheduler version: 2.2.1
2019-04-30 10:08:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-04-30 10:08:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 10:08:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 10:08:06 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 10:08:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 10:08:06 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 10:08:06 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 10:08:06 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 10:08:06 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 10:08:06 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 10:08:06 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 10:08:06 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 10:08:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 10:08:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 10:08:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 10:08:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 10:08:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 10:08:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 10:08:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 10:08:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 10:08:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 10:08:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 10:08:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 10:08:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 10:08:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 10:08:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 10:08:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 10:08:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 10:08:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 10:08:06 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 10:08:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 10:08:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 10:08:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 10:08:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 10:08:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 10:08:06 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 10:08:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 10:08:06 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:08:06 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:08:06 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:08:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 10:08:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 10:08:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 10:08:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 10:08:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 10:08:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 10:08:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 10:08:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 10:08:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 10:08:06 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 10:08:06 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 10:08:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 10:08:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 10:08:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 10:08:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 10:08:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 10:08:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 10:08:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 10:08:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 10:08:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 10:08:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 10:08:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 10:08:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 10:08:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 10:08:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 10:08:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 10:08:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 10:08:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 10:08:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 10:08:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 10:08:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 10:08:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 10:08:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 10:08:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 10:08:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 10:08:06 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:08:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 10:08:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 10:08:06 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 10:08:06 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:08:06 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 10:08:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:08:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 10:08:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 10:08:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 10:08:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 10:08:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 10:08:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 10:08:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:08:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:07:45 CST 2019]; root of context hierarchy
2019-04-30 10:08:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:08:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:08:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:08:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 10:08:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 10:08:09 -Registering beans for JMX exposure on startup
2019-04-30 10:08:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 10:08:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 10:08:09 -Starting beans in phase 2147483647
2019-04-30 10:08:09 -Context refreshed
2019-04-30 10:08:09 -Found 1 custom documentation plugin(s)
2019-04-30 10:08:09 -Scanning for api listing references
2019-04-30 10:08:10 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_1
2019-04-30 10:08:10 -Generating unique operation named: addUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: editUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: listUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_2
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_3
2019-04-30 10:08:10 -Generating unique operation named: saveUsingPOST_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPOST_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPUT_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 10:08:10 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 10:08:10 -Generating unique operation named: addUsingGET_2
2019-04-30 10:08:10 -Generating unique operation named: editUsingGET_2
2019-04-30 10:08:10 -Generating unique operation named: listUsingGET_2
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_4
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_5
2019-04-30 10:08:10 -Generating unique operation named: saveUsingPOST_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPOST_2
2019-04-30 10:08:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: addUsingGET_3
2019-04-30 10:08:10 -Generating unique operation named: editUsingGET_3
2019-04-30 10:08:10 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: listUsingGET_3
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_6
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_7
2019-04-30 10:08:10 -Generating unique operation named: saveUsingPOST_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingGET_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPOST_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPUT_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 10:08:10 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 10:08:10 -Generating unique operation named: addUsingGET_4
2019-04-30 10:08:10 -Generating unique operation named: editUsingGET_4
2019-04-30 10:08:10 -Generating unique operation named: listUsingGET_4
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_8
2019-04-30 10:08:10 -Generating unique operation named: removeUsingPOST_9
2019-04-30 10:08:10 -Generating unique operation named: saveUsingPOST_4
2019-04-30 10:08:10 -Generating unique operation named: updateUsingGET_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPOST_4
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPUT_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 10:08:10 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 10:08:10 -Generating unique operation named: ElecUsingGET_1
2019-04-30 10:08:10 -Generating unique operation named: addUsingGET_5
2019-04-30 10:08:10 -Generating unique operation named: editUsingGET_5
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_5
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_10
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_11
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_6
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_6
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_6
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_7
2019-04-30 10:08:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_7
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_12
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_13
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 10:08:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_7
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_8
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_8
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_14
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_15
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_8
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_9
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_9
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_16
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_17
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_9
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_10
2019-04-30 10:08:11 -Generating unique operation named: infoUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingPOST_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingPUT_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 10:08:11 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_10
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_18
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_19
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_10
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_11
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_20
2019-04-30 10:08:11 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_10
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_11
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_12
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_21
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_10
2019-04-30 10:08:11 -Generating unique operation named: treeUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: treeUsingGET_2
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_11
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_11
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_12
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_13
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_22
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_23
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_11
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_12
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_12
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_13
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_14
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_24
2019-04-30 10:08:11 -Generating unique operation named: removeUsingPOST_25
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_12
2019-04-30 10:08:11 -Generating unique operation named: updateUsingGET_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_13
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPUT_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 10:08:11 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 10:08:11 -Generating unique operation named: addUsingGET_13
2019-04-30 10:08:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 10:08:11 -Generating unique operation named: editUsingGET_14
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_15
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_13
2019-04-30 10:08:11 -Generating unique operation named: saveUsingPOST_14
2019-04-30 10:08:11 -Generating unique operation named: updateUsingPOST_14
2019-04-30 10:08:11 -Generating unique operation named: listUsingGET_16
2019-04-30 10:08:11 -Generating unique operation named: listUsingHEAD_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingPOST_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingPUT_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingPATCH_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingDELETE_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 10:08:11 -Generating unique operation named: listUsingTRACE_1
2019-04-30 10:08:11 -Generating unique operation named: countDDUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 10:08:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 10:08:11 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 10:08:11 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 10:08:12 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 10:08:12 -Generating unique operation named: addUsingGET_14
2019-04-30 10:08:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 10:08:12 -Generating unique operation named: editUsingGET_15
2019-04-30 10:08:12 -Generating unique operation named: listUsingGET_17
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_26
2019-04-30 10:08:12 -Generating unique operation named: saveUsingPOST_15
2019-04-30 10:08:12 -Generating unique operation named: treeUsingGET_3
2019-04-30 10:08:12 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPOST_15
2019-04-30 10:08:12 -Generating unique operation named: addUsingGET_15
2019-04-30 10:08:12 -Generating unique operation named: editUsingGET_16
2019-04-30 10:08:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 10:08:12 -Generating unique operation named: listUsingGET_18
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_27
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_28
2019-04-30 10:08:12 -Generating unique operation named: saveUsingPOST_16
2019-04-30 10:08:12 -Generating unique operation named: updateUsingGET_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPOST_16
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPUT_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 10:08:12 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 10:08:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 10:08:12 -Generating unique operation named: addUsingGET_16
2019-04-30 10:08:12 -Generating unique operation named: editUsingGET_17
2019-04-30 10:08:12 -Generating unique operation named: listUsingGET_19
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_29
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_30
2019-04-30 10:08:12 -Generating unique operation named: saveUsingPOST_17
2019-04-30 10:08:12 -Generating unique operation named: updateUsingGET_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPOST_17
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPUT_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 10:08:12 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 10:08:12 -Generating unique operation named: addUsingGET_17
2019-04-30 10:08:12 -Generating unique operation named: editUsingGET_18
2019-04-30 10:08:12 -Generating unique operation named: listUsingGET_20
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_31
2019-04-30 10:08:12 -Generating unique operation named: removeUsingPOST_32
2019-04-30 10:08:12 -Generating unique operation named: saveUsingPOST_18
2019-04-30 10:08:12 -Generating unique operation named: updateUsingGET_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPOST_18
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPUT_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 10:08:12 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 10:08:12 -Starting Quartz Scheduler now
2019-04-30 10:08:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 10:08:12 -Starting...
2019-04-30 10:08:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 10:08:12 -Started.
2019-04-30 10:08:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 10:08:12 -Using a shared selector for servlet write/read
2019-04-30 10:08:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 10:08:12 -Started BootdoApplication in 28.821 seconds (JVM running for 29.668)
2019-04-30 10:08:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 10:08:13 -==> Parameters: 
2019-04-30 10:08:13 -<==      Total: 1
2019-04-30 10:08:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 10:08:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 10:08:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-04-30 10:08:36 -Enabling session validation scheduler...
2019-04-30 10:08:36 -请求地址 : http://localhost:8081/login;JSESSIONID=77ac7035-98b1-4af0-b819-39c50f099d0a
2019-04-30 10:08:36 -HTTP METHOD : GET
2019-04-30 10:08:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:08:36 -参数 : [{}]
2019-04-30 10:08:36 -耗时 : 2
2019-04-30 10:08:36 -返回值 : login
2019-04-30 10:08:37 -请求地址 : http://localhost:8081/getVerify
2019-04-30 10:08:37 -HTTP METHOD : GET
2019-04-30 10:08:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 10:08:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5de45045, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31938100]
2019-04-30 10:08:42 -8724
2019-04-30 10:08:42 -耗时 : 4483
2019-04-30 10:08:42 -返回值 : null
2019-04-30 10:08:42 -请求地址 : http://localhost:8081/login
2019-04-30 10:08:42 -HTTP METHOD : GET
2019-04-30 10:08:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:08:42 -参数 : [{}]
2019-04-30 10:08:42 -耗时 : 0
2019-04-30 10:08:42 -返回值 : login
2019-04-30 10:08:48 -请求地址 : http://localhost:8081/login
2019-04-30 10:08:48 -HTTP METHOD : POST
2019-04-30 10:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 10:08:48 -参数 : [admin, 111111, 8724, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7697b8af]
2019-04-30 10:08:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 10:08:48 -==> Parameters: admin(String)
2019-04-30 10:08:48 -<==      Total: 1
2019-04-30 10:08:48 -耗时 : 192
2019-04-30 10:08:48 -返回值 : {msg=操作成功, code=0}
2019-04-30 10:08:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 10:08:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:08:48 -==> Parameters: 1(Long), admin(String), 登录(String), 193(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 10:08:48.549(Timestamp)
2019-04-30 10:08:48 -请求地址 : http://localhost:8081/index
2019-04-30 10:08:48 -HTTP METHOD : GET
2019-04-30 10:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 10:08:48 -参数 : [{}]
2019-04-30 10:08:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 10:08:49 -<==    Updates: 1
2019-04-30 10:08:49 -==> Parameters: 1(Long)
2019-04-30 10:08:49 -<==      Total: 49
2019-04-30 10:08:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 10:08:49 -==> Parameters: 138(Long)
2019-04-30 10:08:49 -<==      Total: 1
2019-04-30 10:08:49 -耗时 : 834
2019-04-30 10:08:49 -返回值 : index_v1
2019-04-30 10:08:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:08:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 834(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 10:08:49.551(Timestamp)
2019-04-30 10:08:49 -请求地址 : http://localhost:8081/main
2019-04-30 10:08:49 -HTTP METHOD : GET
2019-04-30 10:08:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:08:49 -参数 : []
2019-04-30 10:08:49 -耗时 : 0
2019-04-30 10:08:49 -返回值 : main
2019-04-30 10:08:50 -<==    Updates: 1
2019-04-30 10:08:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 10:08:50 -HTTP METHOD : GET
2019-04-30 10:08:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 10:08:50 -参数 : []
2019-04-30 10:08:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 10:08:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 10:08:50 -请求地址 : http://localhost:8081/main
2019-04-30 10:08:50 -HTTP METHOD : GET
2019-04-30 10:08:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:08:50 -参数 : []
2019-04-30 10:08:50 -耗时 : 0
2019-04-30 10:08:50 -返回值 : main
2019-04-30 10:08:50 -<==      Total: 0
2019-04-30 10:08:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 10:08:50 -==> Parameters: 1(Long), 0(String)
2019-04-30 10:08:50 -<==      Total: 1
2019-04-30 10:08:50 -耗时 : 167
2019-04-30 10:08:50 -返回值 : com.bootdo.common.utils.PageUtils@12432f0a
2019-04-30 10:09:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 10:09:04 -==> Parameters: 1(Long)
2019-04-30 10:09:04 -<==      Total: 93
2019-04-30 10:09:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 10:09:04 -HTTP METHOD : GET
2019-04-30 10:09:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 10:09:04 -参数 : []
2019-04-30 10:09:04 -耗时 : 10
2019-04-30 10:09:04 -返回值 : charts/tableElecYY
2019-04-30 10:09:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 10:09:06 -HTTP METHOD : GET
2019-04-30 10:09:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 10:09:06 -参数 : []
2019-04-30 10:09:06 -耗时 : 6
2019-04-30 10:09:06 -返回值 : charts/tableWaterYY
2019-04-30 10:09:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-30 10:09:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:09:15 -HTTP METHOD : GET
2019-04-30 10:09:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:09:15 -参数 : []
2019-04-30 10:09:15 -耗时 : 1
2019-04-30 10:09:15 -返回值 : system/dept/deptTree
2019-04-30 10:09:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:09:15 -HTTP METHOD : GET
2019-04-30 10:09:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:09:15 -参数 : []
2019-04-30 10:09:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:09:15 -==> Parameters: 
2019-04-30 10:09:15 -<==      Total: 3
2019-04-30 10:09:15 -耗时 : 49
2019-04-30 10:09:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:09:17 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-04-30 10:09:17 -HTTP METHOD : GET
2019-04-30 10:09:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-04-30 10:09:17 -参数 : [com.bootdo.water.vo.WaterVo@352877a4, com.bootdo.moneyLog.vo.WaterLogVo@3b40825a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e20bf10]
2019-04-30 10:09:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE '?%' and user_org = ? order by create_time asc 
2019-04-30 10:09:18 -耗时 : 388
2019-04-30 10:09:18 -返回值 : null
2019-04-30 10:29:01 -Starting BootdoApplication on ZJZL-20180906VX with PID 13220 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 10:29:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 10:29:01 -The following profiles are active: dev
2019-04-30 10:29:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:29:01 CST 2019]; root of context hierarchy
2019-04-30 10:29:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 10:29:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 10:29:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 10:29:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:29:12 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 10:29:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 10:29:12 -Starting service [Tomcat]
2019-04-30 10:29:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 10:29:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 10:29:12 -Initializing Spring embedded WebApplicationContext
2019-04-30 10:29:12 -Root WebApplicationContext: initialization completed in 10932 ms
2019-04-30 10:29:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 10:29:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 10:29:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 10:29:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 10:29:13 -Filter xssFilter was not registered (disabled)
2019-04-30 10:29:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 10:29:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 10:29:13 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 10:29:13 -Servlet dispatcherServlet mapped to [/]
2019-04-30 10:29:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:29:01 CST 2019]; root of context hierarchy
2019-04-30 10:29:22 -Using default implementation for ThreadExecutor
2019-04-30 10:29:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 10:29:22 -Quartz Scheduler v.2.2.1 created.
2019-04-30 10:29:22 -RAMJobStore initialized.
2019-04-30 10:29:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 10:29:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 10:29:22 -Quartz scheduler version: 2.2.1
2019-04-30 10:29:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-04-30 10:29:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 10:29:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 10:29:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 10:29:27 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 10:29:27 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 10:29:27 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 10:29:27 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 10:29:27 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 10:29:27 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 10:29:27 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 10:29:27 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 10:29:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 10:29:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 10:29:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 10:29:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 10:29:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 10:29:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 10:29:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 10:29:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 10:29:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 10:29:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 10:29:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 10:29:27 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 10:29:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 10:29:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 10:29:27 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 10:29:27 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 10:29:27 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 10:29:27 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 10:29:27 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 10:29:27 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 10:29:27 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 10:29:27 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 10:29:27 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 10:29:27 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 10:29:27 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 10:29:27 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 10:29:27 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 10:29:27 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 10:29:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 10:29:27 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:29:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 10:29:27 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:29:27 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 10:29:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 10:29:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 10:29:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 10:29:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 10:29:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 10:29:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 10:29:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 10:29:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 10:29:27 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 10:29:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 10:29:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 10:29:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 10:29:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 10:29:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 10:29:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 10:29:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 10:29:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 10:29:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 10:29:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 10:29:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 10:29:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 10:29:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 10:29:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 10:29:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 10:29:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 10:29:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 10:29:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 10:29:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 10:29:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 10:29:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 10:29:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 10:29:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 10:29:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 10:29:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 10:29:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 10:29:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 10:29:27 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 10:29:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 10:29:27 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 10:29:27 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 10:29:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 10:29:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 10:29:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 10:29:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 10:29:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 10:29:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 10:29:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 10:29:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:29:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:29:01 CST 2019]; root of context hierarchy
2019-04-30 10:29:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:29:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:29:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 10:29:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 10:29:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 10:29:33 -Registering beans for JMX exposure on startup
2019-04-30 10:29:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 10:29:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 10:29:33 -Starting beans in phase 2147483647
2019-04-30 10:29:33 -Context refreshed
2019-04-30 10:29:33 -Found 1 custom documentation plugin(s)
2019-04-30 10:29:33 -Scanning for api listing references
2019-04-30 10:29:34 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_1
2019-04-30 10:29:34 -Generating unique operation named: addUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: editUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: listUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_2
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_3
2019-04-30 10:29:34 -Generating unique operation named: saveUsingPOST_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPOST_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPUT_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 10:29:34 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 10:29:34 -Generating unique operation named: addUsingGET_2
2019-04-30 10:29:34 -Generating unique operation named: editUsingGET_2
2019-04-30 10:29:34 -Generating unique operation named: listUsingGET_2
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_4
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_5
2019-04-30 10:29:34 -Generating unique operation named: saveUsingPOST_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPOST_2
2019-04-30 10:29:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: addUsingGET_3
2019-04-30 10:29:34 -Generating unique operation named: editUsingGET_3
2019-04-30 10:29:34 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: listUsingGET_3
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_6
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_7
2019-04-30 10:29:34 -Generating unique operation named: saveUsingPOST_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingGET_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPOST_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPUT_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 10:29:34 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 10:29:34 -Generating unique operation named: addUsingGET_4
2019-04-30 10:29:34 -Generating unique operation named: editUsingGET_4
2019-04-30 10:29:34 -Generating unique operation named: listUsingGET_4
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_8
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_9
2019-04-30 10:29:34 -Generating unique operation named: saveUsingPOST_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingGET_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPOST_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPUT_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 10:29:34 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 10:29:34 -Generating unique operation named: ElecUsingGET_1
2019-04-30 10:29:34 -Generating unique operation named: addUsingGET_5
2019-04-30 10:29:34 -Generating unique operation named: editUsingGET_5
2019-04-30 10:29:34 -Generating unique operation named: listUsingGET_5
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_10
2019-04-30 10:29:34 -Generating unique operation named: removeUsingPOST_11
2019-04-30 10:29:34 -Generating unique operation named: saveUsingPOST_5
2019-04-30 10:29:34 -Generating unique operation named: updateUsingGET_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPOST_5
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPUT_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 10:29:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_6
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_6
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_6
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_7
2019-04-30 10:29:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_7
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_12
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_13
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingGET_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPUT_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 10:29:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_7
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_8
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_8
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_14
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_15
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingGET_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPUT_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_8
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_9
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_9
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_16
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_17
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingGET_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPUT_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_9
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_10
2019-04-30 10:29:35 -Generating unique operation named: infoUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingPOST_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingPUT_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 10:29:35 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_10
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_18
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_19
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_10
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_11
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_20
2019-04-30 10:29:35 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_10
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_11
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_12
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_21
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_10
2019-04-30 10:29:35 -Generating unique operation named: treeUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: treeUsingGET_2
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_11
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_11
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_12
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_13
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_22
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_23
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_11
2019-04-30 10:29:35 -Generating unique operation named: updateUsingGET_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_12
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPUT_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_12
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_13
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_14
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_24
2019-04-30 10:29:35 -Generating unique operation named: removeUsingPOST_25
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_12
2019-04-30 10:29:35 -Generating unique operation named: updateUsingGET_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_13
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPUT_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 10:29:35 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 10:29:35 -Generating unique operation named: addUsingGET_13
2019-04-30 10:29:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 10:29:35 -Generating unique operation named: editUsingGET_14
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_15
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_13
2019-04-30 10:29:35 -Generating unique operation named: saveUsingPOST_14
2019-04-30 10:29:35 -Generating unique operation named: updateUsingPOST_14
2019-04-30 10:29:35 -Generating unique operation named: listUsingGET_16
2019-04-30 10:29:35 -Generating unique operation named: listUsingHEAD_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingPOST_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingPUT_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingPATCH_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingDELETE_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 10:29:35 -Generating unique operation named: listUsingTRACE_1
2019-04-30 10:29:35 -Generating unique operation named: countDDUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 10:29:35 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 10:29:35 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 10:29:35 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 10:29:35 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 10:29:36 -Generating unique operation named: addUsingGET_14
2019-04-30 10:29:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 10:29:36 -Generating unique operation named: editUsingGET_15
2019-04-30 10:29:36 -Generating unique operation named: listUsingGET_17
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_26
2019-04-30 10:29:36 -Generating unique operation named: saveUsingPOST_15
2019-04-30 10:29:36 -Generating unique operation named: treeUsingGET_3
2019-04-30 10:29:36 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPOST_15
2019-04-30 10:29:36 -Generating unique operation named: addUsingGET_15
2019-04-30 10:29:36 -Generating unique operation named: editUsingGET_16
2019-04-30 10:29:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 10:29:36 -Generating unique operation named: listUsingGET_18
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_27
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_28
2019-04-30 10:29:36 -Generating unique operation named: saveUsingPOST_16
2019-04-30 10:29:36 -Generating unique operation named: updateUsingGET_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPOST_16
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPUT_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 10:29:36 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 10:29:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 10:29:36 -Generating unique operation named: addUsingGET_16
2019-04-30 10:29:36 -Generating unique operation named: editUsingGET_17
2019-04-30 10:29:36 -Generating unique operation named: listUsingGET_19
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_29
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_30
2019-04-30 10:29:36 -Generating unique operation named: saveUsingPOST_17
2019-04-30 10:29:36 -Generating unique operation named: updateUsingGET_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPOST_17
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPUT_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 10:29:36 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 10:29:36 -Generating unique operation named: addUsingGET_17
2019-04-30 10:29:36 -Generating unique operation named: editUsingGET_18
2019-04-30 10:29:36 -Generating unique operation named: listUsingGET_20
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_31
2019-04-30 10:29:36 -Generating unique operation named: removeUsingPOST_32
2019-04-30 10:29:36 -Generating unique operation named: saveUsingPOST_18
2019-04-30 10:29:36 -Generating unique operation named: updateUsingGET_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPOST_18
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPUT_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 10:29:36 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 10:29:36 -Starting Quartz Scheduler now
2019-04-30 10:29:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 10:29:36 -Starting...
2019-04-30 10:29:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 10:29:36 -Started.
2019-04-30 10:29:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 10:29:36 -Using a shared selector for servlet write/read
2019-04-30 10:29:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 10:29:36 -Started BootdoApplication in 36.097 seconds (JVM running for 36.919)
2019-04-30 10:29:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 10:29:37 -==> Parameters: 
2019-04-30 10:29:37 -<==      Total: 1
2019-04-30 10:30:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 10:30:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 10:30:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 668 ms
2019-04-30 10:30:06 -Enabling session validation scheduler...
2019-04-30 10:30:07 -请求地址 : http://localhost:8081/login;JSESSIONID=9ee9002c-345a-43b2-aad7-a3127ade9a26
2019-04-30 10:30:07 -请求地址 : http://localhost:8081/login;JSESSIONID=88f474fc-1907-4b3a-a93d-89b847a7b52c
2019-04-30 10:30:07 -HTTP METHOD : GET
2019-04-30 10:30:07 -HTTP METHOD : GET
2019-04-30 10:30:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:07 -参数 : [{}]
2019-04-30 10:30:07 -耗时 : 7
2019-04-30 10:30:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:07 -参数 : [{}]
2019-04-30 10:30:07 -耗时 : 7
2019-04-30 10:30:07 -返回值 : login
2019-04-30 10:30:07 -返回值 : login
2019-04-30 10:30:09 -请求地址 : http://localhost:8081/login;JSESSIONID=88f474fc-1907-4b3a-a93d-89b847a7b52c
2019-04-30 10:30:09 -HTTP METHOD : GET
2019-04-30 10:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:09 -参数 : [{}]
2019-04-30 10:30:09 -耗时 : 1
2019-04-30 10:30:09 -返回值 : login
2019-04-30 10:30:10 -请求地址 : http://localhost:8081/getVerify
2019-04-30 10:30:10 -HTTP METHOD : GET
2019-04-30 10:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 10:30:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@798a4a24, org.apache.shiro.web.servlet.ShiroHttpServletResponse@727a384f]
2019-04-30 10:30:10 -请求地址 : http://localhost:8081/login;JSESSIONID=88f474fc-1907-4b3a-a93d-89b847a7b52c
2019-04-30 10:30:10 -HTTP METHOD : GET
2019-04-30 10:30:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:10 -参数 : [{}]
2019-04-30 10:30:10 -耗时 : 1
2019-04-30 10:30:10 -返回值 : login
2019-04-30 10:30:13 -请求地址 : http://localhost:8081/getVerify
2019-04-30 10:30:13 -HTTP METHOD : GET
2019-04-30 10:30:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 10:30:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b359812, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ec2231]
2019-04-30 10:30:17 -2321
2019-04-30 10:30:17 -8564
2019-04-30 10:30:18 -耗时 : 7903
2019-04-30 10:30:18 -耗时 : 5350
2019-04-30 10:30:18 -返回值 : null
2019-04-30 10:30:18 -返回值 : null
2019-04-30 10:30:25 -请求地址 : http://localhost:8081/login
2019-04-30 10:30:25 -HTTP METHOD : POST
2019-04-30 10:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 10:30:25 -参数 : [admin, 111111, 2321, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c92b25c]
2019-04-30 10:30:25 -耗时 : 11
2019-04-30 10:30:25 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-30 10:30:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 10:30:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:30:25 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 10:30:25.694(Timestamp)
2019-04-30 10:30:26 -<==    Updates: 1
2019-04-30 10:30:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-30 10:30:29 -请求地址 : http://localhost:8081/login
2019-04-30 10:30:29 -HTTP METHOD : POST
2019-04-30 10:30:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 10:30:29 -参数 : [admin, 111111, 2321, org.apache.shiro.web.servlet.ShiroHttpServletRequest@815b33e]
2019-04-30 10:30:29 -耗时 : 0
2019-04-30 10:30:29 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-30 10:30:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:30:29 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 10:30:29.294(Timestamp)
2019-04-30 10:30:29 -<==    Updates: 1
2019-04-30 10:30:30 -请求地址 : http://localhost:8081/login;JSESSIONID=88f474fc-1907-4b3a-a93d-89b847a7b52c
2019-04-30 10:30:30 -HTTP METHOD : GET
2019-04-30 10:30:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:30 -参数 : [{}]
2019-04-30 10:30:30 -耗时 : 0
2019-04-30 10:30:30 -返回值 : login
2019-04-30 10:30:30 -请求地址 : http://localhost:8081/getVerify
2019-04-30 10:30:30 -HTTP METHOD : GET
2019-04-30 10:30:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 10:30:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@42c624a7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@440e32a7]
2019-04-30 10:30:30 -1863
2019-04-30 10:30:30 -耗时 : 37
2019-04-30 10:30:30 -返回值 : null
2019-04-30 10:30:31 -请求地址 : http://localhost:8081/login
2019-04-30 10:30:31 -HTTP METHOD : GET
2019-04-30 10:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 10:30:31 -参数 : [{}]
2019-04-30 10:30:31 -耗时 : 1
2019-04-30 10:30:31 -返回值 : login
2019-04-30 10:30:38 -请求地址 : http://localhost:8081/login
2019-04-30 10:30:38 -HTTP METHOD : POST
2019-04-30 10:30:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 10:30:38 -参数 : [admin, 111111, 1863, org.apache.shiro.web.servlet.ShiroHttpServletRequest@292325ae]
2019-04-30 10:30:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 10:30:39 -==> Parameters: admin(String)
2019-04-30 10:30:39 -<==      Total: 1
2019-04-30 10:30:39 -耗时 : 331
2019-04-30 10:30:39 -返回值 : {msg=操作成功, code=0}
2019-04-30 10:30:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:30:39 -==> Parameters: 1(Long), admin(String), 登录(String), 331(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 10:30:39.228(Timestamp)
2019-04-30 10:30:39 -请求地址 : http://localhost:8081/index
2019-04-30 10:30:39 -HTTP METHOD : GET
2019-04-30 10:30:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 10:30:39 -参数 : [{}]
2019-04-30 10:30:39 -<==    Updates: 1
2019-04-30 10:30:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 10:30:39 -==> Parameters: 1(Long)
2019-04-30 10:30:40 -<==      Total: 49
2019-04-30 10:30:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 10:30:40 -==> Parameters: 138(Long)
2019-04-30 10:30:40 -<==      Total: 1
2019-04-30 10:30:40 -耗时 : 866
2019-04-30 10:30:40 -返回值 : index_v1
2019-04-30 10:30:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:30:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 867(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 10:30:40.248(Timestamp)
2019-04-30 10:30:40 -<==    Updates: 1
2019-04-30 10:30:40 -请求地址 : http://localhost:8081/main
2019-04-30 10:30:40 -HTTP METHOD : GET
2019-04-30 10:30:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:30:40 -参数 : []
2019-04-30 10:30:40 -耗时 : 0
2019-04-30 10:30:40 -返回值 : main
2019-04-30 10:30:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 10:30:41 -HTTP METHOD : GET
2019-04-30 10:30:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 10:30:41 -参数 : []
2019-04-30 10:30:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 10:30:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 10:30:41 -<==      Total: 0
2019-04-30 10:30:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 10:30:41 -==> Parameters: 1(Long), 0(String)
2019-04-30 10:30:41 -<==      Total: 1
2019-04-30 10:30:41 -耗时 : 137
2019-04-30 10:30:41 -返回值 : com.bootdo.common.utils.PageUtils@6bd3503a
2019-04-30 10:30:41 -请求地址 : http://localhost:8081/main
2019-04-30 10:30:41 -HTTP METHOD : GET
2019-04-30 10:30:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:30:41 -参数 : []
2019-04-30 10:30:41 -耗时 : 0
2019-04-30 10:30:41 -返回值 : main
2019-04-30 10:30:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 10:30:45 -==> Parameters: 1(Long)
2019-04-30 10:30:45 -<==      Total: 93
2019-04-30 10:30:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 10:30:45 -HTTP METHOD : GET
2019-04-30 10:30:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 10:30:45 -参数 : []
2019-04-30 10:30:45 -耗时 : 11
2019-04-30 10:30:45 -返回值 : charts/tableElecYY
2019-04-30 10:30:47 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 10:30:47 -HTTP METHOD : GET
2019-04-30 10:30:47 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 10:30:47 -参数 : []
2019-04-30 10:30:47 -耗时 : 8
2019-04-30 10:30:47 -返回值 : charts/tableWaterYY
2019-04-30 10:30:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:30:50 -HTTP METHOD : GET
2019-04-30 10:30:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:30:50 -参数 : []
2019-04-30 10:30:50 -耗时 : 0
2019-04-30 10:30:50 -返回值 : system/dept/deptTree
2019-04-30 10:30:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:30:50 -HTTP METHOD : GET
2019-04-30 10:30:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:30:50 -参数 : []
2019-04-30 10:30:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:30:50 -==> Parameters: 
2019-04-30 10:30:51 -<==      Total: 3
2019-04-30 10:30:51 -耗时 : 155
2019-04-30 10:30:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:30:53 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-04-30 10:30:53 -HTTP METHOD : GET
2019-04-30 10:30:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-04-30 10:30:53 -参数 : [com.bootdo.water.vo.WaterVo@38832789, com.bootdo.moneyLog.vo.WaterLogVo@12799ec, org.apache.shiro.web.servlet.ShiroHttpServletResponse@60119ae3]
2019-04-30 10:30:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE `?%` and user_org = ? order by create_time asc 
2019-04-30 10:30:54 -耗时 : 1338
2019-04-30 10:30:54 -返回值 : null
2019-04-30 10:41:49 -请求地址 : http://localhost:8081/index
2019-04-30 10:41:49 -HTTP METHOD : GET
2019-04-30 10:41:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 10:41:49 -参数 : [{}]
2019-04-30 10:41:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 10:41:49 -==> Parameters: 1(Long)
2019-04-30 10:41:49 -<==      Total: 49
2019-04-30 10:41:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 10:41:49 -==> Parameters: 138(Long)
2019-04-30 10:41:49 -<==      Total: 1
2019-04-30 10:41:49 -耗时 : 158
2019-04-30 10:41:49 -返回值 : index_v1
2019-04-30 10:41:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:41:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 158(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 10:41:49.29(Timestamp)
2019-04-30 10:41:49 -请求地址 : http://localhost:8081/main
2019-04-30 10:41:49 -HTTP METHOD : GET
2019-04-30 10:41:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:41:49 -参数 : []
2019-04-30 10:41:49 -耗时 : 0
2019-04-30 10:41:49 -返回值 : main
2019-04-30 10:41:49 -请求地址 : http://localhost:8081/main
2019-04-30 10:41:49 -HTTP METHOD : GET
2019-04-30 10:41:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:41:49 -参数 : []
2019-04-30 10:41:49 -耗时 : 0
2019-04-30 10:41:49 -返回值 : main
2019-04-30 10:41:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 10:41:49 -HTTP METHOD : GET
2019-04-30 10:41:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 10:41:49 -参数 : []
2019-04-30 10:41:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 10:41:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 10:41:50 -<==    Updates: 1
2019-04-30 10:41:50 -<==      Total: 0
2019-04-30 10:41:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 10:41:50 -==> Parameters: 1(Long), 0(String)
2019-04-30 10:41:50 -<==      Total: 1
2019-04-30 10:41:50 -耗时 : 264
2019-04-30 10:41:50 -返回值 : com.bootdo.common.utils.PageUtils@63ccd9d5
2019-04-30 10:41:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 10:41:57 -==> Parameters: 1(Long)
2019-04-30 10:41:58 -<==      Total: 93
2019-04-30 10:41:58 -请求地址 : http://localhost:8081/charts/countMM
2019-04-30 10:41:58 -HTTP METHOD : GET
2019-04-30 10:41:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-30 10:41:58 -参数 : []
2019-04-30 10:41:58 -耗时 : 13
2019-04-30 10:41:58 -返回值 : charts/countMM
2019-04-30 10:41:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 10:41:58 -HTTP METHOD : GET
2019-04-30 10:41:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 10:41:58 -参数 : [userType]
2019-04-30 10:41:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 10:41:58 -==> Parameters: userType(String)
2019-04-30 10:41:58 -<==      Total: 4
2019-04-30 10:41:58 -耗时 : 114
2019-04-30 10:41:58 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 10:42:00 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 10:42:00 -HTTP METHOD : GET
2019-04-30 10:42:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 10:42:00 -参数 : []
2019-04-30 10:42:00 -耗时 : 11
2019-04-30 10:42:00 -返回值 : charts/tableElecMM
2019-04-30 10:42:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:42:05 -HTTP METHOD : GET
2019-04-30 10:42:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:42:05 -参数 : []
2019-04-30 10:42:05 -耗时 : 1
2019-04-30 10:42:05 -返回值 : system/dept/deptTree
2019-04-30 10:42:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:42:05 -HTTP METHOD : GET
2019-04-30 10:42:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:42:05 -参数 : []
2019-04-30 10:42:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:42:05 -==> Parameters: 
2019-04-30 10:42:05 -<==      Total: 3
2019-04-30 10:42:05 -耗时 : 5
2019-04-30 10:42:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:42:10 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-30 10:42:10 -HTTP METHOD : POST
2019-04-30 10:42:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 10:42:10 -参数 : [com.bootdo.elec.vo.ElecVo@e452252, com.bootdo.moneyLog.vo.ElecLogVo@287da545]
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-30 10:42:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 10:42:10 -<==      Total: 1
2019-04-30 10:42:10 -耗时 : 749
2019-04-30 10:42:10 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-30 10:42:21 -请求地址 : http://localhost:8081/main
2019-04-30 10:42:21 -HTTP METHOD : GET
2019-04-30 10:42:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:42:21 -参数 : []
2019-04-30 10:42:21 -耗时 : 1
2019-04-30 10:42:21 -返回值 : main
2019-04-30 10:42:21 -请求地址 : http://localhost:8081/main
2019-04-30 10:42:21 -HTTP METHOD : GET
2019-04-30 10:42:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:42:21 -参数 : []
2019-04-30 10:42:21 -耗时 : 1
2019-04-30 10:42:21 -返回值 : main
2019-04-30 10:42:25 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 10:42:49 -请求地址 : http://localhost:8081/print/print
2019-04-30 10:42:49 -HTTP METHOD : GET
2019-04-30 10:42:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-30 10:42:49 -参数 : []
2019-04-30 10:42:49 -耗时 : 0
2019-04-30 10:42:49 -返回值 : print/print/print
2019-04-30 10:42:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 10:42:50 -HTTP METHOD : GET
2019-04-30 10:42:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 10:42:50 -参数 : [userType]
2019-04-30 10:42:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 10:42:50 -==> Parameters: userType(String)
2019-04-30 10:42:50 -<==      Total: 4
2019-04-30 10:42:50 -耗时 : 8
2019-04-30 10:42:50 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 10:42:50 -请求地址 : http://localhost:8081/print/print/list
2019-04-30 10:42:50 -HTTP METHOD : GET
2019-04-30 10:42:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-30 10:42:50 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-30 10:42:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-30 10:42:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-30 10:42:50 -<==      Total: 5
2019-04-30 10:42:50 -==>  Preparing: select count(*) from print 
2019-04-30 10:42:50 -==> Parameters: 
2019-04-30 10:42:50 -<==      Total: 1
2019-04-30 10:42:50 -耗时 : 309
2019-04-30 10:42:50 -返回值 : com.bootdo.common.utils.PageUtils@5626eef6
2019-04-30 10:43:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:43:02 -HTTP METHOD : GET
2019-04-30 10:43:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:43:02 -参数 : []
2019-04-30 10:43:02 -耗时 : 1
2019-04-30 10:43:02 -返回值 : system/dept/deptTree
2019-04-30 10:43:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:43:02 -HTTP METHOD : GET
2019-04-30 10:43:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:43:02 -参数 : []
2019-04-30 10:43:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:43:02 -==> Parameters: 
2019-04-30 10:43:02 -<==      Total: 3
2019-04-30 10:43:02 -耗时 : 4
2019-04-30 10:43:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:43:09 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-30 10:43:09 -HTTP METHOD : GET
2019-04-30 10:43:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-30 10:43:09 -参数 : [com.bootdo.print.vo.PrintVo@35e50db6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5662883c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@31852569]
2019-04-30 10:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-30 10:43:09 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-30 10:43:09 -<==      Total: 1
2019-04-30 10:43:09 -耗时 : 119
2019-04-30 10:43:09 -返回值 : null
2019-04-30 10:49:02 -请求地址 : http://localhost:8081/index
2019-04-30 10:49:02 -HTTP METHOD : GET
2019-04-30 10:49:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 10:49:02 -参数 : [{}]
2019-04-30 10:49:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 10:49:02 -==> Parameters: 1(Long)
2019-04-30 10:49:02 -<==      Total: 49
2019-04-30 10:49:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 10:49:02 -==> Parameters: 138(Long)
2019-04-30 10:49:02 -<==      Total: 1
2019-04-30 10:49:02 -耗时 : 69
2019-04-30 10:49:02 -返回值 : index_v1
2019-04-30 10:49:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:49:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 70(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 10:49:02.333(Timestamp)
2019-04-30 10:49:02 -<==    Updates: 1
2019-04-30 10:49:02 -请求地址 : http://localhost:8081/main
2019-04-30 10:49:02 -HTTP METHOD : GET
2019-04-30 10:49:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:49:02 -参数 : []
2019-04-30 10:49:02 -耗时 : 0
2019-04-30 10:49:02 -返回值 : main
2019-04-30 10:49:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 10:49:03 -HTTP METHOD : GET
2019-04-30 10:49:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 10:49:03 -参数 : []
2019-04-30 10:49:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 10:49:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 10:49:03 -<==      Total: 0
2019-04-30 10:49:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 10:49:03 -==> Parameters: 1(Long), 0(String)
2019-04-30 10:49:03 -<==      Total: 1
2019-04-30 10:49:03 -耗时 : 39
2019-04-30 10:49:03 -返回值 : com.bootdo.common.utils.PageUtils@5ff16af6
2019-04-30 10:49:03 -请求地址 : http://localhost:8081/main
2019-04-30 10:49:03 -HTTP METHOD : GET
2019-04-30 10:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:49:03 -参数 : []
2019-04-30 10:49:03 -耗时 : 2
2019-04-30 10:49:03 -返回值 : main
2019-04-30 10:49:08 -请求地址 : http://localhost:8081/print/print
2019-04-30 10:49:08 -HTTP METHOD : GET
2019-04-30 10:49:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-30 10:49:08 -参数 : []
2019-04-30 10:49:08 -耗时 : 1
2019-04-30 10:49:08 -返回值 : print/print/print
2019-04-30 10:49:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 10:49:08 -HTTP METHOD : GET
2019-04-30 10:49:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 10:49:08 -参数 : [userType]
2019-04-30 10:49:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 10:49:08 -==> Parameters: userType(String)
2019-04-30 10:49:08 -<==      Total: 4
2019-04-30 10:49:08 -耗时 : 5
2019-04-30 10:49:08 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 10:49:08 -请求地址 : http://localhost:8081/print/print/list
2019-04-30 10:49:08 -HTTP METHOD : GET
2019-04-30 10:49:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-30 10:49:08 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-30 10:49:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-30 10:49:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-30 10:49:08 -<==      Total: 5
2019-04-30 10:49:08 -==>  Preparing: select count(*) from print 
2019-04-30 10:49:08 -==> Parameters: 
2019-04-30 10:49:08 -<==      Total: 1
2019-04-30 10:49:08 -耗时 : 17
2019-04-30 10:49:08 -返回值 : com.bootdo.common.utils.PageUtils@296d87f5
2019-04-30 10:49:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:49:16 -HTTP METHOD : GET
2019-04-30 10:49:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:49:16 -参数 : []
2019-04-30 10:49:16 -耗时 : 1
2019-04-30 10:49:16 -返回值 : system/dept/deptTree
2019-04-30 10:49:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:49:16 -HTTP METHOD : GET
2019-04-30 10:49:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:49:16 -参数 : []
2019-04-30 10:49:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:49:16 -==> Parameters: 
2019-04-30 10:49:16 -<==      Total: 3
2019-04-30 10:49:16 -耗时 : 5
2019-04-30 10:49:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:51:03 -请求地址 : http://localhost:8081/index
2019-04-30 10:51:03 -HTTP METHOD : GET
2019-04-30 10:51:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 10:51:03 -参数 : [{}]
2019-04-30 10:51:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 10:51:03 -==> Parameters: 1(Long)
2019-04-30 10:51:03 -<==      Total: 49
2019-04-30 10:51:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 10:51:03 -==> Parameters: 138(Long)
2019-04-30 10:51:03 -<==      Total: 1
2019-04-30 10:51:03 -耗时 : 22
2019-04-30 10:51:03 -返回值 : index_v1
2019-04-30 10:51:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 10:51:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 10:51:03.545(Timestamp)
2019-04-30 10:51:03 -请求地址 : http://localhost:8081/main
2019-04-30 10:51:03 -HTTP METHOD : GET
2019-04-30 10:51:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:51:03 -参数 : []
2019-04-30 10:51:03 -耗时 : 0
2019-04-30 10:51:03 -返回值 : main
2019-04-30 10:51:03 -<==    Updates: 1
2019-04-30 10:51:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 10:51:03 -HTTP METHOD : GET
2019-04-30 10:51:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 10:51:03 -参数 : []
2019-04-30 10:51:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 10:51:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 10:51:03 -<==      Total: 0
2019-04-30 10:51:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 10:51:03 -==> Parameters: 1(Long), 0(String)
2019-04-30 10:51:03 -<==      Total: 1
2019-04-30 10:51:03 -耗时 : 6
2019-04-30 10:51:03 -返回值 : com.bootdo.common.utils.PageUtils@2c9011fb
2019-04-30 10:51:04 -请求地址 : http://localhost:8081/main
2019-04-30 10:51:04 -HTTP METHOD : GET
2019-04-30 10:51:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 10:51:04 -参数 : []
2019-04-30 10:51:04 -耗时 : 0
2019-04-30 10:51:04 -返回值 : main
2019-04-30 10:51:17 -请求地址 : http://localhost:8081/print/print
2019-04-30 10:51:17 -HTTP METHOD : GET
2019-04-30 10:51:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-30 10:51:17 -参数 : []
2019-04-30 10:51:17 -耗时 : 1
2019-04-30 10:51:17 -返回值 : print/print/print
2019-04-30 10:51:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 10:51:18 -HTTP METHOD : GET
2019-04-30 10:51:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 10:51:18 -参数 : [userType]
2019-04-30 10:51:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 10:51:18 -==> Parameters: userType(String)
2019-04-30 10:51:18 -<==      Total: 4
2019-04-30 10:51:18 -耗时 : 8
2019-04-30 10:51:18 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 10:51:18 -请求地址 : http://localhost:8081/print/print/list
2019-04-30 10:51:18 -HTTP METHOD : GET
2019-04-30 10:51:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-30 10:51:18 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-30 10:51:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-30 10:51:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-30 10:51:18 -<==      Total: 5
2019-04-30 10:51:18 -==>  Preparing: select count(*) from print 
2019-04-30 10:51:18 -==> Parameters: 
2019-04-30 10:51:18 -<==      Total: 1
2019-04-30 10:51:18 -耗时 : 17
2019-04-30 10:51:18 -返回值 : com.bootdo.common.utils.PageUtils@24d34ac7
2019-04-30 10:51:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 10:51:36 -HTTP METHOD : GET
2019-04-30 10:51:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 10:51:36 -参数 : []
2019-04-30 10:51:36 -耗时 : 0
2019-04-30 10:51:36 -返回值 : system/dept/deptTree
2019-04-30 10:51:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 10:51:36 -HTTP METHOD : GET
2019-04-30 10:51:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 10:51:36 -参数 : []
2019-04-30 10:51:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 10:51:36 -==> Parameters: 
2019-04-30 10:51:36 -<==      Total: 3
2019-04-30 10:51:36 -耗时 : 5
2019-04-30 10:51:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 10:51:39 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-30 10:51:39 -HTTP METHOD : GET
2019-04-30 10:51:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-30 10:51:39 -参数 : [com.bootdo.print.vo.PrintVo@6c7e00e1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1936f97d, org.apache.shiro.web.servlet.ShiroHttpServletRequest@23b8dd84]
2019-04-30 10:51:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-30 10:51:39 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-30 10:51:39 -<==      Total: 1
2019-04-30 10:51:39 -耗时 : 12
2019-04-30 10:51:39 -返回值 : null
2019-04-30 10:59:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 9976 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 10:59:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 10:59:31 -The following profiles are active: dev
2019-04-30 10:59:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:59:31 CST 2019]; root of context hierarchy
2019-04-30 10:59:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 10:59:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 10:59:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 10:59:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 10:59:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 10:59:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 10:59:40 -Starting service [Tomcat]
2019-04-30 10:59:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 10:59:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 10:59:41 -Initializing Spring embedded WebApplicationContext
2019-04-30 10:59:41 -Root WebApplicationContext: initialization completed in 9767 ms
2019-04-30 10:59:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 10:59:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 10:59:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 10:59:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 10:59:42 -Filter xssFilter was not registered (disabled)
2019-04-30 10:59:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 10:59:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 10:59:42 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 10:59:42 -Servlet dispatcherServlet mapped to [/]
2019-04-30 10:59:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:59:31 CST 2019]; root of context hierarchy
2019-04-30 10:59:55 -Using default implementation for ThreadExecutor
2019-04-30 10:59:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 10:59:55 -Quartz Scheduler v.2.2.1 created.
2019-04-30 10:59:55 -RAMJobStore initialized.
2019-04-30 10:59:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 10:59:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 10:59:55 -Quartz scheduler version: 2.2.1
2019-04-30 10:59:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-04-30 10:59:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 10:59:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 11:00:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 11:00:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 11:00:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 11:00:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 11:00:00 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 11:00:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 11:00:00 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 11:00:00 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 11:00:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 11:00:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 11:00:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 11:00:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 11:00:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 11:00:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 11:00:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 11:00:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 11:00:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 11:00:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 11:00:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 11:00:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 11:00:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 11:00:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 11:00:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 11:00:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 11:00:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 11:00:00 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 11:00:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 11:00:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 11:00:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 11:00:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 11:00:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 11:00:00 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 11:00:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 11:00:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 11:00:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 11:00:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 11:00:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 11:00:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 11:00:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 11:00:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 11:00:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 11:00:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 11:00:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 11:00:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 11:00:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 11:00:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 11:00:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 11:00:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 11:00:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 11:00:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 11:00:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 11:00:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 11:00:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 11:00:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 11:00:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 11:00:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 11:00:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 11:00:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 11:00:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 11:00:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 11:00:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 11:00:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 11:00:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 11:00:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 11:00:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 11:00:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 11:00:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 11:00:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 11:00:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 11:00:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 11:00:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 11:00:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 11:00:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 11:00:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 11:00:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 11:00:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 11:00:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 11:00:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 11:00:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 11:00:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 11:00:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 11:00:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 11:00:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 11:00:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 11:00:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 11:00:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 10:59:31 CST 2019]; root of context hierarchy
2019-04-30 11:00:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 11:00:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 11:00:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 11:00:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 11:00:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 11:00:05 -Registering beans for JMX exposure on startup
2019-04-30 11:00:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 11:00:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 11:00:05 -Starting beans in phase 2147483647
2019-04-30 11:00:05 -Context refreshed
2019-04-30 11:00:06 -Found 1 custom documentation plugin(s)
2019-04-30 11:00:06 -Scanning for api listing references
2019-04-30 11:00:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 11:00:06 -Generating unique operation named: removeUsingPOST_1
2019-04-30 11:00:06 -Generating unique operation named: addUsingGET_1
2019-04-30 11:00:06 -Generating unique operation named: editUsingGET_1
2019-04-30 11:00:06 -Generating unique operation named: listUsingGET_1
2019-04-30 11:00:06 -Generating unique operation named: removeUsingPOST_2
2019-04-30 11:00:06 -Generating unique operation named: removeUsingPOST_3
2019-04-30 11:00:06 -Generating unique operation named: saveUsingPOST_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingGET_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingPOST_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingPUT_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 11:00:06 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_2
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_2
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_2
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_4
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_5
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_2
2019-04-30 11:00:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_3
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_3
2019-04-30 11:00:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_3
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_6
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_7
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_4
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_4
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_4
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_8
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_9
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 11:00:07 -Generating unique operation named: ElecUsingGET_1
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_5
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_5
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_5
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_10
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_11
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_6
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_6
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_6
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_7
2019-04-30 11:00:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_7
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_12
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_13
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 11:00:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_7
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_8
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_8
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_14
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_15
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_8
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_8
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_9
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_9
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_16
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_17
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_8
2019-04-30 11:00:07 -Generating unique operation named: updateUsingGET_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_9
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPUT_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 11:00:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_9
2019-04-30 11:00:07 -Generating unique operation named: editUsingGET_10
2019-04-30 11:00:07 -Generating unique operation named: infoUsingGET_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingPOST_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingPUT_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 11:00:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_10
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_18
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_19
2019-04-30 11:00:07 -Generating unique operation named: saveUsingPOST_9
2019-04-30 11:00:07 -Generating unique operation named: updateUsingPOST_10
2019-04-30 11:00:07 -Generating unique operation named: listUsingGET_11
2019-04-30 11:00:07 -Generating unique operation named: removeUsingPOST_20
2019-04-30 11:00:07 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 11:00:07 -Generating unique operation named: addUsingGET_10
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_11
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_12
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_21
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_10
2019-04-30 11:00:08 -Generating unique operation named: treeUsingGET_1
2019-04-30 11:00:08 -Generating unique operation named: treeUsingGET_2
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_11
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_11
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_12
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_13
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_22
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_23
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingGET_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPUT_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 11:00:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_12
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_13
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_14
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_24
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_25
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingGET_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_13
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPUT_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 11:00:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_13
2019-04-30 11:00:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_14
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_15
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_13
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_14
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_14
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_16
2019-04-30 11:00:08 -Generating unique operation named: listUsingHEAD_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingPOST_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingPUT_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingPATCH_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingDELETE_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 11:00:08 -Generating unique operation named: listUsingTRACE_1
2019-04-30 11:00:08 -Generating unique operation named: countDDUsingGET_1
2019-04-30 11:00:08 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 11:00:08 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 11:00:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 11:00:08 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 11:00:08 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 11:00:08 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_14
2019-04-30 11:00:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_15
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_17
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_26
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_15
2019-04-30 11:00:08 -Generating unique operation named: treeUsingGET_3
2019-04-30 11:00:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_15
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_15
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_16
2019-04-30 11:00:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_18
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_27
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_28
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_16
2019-04-30 11:00:08 -Generating unique operation named: updateUsingGET_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_16
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPUT_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 11:00:08 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 11:00:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_16
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_17
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_19
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_29
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_30
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_17
2019-04-30 11:00:08 -Generating unique operation named: updateUsingGET_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_17
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPUT_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 11:00:08 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 11:00:08 -Generating unique operation named: addUsingGET_17
2019-04-30 11:00:08 -Generating unique operation named: editUsingGET_18
2019-04-30 11:00:08 -Generating unique operation named: listUsingGET_20
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_31
2019-04-30 11:00:08 -Generating unique operation named: removeUsingPOST_32
2019-04-30 11:00:08 -Generating unique operation named: saveUsingPOST_18
2019-04-30 11:00:08 -Generating unique operation named: updateUsingGET_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPOST_18
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPUT_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 11:00:08 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 11:00:08 -Starting Quartz Scheduler now
2019-04-30 11:00:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 11:00:08 -Starting...
2019-04-30 11:00:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 11:00:08 -Started.
2019-04-30 11:00:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 11:00:08 -Using a shared selector for servlet write/read
2019-04-30 11:00:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 11:00:09 -Started BootdoApplication in 38.587 seconds (JVM running for 39.409)
2019-04-30 11:00:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 11:00:09 -==> Parameters: 
2019-04-30 11:00:09 -<==      Total: 1
2019-04-30 11:01:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-30 11:07:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 11:07:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 11:07:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-04-30 11:07:37 -Enabling session validation scheduler...
2019-04-30 11:07:37 -请求地址 : http://localhost:8081/login;JSESSIONID=7d825e89-be23-47f3-9e6c-c116bb641484
2019-04-30 11:07:37 -HTTP METHOD : GET
2019-04-30 11:07:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 11:07:37 -参数 : [{}]
2019-04-30 11:07:37 -耗时 : 3
2019-04-30 11:07:37 -返回值 : login
2019-04-30 11:07:39 -请求地址 : http://localhost:8081/getVerify
2019-04-30 11:07:39 -HTTP METHOD : GET
2019-04-30 11:07:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 11:07:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c7329ce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2688d230]
2019-04-30 11:07:43 -2929
2019-04-30 11:07:44 -耗时 : 4553
2019-04-30 11:07:44 -返回值 : null
2019-04-30 11:07:44 -请求地址 : http://localhost:8081/login
2019-04-30 11:07:44 -HTTP METHOD : GET
2019-04-30 11:07:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 11:07:44 -参数 : [{}]
2019-04-30 11:07:44 -耗时 : 0
2019-04-30 11:07:44 -返回值 : login
2019-04-30 11:07:49 -请求地址 : http://localhost:8081/login
2019-04-30 11:07:49 -HTTP METHOD : POST
2019-04-30 11:07:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 11:07:49 -参数 : [admin, 111111, 2929, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ce1088a]
2019-04-30 11:07:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 11:07:50 -==> Parameters: admin(String)
2019-04-30 11:07:50 -<==      Total: 1
2019-04-30 11:07:50 -耗时 : 185
2019-04-30 11:07:50 -返回值 : {msg=操作成功, code=0}
2019-04-30 11:07:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 11:07:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 11:07:50 -==> Parameters: 1(Long), admin(String), 登录(String), 185(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 11:07:50.282(Timestamp)
2019-04-30 11:07:50 -请求地址 : http://localhost:8081/index
2019-04-30 11:07:50 -HTTP METHOD : GET
2019-04-30 11:07:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 11:07:50 -参数 : [{}]
2019-04-30 11:07:50 -<==    Updates: 1
2019-04-30 11:07:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 11:07:50 -==> Parameters: 1(Long)
2019-04-30 11:07:50 -<==      Total: 49
2019-04-30 11:07:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 11:07:50 -==> Parameters: 138(Long)
2019-04-30 11:07:50 -<==      Total: 1
2019-04-30 11:07:50 -耗时 : 482
2019-04-30 11:07:50 -返回值 : index_v1
2019-04-30 11:07:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 11:07:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 482(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 11:07:50.942(Timestamp)
2019-04-30 11:07:51 -<==    Updates: 1
2019-04-30 11:07:51 -请求地址 : http://localhost:8081/main
2019-04-30 11:07:51 -HTTP METHOD : GET
2019-04-30 11:07:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 11:07:51 -参数 : []
2019-04-30 11:07:51 -耗时 : 0
2019-04-30 11:07:51 -返回值 : main
2019-04-30 11:07:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 11:07:51 -HTTP METHOD : GET
2019-04-30 11:07:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 11:07:51 -参数 : []
2019-04-30 11:07:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 11:07:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 11:07:52 -请求地址 : http://localhost:8081/main
2019-04-30 11:07:52 -HTTP METHOD : GET
2019-04-30 11:07:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 11:07:52 -参数 : []
2019-04-30 11:07:52 -耗时 : 5
2019-04-30 11:07:52 -返回值 : main
2019-04-30 11:07:52 -<==      Total: 0
2019-04-30 11:07:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 11:07:52 -==> Parameters: 1(Long), 0(String)
2019-04-30 11:07:52 -<==      Total: 1
2019-04-30 11:07:52 -耗时 : 431
2019-04-30 11:07:52 -返回值 : com.bootdo.common.utils.PageUtils@79849c3a
2019-04-30 11:07:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 11:07:58 -==> Parameters: 1(Long)
2019-04-30 11:07:58 -<==      Total: 93
2019-04-30 11:07:58 -请求地址 : http://localhost:8081/print/print
2019-04-30 11:07:58 -HTTP METHOD : GET
2019-04-30 11:07:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-30 11:07:58 -参数 : []
2019-04-30 11:07:58 -耗时 : 1
2019-04-30 11:07:58 -返回值 : print/print/print
2019-04-30 11:07:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 11:07:59 -HTTP METHOD : GET
2019-04-30 11:07:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 11:07:59 -参数 : [userType]
2019-04-30 11:07:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 11:07:59 -==> Parameters: userType(String)
2019-04-30 11:07:59 -请求地址 : http://localhost:8081/print/print/list
2019-04-30 11:07:59 -HTTP METHOD : GET
2019-04-30 11:07:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-30 11:07:59 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-30 11:07:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-30 11:07:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-30 11:07:59 -<==      Total: 4
2019-04-30 11:07:59 -耗时 : 461
2019-04-30 11:07:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 11:08:00 -<==      Total: 5
2019-04-30 11:08:00 -==>  Preparing: select count(*) from print 
2019-04-30 11:08:00 -==> Parameters: 
2019-04-30 11:08:00 -<==      Total: 1
2019-04-30 11:08:00 -耗时 : 611
2019-04-30 11:08:00 -返回值 : com.bootdo.common.utils.PageUtils@1f1a6697
2019-04-30 11:08:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 11:08:05 -HTTP METHOD : GET
2019-04-30 11:08:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 11:08:05 -参数 : []
2019-04-30 11:08:05 -耗时 : 0
2019-04-30 11:08:05 -返回值 : system/dept/deptTree
2019-04-30 11:08:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 11:08:05 -HTTP METHOD : GET
2019-04-30 11:08:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 11:08:05 -参数 : []
2019-04-30 11:08:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 11:08:05 -==> Parameters: 
2019-04-30 11:08:05 -<==      Total: 3
2019-04-30 11:08:05 -耗时 : 29
2019-04-30 11:08:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 11:08:08 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-30 11:08:08 -HTTP METHOD : GET
2019-04-30 11:08:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-30 11:08:08 -参数 : [com.bootdo.print.vo.PrintVo@348433d0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e0e2abd]
2019-04-30 11:08:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-30 11:08:08 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-30 11:08:08 -<==      Total: 1
2019-04-30 11:08:09 -耗时 : 843
2019-04-30 11:08:09 -返回值 : null
2019-04-30 11:09:32 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-30 11:09:32 -HTTP METHOD : GET
2019-04-30 11:09:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-30 11:09:32 -参数 : [com.bootdo.print.vo.PrintVo@4818f385, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d1a64e2]
2019-04-30 11:09:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-30 11:09:32 -==> Parameters: 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-30 11:09:32 -<==      Total: 1
2019-04-30 11:09:32 -耗时 : 29
2019-04-30 11:09:32 -返回值 : null
2019-04-30 11:31:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 334]
2019-04-30 12:01:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 767]
2019-04-30 12:07:37 -Validating all active sessions...
2019-04-30 12:07:37 -Finished session validation.  [1] sessions were stopped.
2019-04-30 12:31:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1171]
2019-04-30 13:36:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2018]
2019-04-30 13:36:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2019]
2019-04-30 13:50:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 13628 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 13:50:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 13:50:13 -The following profiles are active: dev
2019-04-30 13:50:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:50:13 CST 2019]; root of context hierarchy
2019-04-30 13:50:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 13:50:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 13:50:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 13:50:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:50:32 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 13:50:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 13:50:32 -Starting service [Tomcat]
2019-04-30 13:50:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 13:50:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 13:50:33 -Initializing Spring embedded WebApplicationContext
2019-04-30 13:50:33 -Root WebApplicationContext: initialization completed in 20074 ms
2019-04-30 13:50:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 13:50:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 13:50:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 13:50:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 13:50:34 -Filter xssFilter was not registered (disabled)
2019-04-30 13:50:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 13:50:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 13:50:34 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 13:50:34 -Servlet dispatcherServlet mapped to [/]
2019-04-30 13:50:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:50:13 CST 2019]; root of context hierarchy
2019-04-30 13:50:43 -Using default implementation for ThreadExecutor
2019-04-30 13:50:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 13:50:43 -Quartz Scheduler v.2.2.1 created.
2019-04-30 13:50:43 -RAMJobStore initialized.
2019-04-30 13:50:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 13:50:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 13:50:43 -Quartz scheduler version: 2.2.1
2019-04-30 13:50:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-30 13:50:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 13:50:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 13:50:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 13:50:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 13:50:47 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 13:50:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 13:50:47 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 13:50:47 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 13:50:47 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 13:50:47 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 13:50:47 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 13:50:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 13:50:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 13:50:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 13:50:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 13:50:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 13:50:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 13:50:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 13:50:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 13:50:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 13:50:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 13:50:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 13:50:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 13:50:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 13:50:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 13:50:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 13:50:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 13:50:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 13:50:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 13:50:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 13:50:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 13:50:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 13:50:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 13:50:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 13:50:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 13:50:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 13:50:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 13:50:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 13:50:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:50:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:50:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 13:50:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 13:50:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 13:50:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 13:50:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 13:50:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 13:50:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 13:50:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 13:50:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 13:50:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 13:50:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 13:50:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 13:50:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 13:50:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 13:50:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 13:50:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 13:50:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 13:50:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 13:50:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 13:50:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 13:50:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 13:50:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 13:50:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 13:50:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 13:50:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 13:50:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 13:50:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 13:50:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 13:50:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 13:50:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 13:50:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 13:50:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 13:50:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 13:50:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 13:50:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 13:50:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 13:50:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 13:50:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:50:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 13:50:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 13:50:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 13:50:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:50:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 13:50:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:50:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 13:50:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 13:50:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 13:50:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 13:50:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 13:50:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 13:50:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:50:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:50:13 CST 2019]; root of context hierarchy
2019-04-30 13:50:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:50:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:50:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:50:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 13:50:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 13:50:53 -Registering beans for JMX exposure on startup
2019-04-30 13:50:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 13:50:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 13:50:53 -Starting beans in phase 2147483647
2019-04-30 13:50:53 -Context refreshed
2019-04-30 13:50:53 -Found 1 custom documentation plugin(s)
2019-04-30 13:50:53 -Scanning for api listing references
2019-04-30 13:50:53 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_1
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_2
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_3
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_2
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_2
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_2
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_4
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_5
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_2
2019-04-30 13:50:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_3
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_3
2019-04-30 13:50:54 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_3
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_6
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_7
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_4
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_4
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_4
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_8
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_9
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 13:50:54 -Generating unique operation named: ElecUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_5
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_5
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_5
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_10
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_11
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_6
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_6
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_6
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_7
2019-04-30 13:50:54 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_7
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_12
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_13
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 13:50:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_7
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_8
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_8
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_14
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_15
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_8
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_8
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_9
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_9
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_16
2019-04-30 13:50:54 -Generating unique operation named: removeUsingPOST_17
2019-04-30 13:50:54 -Generating unique operation named: saveUsingPOST_8
2019-04-30 13:50:54 -Generating unique operation named: updateUsingGET_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPOST_9
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPUT_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 13:50:54 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 13:50:54 -Generating unique operation named: addUsingGET_9
2019-04-30 13:50:54 -Generating unique operation named: editUsingGET_10
2019-04-30 13:50:54 -Generating unique operation named: infoUsingGET_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingPOST_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingPUT_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 13:50:54 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 13:50:54 -Generating unique operation named: listUsingGET_10
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_18
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_19
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_10
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_11
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_20
2019-04-30 13:50:55 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_10
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_11
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_12
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_21
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_10
2019-04-30 13:50:55 -Generating unique operation named: treeUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: treeUsingGET_2
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_11
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_11
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_12
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_13
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_22
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_23
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingGET_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPUT_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 13:50:55 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_12
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_13
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_14
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_24
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_25
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingGET_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_13
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPUT_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 13:50:55 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_13
2019-04-30 13:50:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_14
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_15
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_13
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_14
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_14
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_16
2019-04-30 13:50:55 -Generating unique operation named: listUsingHEAD_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingPOST_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingPUT_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingPATCH_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingDELETE_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 13:50:55 -Generating unique operation named: listUsingTRACE_1
2019-04-30 13:50:55 -Generating unique operation named: countDDUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 13:50:55 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 13:50:55 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 13:50:55 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_14
2019-04-30 13:50:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_15
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_17
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_26
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_15
2019-04-30 13:50:55 -Generating unique operation named: treeUsingGET_3
2019-04-30 13:50:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_15
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_15
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_16
2019-04-30 13:50:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_18
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_27
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_28
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_16
2019-04-30 13:50:55 -Generating unique operation named: updateUsingGET_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_16
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPUT_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 13:50:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 13:50:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_16
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_17
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_19
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_29
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_30
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_17
2019-04-30 13:50:55 -Generating unique operation named: updateUsingGET_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_17
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPUT_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 13:50:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 13:50:55 -Generating unique operation named: addUsingGET_17
2019-04-30 13:50:55 -Generating unique operation named: editUsingGET_18
2019-04-30 13:50:55 -Generating unique operation named: listUsingGET_20
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_31
2019-04-30 13:50:55 -Generating unique operation named: removeUsingPOST_32
2019-04-30 13:50:55 -Generating unique operation named: saveUsingPOST_18
2019-04-30 13:50:55 -Generating unique operation named: updateUsingGET_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPOST_18
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPUT_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 13:50:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 13:50:55 -Starting Quartz Scheduler now
2019-04-30 13:50:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 13:50:55 -Starting...
2019-04-30 13:50:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 13:50:55 -Started.
2019-04-30 13:50:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 13:50:56 -Using a shared selector for servlet write/read
2019-04-30 13:50:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 13:50:56 -Started BootdoApplication in 44.02 seconds (JVM running for 45.029)
2019-04-30 13:50:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 13:50:56 -==> Parameters: 
2019-04-30 13:50:56 -<==      Total: 1
2019-04-30 13:51:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 13:51:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 13:51:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 112 ms
2019-04-30 13:51:05 -Enabling session validation scheduler...
2019-04-30 13:51:05 -请求地址 : http://localhost:8081/login;JSESSIONID=9f86a161-0423-4206-bfbd-fdf99051ba40
2019-04-30 13:51:05 -HTTP METHOD : GET
2019-04-30 13:51:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 13:51:05 -参数 : [{}]
2019-04-30 13:51:05 -耗时 : 2
2019-04-30 13:51:05 -返回值 : login
2019-04-30 13:51:09 -请求地址 : http://localhost:8081/getVerify
2019-04-30 13:51:09 -HTTP METHOD : GET
2019-04-30 13:51:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 13:51:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d29eee8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@82b6929]
2019-04-30 13:51:19 -6363
2019-04-30 13:51:19 -耗时 : 10333
2019-04-30 13:51:19 -返回值 : null
2019-04-30 13:51:19 -请求地址 : http://localhost:8081/login
2019-04-30 13:51:19 -HTTP METHOD : GET
2019-04-30 13:51:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 13:51:19 -参数 : [{}]
2019-04-30 13:51:19 -耗时 : 0
2019-04-30 13:51:19 -返回值 : login
2019-04-30 13:51:23 -请求地址 : http://localhost:8081/login
2019-04-30 13:51:23 -HTTP METHOD : POST
2019-04-30 13:51:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 13:51:23 -参数 : [admin, 111111, 6363, org.apache.shiro.web.servlet.ShiroHttpServletRequest@529b21d3]
2019-04-30 13:51:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 13:51:23 -==> Parameters: admin(String)
2019-04-30 13:51:23 -<==      Total: 1
2019-04-30 13:51:23 -耗时 : 465
2019-04-30 13:51:23 -返回值 : {msg=操作成功, code=0}
2019-04-30 13:51:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 13:51:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:51:24 -==> Parameters: 1(Long), admin(String), 登录(String), 466(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 13:51:24.048(Timestamp)
2019-04-30 13:51:24 -请求地址 : http://localhost:8081/index
2019-04-30 13:51:24 -HTTP METHOD : GET
2019-04-30 13:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 13:51:24 -参数 : [{}]
2019-04-30 13:51:24 -<==    Updates: 1
2019-04-30 13:51:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 13:51:25 -==> Parameters: 1(Long)
2019-04-30 13:51:25 -<==      Total: 49
2019-04-30 13:51:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 13:51:25 -==> Parameters: 138(Long)
2019-04-30 13:51:25 -<==      Total: 1
2019-04-30 13:51:25 -耗时 : 1103
2019-04-30 13:51:25 -返回值 : index_v1
2019-04-30 13:51:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:51:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 13:51:25.633(Timestamp)
2019-04-30 13:51:26 -<==    Updates: 1
2019-04-30 13:51:26 -请求地址 : http://localhost:8081/main
2019-04-30 13:51:26 -HTTP METHOD : GET
2019-04-30 13:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:51:26 -参数 : []
2019-04-30 13:51:26 -耗时 : 1
2019-04-30 13:51:26 -返回值 : main
2019-04-30 13:51:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 13:51:28 -HTTP METHOD : GET
2019-04-30 13:51:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 13:51:28 -参数 : []
2019-04-30 13:51:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 13:51:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 13:51:29 -请求地址 : http://localhost:8081/main
2019-04-30 13:51:29 -HTTP METHOD : GET
2019-04-30 13:51:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:51:29 -参数 : []
2019-04-30 13:51:29 -耗时 : 1
2019-04-30 13:51:29 -返回值 : main
2019-04-30 13:51:29 -<==      Total: 0
2019-04-30 13:51:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 13:51:29 -==> Parameters: 1(Long), 0(String)
2019-04-30 13:51:29 -<==      Total: 1
2019-04-30 13:51:29 -耗时 : 1092
2019-04-30 13:51:29 -返回值 : com.bootdo.common.utils.PageUtils@161ea8ed
2019-04-30 13:51:48 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-30 13:52:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 13:52:43 -==> Parameters: 1(Long)
2019-04-30 13:52:44 -<==      Total: 93
2019-04-30 13:52:44 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-04-30 13:52:44 -HTTP METHOD : GET
2019-04-30 13:52:44 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-04-30 13:52:44 -参数 : []
2019-04-30 13:52:44 -耗时 : 1
2019-04-30 13:52:44 -返回值 : water/waterUpLoad/waterUpLoad
2019-04-30 13:52:50 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 13:52:50 -HTTP METHOD : GET
2019-04-30 13:52:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 13:52:50 -参数 : []
2019-04-30 13:52:50 -耗时 : 10
2019-04-30 13:52:50 -返回值 : charts/tableElecMM
2019-04-30 13:52:52 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 13:52:52 -HTTP METHOD : GET
2019-04-30 13:52:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 13:52:52 -参数 : []
2019-04-30 13:52:52 -耗时 : 7
2019-04-30 13:52:52 -返回值 : charts/tableWaterMM
2019-04-30 13:55:47 -请求地址 : http://localhost:8081/index
2019-04-30 13:55:47 -HTTP METHOD : GET
2019-04-30 13:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 13:55:47 -参数 : [{}]
2019-04-30 13:55:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 13:55:47 -==> Parameters: 1(Long)
2019-04-30 13:55:47 -<==      Total: 49
2019-04-30 13:55:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 13:55:47 -==> Parameters: 138(Long)
2019-04-30 13:55:47 -<==      Total: 1
2019-04-30 13:55:47 -耗时 : 234
2019-04-30 13:55:47 -返回值 : index_v1
2019-04-30 13:55:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:55:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 234(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 13:55:47.57(Timestamp)
2019-04-30 13:55:48 -请求地址 : http://localhost:8081/main
2019-04-30 13:55:48 -HTTP METHOD : GET
2019-04-30 13:55:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:55:48 -参数 : []
2019-04-30 13:55:48 -耗时 : 0
2019-04-30 13:55:48 -返回值 : main
2019-04-30 13:55:48 -<==    Updates: 1
2019-04-30 13:55:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 13:55:48 -HTTP METHOD : GET
2019-04-30 13:55:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 13:55:48 -参数 : []
2019-04-30 13:55:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 13:55:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 13:55:48 -<==      Total: 0
2019-04-30 13:55:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 13:55:48 -==> Parameters: 1(Long), 0(String)
2019-04-30 13:55:48 -<==      Total: 1
2019-04-30 13:55:48 -耗时 : 24
2019-04-30 13:55:48 -返回值 : com.bootdo.common.utils.PageUtils@583d90da
2019-04-30 13:55:48 -请求地址 : http://localhost:8081/main
2019-04-30 13:55:48 -HTTP METHOD : GET
2019-04-30 13:55:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:55:48 -参数 : []
2019-04-30 13:55:48 -耗时 : 0
2019-04-30 13:55:48 -返回值 : main
2019-04-30 13:56:27 -Starting BootdoApplication on ZJZL-20180906VX with PID 14284 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 13:56:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 13:56:27 -The following profiles are active: dev
2019-04-30 13:56:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:56:27 CST 2019]; root of context hierarchy
2019-04-30 13:56:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 13:56:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 13:56:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 13:56:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 13:56:37 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 13:56:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 13:56:37 -Starting service [Tomcat]
2019-04-30 13:56:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 13:56:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 13:56:37 -Initializing Spring embedded WebApplicationContext
2019-04-30 13:56:37 -Root WebApplicationContext: initialization completed in 10053 ms
2019-04-30 13:56:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 13:56:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 13:56:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 13:56:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 13:56:38 -Filter xssFilter was not registered (disabled)
2019-04-30 13:56:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 13:56:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 13:56:38 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 13:56:38 -Servlet dispatcherServlet mapped to [/]
2019-04-30 13:56:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:56:27 CST 2019]; root of context hierarchy
2019-04-30 13:56:47 -Using default implementation for ThreadExecutor
2019-04-30 13:56:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 13:56:47 -Quartz Scheduler v.2.2.1 created.
2019-04-30 13:56:47 -RAMJobStore initialized.
2019-04-30 13:56:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 13:56:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 13:56:47 -Quartz scheduler version: 2.2.1
2019-04-30 13:56:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-04-30 13:56:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 13:56:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 13:56:51 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 13:56:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 13:56:51 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 13:56:51 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 13:56:51 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 13:56:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 13:56:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 13:56:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 13:56:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 13:56:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 13:56:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 13:56:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 13:56:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 13:56:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 13:56:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 13:56:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 13:56:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 13:56:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 13:56:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 13:56:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 13:56:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 13:56:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 13:56:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 13:56:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 13:56:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 13:56:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 13:56:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 13:56:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 13:56:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 13:56:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 13:56:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 13:56:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 13:56:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 13:56:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 13:56:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 13:56:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:56:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:56:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 13:56:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 13:56:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 13:56:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 13:56:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 13:56:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 13:56:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 13:56:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 13:56:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 13:56:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 13:56:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 13:56:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 13:56:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 13:56:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 13:56:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 13:56:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 13:56:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 13:56:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 13:56:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 13:56:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 13:56:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 13:56:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 13:56:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 13:56:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 13:56:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 13:56:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 13:56:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 13:56:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 13:56:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 13:56:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 13:56:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 13:56:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 13:56:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 13:56:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 13:56:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 13:56:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 13:56:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 13:56:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 13:56:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 13:56:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 13:56:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 13:56:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 13:56:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 13:56:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 13:56:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 13:56:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 13:56:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 13:56:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 13:56:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 13:56:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 13:56:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:56:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 13:56:27 CST 2019]; root of context hierarchy
2019-04-30 13:56:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:56:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:56:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 13:56:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 13:56:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 13:56:56 -Registering beans for JMX exposure on startup
2019-04-30 13:56:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 13:56:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 13:56:56 -Starting beans in phase 2147483647
2019-04-30 13:56:56 -Context refreshed
2019-04-30 13:56:57 -Found 1 custom documentation plugin(s)
2019-04-30 13:56:57 -Scanning for api listing references
2019-04-30 13:56:57 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 13:56:57 -Generating unique operation named: removeUsingPOST_1
2019-04-30 13:56:57 -Generating unique operation named: addUsingGET_1
2019-04-30 13:56:57 -Generating unique operation named: editUsingGET_1
2019-04-30 13:56:57 -Generating unique operation named: listUsingGET_1
2019-04-30 13:56:57 -Generating unique operation named: removeUsingPOST_2
2019-04-30 13:56:57 -Generating unique operation named: removeUsingPOST_3
2019-04-30 13:56:57 -Generating unique operation named: saveUsingPOST_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingGET_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingPOST_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingPUT_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 13:56:57 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 13:56:57 -Generating unique operation named: addUsingGET_2
2019-04-30 13:56:57 -Generating unique operation named: editUsingGET_2
2019-04-30 13:56:57 -Generating unique operation named: listUsingGET_2
2019-04-30 13:56:57 -Generating unique operation named: removeUsingPOST_4
2019-04-30 13:56:57 -Generating unique operation named: removeUsingPOST_5
2019-04-30 13:56:57 -Generating unique operation named: saveUsingPOST_2
2019-04-30 13:56:57 -Generating unique operation named: updateUsingPOST_2
2019-04-30 13:56:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 13:56:57 -Generating unique operation named: addUsingGET_3
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_3
2019-04-30 13:56:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_3
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_6
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_7
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_4
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_4
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_4
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_8
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_9
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 13:56:58 -Generating unique operation named: ElecUsingGET_1
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_5
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_5
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_5
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_10
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_11
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_6
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_6
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_6
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_7
2019-04-30 13:56:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_7
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_12
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_13
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 13:56:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_7
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_8
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_8
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_14
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_15
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_8
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_8
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_9
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_9
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_16
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_17
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_8
2019-04-30 13:56:58 -Generating unique operation named: updateUsingGET_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_9
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPUT_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 13:56:58 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_9
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_10
2019-04-30 13:56:58 -Generating unique operation named: infoUsingGET_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingPOST_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingPUT_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 13:56:58 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_10
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_18
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_19
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_9
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_10
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_11
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_20
2019-04-30 13:56:58 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_10
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_11
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_12
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_21
2019-04-30 13:56:58 -Generating unique operation named: saveUsingPOST_10
2019-04-30 13:56:58 -Generating unique operation named: treeUsingGET_1
2019-04-30 13:56:58 -Generating unique operation named: treeUsingGET_2
2019-04-30 13:56:58 -Generating unique operation named: updateUsingPOST_11
2019-04-30 13:56:58 -Generating unique operation named: addUsingGET_11
2019-04-30 13:56:58 -Generating unique operation named: editUsingGET_12
2019-04-30 13:56:58 -Generating unique operation named: listUsingGET_13
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_22
2019-04-30 13:56:58 -Generating unique operation named: removeUsingPOST_23
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingGET_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPUT_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 13:56:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_12
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_13
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_14
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_24
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_25
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingGET_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_13
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPUT_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 13:56:59 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_13
2019-04-30 13:56:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_14
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_15
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_13
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_14
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_14
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_16
2019-04-30 13:56:59 -Generating unique operation named: listUsingHEAD_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingPOST_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingPUT_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingPATCH_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingDELETE_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 13:56:59 -Generating unique operation named: listUsingTRACE_1
2019-04-30 13:56:59 -Generating unique operation named: countDDUsingGET_1
2019-04-30 13:56:59 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 13:56:59 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 13:56:59 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 13:56:59 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 13:56:59 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 13:56:59 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_14
2019-04-30 13:56:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_15
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_17
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_26
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_15
2019-04-30 13:56:59 -Generating unique operation named: treeUsingGET_3
2019-04-30 13:56:59 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_15
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_15
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_16
2019-04-30 13:56:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_18
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_27
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_28
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_16
2019-04-30 13:56:59 -Generating unique operation named: updateUsingGET_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_16
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPUT_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 13:56:59 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 13:56:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_16
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_17
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_19
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_29
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_30
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_17
2019-04-30 13:56:59 -Generating unique operation named: updateUsingGET_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_17
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPUT_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 13:56:59 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 13:56:59 -Generating unique operation named: addUsingGET_17
2019-04-30 13:56:59 -Generating unique operation named: editUsingGET_18
2019-04-30 13:56:59 -Generating unique operation named: listUsingGET_20
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_31
2019-04-30 13:56:59 -Generating unique operation named: removeUsingPOST_32
2019-04-30 13:56:59 -Generating unique operation named: saveUsingPOST_18
2019-04-30 13:56:59 -Generating unique operation named: updateUsingGET_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPOST_18
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPUT_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 13:56:59 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 13:56:59 -Starting Quartz Scheduler now
2019-04-30 13:56:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 13:56:59 -Starting...
2019-04-30 13:56:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 13:56:59 -Started.
2019-04-30 13:56:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 13:56:59 -Using a shared selector for servlet write/read
2019-04-30 13:56:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 13:56:59 -Started BootdoApplication in 33.496 seconds (JVM running for 34.414)
2019-04-30 13:56:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 13:57:00 -==> Parameters: 
2019-04-30 13:57:00 -<==      Total: 1
2019-04-30 13:57:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 13:57:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 13:57:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-04-30 13:57:06 -Enabling session validation scheduler...
2019-04-30 13:57:06 -请求地址 : http://localhost:8081/login;JSESSIONID=98c312f2-364b-4f02-aca7-075ab571596e
2019-04-30 13:57:06 -HTTP METHOD : GET
2019-04-30 13:57:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 13:57:06 -参数 : [{}]
2019-04-30 13:57:06 -耗时 : 5
2019-04-30 13:57:06 -返回值 : login
2019-04-30 13:57:09 -请求地址 : http://localhost:8081/getVerify
2019-04-30 13:57:09 -HTTP METHOD : GET
2019-04-30 13:57:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 13:57:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f750bac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31dd47c4]
2019-04-30 13:57:15 -9676
2019-04-30 13:57:15 -耗时 : 6399
2019-04-30 13:57:15 -返回值 : null
2019-04-30 13:57:21 -请求地址 : http://localhost:8081/login
2019-04-30 13:57:21 -HTTP METHOD : POST
2019-04-30 13:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 13:57:21 -参数 : [admin, 111111, 9676, org.apache.shiro.web.servlet.ShiroHttpServletRequest@47a67953]
2019-04-30 13:57:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 13:57:21 -==> Parameters: admin(String)
2019-04-30 13:57:21 -<==      Total: 1
2019-04-30 13:57:21 -耗时 : 297
2019-04-30 13:57:21 -返回值 : {msg=操作成功, code=0}
2019-04-30 13:57:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 13:57:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:57:22 -==> Parameters: 1(Long), admin(String), 登录(String), 297(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 13:57:21.998(Timestamp)
2019-04-30 13:57:22 -请求地址 : http://localhost:8081/index
2019-04-30 13:57:22 -HTTP METHOD : GET
2019-04-30 13:57:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 13:57:22 -参数 : [{}]
2019-04-30 13:57:22 -<==    Updates: 1
2019-04-30 13:57:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 13:57:23 -==> Parameters: 1(Long)
2019-04-30 13:57:23 -<==      Total: 49
2019-04-30 13:57:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 13:57:23 -==> Parameters: 138(Long)
2019-04-30 13:57:23 -<==      Total: 1
2019-04-30 13:57:23 -耗时 : 1079
2019-04-30 13:57:23 -返回值 : index_v1
2019-04-30 13:57:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:57:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1079(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 13:57:23.375(Timestamp)
2019-04-30 13:57:23 -<==    Updates: 1
2019-04-30 13:57:23 -请求地址 : http://localhost:8081/main
2019-04-30 13:57:23 -HTTP METHOD : GET
2019-04-30 13:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:57:23 -参数 : []
2019-04-30 13:57:23 -耗时 : 0
2019-04-30 13:57:23 -返回值 : main
2019-04-30 13:57:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 13:57:23 -HTTP METHOD : GET
2019-04-30 13:57:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 13:57:23 -参数 : []
2019-04-30 13:57:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 13:57:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 13:57:24 -<==      Total: 0
2019-04-30 13:57:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 13:57:24 -==> Parameters: 1(Long), 0(String)
2019-04-30 13:57:24 -<==      Total: 1
2019-04-30 13:57:24 -耗时 : 152
2019-04-30 13:57:24 -返回值 : com.bootdo.common.utils.PageUtils@17c43c34
2019-04-30 13:57:24 -请求地址 : http://localhost:8081/main
2019-04-30 13:57:24 -HTTP METHOD : GET
2019-04-30 13:57:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 13:57:24 -参数 : []
2019-04-30 13:57:24 -耗时 : 5
2019-04-30 13:57:24 -返回值 : main
2019-04-30 13:57:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 13:57:31 -==> Parameters: 1(Long)
2019-04-30 13:57:31 -<==      Total: 93
2019-04-30 13:57:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 13:57:31 -HTTP METHOD : GET
2019-04-30 13:57:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 13:57:31 -参数 : []
2019-04-30 13:57:31 -耗时 : 21
2019-04-30 13:57:31 -返回值 : charts/tableElecMM
2019-04-30 13:57:31 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/801/y966a2fu/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 13:57:31 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 13:57:35 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 13:57:35 -HTTP METHOD : GET
2019-04-30 13:57:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 13:57:35 -参数 : []
2019-04-30 13:57:35 -耗时 : 11
2019-04-30 13:57:35 -返回值 : charts/tableWaterMM
2019-04-30 13:57:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 6]
2019-04-30 13:58:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 13:58:34 -HTTP METHOD : GET
2019-04-30 13:58:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 13:58:34 -参数 : []
2019-04-30 13:58:34 -耗时 : 0
2019-04-30 13:58:34 -返回值 : system/dept/deptTree
2019-04-30 13:58:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 13:58:36 -HTTP METHOD : GET
2019-04-30 13:58:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 13:58:36 -参数 : []
2019-04-30 13:58:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 13:58:36 -==> Parameters: 
2019-04-30 13:58:36 -<==      Total: 3
2019-04-30 13:58:36 -耗时 : 592
2019-04-30 13:58:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 13:58:44 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 13:58:44 -HTTP METHOD : POST
2019-04-30 13:58:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 13:58:44 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@22e84e77, com.bootdo.water.vo.WaterVo@131a0170]
2019-04-30 13:58:44 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 13:58:44 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 13:58:45 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 13:58:45 -<==      Total: 1
2019-04-30 13:58:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 13:58:45 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:118)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$cb98c6c5.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 13:58:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-30 13:58:45.375(Timestamp)
2019-04-30 13:58:45 -<==    Updates: 1
2019-04-30 14:18:43 -请求地址 : http://localhost:8081/index
2019-04-30 14:18:43 -HTTP METHOD : GET
2019-04-30 14:18:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:18:43 -参数 : [{}]
2019-04-30 14:18:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:18:43 -==> Parameters: 1(Long)
2019-04-30 14:18:43 -<==      Total: 49
2019-04-30 14:18:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:18:43 -==> Parameters: 138(Long)
2019-04-30 14:18:43 -<==      Total: 1
2019-04-30 14:18:43 -耗时 : 140
2019-04-30 14:18:43 -返回值 : index_v1
2019-04-30 14:18:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:18:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 141(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:18:43.198(Timestamp)
2019-04-30 14:18:43 -<==    Updates: 1
2019-04-30 14:18:43 -请求地址 : http://localhost:8081/main
2019-04-30 14:18:43 -HTTP METHOD : GET
2019-04-30 14:18:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:18:43 -参数 : []
2019-04-30 14:18:43 -耗时 : 0
2019-04-30 14:18:43 -返回值 : main
2019-04-30 14:18:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:18:44 -HTTP METHOD : GET
2019-04-30 14:18:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:18:44 -参数 : []
2019-04-30 14:18:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:18:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:18:44 -<==      Total: 0
2019-04-30 14:18:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:18:44 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:18:44 -<==      Total: 1
2019-04-30 14:18:44 -耗时 : 47
2019-04-30 14:18:44 -返回值 : com.bootdo.common.utils.PageUtils@78eeb64e
2019-04-30 14:18:44 -请求地址 : http://localhost:8081/main
2019-04-30 14:18:44 -HTTP METHOD : GET
2019-04-30 14:18:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:18:44 -参数 : []
2019-04-30 14:18:44 -耗时 : 1
2019-04-30 14:18:44 -返回值 : main
2019-04-30 14:19:47 -请求地址 : http://localhost:8081/index
2019-04-30 14:19:47 -HTTP METHOD : GET
2019-04-30 14:19:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:19:47 -参数 : [{}]
2019-04-30 14:19:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:19:47 -==> Parameters: 1(Long)
2019-04-30 14:19:47 -<==      Total: 49
2019-04-30 14:19:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:19:47 -==> Parameters: 138(Long)
2019-04-30 14:19:47 -<==      Total: 1
2019-04-30 14:19:47 -耗时 : 106
2019-04-30 14:19:47 -返回值 : index_v1
2019-04-30 14:19:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:19:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 106(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:19:47.958(Timestamp)
2019-04-30 14:19:48 -<==    Updates: 1
2019-04-30 14:19:48 -请求地址 : http://localhost:8081/main
2019-04-30 14:19:48 -HTTP METHOD : GET
2019-04-30 14:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:19:48 -参数 : []
2019-04-30 14:19:48 -耗时 : 1
2019-04-30 14:19:48 -返回值 : main
2019-04-30 14:19:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:19:48 -HTTP METHOD : GET
2019-04-30 14:19:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:19:48 -参数 : []
2019-04-30 14:19:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:19:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:19:48 -<==      Total: 0
2019-04-30 14:19:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:19:48 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:19:48 -<==      Total: 1
2019-04-30 14:19:48 -耗时 : 8
2019-04-30 14:19:48 -返回值 : com.bootdo.common.utils.PageUtils@73ff7c8b
2019-04-30 14:19:48 -请求地址 : http://localhost:8081/main
2019-04-30 14:19:48 -HTTP METHOD : GET
2019-04-30 14:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:19:48 -参数 : []
2019-04-30 14:19:48 -耗时 : 1
2019-04-30 14:19:48 -返回值 : main
2019-04-30 14:19:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 14:19:53 -==> Parameters: 1(Long)
2019-04-30 14:19:53 -<==      Total: 93
2019-04-30 14:19:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:19:53 -HTTP METHOD : GET
2019-04-30 14:19:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:19:53 -参数 : []
2019-04-30 14:19:53 -耗时 : 0
2019-04-30 14:19:53 -返回值 : charts/tableElecMM
2019-04-30 14:19:55 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:19:55 -HTTP METHOD : GET
2019-04-30 14:19:55 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:19:55 -参数 : []
2019-04-30 14:19:55 -耗时 : 1
2019-04-30 14:19:55 -返回值 : charts/tableWaterMM
2019-04-30 14:20:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:20:21 -HTTP METHOD : GET
2019-04-30 14:20:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:20:21 -参数 : []
2019-04-30 14:20:21 -耗时 : 1
2019-04-30 14:20:21 -返回值 : system/dept/deptTree
2019-04-30 14:20:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:20:21 -HTTP METHOD : GET
2019-04-30 14:20:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:20:21 -参数 : []
2019-04-30 14:20:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:20:21 -==> Parameters: 
2019-04-30 14:20:21 -<==      Total: 3
2019-04-30 14:20:21 -耗时 : 10
2019-04-30 14:20:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:20:23 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:20:23 -HTTP METHOD : POST
2019-04-30 14:20:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:20:23 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@43833103, com.bootdo.water.vo.WaterVo@4aea806c]
2019-04-30 14:20:23 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 14:20:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:20:23 -<==      Total: 1
2019-04-30 14:20:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:20:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-30 14:20:23.353(Timestamp)
2019-04-30 14:20:23 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:118)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$cb98c6c5.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:20:23 -<==    Updates: 1
2019-04-30 14:27:24 -请求地址 : http://localhost:8081/index
2019-04-30 14:27:24 -HTTP METHOD : GET
2019-04-30 14:27:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:27:24 -参数 : [{}]
2019-04-30 14:27:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:27:24 -==> Parameters: 1(Long)
2019-04-30 14:27:24 -<==      Total: 49
2019-04-30 14:27:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:27:24 -==> Parameters: 138(Long)
2019-04-30 14:27:24 -<==      Total: 1
2019-04-30 14:27:24 -耗时 : 250
2019-04-30 14:27:24 -返回值 : index_v1
2019-04-30 14:27:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:27:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 251(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:27:24.464(Timestamp)
2019-04-30 14:27:24 -<==    Updates: 1
2019-04-30 14:27:24 -请求地址 : http://localhost:8081/main
2019-04-30 14:27:24 -HTTP METHOD : GET
2019-04-30 14:27:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:27:24 -参数 : []
2019-04-30 14:27:24 -耗时 : 0
2019-04-30 14:27:24 -返回值 : main
2019-04-30 14:27:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:27:25 -HTTP METHOD : GET
2019-04-30 14:27:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:27:25 -参数 : []
2019-04-30 14:27:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:27:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:27:25 -<==      Total: 0
2019-04-30 14:27:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:27:25 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:27:25 -<==      Total: 1
2019-04-30 14:27:25 -耗时 : 8
2019-04-30 14:27:25 -返回值 : com.bootdo.common.utils.PageUtils@480d5bb
2019-04-30 14:27:25 -请求地址 : http://localhost:8081/main
2019-04-30 14:27:25 -HTTP METHOD : GET
2019-04-30 14:27:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:27:25 -参数 : []
2019-04-30 14:27:25 -耗时 : 1
2019-04-30 14:27:25 -返回值 : main
2019-04-30 14:27:29 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:27:29 -HTTP METHOD : GET
2019-04-30 14:27:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:27:29 -参数 : []
2019-04-30 14:27:29 -耗时 : 0
2019-04-30 14:27:29 -返回值 : charts/tableElecMM
2019-04-30 14:27:31 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:27:31 -HTTP METHOD : GET
2019-04-30 14:27:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:27:31 -参数 : []
2019-04-30 14:27:31 -耗时 : 0
2019-04-30 14:27:31 -返回值 : charts/tableWaterMM
2019-04-30 14:27:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:27:36 -HTTP METHOD : GET
2019-04-30 14:27:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:27:36 -参数 : []
2019-04-30 14:27:36 -耗时 : 0
2019-04-30 14:27:36 -返回值 : system/dept/deptTree
2019-04-30 14:27:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:27:36 -HTTP METHOD : GET
2019-04-30 14:27:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:27:36 -参数 : []
2019-04-30 14:27:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:27:36 -==> Parameters: 
2019-04-30 14:27:36 -<==      Total: 3
2019-04-30 14:27:36 -耗时 : 5
2019-04-30 14:27:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:27:38 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:27:38 -HTTP METHOD : POST
2019-04-30 14:27:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:27:38 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@34c48229, com.bootdo.water.vo.WaterVo@7942669b]
2019-04-30 14:27:38 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 14:27:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:27:38 -<==      Total: 1
2019-04-30 14:27:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:27:38 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:118)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$cb98c6c5.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:27:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-30 14:27:38.861(Timestamp)
2019-04-30 14:27:39 -<==    Updates: 1
2019-04-30 14:27:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 388]
2019-04-30 14:29:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 9680 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 14:29:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 14:29:13 -The following profiles are active: dev
2019-04-30 14:29:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 14:29:13 CST 2019]; root of context hierarchy
2019-04-30 14:29:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 14:29:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9edc1122] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$91353fc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 14:29:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 14:29:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:29:27 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 14:29:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 14:29:27 -Starting service [Tomcat]
2019-04-30 14:29:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 14:29:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 14:29:28 -Initializing Spring embedded WebApplicationContext
2019-04-30 14:29:28 -Root WebApplicationContext: initialization completed in 14480 ms
2019-04-30 14:29:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 14:29:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 14:29:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 14:29:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 14:29:29 -Filter xssFilter was not registered (disabled)
2019-04-30 14:29:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 14:29:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 14:29:29 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 14:29:29 -Servlet dispatcherServlet mapped to [/]
2019-04-30 14:29:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 14:29:13 CST 2019]; root of context hierarchy
2019-04-30 14:29:38 -Using default implementation for ThreadExecutor
2019-04-30 14:29:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 14:29:38 -Quartz Scheduler v.2.2.1 created.
2019-04-30 14:29:38 -RAMJobStore initialized.
2019-04-30 14:29:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 14:29:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 14:29:38 -Quartz scheduler version: 2.2.1
2019-04-30 14:29:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54c11750
2019-04-30 14:29:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 14:29:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 14:29:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 14:29:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 14:29:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 14:29:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 14:29:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 14:29:42 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 14:29:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 14:29:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:42 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-30 14:29:42 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 14:29:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 14:29:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 14:29:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 14:29:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 14:29:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 14:29:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 14:29:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 14:29:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 14:29:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 14:29:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 14:29:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 14:29:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 14:29:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 14:29:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 14:29:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 14:29:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 14:29:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 14:29:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 14:29:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 14:29:42 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 14:29:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 14:29:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 14:29:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 14:29:42 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 14:29:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 14:29:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 14:29:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 14:29:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 14:29:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 14:29:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 14:29:42 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 14:29:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 14:29:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 14:29:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 14:29:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 14:29:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:29:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:29:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 14:29:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 14:29:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 14:29:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 14:29:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 14:29:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 14:29:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 14:29:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 14:29:43 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 14:29:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 14:29:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 14:29:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 14:29:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 14:29:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 14:29:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 14:29:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 14:29:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 14:29:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 14:29:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 14:29:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 14:29:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 14:29:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 14:29:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 14:29:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 14:29:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 14:29:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 14:29:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 14:29:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 14:29:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 14:29:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 14:29:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 14:29:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 14:29:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 14:29:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 14:29:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 14:29:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 14:29:43 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:29:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 14:29:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 14:29:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:29:43 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 14:29:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 14:29:43 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 14:29:43 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:29:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:29:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 14:29:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 14:29:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 14:29:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 14:29:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 14:29:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 14:29:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:29:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 14:29:13 CST 2019]; root of context hierarchy
2019-04-30 14:29:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:29:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:29:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:29:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 14:29:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 14:29:49 -Registering beans for JMX exposure on startup
2019-04-30 14:29:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 14:29:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 14:29:49 -Starting beans in phase 2147483647
2019-04-30 14:29:49 -Context refreshed
2019-04-30 14:29:49 -Found 1 custom documentation plugin(s)
2019-04-30 14:29:49 -Scanning for api listing references
2019-04-30 14:29:50 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_1
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_2
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_3
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPUT_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 14:29:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_2
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_2
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_2
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_4
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_5
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_2
2019-04-30 14:29:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_3
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_3
2019-04-30 14:29:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_3
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_6
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_7
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingGET_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPUT_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 14:29:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_4
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_4
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_4
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_8
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_9
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingGET_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPUT_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 14:29:50 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 14:29:50 -Generating unique operation named: ElecUsingGET_1
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_5
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_5
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_5
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_10
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_11
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingGET_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPUT_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 14:29:50 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_6
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_6
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_6
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_6
2019-04-30 14:29:50 -Generating unique operation named: editUsingGET_7
2019-04-30 14:29:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 14:29:50 -Generating unique operation named: listUsingGET_7
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_12
2019-04-30 14:29:50 -Generating unique operation named: removeUsingPOST_13
2019-04-30 14:29:50 -Generating unique operation named: saveUsingPOST_6
2019-04-30 14:29:50 -Generating unique operation named: updateUsingGET_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPOST_7
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPUT_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 14:29:50 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 14:29:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 14:29:50 -Generating unique operation named: addUsingGET_7
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_8
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_8
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_14
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_15
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_8
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_9
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_9
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_16
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_17
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_9
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_10
2019-04-30 14:29:51 -Generating unique operation named: infoUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingPOST_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingPUT_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 14:29:51 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_10
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_18
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_19
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_10
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_11
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_20
2019-04-30 14:29:51 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_10
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_11
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_12
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_21
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_10
2019-04-30 14:29:51 -Generating unique operation named: treeUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: treeUsingGET_2
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_11
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_11
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_12
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_13
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_22
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_23
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_12
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_13
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_14
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_24
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_25
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_13
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_13
2019-04-30 14:29:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_14
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_15
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_13
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_14
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_14
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_16
2019-04-30 14:29:51 -Generating unique operation named: listUsingHEAD_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingPOST_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingPUT_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingPATCH_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingDELETE_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 14:29:51 -Generating unique operation named: listUsingTRACE_1
2019-04-30 14:29:51 -Generating unique operation named: countDDUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 14:29:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 14:29:51 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 14:29:51 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_14
2019-04-30 14:29:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_15
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_17
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_26
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_15
2019-04-30 14:29:51 -Generating unique operation named: treeUsingGET_3
2019-04-30 14:29:51 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_15
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_15
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_16
2019-04-30 14:29:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_18
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_27
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_28
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_16
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_16
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 14:29:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_16
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_17
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_19
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_29
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_30
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_17
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_17
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 14:29:51 -Generating unique operation named: addUsingGET_17
2019-04-30 14:29:51 -Generating unique operation named: editUsingGET_18
2019-04-30 14:29:51 -Generating unique operation named: listUsingGET_20
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_31
2019-04-30 14:29:51 -Generating unique operation named: removeUsingPOST_32
2019-04-30 14:29:51 -Generating unique operation named: saveUsingPOST_18
2019-04-30 14:29:51 -Generating unique operation named: updateUsingGET_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPOST_18
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPUT_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 14:29:51 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 14:29:52 -Starting Quartz Scheduler now
2019-04-30 14:29:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 14:29:52 -Starting...
2019-04-30 14:29:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 14:29:52 -Started.
2019-04-30 14:29:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 14:29:52 -Using a shared selector for servlet write/read
2019-04-30 14:29:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 14:29:52 -Started BootdoApplication in 40.021 seconds (JVM running for 40.858)
2019-04-30 14:29:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 14:29:53 -==> Parameters: 
2019-04-30 14:29:53 -<==      Total: 1
2019-04-30 14:30:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 14:30:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 14:30:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 130 ms
2019-04-30 14:30:06 -Enabling session validation scheduler...
2019-04-30 14:30:06 -请求地址 : http://localhost:8081/login;JSESSIONID=5ae7eada-3601-45cb-b550-59a283afaf0d
2019-04-30 14:30:06 -HTTP METHOD : GET
2019-04-30 14:30:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 14:30:06 -参数 : [{}]
2019-04-30 14:30:06 -耗时 : 4
2019-04-30 14:30:06 -返回值 : login
2019-04-30 14:30:08 -请求地址 : http://localhost:8081/getVerify
2019-04-30 14:30:08 -HTTP METHOD : GET
2019-04-30 14:30:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 14:30:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35e25c4f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5fb55bac]
2019-04-30 14:30:14 -7925
2019-04-30 14:30:15 -耗时 : 6362
2019-04-30 14:30:15 -返回值 : null
2019-04-30 14:30:15 -请求地址 : http://localhost:8081/login
2019-04-30 14:30:15 -HTTP METHOD : GET
2019-04-30 14:30:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 14:30:15 -参数 : [{}]
2019-04-30 14:30:15 -耗时 : 0
2019-04-30 14:30:15 -返回值 : login
2019-04-30 14:30:20 -请求地址 : http://localhost:8081/login
2019-04-30 14:30:20 -HTTP METHOD : POST
2019-04-30 14:30:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 14:30:20 -参数 : [admin, 111111, 7925, org.apache.shiro.web.servlet.ShiroHttpServletRequest@391e6fb8]
2019-04-30 14:30:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 14:30:20 -==> Parameters: admin(String)
2019-04-30 14:30:21 -<==      Total: 1
2019-04-30 14:30:21 -耗时 : 577
2019-04-30 14:30:21 -返回值 : {msg=操作成功, code=0}
2019-04-30 14:30:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 14:30:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:30:21 -==> Parameters: 1(Long), admin(String), 登录(String), 577(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 14:30:21.532(Timestamp)
2019-04-30 14:30:21 -请求地址 : http://localhost:8081/index
2019-04-30 14:30:21 -HTTP METHOD : GET
2019-04-30 14:30:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:30:21 -参数 : [{}]
2019-04-30 14:30:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:30:22 -<==    Updates: 1
2019-04-30 14:30:22 -==> Parameters: 1(Long)
2019-04-30 14:30:22 -<==      Total: 49
2019-04-30 14:30:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:30:23 -==> Parameters: 138(Long)
2019-04-30 14:30:23 -<==      Total: 1
2019-04-30 14:30:23 -耗时 : 1458
2019-04-30 14:30:23 -返回值 : index_v1
2019-04-30 14:30:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:30:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1458(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:30:23.269(Timestamp)
2019-04-30 14:30:23 -<==    Updates: 1
2019-04-30 14:30:23 -请求地址 : http://localhost:8081/main
2019-04-30 14:30:23 -HTTP METHOD : GET
2019-04-30 14:30:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:30:23 -参数 : []
2019-04-30 14:30:23 -耗时 : 0
2019-04-30 14:30:23 -返回值 : main
2019-04-30 14:30:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:30:24 -HTTP METHOD : GET
2019-04-30 14:30:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:30:24 -参数 : []
2019-04-30 14:30:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:30:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:30:24 -请求地址 : http://localhost:8081/main
2019-04-30 14:30:24 -HTTP METHOD : GET
2019-04-30 14:30:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:30:24 -参数 : []
2019-04-30 14:30:24 -耗时 : 1
2019-04-30 14:30:24 -返回值 : main
2019-04-30 14:30:24 -<==      Total: 0
2019-04-30 14:30:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:30:24 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:30:24 -<==      Total: 1
2019-04-30 14:30:24 -耗时 : 411
2019-04-30 14:30:24 -返回值 : com.bootdo.common.utils.PageUtils@7b22a49c
2019-04-30 14:30:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 14:30:29 -==> Parameters: 1(Long)
2019-04-30 14:30:29 -<==      Total: 93
2019-04-30 14:30:29 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:30:29 -HTTP METHOD : GET
2019-04-30 14:30:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:30:29 -参数 : []
2019-04-30 14:30:29 -耗时 : 10
2019-04-30 14:30:29 -返回值 : charts/tableElecMM
2019-04-30 14:30:33 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:30:33 -HTTP METHOD : GET
2019-04-30 14:30:33 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:30:33 -参数 : []
2019-04-30 14:30:33 -耗时 : 7
2019-04-30 14:30:33 -返回值 : charts/tableWaterMM
2019-04-30 14:30:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:30:39 -HTTP METHOD : GET
2019-04-30 14:30:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:30:39 -参数 : []
2019-04-30 14:30:39 -耗时 : 0
2019-04-30 14:30:39 -返回值 : system/dept/deptTree
2019-04-30 14:30:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:30:39 -HTTP METHOD : GET
2019-04-30 14:30:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:30:39 -参数 : []
2019-04-30 14:30:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:30:39 -==> Parameters: 
2019-04-30 14:30:39 -<==      Total: 3
2019-04-30 14:30:39 -耗时 : 105
2019-04-30 14:30:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:30:42 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:30:42 -HTTP METHOD : POST
2019-04-30 14:30:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:30:42 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@27fdc124, com.bootdo.water.vo.WaterVo@759908eb]
2019-04-30 14:30:42 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:30:42 -<==      Total: 1
2019-04-30 14:30:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:30:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-30 14:30:42.55(Timestamp)
2019-04-30 14:30:42 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:118)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$647aed5f.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:30:42 -<==    Updates: 1
2019-04-30 14:30:43 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-30 14:33:13 -请求地址 : http://localhost:8081/index
2019-04-30 14:33:13 -HTTP METHOD : GET
2019-04-30 14:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:33:13 -参数 : [{}]
2019-04-30 14:33:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:33:13 -==> Parameters: 1(Long)
2019-04-30 14:33:13 -<==      Total: 49
2019-04-30 14:33:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:33:13 -==> Parameters: 138(Long)
2019-04-30 14:33:13 -<==      Total: 1
2019-04-30 14:33:13 -耗时 : 76
2019-04-30 14:33:13 -返回值 : index_v1
2019-04-30 14:33:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:33:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 77(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:33:13.445(Timestamp)
2019-04-30 14:33:13 -<==    Updates: 1
2019-04-30 14:33:13 -请求地址 : http://localhost:8081/main
2019-04-30 14:33:13 -HTTP METHOD : GET
2019-04-30 14:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:33:13 -参数 : []
2019-04-30 14:33:13 -耗时 : 0
2019-04-30 14:33:13 -返回值 : main
2019-04-30 14:33:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:33:14 -HTTP METHOD : GET
2019-04-30 14:33:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:33:14 -参数 : []
2019-04-30 14:33:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:33:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:33:14 -<==      Total: 0
2019-04-30 14:33:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:33:14 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:33:14 -<==      Total: 1
2019-04-30 14:33:14 -耗时 : 11
2019-04-30 14:33:14 -返回值 : com.bootdo.common.utils.PageUtils@2d7481d5
2019-04-30 14:33:14 -请求地址 : http://localhost:8081/main
2019-04-30 14:33:14 -HTTP METHOD : GET
2019-04-30 14:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:33:14 -参数 : []
2019-04-30 14:33:14 -耗时 : 0
2019-04-30 14:33:14 -返回值 : main
2019-04-30 14:33:35 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-30 14:33:35 -HTTP METHOD : GET
2019-04-30 14:33:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-30 14:33:35 -参数 : []
2019-04-30 14:33:35 -耗时 : 14
2019-04-30 14:33:35 -返回值 : charts/tableElecYY
2019-04-30 14:33:36 -请求地址 : http://localhost:8081/charts/countYY
2019-04-30 14:33:36 -HTTP METHOD : GET
2019-04-30 14:33:36 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-30 14:33:36 -参数 : []
2019-04-30 14:33:36 -耗时 : 1
2019-04-30 14:33:36 -返回值 : charts/countYY
2019-04-30 14:33:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-30 14:33:39 -HTTP METHOD : GET
2019-04-30 14:33:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-30 14:33:39 -参数 : []
2019-04-30 14:33:39 -耗时 : 13
2019-04-30 14:33:39 -返回值 : charts/tableWaterYY
2019-04-30 14:33:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:33:44 -HTTP METHOD : GET
2019-04-30 14:33:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:33:44 -参数 : []
2019-04-30 14:33:44 -耗时 : 0
2019-04-30 14:33:44 -返回值 : system/dept/deptTree
2019-04-30 14:33:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:33:44 -HTTP METHOD : GET
2019-04-30 14:33:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:33:44 -参数 : []
2019-04-30 14:33:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:33:44 -==> Parameters: 
2019-04-30 14:33:44 -<==      Total: 3
2019-04-30 14:33:44 -耗时 : 5
2019-04-30 14:33:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:33:49 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:34:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:34:08 -HTTP METHOD : GET
2019-04-30 14:34:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:34:08 -参数 : []
2019-04-30 14:34:08 -耗时 : 0
2019-04-30 14:34:08 -返回值 : charts/tableElecMM
2019-04-30 14:34:09 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:34:09 -HTTP METHOD : GET
2019-04-30 14:34:09 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:34:09 -参数 : []
2019-04-30 14:34:09 -耗时 : 0
2019-04-30 14:34:09 -返回值 : charts/tableWaterMM
2019-04-30 14:34:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:34:13 -HTTP METHOD : GET
2019-04-30 14:34:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:34:13 -参数 : []
2019-04-30 14:34:13 -耗时 : 0
2019-04-30 14:34:13 -返回值 : system/dept/deptTree
2019-04-30 14:34:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:34:13 -HTTP METHOD : GET
2019-04-30 14:34:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:34:13 -参数 : []
2019-04-30 14:34:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:34:13 -==> Parameters: 
2019-04-30 14:34:13 -<==      Total: 3
2019-04-30 14:34:13 -耗时 : 6
2019-04-30 14:34:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:34:15 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:34:15 -HTTP METHOD : POST
2019-04-30 14:34:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:34:15 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@7dc4d1b1, com.bootdo.water.vo.WaterVo@1929da1f]
2019-04-30 14:34:15 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 14:34:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:34:15 -<==      Total: 1
2019-04-30 14:34:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:34:15 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:118)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor139.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$647aed5f.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:34:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-30 14:34:15.802(Timestamp)
2019-04-30 14:34:15 -<==    Updates: 1
2019-04-30 14:47:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 13356 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 14:47:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 14:47:13 -The following profiles are active: dev
2019-04-30 14:47:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 14:47:13 CST 2019]; root of context hierarchy
2019-04-30 14:47:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 14:47:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 14:47:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 14:47:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 14:47:28 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 14:47:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 14:47:28 -Starting service [Tomcat]
2019-04-30 14:47:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 14:47:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 14:47:28 -Initializing Spring embedded WebApplicationContext
2019-04-30 14:47:28 -Root WebApplicationContext: initialization completed in 14732 ms
2019-04-30 14:47:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 14:47:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 14:47:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 14:47:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 14:47:29 -Filter xssFilter was not registered (disabled)
2019-04-30 14:47:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 14:47:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 14:47:29 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 14:47:29 -Servlet dispatcherServlet mapped to [/]
2019-04-30 14:47:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 14:47:13 CST 2019]; root of context hierarchy
2019-04-30 14:47:39 -Using default implementation for ThreadExecutor
2019-04-30 14:47:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 14:47:39 -Quartz Scheduler v.2.2.1 created.
2019-04-30 14:47:39 -RAMJobStore initialized.
2019-04-30 14:47:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 14:47:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 14:47:39 -Quartz scheduler version: 2.2.1
2019-04-30 14:47:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-04-30 14:47:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 14:47:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 14:47:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 14:47:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 14:47:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 14:47:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 14:47:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 14:47:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 14:47:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 14:47:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 14:47:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 14:47:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 14:47:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 14:47:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 14:47:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 14:47:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 14:47:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 14:47:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 14:47:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 14:47:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 14:47:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 14:47:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 14:47:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 14:47:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 14:47:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 14:47:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 14:47:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 14:47:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 14:47:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 14:47:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 14:47:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 14:47:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 14:47:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:47:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 14:47:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 14:47:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 14:47:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 14:47:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 14:47:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 14:47:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:47:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 14:47:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 14:47:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 14:47:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 14:47:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:47:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:47:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 14:47:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 14:47:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 14:47:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 14:47:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 14:47:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 14:47:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 14:47:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 14:47:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 14:47:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 14:47:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 14:47:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 14:47:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 14:47:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 14:47:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 14:47:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 14:47:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 14:47:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 14:47:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 14:47:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 14:47:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 14:47:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 14:47:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 14:47:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 14:47:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 14:47:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 14:47:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 14:47:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 14:47:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 14:47:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 14:47:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 14:47:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 14:47:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 14:47:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 14:47:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 14:47:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 14:47:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 14:47:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 14:47:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 14:47:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 14:47:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 14:47:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 14:47:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 14:47:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 14:47:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 14:47:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 14:47:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 14:47:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 14:47:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 14:47:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 14:47:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 14:47:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:47:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 30 14:47:13 CST 2019]; root of context hierarchy
2019-04-30 14:47:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:47:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:47:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 14:47:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 14:47:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 14:47:56 -Registering beans for JMX exposure on startup
2019-04-30 14:47:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 14:47:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 14:47:56 -Starting beans in phase 2147483647
2019-04-30 14:47:56 -Context refreshed
2019-04-30 14:47:56 -Found 1 custom documentation plugin(s)
2019-04-30 14:47:56 -Scanning for api listing references
2019-04-30 14:47:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_1
2019-04-30 14:47:58 -Generating unique operation named: addUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: editUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: listUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_2
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_3
2019-04-30 14:47:58 -Generating unique operation named: saveUsingPOST_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPOST_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPUT_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 14:47:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 14:47:58 -Generating unique operation named: addUsingGET_2
2019-04-30 14:47:58 -Generating unique operation named: editUsingGET_2
2019-04-30 14:47:58 -Generating unique operation named: listUsingGET_2
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_4
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_5
2019-04-30 14:47:58 -Generating unique operation named: saveUsingPOST_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPOST_2
2019-04-30 14:47:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: addUsingGET_3
2019-04-30 14:47:58 -Generating unique operation named: editUsingGET_3
2019-04-30 14:47:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 14:47:58 -Generating unique operation named: listUsingGET_3
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_6
2019-04-30 14:47:58 -Generating unique operation named: removeUsingPOST_7
2019-04-30 14:47:58 -Generating unique operation named: saveUsingPOST_3
2019-04-30 14:47:58 -Generating unique operation named: updateUsingGET_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPOST_3
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPUT_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 14:47:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 14:47:58 -Generating unique operation named: addUsingGET_4
2019-04-30 14:47:58 -Generating unique operation named: editUsingGET_4
2019-04-30 14:47:58 -Generating unique operation named: listUsingGET_4
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_8
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_9
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingGET_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPUT_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 14:47:59 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 14:47:59 -Generating unique operation named: ElecUsingGET_1
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_5
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_5
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_5
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_10
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_11
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingGET_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPUT_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 14:47:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_6
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_6
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_6
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_7
2019-04-30 14:47:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_7
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_12
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_13
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingGET_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPUT_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 14:47:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 14:47:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_7
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_8
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_8
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_14
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_15
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingGET_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_8
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPUT_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 14:47:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_8
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_9
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_9
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_16
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_17
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_8
2019-04-30 14:47:59 -Generating unique operation named: updateUsingGET_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_9
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPUT_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 14:47:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_9
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_10
2019-04-30 14:47:59 -Generating unique operation named: infoUsingGET_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingPOST_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingPUT_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 14:47:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_10
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_18
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_19
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_9
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_10
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_11
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_20
2019-04-30 14:47:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 14:47:59 -Generating unique operation named: addUsingGET_10
2019-04-30 14:47:59 -Generating unique operation named: editUsingGET_11
2019-04-30 14:47:59 -Generating unique operation named: listUsingGET_12
2019-04-30 14:47:59 -Generating unique operation named: removeUsingPOST_21
2019-04-30 14:47:59 -Generating unique operation named: saveUsingPOST_10
2019-04-30 14:47:59 -Generating unique operation named: treeUsingGET_1
2019-04-30 14:47:59 -Generating unique operation named: treeUsingGET_2
2019-04-30 14:47:59 -Generating unique operation named: updateUsingPOST_11
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_11
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_12
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_13
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_22
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_23
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingGET_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPUT_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 14:48:00 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_12
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_13
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_14
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_24
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_25
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingGET_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_13
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPUT_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 14:48:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_13
2019-04-30 14:48:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_14
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_15
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_13
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_14
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_14
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_16
2019-04-30 14:48:00 -Generating unique operation named: listUsingHEAD_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingPOST_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingPUT_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingPATCH_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingDELETE_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 14:48:00 -Generating unique operation named: listUsingTRACE_1
2019-04-30 14:48:00 -Generating unique operation named: countDDUsingGET_1
2019-04-30 14:48:00 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 14:48:00 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 14:48:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 14:48:00 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 14:48:00 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_14
2019-04-30 14:48:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_15
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_17
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_26
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_15
2019-04-30 14:48:00 -Generating unique operation named: treeUsingGET_3
2019-04-30 14:48:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_15
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_15
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_16
2019-04-30 14:48:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_18
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_27
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_28
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_16
2019-04-30 14:48:00 -Generating unique operation named: updateUsingGET_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_16
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPUT_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 14:48:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 14:48:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_16
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_17
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_19
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_29
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_30
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_17
2019-04-30 14:48:00 -Generating unique operation named: updateUsingGET_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_17
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPUT_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 14:48:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 14:48:00 -Generating unique operation named: addUsingGET_17
2019-04-30 14:48:00 -Generating unique operation named: editUsingGET_18
2019-04-30 14:48:00 -Generating unique operation named: listUsingGET_20
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_31
2019-04-30 14:48:00 -Generating unique operation named: removeUsingPOST_32
2019-04-30 14:48:00 -Generating unique operation named: saveUsingPOST_18
2019-04-30 14:48:00 -Generating unique operation named: updateUsingGET_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPOST_18
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPUT_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 14:48:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 14:48:01 -Starting Quartz Scheduler now
2019-04-30 14:48:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 14:48:01 -Starting...
2019-04-30 14:48:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 14:48:01 -Started.
2019-04-30 14:48:01 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 14:48:01 -Using a shared selector for servlet write/read
2019-04-30 14:48:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 14:48:01 -Started BootdoApplication in 48.7 seconds (JVM running for 49.66)
2019-04-30 14:48:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 14:48:02 -==> Parameters: 
2019-04-30 14:48:02 -<==      Total: 1
2019-04-30 14:48:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 14:48:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 14:48:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 155 ms
2019-04-30 14:48:09 -Enabling session validation scheduler...
2019-04-30 14:48:09 -请求地址 : http://localhost:8081/login;JSESSIONID=90b9dc38-4fb1-4497-ac5d-ad389cae75c9
2019-04-30 14:48:09 -HTTP METHOD : GET
2019-04-30 14:48:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 14:48:09 -参数 : [{}]
2019-04-30 14:48:09 -耗时 : 4
2019-04-30 14:48:09 -返回值 : login
2019-04-30 14:48:12 -请求地址 : http://localhost:8081/getVerify
2019-04-30 14:48:12 -HTTP METHOD : GET
2019-04-30 14:48:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 14:48:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@574c2a18, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7b58a3d9]
2019-04-30 14:48:21 -9092
2019-04-30 14:48:21 -耗时 : 9480
2019-04-30 14:48:21 -返回值 : null
2019-04-30 14:48:26 -请求地址 : http://localhost:8081/login
2019-04-30 14:48:26 -HTTP METHOD : POST
2019-04-30 14:48:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 14:48:26 -参数 : [admin, 111111, 9092, org.apache.shiro.web.servlet.ShiroHttpServletRequest@675697a5]
2019-04-30 14:48:26 -请求地址 : http://localhost:8081/login
2019-04-30 14:48:26 -HTTP METHOD : POST
2019-04-30 14:48:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 14:48:26 -参数 : [admin, 111111, 9092, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11943f22]
2019-04-30 14:48:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 14:48:27 -==> Parameters: admin(String)
2019-04-30 14:48:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 14:48:27 -==> Parameters: admin(String)
2019-04-30 14:48:27 -<==      Total: 1
2019-04-30 14:48:27 -耗时 : 627
2019-04-30 14:48:27 -返回值 : {msg=操作成功, code=0}
2019-04-30 14:48:27 -<==      Total: 1
2019-04-30 14:48:27 -耗时 : 751
2019-04-30 14:48:27 -返回值 : {msg=操作成功, code=0}
2019-04-30 14:48:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 14:48:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:48:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:48:27 -==> Parameters: 1(Long), admin(String), 登录(String), 751(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 14:48:27.85(Timestamp)
2019-04-30 14:48:27 -==> Parameters: 1(Long), admin(String), 登录(String), 628(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 14:48:27.85(Timestamp)
2019-04-30 14:48:28 -<==    Updates: 1
2019-04-30 14:48:28 -<==    Updates: 1
2019-04-30 14:48:28 -请求地址 : http://localhost:8081/index
2019-04-30 14:48:28 -HTTP METHOD : GET
2019-04-30 14:48:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:48:28 -参数 : [{}]
2019-04-30 14:48:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:48:28 -==> Parameters: 1(Long)
2019-04-30 14:48:28 -<==      Total: 49
2019-04-30 14:48:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:48:28 -==> Parameters: 138(Long)
2019-04-30 14:48:28 -<==      Total: 1
2019-04-30 14:48:28 -耗时 : 409
2019-04-30 14:48:28 -返回值 : index_v1
2019-04-30 14:48:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:48:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 409(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:48:29.024(Timestamp)
2019-04-30 14:48:29 -<==    Updates: 1
2019-04-30 14:48:29 -请求地址 : http://localhost:8081/main
2019-04-30 14:48:29 -HTTP METHOD : GET
2019-04-30 14:48:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:48:29 -参数 : []
2019-04-30 14:48:29 -耗时 : 1
2019-04-30 14:48:29 -返回值 : main
2019-04-30 14:48:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:48:32 -HTTP METHOD : GET
2019-04-30 14:48:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:48:32 -参数 : []
2019-04-30 14:48:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:48:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:48:32 -<==      Total: 0
2019-04-30 14:48:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:48:32 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:48:32 -<==      Total: 1
2019-04-30 14:48:32 -耗时 : 151
2019-04-30 14:48:32 -返回值 : com.bootdo.common.utils.PageUtils@60b744fa
2019-04-30 14:48:34 -请求地址 : http://localhost:8081/main
2019-04-30 14:48:34 -HTTP METHOD : GET
2019-04-30 14:48:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:48:34 -参数 : []
2019-04-30 14:48:34 -耗时 : 1
2019-04-30 14:48:34 -返回值 : main
2019-04-30 14:48:46 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-30 14:48:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 14:48:48 -==> Parameters: 1(Long)
2019-04-30 14:48:48 -<==      Total: 93
2019-04-30 14:48:48 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:48:48 -HTTP METHOD : GET
2019-04-30 14:48:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:48:48 -参数 : []
2019-04-30 14:48:48 -耗时 : 13
2019-04-30 14:48:48 -返回值 : charts/tableElecMM
2019-04-30 14:48:50 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:48:50 -HTTP METHOD : GET
2019-04-30 14:48:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:48:50 -参数 : []
2019-04-30 14:48:50 -耗时 : 8
2019-04-30 14:48:50 -返回值 : charts/tableWaterMM
2019-04-30 14:48:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:48:54 -HTTP METHOD : GET
2019-04-30 14:48:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:48:54 -参数 : []
2019-04-30 14:48:54 -耗时 : 0
2019-04-30 14:48:54 -返回值 : system/dept/deptTree
2019-04-30 14:48:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:48:55 -HTTP METHOD : GET
2019-04-30 14:48:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:48:55 -参数 : []
2019-04-30 14:48:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:48:55 -==> Parameters: 
2019-04-30 14:48:55 -<==      Total: 3
2019-04-30 14:48:55 -耗时 : 63
2019-04-30 14:48:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:48:57 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:48:57 -HTTP METHOD : POST
2019-04-30 14:48:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:48:57 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@a5ac0a8, com.bootdo.water.vo.WaterVo@663faf99]
2019-04-30 14:48:57 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:48:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:48:57 -<==      Total: 1
2019-04-30 14:48:57 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:48:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:48:57 -<==      Total: 1
2019-04-30 14:48:57 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:48:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:48:57 -<==      Total: 1
2019-04-30 14:48:57 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:48:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:48:57 -<==      Total: 1
2019-04-30 14:48:57 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:48:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:48:57 -<==      Total: 1
2019-04-30 14:48:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:48:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre(String), null, 2019-04-30 14:48:57.44(Timestamp)
2019-04-30 14:48:57 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.LMWaterCountPre(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.LMWaterCountPre(WaterServiceImpl.java:98)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:54)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:48:57 -<==    Updates: 1
2019-04-30 14:50:59 -请求地址 : http://localhost:8081/index
2019-04-30 14:50:59 -HTTP METHOD : GET
2019-04-30 14:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:50:59 -参数 : [{}]
2019-04-30 14:50:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:50:59 -==> Parameters: 1(Long)
2019-04-30 14:50:59 -<==      Total: 49
2019-04-30 14:50:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:50:59 -==> Parameters: 138(Long)
2019-04-30 14:50:59 -<==      Total: 1
2019-04-30 14:50:59 -耗时 : 45
2019-04-30 14:50:59 -返回值 : index_v1
2019-04-30 14:50:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:50:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:50:59.927(Timestamp)
2019-04-30 14:51:00 -请求地址 : http://localhost:8081/main
2019-04-30 14:51:00 -HTTP METHOD : GET
2019-04-30 14:51:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:51:00 -参数 : []
2019-04-30 14:51:00 -耗时 : 0
2019-04-30 14:51:00 -返回值 : main
2019-04-30 14:51:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:51:00 -HTTP METHOD : GET
2019-04-30 14:51:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:51:00 -参数 : []
2019-04-30 14:51:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:51:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:51:00 -请求地址 : http://localhost:8081/main
2019-04-30 14:51:00 -HTTP METHOD : GET
2019-04-30 14:51:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:51:00 -参数 : []
2019-04-30 14:51:00 -耗时 : 0
2019-04-30 14:51:00 -返回值 : main
2019-04-30 14:51:00 -<==    Updates: 1
2019-04-30 14:51:00 -<==      Total: 0
2019-04-30 14:51:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:51:00 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:51:00 -<==      Total: 1
2019-04-30 14:51:00 -耗时 : 458
2019-04-30 14:51:00 -返回值 : com.bootdo.common.utils.PageUtils@75af7260
2019-04-30 14:51:03 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:51:03 -HTTP METHOD : GET
2019-04-30 14:51:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:51:03 -参数 : []
2019-04-30 14:51:03 -耗时 : 0
2019-04-30 14:51:03 -返回值 : charts/tableElecMM
2019-04-30 14:51:04 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:51:04 -HTTP METHOD : GET
2019-04-30 14:51:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:51:04 -参数 : []
2019-04-30 14:51:04 -耗时 : 1
2019-04-30 14:51:04 -返回值 : charts/tableWaterMM
2019-04-30 14:51:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:51:10 -HTTP METHOD : GET
2019-04-30 14:51:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:51:10 -参数 : []
2019-04-30 14:51:10 -耗时 : 1
2019-04-30 14:51:10 -返回值 : system/dept/deptTree
2019-04-30 14:51:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:51:10 -HTTP METHOD : GET
2019-04-30 14:51:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:51:10 -参数 : []
2019-04-30 14:51:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:51:10 -==> Parameters: 
2019-04-30 14:51:10 -<==      Total: 3
2019-04-30 14:51:10 -耗时 : 89
2019-04-30 14:51:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:51:12 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:51:12 -HTTP METHOD : POST
2019-04-30 14:51:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:51:12 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@3a03b086, com.bootdo.water.vo.WaterVo@7466602d]
2019-04-30 14:51:12 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:51:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:51:12 -<==      Total: 1
2019-04-30 14:51:12 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:51:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:51:12 -<==      Total: 1
2019-04-30 14:51:12 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:51:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:51:12 -<==      Total: 1
2019-04-30 14:51:12 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:51:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:51:12 -<==      Total: 1
2019-04-30 14:51:12 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:51:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:51:12 -<==      Total: 1
2019-04-30 14:51:12 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.LMWaterCountPre(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.LMWaterCountPre(WaterServiceImpl.java:98)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:54)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:51:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:51:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre(String), null, 2019-04-30 14:51:12.871(Timestamp)
2019-04-30 14:51:12 -<==    Updates: 1
2019-04-30 14:51:34 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:56:14 -请求地址 : http://localhost:8081/index
2019-04-30 14:56:14 -HTTP METHOD : GET
2019-04-30 14:56:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:56:14 -参数 : [{}]
2019-04-30 14:56:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:56:14 -==> Parameters: 1(Long)
2019-04-30 14:56:14 -<==      Total: 49
2019-04-30 14:56:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:56:14 -==> Parameters: 138(Long)
2019-04-30 14:56:14 -<==      Total: 1
2019-04-30 14:56:14 -耗时 : 387
2019-04-30 14:56:14 -返回值 : index_v1
2019-04-30 14:56:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:56:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 387(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:56:14.623(Timestamp)
2019-04-30 14:56:14 -<==    Updates: 1
2019-04-30 14:56:15 -请求地址 : http://localhost:8081/main
2019-04-30 14:56:15 -HTTP METHOD : GET
2019-04-30 14:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:56:15 -参数 : []
2019-04-30 14:56:15 -耗时 : 1
2019-04-30 14:56:15 -返回值 : main
2019-04-30 14:56:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:56:16 -HTTP METHOD : GET
2019-04-30 14:56:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:56:16 -参数 : []
2019-04-30 14:56:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:56:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:56:16 -<==      Total: 0
2019-04-30 14:56:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:56:16 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:56:16 -<==      Total: 1
2019-04-30 14:56:16 -耗时 : 10
2019-04-30 14:56:16 -返回值 : com.bootdo.common.utils.PageUtils@39ff06d4
2019-04-30 14:56:16 -请求地址 : http://localhost:8081/main
2019-04-30 14:56:16 -HTTP METHOD : GET
2019-04-30 14:56:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:56:16 -参数 : []
2019-04-30 14:56:16 -耗时 : 1
2019-04-30 14:56:16 -返回值 : main
2019-04-30 14:56:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:56:20 -HTTP METHOD : GET
2019-04-30 14:56:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:56:20 -参数 : []
2019-04-30 14:56:20 -耗时 : 1
2019-04-30 14:56:20 -返回值 : charts/tableElecMM
2019-04-30 14:56:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:56:21 -HTTP METHOD : GET
2019-04-30 14:56:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:56:21 -参数 : []
2019-04-30 14:56:21 -耗时 : 0
2019-04-30 14:56:21 -返回值 : charts/tableWaterMM
2019-04-30 14:56:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:56:32 -HTTP METHOD : GET
2019-04-30 14:56:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:56:32 -参数 : []
2019-04-30 14:56:32 -耗时 : 0
2019-04-30 14:56:32 -返回值 : system/dept/deptTree
2019-04-30 14:56:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:56:33 -HTTP METHOD : GET
2019-04-30 14:56:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:56:33 -参数 : []
2019-04-30 14:56:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:56:33 -==> Parameters: 
2019-04-30 14:56:33 -<==      Total: 3
2019-04-30 14:56:33 -耗时 : 7
2019-04-30 14:56:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:56:34 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:56:34 -HTTP METHOD : POST
2019-04-30 14:56:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:56:34 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@4993b814, com.bootdo.water.vo.WaterVo@55f28237]
2019-04-30 14:56:34 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:56:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:56:34 -<==      Total: 1
2019-04-30 14:56:34 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:56:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:56:34 -<==      Total: 1
2019-04-30 14:56:34 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:56:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:56:34 -<==      Total: 1
2019-04-30 14:56:34 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:56:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:56:34 -<==      Total: 1
2019-04-30 14:56:34 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:56:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:56:34 -<==      Total: 1
2019-04-30 14:56:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:56:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre(String), null, 2019-04-30 14:56:34.5(Timestamp)
2019-04-30 14:56:34 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.LMWaterCountPre(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.LMWaterCountPre(WaterServiceImpl.java:98)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:54)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:56:34 -<==    Updates: 1
2019-04-30 14:59:25 -请求地址 : http://localhost:8081/index
2019-04-30 14:59:25 -HTTP METHOD : GET
2019-04-30 14:59:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 14:59:25 -参数 : [{}]
2019-04-30 14:59:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 14:59:25 -==> Parameters: 1(Long)
2019-04-30 14:59:25 -<==      Total: 49
2019-04-30 14:59:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 14:59:25 -==> Parameters: 138(Long)
2019-04-30 14:59:25 -<==      Total: 1
2019-04-30 14:59:25 -耗时 : 35
2019-04-30 14:59:25 -返回值 : index_v1
2019-04-30 14:59:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:59:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 14:59:25.104(Timestamp)
2019-04-30 14:59:25 -请求地址 : http://localhost:8081/main
2019-04-30 14:59:25 -HTTP METHOD : GET
2019-04-30 14:59:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:59:25 -参数 : []
2019-04-30 14:59:25 -耗时 : 0
2019-04-30 14:59:25 -返回值 : main
2019-04-30 14:59:25 -<==    Updates: 1
2019-04-30 14:59:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 14:59:25 -HTTP METHOD : GET
2019-04-30 14:59:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 14:59:25 -参数 : []
2019-04-30 14:59:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 14:59:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 14:59:25 -<==      Total: 0
2019-04-30 14:59:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 14:59:25 -==> Parameters: 1(Long), 0(String)
2019-04-30 14:59:25 -<==      Total: 1
2019-04-30 14:59:25 -耗时 : 7
2019-04-30 14:59:25 -返回值 : com.bootdo.common.utils.PageUtils@4cdbddc4
2019-04-30 14:59:25 -请求地址 : http://localhost:8081/main
2019-04-30 14:59:25 -HTTP METHOD : GET
2019-04-30 14:59:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 14:59:25 -参数 : []
2019-04-30 14:59:25 -耗时 : 1
2019-04-30 14:59:25 -返回值 : main
2019-04-30 14:59:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 14:59:33 -==> Parameters: 1(Long)
2019-04-30 14:59:33 -<==      Total: 93
2019-04-30 14:59:33 -请求地址 : http://localhost:8081/charts/countYY
2019-04-30 14:59:33 -HTTP METHOD : GET
2019-04-30 14:59:33 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-30 14:59:33 -参数 : []
2019-04-30 14:59:33 -耗时 : 1
2019-04-30 14:59:33 -返回值 : charts/countYY
2019-04-30 14:59:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 14:59:36 -HTTP METHOD : GET
2019-04-30 14:59:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 14:59:36 -参数 : []
2019-04-30 14:59:36 -耗时 : 1
2019-04-30 14:59:36 -返回值 : charts/tableElecMM
2019-04-30 14:59:37 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 14:59:37 -HTTP METHOD : GET
2019-04-30 14:59:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:59:37 -参数 : []
2019-04-30 14:59:37 -耗时 : 0
2019-04-30 14:59:37 -返回值 : charts/tableWaterMM
2019-04-30 14:59:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 14:59:41 -HTTP METHOD : GET
2019-04-30 14:59:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 14:59:41 -参数 : []
2019-04-30 14:59:41 -耗时 : 0
2019-04-30 14:59:41 -返回值 : system/dept/deptTree
2019-04-30 14:59:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 14:59:41 -HTTP METHOD : GET
2019-04-30 14:59:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 14:59:41 -参数 : []
2019-04-30 14:59:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 14:59:41 -==> Parameters: 
2019-04-30 14:59:41 -<==      Total: 3
2019-04-30 14:59:41 -耗时 : 4
2019-04-30 14:59:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 14:59:43 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 14:59:43 -HTTP METHOD : POST
2019-04-30 14:59:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 14:59:43 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@1b3c52b9, com.bootdo.water.vo.WaterVo@4c8aeb82]
2019-04-30 14:59:43 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:59:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:59:43 -<==      Total: 1
2019-04-30 14:59:43 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:59:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:59:43 -<==      Total: 1
2019-04-30 14:59:43 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:59:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:59:43 -<==      Total: 1
2019-04-30 14:59:43 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 14:59:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:59:43 -<==      Total: 1
2019-04-30 14:59:43 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 14:59:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 14:59:43 -<==      Total: 1
2019-04-30 14:59:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 14:59:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre(String), null, 2019-04-30 14:59:43.101(Timestamp)
2019-04-30 14:59:43 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.LMWaterCountPre(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.LMWaterCountPre(WaterServiceImpl.java:98)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:54)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 14:59:43 -<==    Updates: 1
2019-04-30 15:00:22 -请求地址 : http://localhost:8081/login;JSESSIONID=20df6a97-89cf-4197-8f21-3fa6ef343de6
2019-04-30 15:00:22 -HTTP METHOD : GET
2019-04-30 15:00:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 15:00:22 -参数 : [{}]
2019-04-30 15:00:22 -耗时 : 2
2019-04-30 15:00:22 -返回值 : login
2019-04-30 15:00:23 -请求地址 : http://localhost:8081/getVerify
2019-04-30 15:00:23 -HTTP METHOD : GET
2019-04-30 15:00:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 15:00:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@303b618c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@562d1e91]
2019-04-30 15:00:23 -3180
2019-04-30 15:00:23 -耗时 : 64
2019-04-30 15:00:23 -返回值 : null
2019-04-30 15:00:23 -请求地址 : http://localhost:8081/login
2019-04-30 15:00:23 -HTTP METHOD : GET
2019-04-30 15:00:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 15:00:23 -参数 : [{}]
2019-04-30 15:00:23 -耗时 : 1
2019-04-30 15:00:23 -返回值 : login
2019-04-30 15:00:27 -请求地址 : http://localhost:8081/login
2019-04-30 15:00:27 -HTTP METHOD : POST
2019-04-30 15:00:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 15:00:27 -参数 : [admin, 111111, 3180, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f63920b]
2019-04-30 15:00:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 15:00:27 -==> Parameters: admin(String)
2019-04-30 15:00:27 -<==      Total: 1
2019-04-30 15:00:27 -耗时 : 42
2019-04-30 15:00:27 -返回值 : {msg=操作成功, code=0}
2019-04-30 15:00:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 15:00:27 -==> Parameters: 1(Long), admin(String), 登录(String), 42(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 15:00:27.968(Timestamp)
2019-04-30 15:00:27 -请求地址 : http://localhost:8081/index
2019-04-30 15:00:27 -HTTP METHOD : GET
2019-04-30 15:00:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 15:00:28 -参数 : [{}]
2019-04-30 15:00:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 15:00:28 -==> Parameters: 1(Long)
2019-04-30 15:00:28 -<==      Total: 49
2019-04-30 15:00:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 15:00:28 -==> Parameters: 138(Long)
2019-04-30 15:00:28 -<==      Total: 1
2019-04-30 15:00:28 -耗时 : 202
2019-04-30 15:00:28 -返回值 : index_v1
2019-04-30 15:00:28 -<==    Updates: 1
2019-04-30 15:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 15:00:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 202(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 15:00:28.289(Timestamp)
2019-04-30 15:00:28 -<==    Updates: 1
2019-04-30 15:00:28 -请求地址 : http://localhost:8081/main
2019-04-30 15:00:28 -HTTP METHOD : GET
2019-04-30 15:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 15:00:28 -参数 : []
2019-04-30 15:00:28 -耗时 : 0
2019-04-30 15:00:28 -返回值 : main
2019-04-30 15:00:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 15:00:29 -HTTP METHOD : GET
2019-04-30 15:00:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 15:00:29 -参数 : []
2019-04-30 15:00:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 15:00:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 15:00:29 -<==      Total: 0
2019-04-30 15:00:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 15:00:29 -==> Parameters: 1(Long), 0(String)
2019-04-30 15:00:29 -<==      Total: 1
2019-04-30 15:00:29 -耗时 : 7
2019-04-30 15:00:29 -返回值 : com.bootdo.common.utils.PageUtils@21d33e2f
2019-04-30 15:00:29 -请求地址 : http://localhost:8081/main
2019-04-30 15:00:29 -HTTP METHOD : GET
2019-04-30 15:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 15:00:29 -参数 : []
2019-04-30 15:00:29 -耗时 : 1
2019-04-30 15:00:29 -返回值 : main
2019-04-30 15:00:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 15:00:31 -==> Parameters: 1(Long)
2019-04-30 15:00:31 -<==      Total: 93
2019-04-30 15:00:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 15:00:31 -HTTP METHOD : GET
2019-04-30 15:00:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 15:00:31 -参数 : []
2019-04-30 15:00:31 -耗时 : 2
2019-04-30 15:00:31 -返回值 : charts/tableElecMM
2019-04-30 15:00:33 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 15:00:33 -HTTP METHOD : GET
2019-04-30 15:00:33 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 15:00:33 -参数 : []
2019-04-30 15:00:33 -耗时 : 0
2019-04-30 15:00:33 -返回值 : charts/tableWaterMM
2019-04-30 15:00:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 15:00:38 -HTTP METHOD : GET
2019-04-30 15:00:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 15:00:38 -参数 : []
2019-04-30 15:00:38 -耗时 : 1
2019-04-30 15:00:38 -返回值 : system/dept/deptTree
2019-04-30 15:00:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 15:00:38 -HTTP METHOD : GET
2019-04-30 15:00:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 15:00:38 -参数 : []
2019-04-30 15:00:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 15:00:38 -==> Parameters: 
2019-04-30 15:00:38 -<==      Total: 3
2019-04-30 15:00:38 -耗时 : 4
2019-04-30 15:00:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 15:00:41 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 15:00:41 -HTTP METHOD : POST
2019-04-30 15:00:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 15:00:41 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@57682a6d, com.bootdo.water.vo.WaterVo@779a9bb6]
2019-04-30 15:00:41 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:00:41 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:00:41 -<==      Total: 1
2019-04-30 15:00:41 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:00:41 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:00:41 -<==      Total: 1
2019-04-30 15:00:41 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:00:41 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:00:41 -<==      Total: 1
2019-04-30 15:00:41 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:00:41 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:00:41 -<==      Total: 1
2019-04-30 15:00:41 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:00:41 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:00:41 -<==      Total: 1
2019-04-30 15:00:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 15:00:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre(String), null, 2019-04-30 15:00:41.221(Timestamp)
2019-04-30 15:00:41 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.LMWaterCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.LMWaterCountPre(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.LMWaterCountPre(WaterServiceImpl.java:98)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:54)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 15:00:41 -<==    Updates: 1
2019-04-30 15:11:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 12060 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 15:11:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 15:11:13 -The following profiles are active: dev
2019-04-30 15:11:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 15:11:14 CST 2019]; root of context hierarchy
2019-04-30 15:11:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 15:11:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$abc073ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9e19a295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 15:11:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 15:11:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 15:11:26 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 15:11:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 15:11:26 -Starting service [Tomcat]
2019-04-30 15:11:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 15:11:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 15:11:27 -Initializing Spring embedded WebApplicationContext
2019-04-30 15:11:27 -Root WebApplicationContext: initialization completed in 13278 ms
2019-04-30 15:11:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 15:11:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 15:11:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 15:11:28 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 15:11:28 -Filter xssFilter was not registered (disabled)
2019-04-30 15:11:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 15:11:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 15:11:28 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 15:11:28 -Servlet dispatcherServlet mapped to [/]
2019-04-30 15:11:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 15:11:14 CST 2019]; root of context hierarchy
2019-04-30 15:11:47 -Using default implementation for ThreadExecutor
2019-04-30 15:11:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 15:11:47 -Quartz Scheduler v.2.2.1 created.
2019-04-30 15:11:47 -RAMJobStore initialized.
2019-04-30 15:11:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 15:11:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 15:11:47 -Quartz scheduler version: 2.2.1
2019-04-30 15:11:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49653791
2019-04-30 15:11:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 15:11:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 15:11:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 15:11:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 15:11:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 15:11:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 15:11:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 15:11:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 15:11:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 15:11:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 15:11:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 15:11:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 15:11:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 15:11:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 15:11:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 15:11:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 15:11:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 15:11:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 15:11:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 15:11:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 15:11:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 15:11:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 15:11:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 15:11:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 15:11:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 15:11:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 15:11:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 15:11:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 15:11:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 15:11:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 15:11:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 15:11:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 15:11:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 15:11:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 15:11:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 15:11:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 15:11:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 15:11:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 15:11:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 15:11:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 15:11:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 15:11:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 15:11:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 15:11:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 15:11:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 15:11:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 15:11:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 15:11:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 15:11:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 15:11:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 15:11:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 15:11:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 15:11:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 15:11:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 15:11:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 15:11:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 15:11:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 15:11:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 15:11:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 15:11:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 15:11:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 15:11:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 15:11:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 15:11:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 15:11:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 15:11:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 15:11:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 15:11:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 15:11:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 15:11:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 15:11:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 15:11:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 15:11:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 15:11:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 15:11:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 15:11:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 15:11:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 15:11:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 15:11:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 15:11:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 15:11:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 15:11:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 15:11:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 15:11:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 15:11:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 15:11:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 15:11:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 15:11:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 15:11:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 15:11:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 15:11:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 15:11:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 15:11:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 15:11:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 15:11:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 15:11:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 15:11:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 15:11:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 15:11:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 30 15:11:14 CST 2019]; root of context hierarchy
2019-04-30 15:11:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 15:11:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 15:11:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 15:11:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 15:11:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 15:11:55 -Registering beans for JMX exposure on startup
2019-04-30 15:11:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 15:11:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 15:11:55 -Starting beans in phase 2147483647
2019-04-30 15:11:55 -Context refreshed
2019-04-30 15:11:55 -Found 1 custom documentation plugin(s)
2019-04-30 15:11:56 -Scanning for api listing references
2019-04-30 15:11:56 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 15:11:56 -Generating unique operation named: removeUsingPOST_1
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_2
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_3
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_2
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_2
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_2
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_4
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_5
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_2
2019-04-30 15:11:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_3
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_3
2019-04-30 15:11:57 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_3
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_6
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_7
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_4
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_4
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_4
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_8
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_9
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 15:11:57 -Generating unique operation named: ElecUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_5
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_5
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_5
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_10
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_11
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_6
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_6
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_6
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_7
2019-04-30 15:11:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_7
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_12
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_13
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 15:11:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_7
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_8
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_8
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_14
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_15
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_8
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_8
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_9
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_9
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_16
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_17
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_8
2019-04-30 15:11:57 -Generating unique operation named: updateUsingGET_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_9
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPUT_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 15:11:57 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 15:11:57 -Generating unique operation named: addUsingGET_9
2019-04-30 15:11:57 -Generating unique operation named: editUsingGET_10
2019-04-30 15:11:57 -Generating unique operation named: infoUsingGET_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingPOST_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingPUT_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 15:11:57 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_10
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_18
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_19
2019-04-30 15:11:57 -Generating unique operation named: saveUsingPOST_9
2019-04-30 15:11:57 -Generating unique operation named: updateUsingPOST_10
2019-04-30 15:11:57 -Generating unique operation named: listUsingGET_11
2019-04-30 15:11:57 -Generating unique operation named: removeUsingPOST_20
2019-04-30 15:11:57 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_10
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_11
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_12
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_21
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_10
2019-04-30 15:11:58 -Generating unique operation named: treeUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: treeUsingGET_2
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_11
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_11
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_12
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_13
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_22
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_23
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingGET_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPUT_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 15:11:58 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_12
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_13
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_14
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_24
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_25
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingGET_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_13
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPUT_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 15:11:58 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_13
2019-04-30 15:11:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_14
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_15
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_13
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_14
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_14
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_16
2019-04-30 15:11:58 -Generating unique operation named: listUsingHEAD_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingPOST_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingPUT_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingPATCH_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingDELETE_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 15:11:58 -Generating unique operation named: listUsingTRACE_1
2019-04-30 15:11:58 -Generating unique operation named: countDDUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 15:11:58 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 15:11:58 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_14
2019-04-30 15:11:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_15
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_17
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_26
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_15
2019-04-30 15:11:58 -Generating unique operation named: treeUsingGET_3
2019-04-30 15:11:58 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_15
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_15
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_16
2019-04-30 15:11:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_18
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_27
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_28
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_16
2019-04-30 15:11:58 -Generating unique operation named: updateUsingGET_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_16
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPUT_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 15:11:58 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 15:11:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_16
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_17
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_19
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_29
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_30
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_17
2019-04-30 15:11:58 -Generating unique operation named: updateUsingGET_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_17
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPUT_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 15:11:58 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 15:11:58 -Generating unique operation named: addUsingGET_17
2019-04-30 15:11:58 -Generating unique operation named: editUsingGET_18
2019-04-30 15:11:58 -Generating unique operation named: listUsingGET_20
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_31
2019-04-30 15:11:58 -Generating unique operation named: removeUsingPOST_32
2019-04-30 15:11:58 -Generating unique operation named: saveUsingPOST_18
2019-04-30 15:11:58 -Generating unique operation named: updateUsingGET_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPOST_18
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPUT_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 15:11:58 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 15:11:58 -Starting Quartz Scheduler now
2019-04-30 15:11:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 15:11:58 -Starting...
2019-04-30 15:11:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 15:11:58 -Started.
2019-04-30 15:11:58 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 15:11:59 -Using a shared selector for servlet write/read
2019-04-30 15:11:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 15:11:59 -Started BootdoApplication in 46.534 seconds (JVM running for 47.48)
2019-04-30 15:11:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 15:11:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 15:11:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 15:12:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 456 ms
2019-04-30 15:12:00 -==> Parameters: 
2019-04-30 15:12:00 -Enabling session validation scheduler...
2019-04-30 15:12:01 -请求地址 : http://localhost:8081/login;JSESSIONID=cdd7d2fa-a51b-4938-b4a9-81e655483cf5
2019-04-30 15:12:01 -HTTP METHOD : GET
2019-04-30 15:12:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 15:12:01 -参数 : [{}]
2019-04-30 15:12:01 -耗时 : 3
2019-04-30 15:12:01 -返回值 : login
2019-04-30 15:12:01 -<==      Total: 1
2019-04-30 15:12:04 -请求地址 : http://localhost:8081/getVerify
2019-04-30 15:12:04 -HTTP METHOD : GET
2019-04-30 15:12:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 15:12:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f0d8d4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e3726ba]
2019-04-30 15:12:11 -3321
2019-04-30 15:12:11 -耗时 : 7530
2019-04-30 15:12:11 -返回值 : null
2019-04-30 15:12:31 -请求地址 : http://localhost:8081/login
2019-04-30 15:12:31 -HTTP METHOD : POST
2019-04-30 15:12:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 15:12:31 -参数 : [admin, 111111, 3321, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71156b50]
2019-04-30 15:12:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 15:12:32 -==> Parameters: admin(String)
2019-04-30 15:12:32 -<==      Total: 1
2019-04-30 15:12:32 -耗时 : 495
2019-04-30 15:12:32 -返回值 : {msg=操作成功, code=0}
2019-04-30 15:12:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 15:12:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 15:12:32 -==> Parameters: 1(Long), admin(String), 登录(String), 495(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 15:12:32.674(Timestamp)
2019-04-30 15:12:33 -请求地址 : http://localhost:8081/index
2019-04-30 15:12:33 -HTTP METHOD : GET
2019-04-30 15:12:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 15:12:33 -参数 : [{}]
2019-04-30 15:12:33 -<==    Updates: 1
2019-04-30 15:12:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 15:12:33 -==> Parameters: 1(Long)
2019-04-30 15:12:33 -<==      Total: 49
2019-04-30 15:12:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 15:12:34 -==> Parameters: 138(Long)
2019-04-30 15:12:34 -<==      Total: 1
2019-04-30 15:12:34 -耗时 : 966
2019-04-30 15:12:34 -返回值 : index_v1
2019-04-30 15:12:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 15:12:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 966(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 15:12:34.185(Timestamp)
2019-04-30 15:12:34 -<==    Updates: 1
2019-04-30 15:12:34 -请求地址 : http://localhost:8081/main
2019-04-30 15:12:34 -HTTP METHOD : GET
2019-04-30 15:12:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 15:12:34 -参数 : []
2019-04-30 15:12:34 -耗时 : 0
2019-04-30 15:12:34 -返回值 : main
2019-04-30 15:12:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 15:12:37 -HTTP METHOD : GET
2019-04-30 15:12:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 15:12:37 -参数 : []
2019-04-30 15:12:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 15:12:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 15:12:37 -请求地址 : http://localhost:8081/main
2019-04-30 15:12:37 -HTTP METHOD : GET
2019-04-30 15:12:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 15:12:37 -参数 : []
2019-04-30 15:12:37 -耗时 : 1
2019-04-30 15:12:37 -返回值 : main
2019-04-30 15:12:37 -<==      Total: 0
2019-04-30 15:12:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 15:12:37 -==> Parameters: 1(Long), 0(String)
2019-04-30 15:12:37 -<==      Total: 1
2019-04-30 15:12:37 -耗时 : 374
2019-04-30 15:12:37 -返回值 : com.bootdo.common.utils.PageUtils@6a92f68b
2019-04-30 15:12:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 15:12:42 -==> Parameters: 1(Long)
2019-04-30 15:12:42 -<==      Total: 93
2019-04-30 15:12:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 15:12:42 -HTTP METHOD : GET
2019-04-30 15:12:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 15:12:42 -参数 : []
2019-04-30 15:12:42 -耗时 : 11
2019-04-30 15:12:42 -返回值 : charts/tableElecMM
2019-04-30 15:12:43 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 15:12:43 -HTTP METHOD : GET
2019-04-30 15:12:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 15:12:43 -参数 : []
2019-04-30 15:12:43 -耗时 : 7
2019-04-30 15:12:43 -返回值 : charts/tableWaterMM
2019-04-30 15:12:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 15:12:48 -HTTP METHOD : GET
2019-04-30 15:12:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 15:12:48 -参数 : []
2019-04-30 15:12:48 -耗时 : 0
2019-04-30 15:12:48 -返回值 : system/dept/deptTree
2019-04-30 15:12:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 15:12:49 -HTTP METHOD : GET
2019-04-30 15:12:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 15:12:49 -参数 : []
2019-04-30 15:12:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 15:12:49 -==> Parameters: 
2019-04-30 15:12:49 -<==      Total: 3
2019-04-30 15:12:49 -耗时 : 35
2019-04-30 15:12:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 15:12:50 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-30 15:12:50 -HTTP METHOD : POST
2019-04-30 15:12:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 15:12:50 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@dcc14a2, com.bootdo.water.vo.WaterVo@5053185e]
2019-04-30 15:12:50 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-30 15:12:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-30 15:12:51 -<==      Total: 1
2019-04-30 15:12:51 -耗时 : 379
2019-04-30 15:12:51 -返回值 : {LMWaterSumPre=1, CountPrehu=2, SWaterCountOwe=1, LSWaterSumOwe=1, CountOweyu=1, MWaterCountOwe=1, CountPreyu=1, SWaterSumOwe=0, LSWaterCountPre=2, CountLogyu=160, LCountPrehu=4, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, LCountPreyu=2, SWaterSumPre=1, SWaterCountPre=1, CountAllyu=2, LMWaterCountPre=2, MWaterSumOwe=1, SumMWaterLog=100, LCountAllyu=5, LCountOwehu=6, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, LCountAllhu=10, LMWaterCountOwe=3, LCountOweyu=3, MWaterCostCount=2, SumSWaterLog=60, CountCosthu=4, SWaterCostSum=1, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, LStotalyu=2, LMtotalyu=3, LMtotalhu=5, LMWaterSumOwe=2, Mtotalyu=1, LStotalhu=5, LSWaterSumPre=1, LSWaterCountOwe=3, SWaterCostCount=2}
2019-04-30 15:12:51 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-30 15:42:51 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-04-30 16:12:00 -Validating all active sessions...
2019-04-30 16:12:00 -Finished session validation.  [1] sessions were stopped.
2019-04-30 16:12:51 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 869]
2019-04-30 16:26:24 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 16:28:49 -请求地址 : http://localhost:8081/login;JSESSIONID=7dd2e71c-5f48-47e5-9209-698238481ba9
2019-04-30 16:28:49 -HTTP METHOD : GET
2019-04-30 16:28:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 16:28:49 -参数 : [{}]
2019-04-30 16:28:49 -耗时 : 1
2019-04-30 16:28:49 -返回值 : login
2019-04-30 16:28:50 -请求地址 : http://localhost:8081/getVerify
2019-04-30 16:28:50 -HTTP METHOD : GET
2019-04-30 16:28:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 16:28:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@727fd37b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@645eee13]
2019-04-30 16:28:50 -4124
2019-04-30 16:28:50 -耗时 : 81
2019-04-30 16:28:50 -返回值 : null
2019-04-30 16:28:50 -请求地址 : http://localhost:8081/login
2019-04-30 16:28:50 -HTTP METHOD : GET
2019-04-30 16:28:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 16:28:50 -参数 : [{}]
2019-04-30 16:28:50 -耗时 : 0
2019-04-30 16:28:50 -返回值 : login
2019-04-30 16:28:55 -请求地址 : http://localhost:8081/login
2019-04-30 16:28:55 -HTTP METHOD : POST
2019-04-30 16:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 16:28:55 -参数 : [admin, 111111, 4124, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7234ec82]
2019-04-30 16:28:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 16:28:55 -==> Parameters: admin(String)
2019-04-30 16:28:55 -<==      Total: 1
2019-04-30 16:28:55 -耗时 : 75
2019-04-30 16:28:55 -返回值 : {msg=操作成功, code=0}
2019-04-30 16:28:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:28:55 -==> Parameters: 1(Long), admin(String), 登录(String), 77(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 16:28:55.807(Timestamp)
2019-04-30 16:28:55 -请求地址 : http://localhost:8081/index
2019-04-30 16:28:55 -HTTP METHOD : GET
2019-04-30 16:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 16:28:55 -参数 : [{}]
2019-04-30 16:28:56 -<==    Updates: 1
2019-04-30 16:28:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 16:28:56 -==> Parameters: 1(Long)
2019-04-30 16:28:56 -<==      Total: 49
2019-04-30 16:28:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 16:28:56 -==> Parameters: 138(Long)
2019-04-30 16:28:56 -<==      Total: 1
2019-04-30 16:28:56 -耗时 : 961
2019-04-30 16:28:56 -返回值 : index_v1
2019-04-30 16:28:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:28:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 961(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 16:28:56.8(Timestamp)
2019-04-30 16:28:56 -<==    Updates: 1
2019-04-30 16:28:57 -请求地址 : http://localhost:8081/main
2019-04-30 16:28:57 -HTTP METHOD : GET
2019-04-30 16:28:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 16:28:57 -参数 : []
2019-04-30 16:28:57 -耗时 : 1
2019-04-30 16:28:57 -返回值 : main
2019-04-30 16:28:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 16:28:57 -HTTP METHOD : GET
2019-04-30 16:28:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 16:28:57 -参数 : []
2019-04-30 16:28:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 16:28:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 16:28:57 -请求地址 : http://localhost:8081/main
2019-04-30 16:28:57 -HTTP METHOD : GET
2019-04-30 16:28:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 16:28:57 -参数 : []
2019-04-30 16:28:57 -耗时 : 0
2019-04-30 16:28:57 -返回值 : main
2019-04-30 16:28:58 -<==      Total: 0
2019-04-30 16:28:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 16:28:58 -==> Parameters: 1(Long), 0(String)
2019-04-30 16:28:58 -<==      Total: 1
2019-04-30 16:28:58 -耗时 : 455
2019-04-30 16:28:58 -返回值 : com.bootdo.common.utils.PageUtils@750702ff
2019-04-30 16:29:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 16:29:05 -==> Parameters: 1(Long)
2019-04-30 16:29:05 -<==      Total: 93
2019-04-30 16:29:05 -请求地址 : http://localhost:8081/elec/elecInto
2019-04-30 16:29:05 -HTTP METHOD : GET
2019-04-30 16:29:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-04-30 16:29:05 -参数 : []
2019-04-30 16:29:05 -耗时 : 1
2019-04-30 16:29:05 -返回值 : elec/elecInto/elecInto
2019-04-30 16:29:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 16:29:35 -HTTP METHOD : GET
2019-04-30 16:29:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 16:29:35 -参数 : []
2019-04-30 16:29:35 -耗时 : 0
2019-04-30 16:29:35 -返回值 : system/dept/deptTree
2019-04-30 16:29:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 16:29:35 -HTTP METHOD : GET
2019-04-30 16:29:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 16:29:35 -参数 : []
2019-04-30 16:29:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 16:29:35 -==> Parameters: 
2019-04-30 16:29:35 -<==      Total: 3
2019-04-30 16:29:35 -耗时 : 93
2019-04-30 16:29:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 16:29:37 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-04-30 16:29:37 -HTTP METHOD : POST
2019-04-30 16:29:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-04-30 16:29:37 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7f2b0567, com.bootdo.elec.vo.ElecVo@65116f03, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4643fc00]
2019-04-30 16:29:40 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:29:40 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 李文英(String)
2019-04-30 16:29:40 -<==      Total: 0
2019-04-30 16:29:40 -耗时 : 2773
2019-04-30 16:29:40 -返回值 : 第2行，数据出错请认真编写
2019-04-30 16:30:53 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-04-30 16:30:53 -HTTP METHOD : POST
2019-04-30 16:30:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-04-30 16:30:53 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7bc2bb48, com.bootdo.elec.vo.ElecVo@3d36d39d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@35658bd2]
2019-04-30 16:30:54 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:30:54 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 李文英(String)
2019-04-30 16:30:54 -<==      Total: 0
2019-04-30 16:30:54 -耗时 : 338
2019-04-30 16:30:54 -返回值 : 第2行，数据出错请认真编写
2019-04-30 16:32:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 15260 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-30 16:32:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-30 16:32:54 -The following profiles are active: dev
2019-04-30 16:32:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Apr 30 16:32:54 CST 2019]; root of context hierarchy
2019-04-30 16:33:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-30 16:33:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5740b653] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4999e4fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-30 16:33:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-30 16:33:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-30 16:33:11 -Tomcat initialized with port(s): 8081 (http)
2019-04-30 16:33:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-30 16:33:11 -Starting service [Tomcat]
2019-04-30 16:33:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-30 16:33:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-30 16:33:12 -Initializing Spring embedded WebApplicationContext
2019-04-30 16:33:12 -Root WebApplicationContext: initialization completed in 17840 ms
2019-04-30 16:33:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-30 16:33:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-30 16:33:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-30 16:33:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-30 16:33:13 -Filter xssFilter was not registered (disabled)
2019-04-30 16:33:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-30 16:33:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-30 16:33:13 -Servlet statViewServlet mapped to [/druid/*]
2019-04-30 16:33:13 -Servlet dispatcherServlet mapped to [/]
2019-04-30 16:33:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Apr 30 16:32:54 CST 2019]; root of context hierarchy
2019-04-30 16:33:32 -Using default implementation for ThreadExecutor
2019-04-30 16:33:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-30 16:33:32 -Quartz Scheduler v.2.2.1 created.
2019-04-30 16:33:32 -RAMJobStore initialized.
2019-04-30 16:33:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-30 16:33:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-30 16:33:32 -Quartz scheduler version: 2.2.1
2019-04-30 16:33:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3c17794e
2019-04-30 16:33:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-30 16:33:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-30 16:33:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-30 16:33:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-30 16:33:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-30 16:33:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-30 16:33:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-30 16:33:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-30 16:33:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-30 16:33:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-30 16:33:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-30 16:33:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-30 16:33:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-30 16:33:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-30 16:33:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-30 16:33:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-30 16:33:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-30 16:33:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-30 16:33:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-30 16:33:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 16:33:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-30 16:33:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-30 16:33:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-30 16:33:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-30 16:33:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-30 16:33:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-30 16:33:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-30 16:33:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-30 16:33:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-30 16:33:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-30 16:33:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-30 16:33:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-30 16:33:37 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 16:33:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-30 16:33:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-30 16:33:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-30 16:33:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-30 16:33:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-30 16:33:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-30 16:33:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-30 16:33:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-30 16:33:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-30 16:33:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-30 16:33:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-30 16:33:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-30 16:33:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 16:33:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-30 16:33:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 16:33:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-30 16:33:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 16:33:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-30 16:33:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-30 16:33:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-30 16:33:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-30 16:33:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-30 16:33:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-30 16:33:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-30 16:33:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-30 16:33:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-30 16:33:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-30 16:33:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-30 16:33:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-30 16:33:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-30 16:33:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-30 16:33:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-30 16:33:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-30 16:33:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-30 16:33:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-30 16:33:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-30 16:33:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-30 16:33:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-30 16:33:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-30 16:33:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-30 16:33:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-30 16:33:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-30 16:33:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-30 16:33:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-30 16:33:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-30 16:33:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-30 16:33:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-30 16:33:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-30 16:33:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-30 16:33:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 16:33:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-30 16:33:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-30 16:33:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-30 16:33:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-30 16:33:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-30 16:33:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-30 16:33:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-30 16:33:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-30 16:33:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-30 16:33:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-30 16:33:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-30 16:33:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-30 16:33:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-30 16:33:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-30 16:33:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-30 16:33:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-30 16:33:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-30 16:33:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-30 16:33:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-30 16:33:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-30 16:33:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-30 16:33:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-30 16:33:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-30 16:33:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 16:33:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Apr 30 16:32:54 CST 2019]; root of context hierarchy
2019-04-30 16:33:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 16:33:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 16:33:41 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-30 16:33:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-30 16:33:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-30 16:33:46 -Registering beans for JMX exposure on startup
2019-04-30 16:33:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-30 16:33:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-30 16:33:46 -Starting beans in phase 2147483647
2019-04-30 16:33:46 -Context refreshed
2019-04-30 16:33:46 -Found 1 custom documentation plugin(s)
2019-04-30 16:33:46 -Scanning for api listing references
2019-04-30 16:33:47 -Generating unique operation named: getCountDUsingPOST_1
2019-04-30 16:33:47 -Generating unique operation named: removeUsingPOST_1
2019-04-30 16:33:47 -Generating unique operation named: addUsingGET_1
2019-04-30 16:33:47 -Generating unique operation named: editUsingGET_1
2019-04-30 16:33:47 -Generating unique operation named: listUsingGET_1
2019-04-30 16:33:47 -Generating unique operation named: removeUsingPOST_2
2019-04-30 16:33:47 -Generating unique operation named: removeUsingPOST_3
2019-04-30 16:33:47 -Generating unique operation named: saveUsingPOST_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingGET_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingHEAD_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPOST_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPUT_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPATCH_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingDELETE_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-30 16:33:48 -Generating unique operation named: updateUsingTRACE_1
2019-04-30 16:33:48 -Generating unique operation named: addUsingGET_2
2019-04-30 16:33:48 -Generating unique operation named: editUsingGET_2
2019-04-30 16:33:48 -Generating unique operation named: listUsingGET_2
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_4
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_5
2019-04-30 16:33:48 -Generating unique operation named: saveUsingPOST_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPOST_2
2019-04-30 16:33:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-30 16:33:48 -Generating unique operation named: addUsingGET_3
2019-04-30 16:33:48 -Generating unique operation named: editUsingGET_3
2019-04-30 16:33:48 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-30 16:33:48 -Generating unique operation named: listUsingGET_3
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_6
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_7
2019-04-30 16:33:48 -Generating unique operation named: saveUsingPOST_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingGET_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingHEAD_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPOST_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPUT_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPATCH_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingDELETE_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-30 16:33:48 -Generating unique operation named: updateUsingTRACE_2
2019-04-30 16:33:48 -Generating unique operation named: addUsingGET_4
2019-04-30 16:33:48 -Generating unique operation named: editUsingGET_4
2019-04-30 16:33:48 -Generating unique operation named: listUsingGET_4
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_8
2019-04-30 16:33:48 -Generating unique operation named: removeUsingPOST_9
2019-04-30 16:33:48 -Generating unique operation named: saveUsingPOST_4
2019-04-30 16:33:48 -Generating unique operation named: updateUsingGET_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingHEAD_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPOST_4
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPUT_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingPATCH_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingDELETE_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-30 16:33:48 -Generating unique operation named: updateUsingTRACE_3
2019-04-30 16:33:48 -Generating unique operation named: ElecUsingGET_1
2019-04-30 16:33:48 -Generating unique operation named: addUsingGET_5
2019-04-30 16:33:48 -Generating unique operation named: editUsingGET_5
2019-04-30 16:33:48 -Generating unique operation named: listUsingGET_5
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_10
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_11
2019-04-30 16:33:49 -Generating unique operation named: saveUsingPOST_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingGET_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingHEAD_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPUT_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPATCH_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingDELETE_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-30 16:33:49 -Generating unique operation named: updateUsingTRACE_4
2019-04-30 16:33:49 -Generating unique operation named: editUsingGET_6
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_6
2019-04-30 16:33:49 -Generating unique operation named: addUsingGET_6
2019-04-30 16:33:49 -Generating unique operation named: editUsingGET_7
2019-04-30 16:33:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_7
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_12
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_13
2019-04-30 16:33:49 -Generating unique operation named: saveUsingPOST_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingGET_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingHEAD_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPUT_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPATCH_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingDELETE_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-30 16:33:49 -Generating unique operation named: updateUsingTRACE_5
2019-04-30 16:33:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-30 16:33:49 -Generating unique operation named: addUsingGET_7
2019-04-30 16:33:49 -Generating unique operation named: editUsingGET_8
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_8
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_14
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_15
2019-04-30 16:33:49 -Generating unique operation named: saveUsingPOST_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingGET_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingHEAD_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_8
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPUT_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPATCH_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingDELETE_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-30 16:33:49 -Generating unique operation named: updateUsingTRACE_6
2019-04-30 16:33:49 -Generating unique operation named: addUsingGET_8
2019-04-30 16:33:49 -Generating unique operation named: editUsingGET_9
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_9
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_16
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_17
2019-04-30 16:33:49 -Generating unique operation named: saveUsingPOST_8
2019-04-30 16:33:49 -Generating unique operation named: updateUsingGET_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingHEAD_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_9
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPUT_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPATCH_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingDELETE_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-30 16:33:49 -Generating unique operation named: updateUsingTRACE_7
2019-04-30 16:33:49 -Generating unique operation named: addUsingGET_9
2019-04-30 16:33:49 -Generating unique operation named: editUsingGET_10
2019-04-30 16:33:49 -Generating unique operation named: infoUsingGET_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingHEAD_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingPOST_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingPUT_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingPATCH_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingDELETE_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-30 16:33:49 -Generating unique operation named: infoUsingTRACE_1
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_10
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_18
2019-04-30 16:33:49 -Generating unique operation named: removeUsingPOST_19
2019-04-30 16:33:49 -Generating unique operation named: saveUsingPOST_9
2019-04-30 16:33:49 -Generating unique operation named: updateUsingPOST_10
2019-04-30 16:33:49 -Generating unique operation named: listUsingGET_11
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_20
2019-04-30 16:33:50 -Generating unique operation named: welcomeUsingGET_1
2019-04-30 16:33:50 -Generating unique operation named: addUsingGET_10
2019-04-30 16:33:50 -Generating unique operation named: editUsingGET_11
2019-04-30 16:33:50 -Generating unique operation named: listUsingGET_12
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_21
2019-04-30 16:33:50 -Generating unique operation named: saveUsingPOST_10
2019-04-30 16:33:50 -Generating unique operation named: treeUsingGET_1
2019-04-30 16:33:50 -Generating unique operation named: treeUsingGET_2
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPOST_11
2019-04-30 16:33:50 -Generating unique operation named: addUsingGET_11
2019-04-30 16:33:50 -Generating unique operation named: editUsingGET_12
2019-04-30 16:33:50 -Generating unique operation named: listUsingGET_13
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_22
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_23
2019-04-30 16:33:50 -Generating unique operation named: saveUsingPOST_11
2019-04-30 16:33:50 -Generating unique operation named: updateUsingGET_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingHEAD_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPOST_12
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPUT_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPATCH_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingDELETE_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-30 16:33:50 -Generating unique operation named: updateUsingTRACE_8
2019-04-30 16:33:50 -Generating unique operation named: addUsingGET_12
2019-04-30 16:33:50 -Generating unique operation named: editUsingGET_13
2019-04-30 16:33:50 -Generating unique operation named: listUsingGET_14
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_24
2019-04-30 16:33:50 -Generating unique operation named: removeUsingPOST_25
2019-04-30 16:33:50 -Generating unique operation named: saveUsingPOST_12
2019-04-30 16:33:50 -Generating unique operation named: updateUsingGET_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingHEAD_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPOST_13
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPUT_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingPATCH_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingDELETE_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-30 16:33:50 -Generating unique operation named: updateUsingTRACE_9
2019-04-30 16:33:50 -Generating unique operation named: addUsingGET_13
2019-04-30 16:33:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-30 16:33:50 -Generating unique operation named: editUsingGET_14
2019-04-30 16:33:51 -Generating unique operation named: listUsingGET_15
2019-04-30 16:33:51 -Generating unique operation named: saveUsingPOST_13
2019-04-30 16:33:51 -Generating unique operation named: saveUsingPOST_14
2019-04-30 16:33:51 -Generating unique operation named: updateUsingPOST_14
2019-04-30 16:33:51 -Generating unique operation named: listUsingGET_16
2019-04-30 16:33:51 -Generating unique operation named: listUsingHEAD_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingPOST_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingPUT_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingPATCH_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingDELETE_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingOPTIONS_1
2019-04-30 16:33:51 -Generating unique operation named: listUsingTRACE_1
2019-04-30 16:33:51 -Generating unique operation named: countDDUsingGET_1
2019-04-30 16:33:51 -Generating unique operation named: exportDDUsingGET_1
2019-04-30 16:33:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-30 16:33:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-30 16:33:51 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-30 16:33:51 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-30 16:33:51 -Generating unique operation named: addUsingGET_14
2019-04-30 16:33:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-30 16:33:51 -Generating unique operation named: editUsingGET_15
2019-04-30 16:33:51 -Generating unique operation named: listUsingGET_17
2019-04-30 16:33:51 -Generating unique operation named: removeUsingPOST_26
2019-04-30 16:33:51 -Generating unique operation named: saveUsingPOST_15
2019-04-30 16:33:51 -Generating unique operation named: treeUsingGET_3
2019-04-30 16:33:51 -Generating unique operation named: treeViewUsingGET_1
2019-04-30 16:33:51 -Generating unique operation named: updateUsingPOST_15
2019-04-30 16:33:51 -Generating unique operation named: addUsingGET_15
2019-04-30 16:33:51 -Generating unique operation named: editUsingGET_16
2019-04-30 16:33:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-30 16:33:51 -Generating unique operation named: listUsingGET_18
2019-04-30 16:33:51 -Generating unique operation named: removeUsingPOST_27
2019-04-30 16:33:51 -Generating unique operation named: removeUsingPOST_28
2019-04-30 16:33:51 -Generating unique operation named: saveUsingPOST_16
2019-04-30 16:33:51 -Generating unique operation named: updateUsingGET_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingHEAD_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingPOST_16
2019-04-30 16:33:51 -Generating unique operation named: updateUsingPUT_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingPATCH_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingDELETE_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-30 16:33:51 -Generating unique operation named: updateUsingTRACE_10
2019-04-30 16:33:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-30 16:33:51 -Generating unique operation named: addUsingGET_16
2019-04-30 16:33:51 -Generating unique operation named: editUsingGET_17
2019-04-30 16:33:51 -Generating unique operation named: listUsingGET_19
2019-04-30 16:33:51 -Generating unique operation named: removeUsingPOST_29
2019-04-30 16:33:51 -Generating unique operation named: removeUsingPOST_30
2019-04-30 16:33:51 -Generating unique operation named: saveUsingPOST_17
2019-04-30 16:33:51 -Generating unique operation named: updateUsingGET_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPOST_17
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPUT_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-30 16:33:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-30 16:33:52 -Generating unique operation named: addUsingGET_17
2019-04-30 16:33:52 -Generating unique operation named: editUsingGET_18
2019-04-30 16:33:52 -Generating unique operation named: listUsingGET_20
2019-04-30 16:33:52 -Generating unique operation named: removeUsingPOST_31
2019-04-30 16:33:52 -Generating unique operation named: removeUsingPOST_32
2019-04-30 16:33:52 -Generating unique operation named: saveUsingPOST_18
2019-04-30 16:33:52 -Generating unique operation named: updateUsingGET_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPOST_18
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPUT_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingDELETE_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-30 16:33:52 -Generating unique operation named: updateUsingTRACE_12
2019-04-30 16:33:52 -Starting Quartz Scheduler now
2019-04-30 16:33:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-30 16:33:52 -Starting...
2019-04-30 16:33:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-30 16:33:52 -Started.
2019-04-30 16:33:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-30 16:33:52 -Using a shared selector for servlet write/read
2019-04-30 16:33:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-30 16:33:52 -Started BootdoApplication in 61.481 seconds (JVM running for 65.538)
2019-04-30 16:33:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-30 16:33:54 -==> Parameters: 
2019-04-30 16:33:55 -<==      Total: 1
2019-04-30 16:34:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-30 16:34:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-30 16:34:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 108 ms
2019-04-30 16:34:08 -Enabling session validation scheduler...
2019-04-30 16:34:09 -请求地址 : http://localhost:8081/login;JSESSIONID=5e15f32b-d8ef-4569-b019-38c7b4ee2dd8
2019-04-30 16:34:09 -HTTP METHOD : GET
2019-04-30 16:34:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-30 16:34:09 -参数 : [{}]
2019-04-30 16:34:09 -耗时 : 4
2019-04-30 16:34:09 -返回值 : login
2019-04-30 16:34:12 -请求地址 : http://localhost:8081/getVerify
2019-04-30 16:34:12 -HTTP METHOD : GET
2019-04-30 16:34:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 16:34:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ce309e9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6224fa05]
2019-04-30 16:34:22 -2856
2019-04-30 16:34:22 -请求地址 : http://localhost:8081/getVerify
2019-04-30 16:34:22 -HTTP METHOD : GET
2019-04-30 16:34:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-30 16:34:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a72e9c3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f7070e9]
2019-04-30 16:34:22 -4795
2019-04-30 16:34:23 -耗时 : 670
2019-04-30 16:34:23 -返回值 : null
2019-04-30 16:34:23 -耗时 : 11139
2019-04-30 16:34:23 -返回值 : null
2019-04-30 16:34:29 -请求地址 : http://localhost:8081/login
2019-04-30 16:34:29 -HTTP METHOD : POST
2019-04-30 16:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-30 16:34:29 -参数 : [admin, 111111, 4795, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71a6eac1]
2019-04-30 16:34:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-30 16:34:30 -==> Parameters: admin(String)
2019-04-30 16:34:30 -<==      Total: 1
2019-04-30 16:34:30 -耗时 : 196
2019-04-30 16:34:30 -返回值 : {msg=操作成功, code=0}
2019-04-30 16:34:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-30 16:34:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:34:30 -==> Parameters: 1(Long), admin(String), 登录(String), 197(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-30 16:34:30.354(Timestamp)
2019-04-30 16:34:30 -<==    Updates: 1
2019-04-30 16:34:30 -请求地址 : http://localhost:8081/index
2019-04-30 16:34:30 -HTTP METHOD : GET
2019-04-30 16:34:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-30 16:34:30 -参数 : [{}]
2019-04-30 16:34:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-30 16:34:30 -==> Parameters: 1(Long)
2019-04-30 16:34:31 -<==      Total: 49
2019-04-30 16:34:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-30 16:34:31 -==> Parameters: 138(Long)
2019-04-30 16:34:31 -<==      Total: 1
2019-04-30 16:34:31 -耗时 : 532
2019-04-30 16:34:31 -返回值 : index_v1
2019-04-30 16:34:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:34:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 532(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-30 16:34:31.372(Timestamp)
2019-04-30 16:34:31 -<==    Updates: 1
2019-04-30 16:34:31 -请求地址 : http://localhost:8081/main
2019-04-30 16:34:31 -HTTP METHOD : GET
2019-04-30 16:34:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 16:34:31 -参数 : []
2019-04-30 16:34:31 -耗时 : 1
2019-04-30 16:34:31 -返回值 : main
2019-04-30 16:34:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-30 16:34:32 -HTTP METHOD : GET
2019-04-30 16:34:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-30 16:34:32 -参数 : []
2019-04-30 16:34:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-30 16:34:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-30 16:34:32 -请求地址 : http://localhost:8081/main
2019-04-30 16:34:32 -HTTP METHOD : GET
2019-04-30 16:34:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-30 16:34:32 -参数 : []
2019-04-30 16:34:32 -耗时 : 1
2019-04-30 16:34:32 -返回值 : main
2019-04-30 16:34:33 -<==      Total: 0
2019-04-30 16:34:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-30 16:34:33 -==> Parameters: 1(Long), 0(String)
2019-04-30 16:34:33 -<==      Total: 1
2019-04-30 16:34:33 -耗时 : 611
2019-04-30 16:34:33 -返回值 : com.bootdo.common.utils.PageUtils@104f0562
2019-04-30 16:34:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-30 16:34:37 -==> Parameters: 1(Long)
2019-04-30 16:34:37 -<==      Total: 93
2019-04-30 16:34:37 -请求地址 : http://localhost:8081/elec/elecInto
2019-04-30 16:34:37 -HTTP METHOD : GET
2019-04-30 16:34:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-04-30 16:34:37 -参数 : []
2019-04-30 16:34:37 -耗时 : 1
2019-04-30 16:34:37 -返回值 : elec/elecInto/elecInto
2019-04-30 16:34:39 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2019-04-30 16:34:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-30 16:34:49 -HTTP METHOD : GET
2019-04-30 16:34:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-30 16:34:49 -参数 : []
2019-04-30 16:34:49 -耗时 : 0
2019-04-30 16:34:49 -返回值 : system/dept/deptTree
2019-04-30 16:34:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-30 16:34:49 -HTTP METHOD : GET
2019-04-30 16:34:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-30 16:34:49 -参数 : []
2019-04-30 16:34:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-30 16:34:49 -==> Parameters: 
2019-04-30 16:34:50 -<==      Total: 3
2019-04-30 16:34:50 -耗时 : 67
2019-04-30 16:34:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-30 16:34:52 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-04-30 16:34:52 -HTTP METHOD : POST
2019-04-30 16:34:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-04-30 16:34:52 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@860236b, com.bootdo.elec.vo.ElecVo@6e7662ea, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f0ce951]
2019-04-30 16:34:54 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:34:54 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-04-30 16:34:55 -<==      Total: 1
2019-04-30 16:34:55 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:34:55 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-04-30 16:34:55 -<==    Updates: 1
2019-04-30 16:34:55 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:34:55 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-04-30 16:34:55 -<==      Total: 1
2019-04-30 16:34:55 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-30 16:34:55 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-04-30 16:34:55 -<==    Updates: 1
2019-04-30 16:34:55 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:34:55 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-04-30 16:34:55.645(Timestamp), 2019-02(String), 1(Long), 2019-04-30 16:34:55.645(Timestamp), 1(Long), null
2019-04-30 16:34:56 -<==    Updates: 1
2019-04-30 16:34:56 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-30 16:34:56 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 10(BigDecimal), 2019-04-30 16:34:55.908(Timestamp), 2019-02(String), 1(Long), 2019-04-30 16:34:55.908(Timestamp), 1(Long), null
2019-04-30 16:34:56 -<==    Updates: 1
2019-04-30 16:34:56 -耗时 : 4089
2019-04-30 16:34:56 -返回值 : success
2019-04-30 16:37:12 -请求地址 : http://localhost:8081/charts/countDD
2019-04-30 16:37:12 -HTTP METHOD : GET
2019-04-30 16:37:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-30 16:37:12 -参数 : []
2019-04-30 16:37:12 -耗时 : 14
2019-04-30 16:37:12 -返回值 : charts/countDD
2019-04-30 16:37:13 -请求地址 : http://localhost:8081/charts/countMM
2019-04-30 16:37:13 -HTTP METHOD : GET
2019-04-30 16:37:13 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-30 16:37:13 -参数 : []
2019-04-30 16:37:13 -耗时 : 14
2019-04-30 16:37:13 -返回值 : charts/countMM
2019-04-30 16:37:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 16:37:13 -HTTP METHOD : GET
2019-04-30 16:37:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 16:37:13 -参数 : [userType]
2019-04-30 16:37:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 16:37:13 -==> Parameters: userType(String)
2019-04-30 16:37:14 -<==      Total: 4
2019-04-30 16:37:14 -耗时 : 1311
2019-04-30 16:37:14 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 16:37:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 16:37:15 -HTTP METHOD : GET
2019-04-30 16:37:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 16:37:15 -参数 : [userType]
2019-04-30 16:37:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 16:37:15 -==> Parameters: userType(String)
2019-04-30 16:37:15 -<==      Total: 4
2019-04-30 16:37:15 -耗时 : 7
2019-04-30 16:37:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 16:37:15 -请求地址 : http://localhost:8081/charts/countRun
2019-04-30 16:37:15 -HTTP METHOD : GET
2019-04-30 16:37:15 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-30 16:37:15 -参数 : []
2019-04-30 16:37:15 -耗时 : 1
2019-04-30 16:37:15 -返回值 : charts/countRun
2019-04-30 16:37:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-30 16:37:16 -HTTP METHOD : GET
2019-04-30 16:37:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-30 16:37:16 -参数 : [userType]
2019-04-30 16:37:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-30 16:37:16 -==> Parameters: userType(String)
2019-04-30 16:37:16 -<==      Total: 4
2019-04-30 16:37:16 -耗时 : 9
2019-04-30 16:37:16 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-30 16:37:19 -请求地址 : http://localhost:8081/charts/countYY
2019-04-30 16:37:19 -HTTP METHOD : GET
2019-04-30 16:37:19 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-30 16:37:19 -参数 : []
2019-04-30 16:37:19 -耗时 : 0
2019-04-30 16:37:19 -返回值 : charts/countYY
2019-04-30 16:37:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-30 16:37:20 -HTTP METHOD : GET
2019-04-30 16:37:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-30 16:37:20 -参数 : []
2019-04-30 16:37:20 -耗时 : 21
2019-04-30 16:37:20 -返回值 : charts/tableElecMM
2019-04-30 16:37:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-30 16:37:21 -HTTP METHOD : GET
2019-04-30 16:37:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-30 16:37:21 -参数 : []
2019-04-30 16:37:21 -耗时 : 8
2019-04-30 16:37:21 -返回值 : charts/tableWaterMM
2019-04-30 16:46:21 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-30 18:40:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 0, completed tasks = 207]
2019-04-30 18:40:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 256]
2019-04-30 18:40:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 272]
2019-04-30 18:40:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 0, completed tasks = 284]
